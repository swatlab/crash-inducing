<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C++" filename="00484228be635328350f3b5b98d0b4210ecef1f4.cpp"><comment type="block">/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Communicator client code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsUCConstructors.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsUnicodeToGEOSTD8.h"</cpp:file></cpp:include>

<comment type="line">//----------------------------------------------------------------------</comment>
<comment type="line">// Global functions and data [declaration]</comment>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>PRUint16</name></type> <name><name>g_ufMappingTable</name><index>[]</index></name> <init>= <expr><block>{
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"geostd8.uf"</cpp:file></cpp:include>
}</block></expr></init></decl>;</decl_stmt>

<function><type><name>NS_METHOD</name></type>
<name>nsUnicodeToGEOSTD8Constructor</name><parameter_list>(<param><decl><type><name>nsISupports</name> *</type><name>aOuter</name></decl></param>, <param><decl><type><name>REFNSIID</name></type> <name>aIID</name></decl></param>,
                              <param><decl><type><name>void</name> **</type><name>aResult</name></decl></param>)</parameter_list> 
<block>{
  <return>return <expr><call><name>CreateTableEncoder</name><argument_list>(<argument><expr><name>u1ByteCharset</name></expr></argument>,
                            <argument><expr>(<name>uMappingTable</name>*) &amp;<name>g_ufMappingTable</name></expr></argument>, <argument><expr>1</expr></argument>,
                            <argument><expr><name>aOuter</name></expr></argument>, <argument><expr><name>aIID</name></expr></argument>, <argument><expr><name>aResult</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
</unit>

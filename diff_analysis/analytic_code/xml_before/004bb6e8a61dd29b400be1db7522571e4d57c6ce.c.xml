<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="004bb6e8a61dd29b400be1db7522571e4d57c6ce.c"><comment type="block">/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is the Netscape security libraries.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1994-2000
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */</comment>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>XP_PC</name></cpp:ifdef>

<function><type><name>int</name></type> <name>ffs</name><parameter_list>( <param><decl><type><name>unsigned</name> <name>int</name></type> <name>i</name></decl></param>)</parameter_list>
<block>{
    <decl_stmt><decl><type><name>int</name></type> <name>rv</name>	<init>= <expr>1</expr></init></decl>;</decl_stmt>

    <if>if <condition>(<expr>!<name>i</name></expr>)</condition><then> <return>return <expr>0</expr>;</return></then></if>

    <while>while <condition>(<expr>!(<name>i</name> &amp; 1)</expr>)</condition> <block>{
    	<expr_stmt><expr><name>i</name> &gt;&gt;= 1</expr>;</expr_stmt>
	<expr_stmt><expr>++<name>rv</name></expr>;</expr_stmt>
    }</block></while>

    <return>return <expr><name>rv</name></expr>;</return>
}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>

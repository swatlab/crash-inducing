<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="00354ffd04d5a48e45aad01afc3639d19546ab63.h"><comment type="block">/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */</comment>
<comment type="block">/* vim:expandtab:shiftwidth=2:tabstop=2:
 */</comment>
<comment type="block">/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Mozilla Foundation.
 * Portions created by the Initial Developer are Copyright (C) 2007
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Alexander Surkov &lt;surkov.alexander@gmail.com&gt; (original author)
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>_NSHYPERTEXTACCESSIBLEWRAP_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_NSHYPERTEXTACCESSIBLEWRAP_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsHyperTextAccessible.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"CAccessibleText.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"CAccessibleEditableText.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"CAccessibleHyperText.h"</cpp:file></cpp:include>

<expr_stmt><expr><name>class</name> <name>nsHyperTextAccessibleWrap</name> : <name>public</name> <name>nsHyperTextAccessible</name></expr>,
                                  <expr><name>public</name> <name>CAccessibleHypertext</name></expr>,
                                  <expr><name>public</name> <name>CAccessibleEditableText</name>
<block>{
<expr><name>public</name>:
  <call><name>nsHyperTextAccessibleWrap</name><argument_list>(<argument><expr><name>nsIDOMNode</name>* <name>aNode</name></expr></argument>, <argument><expr><name>nsIWeakReference</name>* <name>aShell</name></expr></argument>)</argument_list></call> :
    <macro><name>nsHyperTextAccessible</name><argument_list>(<argument>aNode</argument>, <argument>aShell</argument>)</argument_list></macro><block>{}</block>

  <comment type="line">// IUnknown</comment>
  <name>DECL_IUNKNOWN_INHERITED</name>

  <comment type="line">// nsISupports</comment>
  <name>NS_DECL_ISUPPORTS_INHERITED</name>

  <comment type="line">// nsAccessible</comment>
  <name>virtual</name> <name>nsresult</name> <call><name>HandleAccEvent</name><argument_list>(<argument><expr><name>nsAccEvent</name> *<name>aEvent</name></expr></argument>)</argument_list></call></expr>;

<expr><name>protected</name>:
  <name>virtual</name> <name>nsresult</name> <macro><name>GetModifiedText</name><argument_list>(<argument>PRBool aGetInsertedText</argument>, <argument>nsAString&amp; aText</argument>,
                                   <argument>PRUint32 *aStartOffset</argument>,
                                   <argument>PRUint32 *aEndOffset</argument>)</argument_list></macro></expr>;
}</block></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>

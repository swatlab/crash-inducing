<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="00584cac302c628531eb31a9e399f3dd767dff11.h"><comment type="block">/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */</comment>
<comment type="block">/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Communicator client code..
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 2002
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *      Kin Blas &lt;kin@netscape.com&gt;
 *      Akkana Peck &lt;akkana@netscape.com&gt;
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>nsEditorSpellCheck_h___</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nsEditorSpellCheck_h___</name></cpp:macro></cpp:define>


<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsIEditorSpellCheck.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsISpellChecker.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsVoidArray.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsCOMPtr.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NS_EDITORSPELLCHECK_CID</name></cpp:macro>                     \
<cpp:value>{ <comment type="block">/* {75656ad9-bd13-4c5d-939a-ec6351eea0cc} */</comment>        \
    0x75656ad9, 0xbd13, 0x4c5d,                       \
    { 0x93, 0x9a, 0xec, 0x63, 0x51, 0xee, 0xa0, 0xcc }\
}</cpp:value></cpp:define>

<expr_stmt><expr><name>class</name> <name>nsEditorSpellCheck</name> : <name>public</name> <name>nsIEditorSpellCheck</name>
<block>{
<expr><name>public</name>:
  <call><name>nsEditorSpellCheck</name><argument_list>()</argument_list></call></expr>;
  <expr><name>virtual</name> ~<call><name>nsEditorSpellCheck</name><argument_list>()</argument_list></call></expr>;

  <expr><name>NS_DECL_ISUPPORTS</name>

  <comment type="block">/* Declare all methods in the nsIEditorSpellCheck interface */</comment>
  <name>NS_DECL_NSIEDITORSPELLCHECK</name>

<name>protected</name>:
  <name>nsCOMPtr</name>&lt;<name>nsISpellChecker</name>&gt; <name>mSpellChecker</name></expr>;

  <expr><name>nsTArray</name>&lt;<name>nsString</name>&gt;  <name>mSuggestedWordList</name></expr>;
  <expr><name>PRInt32</name>        <name>mSuggestedWordIndex</name></expr>;

  <comment type="line">// these are the words in the current personal dictionary,</comment>
  <comment type="line">// GetPersonalDictionary must be called to load them.</comment>
  <expr><name>nsTArray</name>&lt;<name>nsString</name>&gt;  <name>mDictionaryList</name></expr>;
  <expr><name>PRInt32</name>        <name>mDictionaryIndex</name></expr>;

  <expr><name>nsresult</name>       <call><name>DeleteSuggestedWordList</name><argument_list>()</argument_list></call></expr>;

  <expr><name>nsCOMPtr</name>&lt;<name>nsITextServicesFilter</name>&gt; <name>mTxtSrvFilter</name></expr>;
}</block></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="line">// nsEditorSpellCheck_h___</comment>


</unit>

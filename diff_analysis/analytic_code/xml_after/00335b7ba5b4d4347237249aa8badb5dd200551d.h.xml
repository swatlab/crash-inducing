<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="00335b7ba5b4d4347237249aa8badb5dd200551d.h"><comment type="block">/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is the Netscape security libraries.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1994-2000
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */</comment>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>SSLT_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SSLT_H</name></cpp:macro></cpp:define>


<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>Error</name><parameter_list>(<param><decl><type><name>int</name></type></decl></param>)</parameter_list>;</function_decl>
<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>DEBUG_stevep</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>dbmsg</name><parameter_list>(<param><type><name>x</name></type></param>)</parameter_list></cpp:macro> <cpp:value>if (debug) PR_fprintf x ;</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>dbmsg</name><parameter_list>(<param><type><name>x</name></type></param>)</parameter_list></cpp:macro> <cpp:value>;</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<decl_stmt><decl><type><specifier>extern</specifier> <name>PRInt32</name></type> <name>debug</name></decl>;</decl_stmt>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>INSERT_TABLES</name></cpp:ifdef>
<decl_stmt><decl><type><name>int</name></type> <name>testId</name> <init>= <expr>0</expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>ClientCert</name><index>[]</index></name> <init>= <expr><block>{
	<expr><name>NO_CERT</name></expr>,
	<expr><name>CLIENT_CERT_HARDCOREII_1024</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>ServerCert</name><index>[]</index></name> <init>= <expr><block>{
	<expr><name>SERVER_CERT_HARDCOREII_512</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>Policy</name><index>[]</index></name> <init>= <expr><block>{
	<expr><name>POLICY_EXPORT</name></expr>,
	<expr><name>POLICY_DOMESTIC</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>SSLVersion2</name><index>[]</index></name> <init>= <expr><block>{
	<expr><name>PR_TRUE</name></expr>,
	<expr><name>PR_FALSE</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>SSLVersion3</name><index>[]</index></name> <init>= <expr><block>{
	<expr><name>PR_TRUE</name></expr>,
	<expr><name>PR_FALSE</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>ClientIOSessionLength</name><index>[]</index></name> <init>= <expr><block>{
	<expr>0</expr>,
	<expr>1024</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>ServerIOSessionLength</name><index>[]</index></name> <init>= <expr><block>{
	<expr>0</expr>,
	<expr>1024</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>ServerDoClientAuth</name><index>[]</index></name> <init>= <expr><block>{
	<expr><name>SSLT_CLIENTAUTH_OFF</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PRBool</name></type> <name><name>ClientForceHandshake</name><index>[]</index></name> <init>= <expr><block>{
	<expr><name>PR_FALSE</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PRBool</name></type> <name><name>ServerForceHandshake</name><index>[]</index></name> <init>= <expr><block>{
	<expr><name>PR_TRUE</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PRBool</name></type> <name><name>ClientRedoHandshake</name><index>[]</index></name> <init>= <expr><block>{
	<expr><name>PR_FALSE</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PRBool</name></type> <name><name>ServerRedoHandshake</name><index>[]</index></name> <init>= <expr><block>{
	<expr><name>PR_FALSE</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PRBool</name></type> <name><name>Cipher_EN_RC4_128_WITH_MD5</name><index>[]</index></name> <init>= <expr><block>{
	<expr><name>PR_TRUE</name></expr>,
	<expr><name>PR_FALSE</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PRBool</name></type> <name><name>Cipher_EN_RC4_128_EXPORT40_WITH_MD5</name><index>[]</index></name> <init>= <expr><block>{
	<expr><name>PR_TRUE</name></expr>,
	<expr><name>PR_FALSE</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PRBool</name></type> <name><name>Cipher_EN_RC2_128_CBC_WITH_MD5</name><index>[]</index></name> <init>= <expr><block>{
	<expr><name>PR_TRUE</name></expr>,
	<expr><name>PR_FALSE</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PRBool</name></type> <name><name>Cipher_EN_DES_192_EDE3_CBC_WITH_MD5</name><index>[]</index></name> <init>= <expr><block>{
	<expr><name>PR_TRUE</name></expr>,
	<expr><name>PR_FALSE</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PRBool</name></type> <name><name>Cipher_RSA_EXPORT_WITH_RC4_40_MD5</name><index>[]</index></name> <init>= <expr><block>{
	<expr><name>PR_TRUE</name></expr>,
	<expr><name>PR_FALSE</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PRBool</name></type> <name><name>Cipher_RSA_WITH_RC4_128_MD5</name><index>[]</index></name> <init>= <expr><block>{
	<expr><name>PR_TRUE</name></expr>,
	<expr><name>PR_FALSE</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PRBool</name></type> <name><name>Cipher_RSA_EXPORT_WITH_RC2_CBC_40_MD5</name><index>[]</index></name> <init>= <expr><block>{
	<expr><name>PR_TRUE</name></expr>,
	<expr><name>PR_FALSE</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PRBool</name></type> <name><name>Cipher_RSA_WITH_DES_CBC_SHA</name><index>[]</index></name> <init>= <expr><block>{
	<expr><name>PR_TRUE</name></expr>,
	<expr><name>PR_FALSE</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PRBool</name></type> <name><name>Cipher_RSA_WITH_3DES_EDE_CBC_SHA</name><index>[]</index></name> <init>= <expr><block>{
	<expr><name>PR_TRUE</name></expr>,
	<expr><name>PR_FALSE</name></expr>
}</block></expr></init></decl>;</decl_stmt>


<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name><name>ClientCert</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name><name>ServerCert</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name><name>Policy</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name><name>SSLVersion2</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name><name>SSLVersion3</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name><name>ClientIOSessionLength</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name><name>ServerIOSessionLength</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name><name>ServerDoClientAuth</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>PRBool</name></type> <name><name>ClientForceHandshake</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>PRBool</name></type> <name><name>ServerForceHandshake</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>PRBool</name></type> <name><name>ClientRedoHandshake</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>PRBool</name></type> <name><name>ServerRedoHandshake</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>PRBool</name></type> <name><name>Cipher_EN_RC4_128_WITH_MD5</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>PRBool</name></type> <name><name>Cipher_EN_RC4_128_EXPORT40_WITH_MD5</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>PRBool</name></type> <name><name>Cipher_EN_RC2_128_CBC_WITH_MD5</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>PRBool</name></type> <name><name>Cipher_EN_DES_192_EDE3_CBC_WITH_MD5</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>PRBool</name></type> <name><name>Cipher_RSA_EXPORT_WITH_RC4_40_MD5</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>PRBool</name></type> <name><name>Cipher_RSA_WITH_RC4_128_MD5</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>PRBool</name></type> <name><name>Cipher_RSA_EXPORT_WITH_RC2_CBC_40_MD5</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>PRBool</name></type> <name><name>Cipher_RSA_WITH_DES_CBC_SHA</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>PRBool</name></type> <name><name>Cipher_RSA_WITH_3DES_EDE_CBC_SHA</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>testId</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_ClientCert</name></cpp:macro>            <cpp:value>ClientCert[testId%2]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_ServerCert</name></cpp:macro>            <cpp:value>ServerCert[testId/2%1]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Policy</name></cpp:macro>                <cpp:value>Policy[testId/2/1%2]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_SSLVersion2</name></cpp:macro>           <cpp:value>SSLVersion2[testId/2/1/2%2]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_SSLVersion3</name></cpp:macro>           <cpp:value>SSLVersion3[testId/2/1/2/2%2]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_ClientIOSessionLength</name></cpp:macro> <cpp:value>ClientIOSessionLength[testId/2/1/2/2/2%2]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_ServerIOSessionLength</name></cpp:macro> <cpp:value>ServerIOSessionLength[testId/2/1/2/2/2/2%2]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_ServerDoClientAuth</name></cpp:macro>    <cpp:value>ServerDoClientAuth[testId/2/1/2/2/2/2/2%1]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_ClientForceHandshake</name></cpp:macro>  <cpp:value>ClientForceHandshake[testId/2/1/2/2/2/2/2/1%1]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_ServerForceHandshake</name></cpp:macro>  <cpp:value>ServerForceHandshake[testId/2/1/2/2/2/2/2/1/1%1]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_ClientRedoHandshake</name></cpp:macro>   <cpp:value>ClientRedoHandshake[testId/2/1/2/2/2/2/2/1/1/1%1]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_ServerRedoHandshake</name></cpp:macro>   <cpp:value>ServerRedoHandshake[testId/2/1/2/2/2/2/2/1/1/1/1%1]</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_EN_RC4_128_WITH_MD5</name></cpp:macro>                    <cpp:value>Cipher_EN_RC4_128_WITH_MD5[testId/2/1/2/2/2/2/2/1/1/1/1/1%2]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_EN_RC4_128_EXPORT40_WITH_MD5</name></cpp:macro>           <cpp:value>Cipher_EN_RC4_128_EXPORT40_WITH_MD5[testId/2/1/2/2/2/2/2/1/1/1/1/1/2%2]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_EN_RC2_128_CBC_WITH_MD5</name></cpp:macro>                <cpp:value>Cipher_EN_RC2_128_CBC_WITH_MD5[testId/2/1/2/2/2/2/2/1/1/1/1/1/2/2%2]</cpp:value></cpp:define>
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>undef</name></cpp:ifdef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_EN_RC2_128_CBC_EXPORT40_WITH_MD5</name></cpp:macro>       <cpp:value>$[Cipher_EN_RC2_128_CBC_EXPORT40_WITH_MD5]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_EN_IDEA_128_CBC_WITH_MD5</name></cpp:macro>               <cpp:value>$[Cipher_EN_IDEA_128_CBC_WITH_MD5]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_EN_DES_64_CBC_WITH_MD5</name></cpp:macro>                 <cpp:value>$[Cipher_EN_DES_64_CBC_WITH_MD5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_RSA_WITH_NULL_SHA</name></cpp:macro>                      <cpp:value>$[Cipher_RSA_WITH_NULL_SHA]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_RSA_WITH_RC4_128_SHA</name></cpp:macro>                   <cpp:value>$[Cipher_RSA_WITH_RC4_128_SHA]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_RSA_WITH_IDEA_CBC_SHA</name></cpp:macro>                  <cpp:value>$[Cipher_RSA_WITH_IDEA_CBC_SHA]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_NULL_WITH_NULL_NULL</name></cpp:macro>                    <cpp:value>$[Cipher_NULL_WITH_NULL_NULL]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_RSA_WITH_NULL_MD5</name></cpp:macro>                      <cpp:value>$[Cipher_RSA_WITH_NULL_MD5]</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_EN_DES_192_EDE3_CBC_WITH_MD5</name></cpp:macro>           <cpp:value>Cipher_EN_DES_192_EDE3_CBC_WITH_MD5[testId/2/1/2/2/2/2/2/1/1/1/1/1/2/2/2%2]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_RSA_EXPORT_WITH_RC4_40_MD5</name></cpp:macro>             <cpp:value>Cipher_RSA_EXPORT_WITH_RC4_40_MD5[testId/2/1/2/2/2/2/2/1/1/1/1/1/2/2/2/2%2]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_RSA_WITH_RC4_128_MD5</name></cpp:macro>                   <cpp:value>Cipher_RSA_WITH_RC4_128_MD5[testId/2/1/2/2/2/2/2/1/1/1/1/1/2/2/2/2/2%2]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_RSA_EXPORT_WITH_RC2_CBC_40_MD5</name></cpp:macro>         <cpp:value>Cipher_RSA_EXPORT_WITH_RC2_CBC_40_MD5[testId/2/1/2/2/2/2/2/1/1/1/1/1/2/2/2/2/2/2%2]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_RSA_WITH_DES_CBC_SHA</name></cpp:macro>                   <cpp:value>Cipher_RSA_WITH_DES_CBC_SHA[testId/2/1/2/2/2/2/2/1/1/1/1/1/2/2/2/2/2/2/2%2]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_RSA_WITH_3DES_EDE_CBC_SHA</name></cpp:macro>              <cpp:value>Cipher_RSA_WITH_3DES_EDE_CBC_SHA[testId/2/1/2/2/2/2/2/1/1/1/1/1/2/2/2/2/2/2/2/2%2]</cpp:value></cpp:define>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>undef</name></cpp:ifdef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_RSA_EXPORT_WITH_DES40_CBC_SHA</name></cpp:macro>          <cpp:value>$[Cipher_RSA_EXPORT_WITH_DES40_CBC_SHA]</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_DH_DSS_EXPORT_WITH_DES40_CBC_SHA</name></cpp:macro>       <cpp:value>[Cipher_DH_DSS_EXPORT_WITH_DES40_CBC_SHA]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_DH_DSS_WITH_DES_CBC_SHA</name></cpp:macro>                <cpp:value>[Cipher_DH_DSS_WITH_DES_CBC_SHA]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_DH_DSS_WITH_3DES_EDE_CBC_SHA</name></cpp:macro>           <cpp:value>[Cipher_DH_DSS_WITH_3DES_EDE_CBC_SHA]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_DH_RSA_EXPORT_WITH_DES40_CBC_SHA</name></cpp:macro>       <cpp:value>[Cipher_DH_RSA_EXPORT_WITH_DES40_CBC_SHA]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_DH_RSA_WITH_DES_CBC_SHA</name></cpp:macro>                <cpp:value>[Cipher_DH_RSA_WITH_DES_CBC_SHA]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_DH_RSA_WITH_3DES_EDE_CBC_SHA</name></cpp:macro>           <cpp:value>[Cipher_DH_RSA_WITH_3DES_EDE_CBC_SHA]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA</name></cpp:macro>      <cpp:value>[Cipher_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_DHE_DSS_WITH_DES_CBC_SHA</name></cpp:macro>               <cpp:value>[Cipher_DHE_DSS_WITH_DES_CBC_SHA]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_DHE_DSS_WITH_3DES_EDE_CBC_SHA</name></cpp:macro>          <cpp:value>[Cipher_DHE_DSS_WITH_3DES_EDE_CBC_SHA]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA</name></cpp:macro>      <cpp:value>[Cipher_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_DHE_RSA_WITH_DES_CBC_SHA</name></cpp:macro>               <cpp:value>[Cipher_DHE_RSA_WITH_DES_CBC_SHA]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_DHE_RSA_WITH_3DES_EDE_CBC_SHA</name></cpp:macro>          <cpp:value>[Cipher_DHE_RSA_WITH_3DES_EDE_CBC_SHA]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_DH_ANON_EXPORT_WITH_RC4_40_MD5</name></cpp:macro>         <cpp:value>[Cipher_DH_ANON_EXPORT_WITH_RC4_40_MD5]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_DH_ANON_WITH_RC4_128_MD5</name></cpp:macro>               <cpp:value>[Cipher_DH_ANON_WITH_RC4_128_MD5]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_DH_ANON_WITH_DES_CBC_SHA</name></cpp:macro>               <cpp:value>[Cipher_DH_ANON_WITH_DES_CBC_SHA]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_DH_ANON_WITH_3DES_EDE_CBC_SHA</name></cpp:macro>          <cpp:value>[Cipher_DH_ANON_WITH_3DES_EDE_CBC_SHA]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_FORTEZZA_DMS_WITH_FORTEZZA_CBC_SHA</name></cpp:macro>     <cpp:value>$[Cipher_FORTEZZA_DMS_WITH_FORTEZZA_CBC_SHA]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_FORTEZZA_DMS_WITH_RC4_128_SHA</name></cpp:macro>          <cpp:value>$[Cipher_FORTEZZA_DMS_WITH_RC4_128_SHA]</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_RSA_FIPS_WITH_3DES_EDE_CBC_SHA</name></cpp:macro>         <cpp:value>$[Cipher_RSA_FIPS_WITH_3DES_EDE_CBC_SHA]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REP_Cipher_RSA_FIPS_WITH_DES_CBC_SHA</name></cpp:macro>              <cpp:value>$[Cipher_RSA_FIPS_WITH_DES_CBC_SHA]</cpp:value></cpp:define>


<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>




</unit>

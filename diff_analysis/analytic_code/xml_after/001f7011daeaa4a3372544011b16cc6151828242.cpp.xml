<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C++" filename="001f7011daeaa4a3372544011b16cc6151828242.cpp"><comment type="block">/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */</comment>
<comment type="block">/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1999
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Mats Palmgren &lt;mats.palmgren@bredband.net&gt;
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */</comment>

<comment type="block">/*
 * methods for dealing with CSS properties and tables of the keyword
 * values they accept
 */</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsCSSProps.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsCSSKeywords.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsStyleConsts.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsThemeConstants.h"</cpp:file></cpp:include>  <comment type="line">// For system widget appearance types</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsILookAndFeel.h"</cpp:file></cpp:include> <comment type="line">// for system colors</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsString.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsReadableUtils.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsStaticNameTable.h"</cpp:file></cpp:include>

<comment type="line">// required to make the symbol external, so that TestCSSPropertyLookup.cpp can link with it</comment>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name>* <specifier>const</specifier></type> <name><name>kCSSRawProperties</name><index>[]</index></name></decl>;</decl_stmt>

<comment type="line">// define an array of all CSS properties</comment>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name>* <specifier>const</specifier></type> <name><name>kCSSRawProperties</name><index>[]</index></name> <init>= <expr><block>{
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>#name_,</cpp:value></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsCSSPropList.h"</cpp:file></cpp:include>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP</name></cpp:undef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP_SHORTHAND</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>#name_,</cpp:value></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsCSSPropList.h"</cpp:file></cpp:include>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP_SHORTHAND</name></cpp:undef>
}</block></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>static</specifier> <name>PRInt32</name></type> <name>gTableRefCount</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>nsStaticCaseInsensitiveNameTable</name>*</type> <name>gPropertyTable</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>nsStaticCaseInsensitiveNameTable</name>*</type> <name>gFontDescTable</name></decl>;</decl_stmt>

<comment type="line">// Keep in sync with enum nsCSSFontDesc in nsCSSProperty.h.</comment>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name>* <specifier>const</specifier></type> <name><name>kCSSRawFontDescs</name><index>[]</index></name> <init>= <expr><block>{
  <expr>"font-family"</expr>,
  <expr>"font-style"</expr>,
  <expr>"font-weight"</expr>,
  <expr>"font-stretch"</expr>,
  <expr>"src"</expr>,
  <expr>"unicode-range"</expr>
}</block></expr></init></decl>;</decl_stmt>

<function><type><name>void</name></type>
<name><name>nsCSSProps</name>::<name>AddRefTable</name></name><parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list> 
<block>{
  <if>if <condition>(<expr>0 == <name>gTableRefCount</name>++</expr>)</condition><then> <block>{
    <expr_stmt><expr><call><name>NS_ASSERTION</name><argument_list>(<argument><expr>!<name>gPropertyTable</name></expr></argument>, <argument><expr>"pre existing array!"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>NS_ASSERTION</name><argument_list>(<argument><expr>!<name>gFontDescTable</name></expr></argument>, <argument><expr>"pre existing array!"</expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><name>gPropertyTable</name> = new <call><name>nsStaticCaseInsensitiveNameTable</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <if>if <condition>(<expr><name>gPropertyTable</name></expr>)</condition><then> <block>{
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>DEBUG</name></cpp:ifdef>
    <block>{
      <comment type="line">// let's verify the table...</comment>
      <for>for (<init><decl><type><name>PRInt32</name></type> <name>index</name> <init>= <expr>0</expr></init></decl>;</init> <condition><expr><name>index</name> &lt; <name>eCSSProperty_COUNT</name></expr>;</condition> <incr><expr>++<name>index</name></expr></incr>) <block>{
        <function_decl><type><name>nsCAutoString</name></type> <name>temp1</name><parameter_list>(<param><decl><type><name><name>kCSSRawProperties</name><index>[<expr><name>index</name></expr>]</index></name></type></decl></param>)</parameter_list>;</function_decl>
        <function_decl><type><name>nsCAutoString</name></type> <name>temp2</name><parameter_list>(<param><decl><type><name><name>kCSSRawProperties</name><index>[<expr><name>index</name></expr>]</index></name></type></decl></param>)</parameter_list>;</function_decl>
        <expr_stmt><expr><call><name>ToLowerCase</name><argument_list>(<argument><expr><name>temp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>NS_ASSERTION</name><argument_list>(<argument><expr><call><name><name>temp1</name>.<name>Equals</name></name><argument_list>(<argument><expr><name>temp2</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr>"upper case char in prop table"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>NS_ASSERTION</name><argument_list>(<argument><expr>-1 == <call><name><name>temp1</name>.<name>FindChar</name></name><argument_list>(<argument><expr>'_'</expr></argument>)</argument_list></call></expr></argument>, <argument><expr>"underscore char in prop table"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></for>
    }</block>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>      
      <expr_stmt><expr><call><name><name>gPropertyTable</name>-&gt;<name>Init</name></name><argument_list>(<argument><expr><name>kCSSRawProperties</name></expr></argument>, <argument><expr><name>eCSSProperty_COUNT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

    <expr_stmt><expr><name>gFontDescTable</name> = new <call><name>nsStaticCaseInsensitiveNameTable</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <if>if <condition>(<expr><name>gFontDescTable</name></expr>)</condition><then> <block>{
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>DEBUG</name></cpp:ifdef>
    <block>{
      <comment type="line">// let's verify the table...</comment>
      <for>for (<init><decl><type><name>PRInt32</name></type> <name>index</name> <init>= <expr>0</expr></init></decl>;</init> <condition><expr><name>index</name> &lt; <name>eCSSFontDesc_COUNT</name></expr>;</condition> <incr><expr>++<name>index</name></expr></incr>) <block>{
        <function_decl><type><name>nsCAutoString</name></type> <name>temp1</name><parameter_list>(<param><decl><type><name><name>kCSSRawFontDescs</name><index>[<expr><name>index</name></expr>]</index></name></type></decl></param>)</parameter_list>;</function_decl>
        <function_decl><type><name>nsCAutoString</name></type> <name>temp2</name><parameter_list>(<param><decl><type><name><name>kCSSRawFontDescs</name><index>[<expr><name>index</name></expr>]</index></name></type></decl></param>)</parameter_list>;</function_decl>
        <expr_stmt><expr><call><name>ToLowerCase</name><argument_list>(<argument><expr><name>temp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>NS_ASSERTION</name><argument_list>(<argument><expr><call><name><name>temp1</name>.<name>Equals</name></name><argument_list>(<argument><expr><name>temp2</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr>"upper case char in desc table"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name>NS_ASSERTION</name><argument_list>(<argument><expr>-1 == <call><name><name>temp1</name>.<name>FindChar</name></name><argument_list>(<argument><expr>'_'</expr></argument>)</argument_list></call></expr></argument>, <argument><expr>"underscore char in desc table"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></for>
    }</block>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>      
      <expr_stmt><expr><call><name><name>gFontDescTable</name>-&gt;<name>Init</name></name><argument_list>(<argument><expr><name>kCSSRawFontDescs</name></expr></argument>, <argument><expr><name>eCSSFontDesc_COUNT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
    }</block></then></if>
  }</block></then></if>
}</block></function>

<function><type><name>void</name></type>
<name><name>nsCSSProps</name>::<name>ReleaseTable</name></name><parameter_list>(<param><decl><type><name>void</name></type></decl></param>)</parameter_list> 
<block>{
  <if>if <condition>(<expr>0 == --<name>gTableRefCount</name></expr>)</condition><then> <block>{
    <if>if <condition>(<expr><name>gPropertyTable</name></expr>)</condition><then> <block>{
      <expr_stmt><expr>delete <name>gPropertyTable</name></expr>;</expr_stmt>
      <expr_stmt><expr><name>gPropertyTable</name> = <name>nsnull</name></expr>;</expr_stmt>
    }</block></then></if>
    <if>if <condition>(<expr><name>gFontDescTable</name></expr>)</condition><then> <block>{
      <expr_stmt><expr>delete <name>gFontDescTable</name></expr>;</expr_stmt>
      <expr_stmt><expr><name>gFontDescTable</name> = <name>nsnull</name></expr>;</expr_stmt>
    }</block></then></if>
  }</block></then></if>
}</block></function>

<struct>struct <name>CSSPropertyAlias</name> <block>{<public type="default">
  <decl_stmt><decl><type><name>char</name></type> <name><name>name</name><index>[<expr><sizeof>sizeof<argument_list>(<argument><expr>"-moz-outline-offset"</expr></argument>)</argument_list></sizeof></expr>]</index></name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>nsCSSProperty</name></type> <name>id</name></decl>;</decl_stmt>
</public>}</block>;</struct>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>CSSPropertyAlias</name></type> <name><name>gAliases</name><index>[]</index></name> <init>= <expr><block>{
  <expr><block>{ <expr>"-moz-outline"</expr>, <expr><name>eCSSProperty_outline</name></expr> }</block></expr>,
  <expr><block>{ <expr>"-moz-outline-color"</expr>, <expr><name>eCSSProperty_outline_color</name></expr> }</block></expr>,
  <expr><block>{ <expr>"-moz-outline-style"</expr>, <expr><name>eCSSProperty_outline_style</name></expr> }</block></expr>,
  <expr><block>{ <expr>"-moz-outline-width"</expr>, <expr><name>eCSSProperty_outline_width</name></expr> }</block></expr>,
  <expr><block>{ <expr>"-moz-outline-offset"</expr>, <expr><name>eCSSProperty_outline_offset</name></expr> }</block></expr>
  <comment type="line">// Don't forget to update the sizeof in CSSPropertyAlias above with the</comment>
  <comment type="line">// longest string when you add stuff here.</comment>
}</block></expr></init></decl>;</decl_stmt>

<function><type><name>nsCSSProperty</name></type> 
<name><name>nsCSSProps</name>::<name>LookupProperty</name></name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>nsACString</name>&amp;</type> <name>aProperty</name></decl></param>)</parameter_list>
<block>{
  <expr_stmt><expr><call><name>NS_ASSERTION</name><argument_list>(<argument><expr><name>gPropertyTable</name></expr></argument>, <argument><expr>"no lookup table, needs addref"</expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><name>nsCSSProperty</name></type> <name>res</name> <init>= <expr><call><name>nsCSSProperty</name><argument_list>(<argument><expr><call><name><name>gPropertyTable</name>-&gt;<name>Lookup</name></name><argument_list>(<argument><expr><name>aProperty</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if>if <condition>(<expr><name>res</name> == <name>eCSSProperty_UNKNOWN</name></expr>)</condition><then> <block>{
    <decl_stmt><decl><type><specifier>const</specifier> <name>nsCString</name>&amp;</type> <name>prop</name> <init>= <expr><call><name>PromiseFlatCString</name><argument_list>(<argument><expr><name>aProperty</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for (<init><decl><type><specifier>const</specifier> <name>CSSPropertyAlias</name> *</type><name>alias</name> <init>= <expr><name>gAliases</name></expr></init>,
                            *<name>alias_end</name> <init>= <expr><name>gAliases</name> + <call><name>NS_ARRAY_LENGTH</name><argument_list>(<argument><expr><name>gAliases</name></expr></argument>)</argument_list></call></expr></init></decl>;</init>
         <condition><expr><name>alias</name> &lt; <name>alias_end</name></expr>;</condition> <incr><expr>++<name>alias</name></expr></incr>)
      <if>if <condition>(<expr><call><name><name>nsCRT</name>::<name>strcasecmp</name></name><argument_list>(<argument><expr><call><name><name>prop</name>.<name>get</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>alias</name>-&gt;<name>name</name></name></expr></argument>)</argument_list></call> == 0</expr>)</condition><then> <block>{
        <expr_stmt><expr><name>res</name> = <name><name>alias</name>-&gt;<name>id</name></name></expr>;</expr_stmt>
        <break>break;</break>
      }</block></then></if></for>
  }</block></then></if>
  <return>return <expr><name>res</name></expr>;</return>
}</block></function>

<function><type><name>nsCSSProperty</name></type> 
<name><name>nsCSSProps</name>::<name>LookupProperty</name></name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>nsAString</name>&amp;</type> <name>aProperty</name></decl></param>)</parameter_list>
<block>{
  <comment type="line">// This is faster than converting and calling</comment>
  <comment type="line">// LookupProperty(nsACString&amp;).  The table will do its own</comment>
  <comment type="line">// converting and avoid a PromiseFlatCString() call.</comment>
  <expr_stmt><expr><call><name>NS_ASSERTION</name><argument_list>(<argument><expr><name>gPropertyTable</name></expr></argument>, <argument><expr>"no lookup table, needs addref"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>nsCSSProperty</name></type> <name>res</name> <init>= <expr><call><name>nsCSSProperty</name><argument_list>(<argument><expr><call><name><name>gPropertyTable</name>-&gt;<name>Lookup</name></name><argument_list>(<argument><expr><name>aProperty</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if>if <condition>(<expr><name>res</name> == <name>eCSSProperty_UNKNOWN</name></expr>)</condition><then> <block>{
    <function_decl><type><name>NS_ConvertUTF16toUTF8</name></type> <name>prop</name><parameter_list>(<param><decl><type><name>aProperty</name></type></decl></param>)</parameter_list>;</function_decl>
    <for>for (<init><decl><type><specifier>const</specifier> <name>CSSPropertyAlias</name> *</type><name>alias</name> <init>= <expr><name>gAliases</name></expr></init>,
                            *<name>alias_end</name> <init>= <expr><name>gAliases</name> + <call><name>NS_ARRAY_LENGTH</name><argument_list>(<argument><expr><name>gAliases</name></expr></argument>)</argument_list></call></expr></init></decl>;</init>
         <condition><expr><name>alias</name> &lt; <name>alias_end</name></expr>;</condition> <incr><expr>++<name>alias</name></expr></incr>)
      <if>if <condition>(<expr><call><name><name>nsCRT</name>::<name>strcasecmp</name></name><argument_list>(<argument><expr><call><name><name>prop</name>.<name>get</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>alias</name>-&gt;<name>name</name></name></expr></argument>)</argument_list></call> == 0</expr>)</condition><then> <block>{
        <expr_stmt><expr><name>res</name> = <name><name>alias</name>-&gt;<name>id</name></name></expr>;</expr_stmt>
        <break>break;</break>
      }</block></then></if></for>
  }</block></then></if>
  <return>return <expr><name>res</name></expr>;</return>
}</block></function>

<function><type><name>nsCSSFontDesc</name></type> 
<name><name>nsCSSProps</name>::<name>LookupFontDesc</name></name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>nsACString</name>&amp;</type> <name>aFontDesc</name></decl></param>)</parameter_list>
<block>{
  <expr_stmt><expr><call><name>NS_ASSERTION</name><argument_list>(<argument><expr><name>gFontDescTable</name></expr></argument>, <argument><expr>"no lookup table, needs addref"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <return>return <expr><call><name>nsCSSFontDesc</name><argument_list>(<argument><expr><call><name><name>gFontDescTable</name>-&gt;<name>Lookup</name></name><argument_list>(<argument><expr><name>aFontDesc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name>nsCSSFontDesc</name></type> 
<name><name>nsCSSProps</name>::<name>LookupFontDesc</name></name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>nsAString</name>&amp;</type> <name>aFontDesc</name></decl></param>)</parameter_list>
<block>{
  <expr_stmt><expr><call><name>NS_ASSERTION</name><argument_list>(<argument><expr><name>gFontDescTable</name></expr></argument>, <argument><expr>"no lookup table, needs addref"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <return>return <expr><call><name>nsCSSFontDesc</name><argument_list>(<argument><expr><call><name><name>gFontDescTable</name>-&gt;<name>Lookup</name></name><argument_list>(<argument><expr><name>aFontDesc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><specifier>const</specifier> <name>nsAFlatCString</name>&amp;</type> 
<name><name>nsCSSProps</name>::<name>GetStringValue</name></name><parameter_list>(<param><decl><type><name>nsCSSProperty</name></type> <name>aProperty</name></decl></param>)</parameter_list>
<block>{
  <expr_stmt><expr><call><name>NS_ASSERTION</name><argument_list>(<argument><expr><name>gPropertyTable</name></expr></argument>, <argument><expr>"no lookup table, needs addref"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if>if <condition>(<expr><name>gPropertyTable</name></expr>)</condition><then> <block>{
    <return>return <expr><call><name><name>gPropertyTable</name>-&gt;<name>GetStringValue</name></name><argument_list>(<argument><expr><call><name>PRInt32</name><argument_list>(<argument><expr><name>aProperty</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></then> <else>else <block>{
    <decl_stmt><decl><type><specifier>static</specifier> <name>nsDependentCString</name></type> <name>sNullStr</name><argument_list>(<argument><expr>""</expr></argument>)</argument_list></decl>;</decl_stmt>
    <return>return <expr><name>sNullStr</name></expr>;</return>
  }</block></else></if>
}</block></function>

<function><type><specifier>const</specifier> <name>nsAFlatCString</name>&amp;</type> 
<name><name>nsCSSProps</name>::<name>GetStringValue</name></name><parameter_list>(<param><decl><type><name>nsCSSFontDesc</name></type> <name>aFontDescID</name></decl></param>)</parameter_list>
<block>{
  <expr_stmt><expr><call><name>NS_ASSERTION</name><argument_list>(<argument><expr><name>gFontDescTable</name></expr></argument>, <argument><expr>"no lookup table, needs addref"</expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if>if <condition>(<expr><name>gFontDescTable</name></expr>)</condition><then> <block>{
    <return>return <expr><call><name><name>gFontDescTable</name>-&gt;<name>GetStringValue</name></name><argument_list>(<argument><expr><call><name>PRInt32</name><argument_list>(<argument><expr><name>aFontDescID</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
  }</block></then> <else>else <block>{
    <decl_stmt><decl><type><specifier>static</specifier> <name>nsDependentCString</name></type> <name>sNullStr</name><argument_list>(<argument><expr>""</expr></argument>)</argument_list></decl>;</decl_stmt>
    <return>return <expr><name>sNullStr</name></expr>;</return>
  }</block></else></if>
}</block></function>


<comment type="block" format="doxygen">/***************************************************************************/</comment>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kAppearanceKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_none</name></expr>,                   <expr><name>NS_THEME_NONE</name></expr>,
  <expr><name>eCSSKeyword_button</name></expr>,                 <expr><name>NS_THEME_BUTTON</name></expr>,
  <expr><name>eCSSKeyword_radio</name></expr>,                  <expr><name>NS_THEME_RADIO</name></expr>,
  <expr><name>eCSSKeyword_checkbox</name></expr>,               <expr><name>NS_THEME_CHECKBOX</name></expr>,
  <expr><name>eCSSKeyword_radio_small</name></expr>,            <expr><name>NS_THEME_RADIO_SMALL</name></expr>,
  <expr><name>eCSSKeyword_checkbox_small</name></expr>,         <expr><name>NS_THEME_CHECKBOX_SMALL</name></expr>,
  <expr><name>eCSSKeyword_button_bevel</name></expr>,           <expr><name>NS_THEME_BUTTON_BEVEL</name></expr>,
  <expr><name>eCSSKeyword_toolbox</name></expr>,                <expr><name>NS_THEME_TOOLBOX</name></expr>,
  <expr><name>eCSSKeyword_toolbar</name></expr>,                <expr><name>NS_THEME_TOOLBAR</name></expr>,
  <expr><name>eCSSKeyword_toolbarbutton</name></expr>,          <expr><name>NS_THEME_TOOLBAR_BUTTON</name></expr>,
  <expr><name>eCSSKeyword_toolbargripper</name></expr>,         <expr><name>NS_THEME_TOOLBAR_GRIPPER</name></expr>,
  <expr><name>eCSSKeyword_dualbutton</name></expr>,             <expr><name>NS_THEME_TOOLBAR_DUAL_BUTTON</name></expr>,
  <expr><name>eCSSKeyword_toolbarbutton_dropdown</name></expr>, <expr><name>NS_THEME_TOOLBAR_BUTTON_DROPDOWN</name></expr>,
  <expr><name>eCSSKeyword_separator</name></expr>,              <expr><name>NS_THEME_TOOLBAR_SEPARATOR</name></expr>,
  <expr><name>eCSSKeyword_splitter</name></expr>,               <expr><name>NS_THEME_SPLITTER</name></expr>,
  <expr><name>eCSSKeyword_statusbar</name></expr>,              <expr><name>NS_THEME_STATUSBAR</name></expr>,
  <expr><name>eCSSKeyword_statusbarpanel</name></expr>,         <expr><name>NS_THEME_STATUSBAR_PANEL</name></expr>,
  <expr><name>eCSSKeyword_resizerpanel</name></expr>,           <expr><name>NS_THEME_STATUSBAR_RESIZER_PANEL</name></expr>,
  <expr><name>eCSSKeyword_resizer</name></expr>,                <expr><name>NS_THEME_RESIZER</name></expr>,
  <expr><name>eCSSKeyword_listbox</name></expr>,                <expr><name>NS_THEME_LISTBOX</name></expr>,
  <expr><name>eCSSKeyword_listitem</name></expr>,               <expr><name>NS_THEME_LISTBOX_LISTITEM</name></expr>,
  <expr><name>eCSSKeyword_treeview</name></expr>,               <expr><name>NS_THEME_TREEVIEW</name></expr>,
  <expr><name>eCSSKeyword_treeitem</name></expr>,               <expr><name>NS_THEME_TREEVIEW_TREEITEM</name></expr>,
  <expr><name>eCSSKeyword_treetwisty</name></expr>,             <expr><name>NS_THEME_TREEVIEW_TWISTY</name></expr>,
  <expr><name>eCSSKeyword_treetwistyopen</name></expr>,         <expr><name>NS_THEME_TREEVIEW_TWISTY_OPEN</name></expr>,
  <expr><name>eCSSKeyword_treeline</name></expr>,               <expr><name>NS_THEME_TREEVIEW_LINE</name></expr>,
  <expr><name>eCSSKeyword_treeheader</name></expr>,             <expr><name>NS_THEME_TREEVIEW_HEADER</name></expr>,
  <expr><name>eCSSKeyword_treeheadercell</name></expr>,         <expr><name>NS_THEME_TREEVIEW_HEADER_CELL</name></expr>,
  <expr><name>eCSSKeyword_treeheadersortarrow</name></expr>,    <expr><name>NS_THEME_TREEVIEW_HEADER_SORTARROW</name></expr>,
  <expr><name>eCSSKeyword_progressbar</name></expr>,            <expr><name>NS_THEME_PROGRESSBAR</name></expr>,
  <expr><name>eCSSKeyword_progresschunk</name></expr>,          <expr><name>NS_THEME_PROGRESSBAR_CHUNK</name></expr>,
  <expr><name>eCSSKeyword_progressbar_vertical</name></expr>,   <expr><name>NS_THEME_PROGRESSBAR_VERTICAL</name></expr>,
  <expr><name>eCSSKeyword_progresschunk_vertical</name></expr>, <expr><name>NS_THEME_PROGRESSBAR_CHUNK_VERTICAL</name></expr>,
  <expr><name>eCSSKeyword_tab</name></expr>,                    <expr><name>NS_THEME_TAB</name></expr>,
  <expr><name>eCSSKeyword_tab_left_edge</name></expr>,          <expr><name>NS_THEME_TAB_LEFT_EDGE</name></expr>,
  <expr><name>eCSSKeyword_tab_right_edge</name></expr>,         <expr><name>NS_THEME_TAB_RIGHT_EDGE</name></expr>,
  <expr><name>eCSSKeyword_tabpanels</name></expr>,              <expr><name>NS_THEME_TAB_PANELS</name></expr>,
  <expr><name>eCSSKeyword_tabpanel</name></expr>,               <expr><name>NS_THEME_TAB_PANEL</name></expr>,
  <expr><name>eCSSKeyword_tabscrollarrow_back</name></expr>,    <expr><name>NS_THEME_TAB_SCROLLARROW_BACK</name></expr>,
  <expr><name>eCSSKeyword_tabscrollarrow_forward</name></expr>, <expr><name>NS_THEME_TAB_SCROLLARROW_FORWARD</name></expr>,
  <expr><name>eCSSKeyword_tooltip</name></expr>,                <expr><name>NS_THEME_TOOLTIP</name></expr>,
  <expr><name>eCSSKeyword_spinner</name></expr>,                <expr><name>NS_THEME_SPINNER</name></expr>,
  <expr><name>eCSSKeyword_spinner_upbutton</name></expr>,       <expr><name>NS_THEME_SPINNER_UP_BUTTON</name></expr>,
  <expr><name>eCSSKeyword_spinner_downbutton</name></expr>,     <expr><name>NS_THEME_SPINNER_DOWN_BUTTON</name></expr>,
  <expr><name>eCSSKeyword_spinner_textfield</name></expr>,      <expr><name>NS_THEME_SPINNER_TEXTFIELD</name></expr>,
  <expr><name>eCSSKeyword_scrollbar</name></expr>,              <expr><name>NS_THEME_SCROLLBAR</name></expr>,
  <expr><name>eCSSKeyword_scrollbar_small</name></expr>,        <expr><name>NS_THEME_SCROLLBAR_SMALL</name></expr>,
  <expr><name>eCSSKeyword_scrollbarbutton_up</name></expr>,     <expr><name>NS_THEME_SCROLLBAR_BUTTON_UP</name></expr>,
  <expr><name>eCSSKeyword_scrollbarbutton_down</name></expr>,   <expr><name>NS_THEME_SCROLLBAR_BUTTON_DOWN</name></expr>,
  <expr><name>eCSSKeyword_scrollbarbutton_left</name></expr>,   <expr><name>NS_THEME_SCROLLBAR_BUTTON_LEFT</name></expr>,
  <expr><name>eCSSKeyword_scrollbarbutton_right</name></expr>,  <expr><name>NS_THEME_SCROLLBAR_BUTTON_RIGHT</name></expr>,
  <expr><name>eCSSKeyword_scrollbartrack_horizontal</name></expr>,    <expr><name>NS_THEME_SCROLLBAR_TRACK_HORIZONTAL</name></expr>,
  <expr><name>eCSSKeyword_scrollbartrack_vertical</name></expr>,      <expr><name>NS_THEME_SCROLLBAR_TRACK_VERTICAL</name></expr>,
  <expr><name>eCSSKeyword_scrollbarthumb_horizontal</name></expr>,    <expr><name>NS_THEME_SCROLLBAR_THUMB_HORIZONTAL</name></expr>,
  <expr><name>eCSSKeyword_scrollbarthumb_vertical</name></expr>,      <expr><name>NS_THEME_SCROLLBAR_THUMB_VERTICAL</name></expr>,
  <expr><name>eCSSKeyword_textfield</name></expr>,              <expr><name>NS_THEME_TEXTFIELD</name></expr>,
  <expr><name>eCSSKeyword_textfield_multiline</name></expr>,    <expr><name>NS_THEME_TEXTFIELD_MULTILINE</name></expr>,
  <expr><name>eCSSKeyword_caret</name></expr>,                  <expr><name>NS_THEME_TEXTFIELD_CARET</name></expr>,
  <expr><name>eCSSKeyword_menulist</name></expr>,               <expr><name>NS_THEME_DROPDOWN</name></expr>,
  <expr><name>eCSSKeyword_menulistbutton</name></expr>,         <expr><name>NS_THEME_DROPDOWN_BUTTON</name></expr>,
  <expr><name>eCSSKeyword_menulisttext</name></expr>,           <expr><name>NS_THEME_DROPDOWN_TEXT</name></expr>,
  <expr><name>eCSSKeyword_menulisttextfield</name></expr>,      <expr><name>NS_THEME_DROPDOWN_TEXTFIELD</name></expr>,
  <expr><name>eCSSKeyword_scale_horizontal</name></expr>,       <expr><name>NS_THEME_SCALE_HORIZONTAL</name></expr>,
  <expr><name>eCSSKeyword_scale_vertical</name></expr>,         <expr><name>NS_THEME_SCALE_VERTICAL</name></expr>,
  <expr><name>eCSSKeyword_scalethumb_horizontal</name></expr>,  <expr><name>NS_THEME_SCALE_THUMB_HORIZONTAL</name></expr>,
  <expr><name>eCSSKeyword_scalethumb_vertical</name></expr>,    <expr><name>NS_THEME_SCALE_THUMB_VERTICAL</name></expr>,
  <expr><name>eCSSKeyword_scalethumbstart</name></expr>,        <expr><name>NS_THEME_SCALE_THUMB_START</name></expr>,
  <expr><name>eCSSKeyword_scalethumbend</name></expr>,          <expr><name>NS_THEME_SCALE_THUMB_END</name></expr>,
  <expr><name>eCSSKeyword_scalethumbtick</name></expr>,         <expr><name>NS_THEME_SCALE_TICK</name></expr>,
  <expr><name>eCSSKeyword_groupbox</name></expr>,               <expr><name>NS_THEME_GROUPBOX</name></expr>,
  <expr><name>eCSSKeyword_checkboxcontainer</name></expr>,      <expr><name>NS_THEME_CHECKBOX_CONTAINER</name></expr>,
  <expr><name>eCSSKeyword_radiocontainer</name></expr>,         <expr><name>NS_THEME_RADIO_CONTAINER</name></expr>,
  <expr><name>eCSSKeyword_checkboxlabel</name></expr>,          <expr><name>NS_THEME_CHECKBOX_LABEL</name></expr>,
  <expr><name>eCSSKeyword_radiolabel</name></expr>,             <expr><name>NS_THEME_RADIO_LABEL</name></expr>,
  <expr><name>eCSSKeyword_buttonfocus</name></expr>,            <expr><name>NS_THEME_BUTTON_FOCUS</name></expr>,
  <expr><name>eCSSKeyword_window</name></expr>,                 <expr><name>NS_THEME_WINDOW</name></expr>,
  <expr><name>eCSSKeyword_dialog</name></expr>,                 <expr><name>NS_THEME_DIALOG</name></expr>,
  <expr><name>eCSSKeyword_menubar</name></expr>,                <expr><name>NS_THEME_MENUBAR</name></expr>,
  <expr><name>eCSSKeyword_menupopup</name></expr>,              <expr><name>NS_THEME_MENUPOPUP</name></expr>,
  <expr><name>eCSSKeyword_menuitem</name></expr>,               <expr><name>NS_THEME_MENUITEM</name></expr>,
  <expr><name>eCSSKeyword_checkmenuitem</name></expr>,          <expr><name>NS_THEME_CHECKMENUITEM</name></expr>,
  <expr><name>eCSSKeyword_radiomenuitem</name></expr>,          <expr><name>NS_THEME_RADIOMENUITEM</name></expr>,
  <expr><name>eCSSKeyword_menucheckbox</name></expr>,           <expr><name>NS_THEME_MENUCHECKBOX</name></expr>,
  <expr><name>eCSSKeyword_menuradio</name></expr>,              <expr><name>NS_THEME_MENURADIO</name></expr>,
  <expr><name>eCSSKeyword_menuseparator</name></expr>,          <expr><name>NS_THEME_MENUSEPARATOR</name></expr>,
  <expr><name>eCSSKeyword_menuarrow</name></expr>,              <expr><name>NS_THEME_MENUARROW</name></expr>,
  <expr><name>eCSSKeyword_menuimage</name></expr>,              <expr><name>NS_THEME_MENUIMAGE</name></expr>,
  <expr><name>eCSSKeyword_menuitemtext</name></expr>,           <expr><name>NS_THEME_MENUITEMTEXT</name></expr>,
  <expr><name>eCSSKeyword__moz_win_media_toolbox</name></expr>, <expr><name>NS_THEME_WIN_MEDIA_TOOLBOX</name></expr>,
  <expr><name>eCSSKeyword__moz_win_communications_toolbox</name></expr>, <expr><name>NS_THEME_WIN_COMMUNICATIONS_TOOLBOX</name></expr>,
  <expr><name>eCSSKeyword__moz_win_browsertabbar_toolbox</name></expr>,  <expr><name>NS_THEME_WIN_BROWSER_TAB_BAR_TOOLBOX</name></expr>,
  <expr><name>eCSSKeyword__moz_win_glass</name></expr>,         <expr><name>NS_THEME_WIN_GLASS</name></expr>,
  <expr><name>eCSSKeyword__moz_mac_unified_toolbar</name></expr>,        <expr><name>NS_THEME_MOZ_MAC_UNIFIED_TOOLBAR</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<comment type="line">// Keyword id tables for variant/enum parsing</comment>
<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kAzimuthKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_left_side</name></expr>,    <expr><name>NS_STYLE_AZIMUTH_LEFT_SIDE</name></expr>,
  <expr><name>eCSSKeyword_far_left</name></expr>,     <expr><name>NS_STYLE_AZIMUTH_FAR_LEFT</name></expr>,
  <expr><name>eCSSKeyword_left</name></expr>,         <expr><name>NS_STYLE_AZIMUTH_LEFT</name></expr>,
  <expr><name>eCSSKeyword_center_left</name></expr>,  <expr><name>NS_STYLE_AZIMUTH_CENTER_LEFT</name></expr>,
  <expr><name>eCSSKeyword_center</name></expr>,       <expr><name>NS_STYLE_AZIMUTH_CENTER</name></expr>,
  <expr><name>eCSSKeyword_center_right</name></expr>, <expr><name>NS_STYLE_AZIMUTH_CENTER_RIGHT</name></expr>,
  <expr><name>eCSSKeyword_right</name></expr>,        <expr><name>NS_STYLE_AZIMUTH_RIGHT</name></expr>,
  <expr><name>eCSSKeyword_far_right</name></expr>,    <expr><name>NS_STYLE_AZIMUTH_FAR_RIGHT</name></expr>,
  <expr><name>eCSSKeyword_right_side</name></expr>,   <expr><name>NS_STYLE_AZIMUTH_RIGHT_SIDE</name></expr>,
  <expr><name>eCSSKeyword_behind</name></expr>,       <expr><name>NS_STYLE_AZIMUTH_BEHIND</name></expr>,
  <expr><name>eCSSKeyword_leftwards</name></expr>,    <expr><name>NS_STYLE_AZIMUTH_LEFTWARDS</name></expr>,
  <expr><name>eCSSKeyword_rightwards</name></expr>,   <expr><name>NS_STYLE_AZIMUTH_RIGHTWARDS</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kBackgroundAttachmentKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_fixed</name></expr>, <expr><name>NS_STYLE_BG_ATTACHMENT_FIXED</name></expr>,
  <expr><name>eCSSKeyword_scroll</name></expr>, <expr><name>NS_STYLE_BG_ATTACHMENT_SCROLL</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kBackgroundClipKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_border</name></expr>,     <expr><name>NS_STYLE_BG_CLIP_BORDER</name></expr>,
  <expr><name>eCSSKeyword_padding</name></expr>,    <expr><name>NS_STYLE_BG_CLIP_PADDING</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kBackgroundInlinePolicyKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_each_box</name></expr>,     <expr><name>NS_STYLE_BG_INLINE_POLICY_EACH_BOX</name></expr>,
  <expr><name>eCSSKeyword_continuous</name></expr>,   <expr><name>NS_STYLE_BG_INLINE_POLICY_CONTINUOUS</name></expr>,
  <expr><name>eCSSKeyword_bounding_box</name></expr>, <expr><name>NS_STYLE_BG_INLINE_POLICY_BOUNDING_BOX</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kBackgroundOriginKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_border</name></expr>,     <expr><name>NS_STYLE_BG_ORIGIN_BORDER</name></expr>,
  <expr><name>eCSSKeyword_padding</name></expr>,    <expr><name>NS_STYLE_BG_ORIGIN_PADDING</name></expr>,
  <expr><name>eCSSKeyword_content</name></expr>,    <expr><name>NS_STYLE_BG_ORIGIN_CONTENT</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<comment type="line">// Note: Don't change this table unless you update</comment>
<comment type="line">// parseBackgroundPosition!</comment>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kBackgroundPositionKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_center</name></expr>, <expr><name>NS_STYLE_BG_POSITION_CENTER</name></expr>,
  <expr><name>eCSSKeyword_top</name></expr>, <expr><name>NS_STYLE_BG_POSITION_TOP</name></expr>,
  <expr><name>eCSSKeyword_bottom</name></expr>, <expr><name>NS_STYLE_BG_POSITION_BOTTOM</name></expr>,
  <expr><name>eCSSKeyword_left</name></expr>, <expr><name>NS_STYLE_BG_POSITION_LEFT</name></expr>,
  <expr><name>eCSSKeyword_right</name></expr>, <expr><name>NS_STYLE_BG_POSITION_RIGHT</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kBackgroundRepeatKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_no_repeat</name></expr>,  <expr><name>NS_STYLE_BG_REPEAT_OFF</name></expr>,
  <expr><name>eCSSKeyword_repeat</name></expr>,     <expr><name>NS_STYLE_BG_REPEAT_XY</name></expr>,
  <expr><name>eCSSKeyword_repeat_x</name></expr>,   <expr><name>NS_STYLE_BG_REPEAT_X</name></expr>,
  <expr><name>eCSSKeyword_repeat_y</name></expr>,   <expr><name>NS_STYLE_BG_REPEAT_Y</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kBorderCollapseKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_collapse</name></expr>,  <expr><name>NS_STYLE_BORDER_COLLAPSE</name></expr>,
  <expr><name>eCSSKeyword_separate</name></expr>,  <expr><name>NS_STYLE_BORDER_SEPARATE</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kBorderColorKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword__moz_use_text_color</name></expr>, <expr><name>NS_STYLE_COLOR_MOZ_USE_TEXT_COLOR</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kBorderImageKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_stretch</name></expr>, <expr><name>NS_STYLE_BORDER_IMAGE_STRETCH</name></expr>,
  <expr><name>eCSSKeyword_repeat</name></expr>, <expr><name>NS_STYLE_BORDER_IMAGE_REPEAT</name></expr>,
  <expr><name>eCSSKeyword_round</name></expr>, <expr><name>NS_STYLE_BORDER_IMAGE_ROUND</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kBorderStyleKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_hidden</name></expr>, <expr><name>NS_STYLE_BORDER_STYLE_HIDDEN</name></expr>,
  <expr><name>eCSSKeyword_dotted</name></expr>, <expr><name>NS_STYLE_BORDER_STYLE_DOTTED</name></expr>,
  <expr><name>eCSSKeyword_dashed</name></expr>, <expr><name>NS_STYLE_BORDER_STYLE_DASHED</name></expr>,
  <expr><name>eCSSKeyword_solid</name></expr>,  <expr><name>NS_STYLE_BORDER_STYLE_SOLID</name></expr>,
  <expr><name>eCSSKeyword_double</name></expr>, <expr><name>NS_STYLE_BORDER_STYLE_DOUBLE</name></expr>,
  <expr><name>eCSSKeyword_groove</name></expr>, <expr><name>NS_STYLE_BORDER_STYLE_GROOVE</name></expr>,
  <expr><name>eCSSKeyword_ridge</name></expr>,  <expr><name>NS_STYLE_BORDER_STYLE_RIDGE</name></expr>,
  <expr><name>eCSSKeyword_inset</name></expr>,  <expr><name>NS_STYLE_BORDER_STYLE_INSET</name></expr>,
  <expr><name>eCSSKeyword_outset</name></expr>, <expr><name>NS_STYLE_BORDER_STYLE_OUTSET</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kBorderWidthKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_thin</name></expr>, <expr><name>NS_STYLE_BORDER_WIDTH_THIN</name></expr>,
  <expr><name>eCSSKeyword_medium</name></expr>, <expr><name>NS_STYLE_BORDER_WIDTH_MEDIUM</name></expr>,
  <expr><name>eCSSKeyword_thick</name></expr>, <expr><name>NS_STYLE_BORDER_WIDTH_THICK</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kBoxPropSourceKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_physical</name></expr>,     <expr><name>NS_BOXPROP_SOURCE_PHYSICAL</name></expr>,
  <expr><name>eCSSKeyword_logical</name></expr>,      <expr><name>NS_BOXPROP_SOURCE_LOGICAL</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kBoxSizingKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_content_box</name></expr>,  <expr><name>NS_STYLE_BOX_SIZING_CONTENT</name></expr>,
  <expr><name>eCSSKeyword_border_box</name></expr>,   <expr><name>NS_STYLE_BOX_SIZING_BORDER</name></expr>,
  <expr><name>eCSSKeyword_padding_box</name></expr>,  <expr><name>NS_STYLE_BOX_SIZING_PADDING</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kCaptionSideKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_top</name></expr>,                  <expr><name>NS_STYLE_CAPTION_SIDE_TOP</name></expr>,
  <expr><name>eCSSKeyword_right</name></expr>,                <expr><name>NS_STYLE_CAPTION_SIDE_RIGHT</name></expr>,
  <expr><name>eCSSKeyword_bottom</name></expr>,               <expr><name>NS_STYLE_CAPTION_SIDE_BOTTOM</name></expr>,
  <expr><name>eCSSKeyword_left</name></expr>,                 <expr><name>NS_STYLE_CAPTION_SIDE_LEFT</name></expr>,
  <expr><name>eCSSKeyword_top_outside</name></expr>,          <expr><name>NS_STYLE_CAPTION_SIDE_TOP_OUTSIDE</name></expr>,
  <expr><name>eCSSKeyword_bottom_outside</name></expr>,       <expr><name>NS_STYLE_CAPTION_SIDE_BOTTOM_OUTSIDE</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,              <expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kClearKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_left</name></expr>, <expr><name>NS_STYLE_CLEAR_LEFT</name></expr>,
  <expr><name>eCSSKeyword_right</name></expr>, <expr><name>NS_STYLE_CLEAR_RIGHT</name></expr>,
  <expr><name>eCSSKeyword_both</name></expr>, <expr><name>NS_STYLE_CLEAR_LEFT_AND_RIGHT</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kColorKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_activeborder</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_activeborder</name></name></expr>,
  <expr><name>eCSSKeyword_activecaption</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_activecaption</name></name></expr>,
  <expr><name>eCSSKeyword_appworkspace</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_appworkspace</name></name></expr>,
  <expr><name>eCSSKeyword_background</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_background</name></name></expr>,
  <expr><name>eCSSKeyword_buttonface</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_buttonface</name></name></expr>,
  <expr><name>eCSSKeyword_buttonhighlight</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_buttonhighlight</name></name></expr>,
  <expr><name>eCSSKeyword_buttonshadow</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_buttonshadow</name></name></expr>,
  <expr><name>eCSSKeyword_buttontext</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_buttontext</name></name></expr>,
  <expr><name>eCSSKeyword_captiontext</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_captiontext</name></name></expr>,
  <expr><name>eCSSKeyword_graytext</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_graytext</name></name></expr>,
  <expr><name>eCSSKeyword_highlight</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_highlight</name></name></expr>,
  <expr><name>eCSSKeyword_highlighttext</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_highlighttext</name></name></expr>,
  <expr><name>eCSSKeyword_inactiveborder</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_inactiveborder</name></name></expr>,
  <expr><name>eCSSKeyword_inactivecaption</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_inactivecaption</name></name></expr>,
  <expr><name>eCSSKeyword_inactivecaptiontext</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_inactivecaptiontext</name></name></expr>,
  <expr><name>eCSSKeyword_infobackground</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_infobackground</name></name></expr>,
  <expr><name>eCSSKeyword_infotext</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_infotext</name></name></expr>,
  <expr><name>eCSSKeyword_menu</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_menu</name></name></expr>,
  <expr><name>eCSSKeyword_menutext</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_menutext</name></name></expr>,
  <expr><name>eCSSKeyword_scrollbar</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_scrollbar</name></name></expr>,
  <expr><name>eCSSKeyword_threeddarkshadow</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_threeddarkshadow</name></name></expr>,
  <expr><name>eCSSKeyword_threedface</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_threedface</name></name></expr>,
  <expr><name>eCSSKeyword_threedhighlight</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_threedhighlight</name></name></expr>,
  <expr><name>eCSSKeyword_threedlightshadow</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_threedlightshadow</name></name></expr>,
  <expr><name>eCSSKeyword_threedshadow</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_threedshadow</name></name></expr>,
  <expr><name>eCSSKeyword_window</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_window</name></name></expr>,
  <expr><name>eCSSKeyword_windowframe</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_windowframe</name></name></expr>,
  <expr><name>eCSSKeyword_windowtext</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor_windowtext</name></name></expr>,
  <expr><name>eCSSKeyword__moz_activehyperlinktext</name></expr>, <expr><name>NS_COLOR_MOZ_ACTIVEHYPERLINKTEXT</name></expr>,
  <expr><name>eCSSKeyword__moz_buttondefault</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_buttondefault</name></name></expr>,
  <expr><name>eCSSKeyword__moz_buttonhoverface</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_buttonhoverface</name></name></expr>,
  <expr><name>eCSSKeyword__moz_buttonhovertext</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_buttonhovertext</name></name></expr>,
  <expr><name>eCSSKeyword__moz_cellhighlight</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_cellhighlight</name></name></expr>,
  <expr><name>eCSSKeyword__moz_cellhighlighttext</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_cellhighlighttext</name></name></expr>,
  <expr><name>eCSSKeyword__moz_eventreerow</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_eventreerow</name></name></expr>,
  <expr><name>eCSSKeyword__moz_field</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_field</name></name></expr>,
  <expr><name>eCSSKeyword__moz_fieldtext</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_fieldtext</name></name></expr>,
  <expr><name>eCSSKeyword__moz_dialog</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_dialog</name></name></expr>,
  <expr><name>eCSSKeyword__moz_dialogtext</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_dialogtext</name></name></expr>,
  <expr><name>eCSSKeyword__moz_dragtargetzone</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_dragtargetzone</name></name></expr>,
  <expr><name>eCSSKeyword__moz_hyperlinktext</name></expr>, <expr><name>NS_COLOR_MOZ_HYPERLINKTEXT</name></expr>,
  <expr><name>eCSSKeyword__moz_html_cellhighlight</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_html_cellhighlight</name></name></expr>,
  <expr><name>eCSSKeyword__moz_html_cellhighlighttext</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_html_cellhighlighttext</name></name></expr>,
  <expr><name>eCSSKeyword__moz_mac_chrome_active</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_mac_chrome_active</name></name></expr>,
  <expr><name>eCSSKeyword__moz_mac_chrome_inactive</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_mac_chrome_inactive</name></name></expr>,
  <expr><name>eCSSKeyword__moz_mac_focusring</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_mac_focusring</name></name></expr>,
  <expr><name>eCSSKeyword__moz_mac_menuselect</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_mac_menuselect</name></name></expr>,
  <expr><name>eCSSKeyword__moz_mac_menushadow</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_mac_menushadow</name></name></expr>,
  <expr><name>eCSSKeyword__moz_mac_menutextdisable</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_mac_menutextdisable</name></name></expr>,
  <expr><name>eCSSKeyword__moz_mac_menutextselect</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_mac_menutextselect</name></name></expr>,
  <expr><name>eCSSKeyword__moz_mac_accentlightesthighlight</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_mac_accentlightesthighlight</name></name></expr>,
  <expr><name>eCSSKeyword__moz_mac_accentregularhighlight</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_mac_accentregularhighlight</name></name></expr>,
  <expr><name>eCSSKeyword__moz_mac_accentface</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_mac_accentface</name></name></expr>,
  <expr><name>eCSSKeyword__moz_mac_accentlightshadow</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_mac_accentlightshadow</name></name></expr>,
  <expr><name>eCSSKeyword__moz_mac_accentregularshadow</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_mac_accentregularshadow</name></name></expr>,
  <expr><name>eCSSKeyword__moz_mac_accentdarkshadow</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_mac_accentdarkshadow</name></name></expr>,
  <expr><name>eCSSKeyword__moz_mac_accentdarkestshadow</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_mac_accentdarkestshadow</name></name></expr>,
  <expr><name>eCSSKeyword__moz_mac_alternateprimaryhighlight</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_mac_alternateprimaryhighlight</name></name></expr>,
  <expr><name>eCSSKeyword__moz_mac_secondaryhighlight</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_mac_secondaryhighlight</name></name></expr>,
  <expr><name>eCSSKeyword__moz_menuhover</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_menuhover</name></name></expr>,
  <expr><name>eCSSKeyword__moz_menuhovertext</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_menuhovertext</name></name></expr>,
  <expr><name>eCSSKeyword__moz_menubarhovertext</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_menubarhovertext</name></name></expr>,
  <expr><name>eCSSKeyword__moz_oddtreerow</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_oddtreerow</name></name></expr>,
  <expr><name>eCSSKeyword__moz_visitedhyperlinktext</name></expr>, <expr><name>NS_COLOR_MOZ_VISITEDHYPERLINKTEXT</name></expr>,
  <expr><name>eCSSKeyword_currentcolor</name></expr>, <expr><name>NS_COLOR_CURRENTCOLOR</name></expr>,
  <expr><name>eCSSKeyword__moz_win_mediatext</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_win_mediatext</name></name></expr>,
  <expr><name>eCSSKeyword__moz_win_communicationstext</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_win_communicationstext</name></name></expr>,
  <expr><name>eCSSKeyword__moz_nativehyperlinktext</name></expr>, <expr><name><name>nsILookAndFeel</name>::<name>eColor__moz_nativehyperlinktext</name></name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kContentKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_open_quote</name></expr>, <expr><name>NS_STYLE_CONTENT_OPEN_QUOTE</name></expr>,
  <expr><name>eCSSKeyword_close_quote</name></expr>, <expr><name>NS_STYLE_CONTENT_CLOSE_QUOTE</name></expr>,
  <expr><name>eCSSKeyword_no_open_quote</name></expr>, <expr><name>NS_STYLE_CONTENT_NO_OPEN_QUOTE</name></expr>,
  <expr><name>eCSSKeyword_no_close_quote</name></expr>, <expr><name>NS_STYLE_CONTENT_NO_CLOSE_QUOTE</name></expr>,
  <expr><name>eCSSKeyword__moz_alt_content</name></expr>, <expr><name>NS_STYLE_CONTENT_ALT_CONTENT</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kCursorKTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// CSS 2.0</comment>
  <expr><name>eCSSKeyword_crosshair</name></expr>, <expr><name>NS_STYLE_CURSOR_CROSSHAIR</name></expr>,
  <expr><name>eCSSKeyword_default</name></expr>, <expr><name>NS_STYLE_CURSOR_DEFAULT</name></expr>,
  <expr><name>eCSSKeyword_pointer</name></expr>, <expr><name>NS_STYLE_CURSOR_POINTER</name></expr>,
  <expr><name>eCSSKeyword_move</name></expr>, <expr><name>NS_STYLE_CURSOR_MOVE</name></expr>,
  <expr><name>eCSSKeyword_e_resize</name></expr>, <expr><name>NS_STYLE_CURSOR_E_RESIZE</name></expr>,
  <expr><name>eCSSKeyword_ne_resize</name></expr>, <expr><name>NS_STYLE_CURSOR_NE_RESIZE</name></expr>,
  <expr><name>eCSSKeyword_nw_resize</name></expr>, <expr><name>NS_STYLE_CURSOR_NW_RESIZE</name></expr>,
  <expr><name>eCSSKeyword_n_resize</name></expr>, <expr><name>NS_STYLE_CURSOR_N_RESIZE</name></expr>,
  <expr><name>eCSSKeyword_se_resize</name></expr>, <expr><name>NS_STYLE_CURSOR_SE_RESIZE</name></expr>,
  <expr><name>eCSSKeyword_sw_resize</name></expr>, <expr><name>NS_STYLE_CURSOR_SW_RESIZE</name></expr>,
  <expr><name>eCSSKeyword_s_resize</name></expr>, <expr><name>NS_STYLE_CURSOR_S_RESIZE</name></expr>,
  <expr><name>eCSSKeyword_w_resize</name></expr>, <expr><name>NS_STYLE_CURSOR_W_RESIZE</name></expr>,
  <expr><name>eCSSKeyword_text</name></expr>, <expr><name>NS_STYLE_CURSOR_TEXT</name></expr>,
  <expr><name>eCSSKeyword_wait</name></expr>, <expr><name>NS_STYLE_CURSOR_WAIT</name></expr>,
  <expr><name>eCSSKeyword_help</name></expr>, <expr><name>NS_STYLE_CURSOR_HELP</name></expr>,
  <comment type="line">// CSS 2.1</comment>
  <expr><name>eCSSKeyword_progress</name></expr>, <expr><name>NS_STYLE_CURSOR_SPINNING</name></expr>,
  <comment type="line">// CSS3 basic user interface module</comment>
  <expr><name>eCSSKeyword_copy</name></expr>, <expr><name>NS_STYLE_CURSOR_COPY</name></expr>,
  <expr><name>eCSSKeyword_alias</name></expr>, <expr><name>NS_STYLE_CURSOR_ALIAS</name></expr>,
  <expr><name>eCSSKeyword_context_menu</name></expr>, <expr><name>NS_STYLE_CURSOR_CONTEXT_MENU</name></expr>,
  <expr><name>eCSSKeyword_cell</name></expr>, <expr><name>NS_STYLE_CURSOR_CELL</name></expr>,
  <expr><name>eCSSKeyword_not_allowed</name></expr>, <expr><name>NS_STYLE_CURSOR_NOT_ALLOWED</name></expr>,
  <expr><name>eCSSKeyword_col_resize</name></expr>, <expr><name>NS_STYLE_CURSOR_COL_RESIZE</name></expr>,
  <expr><name>eCSSKeyword_row_resize</name></expr>, <expr><name>NS_STYLE_CURSOR_ROW_RESIZE</name></expr>,
  <expr><name>eCSSKeyword_no_drop</name></expr>, <expr><name>NS_STYLE_CURSOR_NO_DROP</name></expr>,
  <expr><name>eCSSKeyword_vertical_text</name></expr>, <expr><name>NS_STYLE_CURSOR_VERTICAL_TEXT</name></expr>,
  <expr><name>eCSSKeyword_all_scroll</name></expr>, <expr><name>NS_STYLE_CURSOR_ALL_SCROLL</name></expr>,
  <expr><name>eCSSKeyword_nesw_resize</name></expr>, <expr><name>NS_STYLE_CURSOR_NESW_RESIZE</name></expr>,
  <expr><name>eCSSKeyword_nwse_resize</name></expr>, <expr><name>NS_STYLE_CURSOR_NWSE_RESIZE</name></expr>,
  <expr><name>eCSSKeyword_ns_resize</name></expr>, <expr><name>NS_STYLE_CURSOR_NS_RESIZE</name></expr>,
  <expr><name>eCSSKeyword_ew_resize</name></expr>, <expr><name>NS_STYLE_CURSOR_EW_RESIZE</name></expr>,
  <expr><name>eCSSKeyword_none</name></expr>, <expr><name>NS_STYLE_CURSOR_NONE</name></expr>,
  <comment type="line">// -moz- prefixed aliases for some CSS3 cursors for backward compat</comment>
  <expr><name>eCSSKeyword__moz_copy</name></expr>, <expr><name>NS_STYLE_CURSOR_COPY</name></expr>,
  <expr><name>eCSSKeyword__moz_alias</name></expr>, <expr><name>NS_STYLE_CURSOR_ALIAS</name></expr>,
  <expr><name>eCSSKeyword__moz_context_menu</name></expr>, <expr><name>NS_STYLE_CURSOR_CONTEXT_MENU</name></expr>,
  <expr><name>eCSSKeyword__moz_cell</name></expr>, <expr><name>NS_STYLE_CURSOR_CELL</name></expr>,
  <comment type="line">// -moz- prefixed vendor specific</comment>
  <expr><name>eCSSKeyword__moz_grab</name></expr>, <expr><name>NS_STYLE_CURSOR_GRAB</name></expr>,
  <expr><name>eCSSKeyword__moz_grabbing</name></expr>, <expr><name>NS_STYLE_CURSOR_GRABBING</name></expr>,
  <expr><name>eCSSKeyword__moz_spinning</name></expr>, <expr><name>NS_STYLE_CURSOR_SPINNING</name></expr>,
  <expr><name>eCSSKeyword__moz_zoom_in</name></expr>, <expr><name>NS_STYLE_CURSOR_MOZ_ZOOM_IN</name></expr>,
  <expr><name>eCSSKeyword__moz_zoom_out</name></expr>, <expr><name>NS_STYLE_CURSOR_MOZ_ZOOM_OUT</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kDirectionKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_ltr</name></expr>,      <expr><name>NS_STYLE_DIRECTION_LTR</name></expr>,
  <expr><name>eCSSKeyword_rtl</name></expr>,      <expr><name>NS_STYLE_DIRECTION_RTL</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kDisplayKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_inline</name></expr>,             <expr><name>NS_STYLE_DISPLAY_INLINE</name></expr>,
  <expr><name>eCSSKeyword_block</name></expr>,              <expr><name>NS_STYLE_DISPLAY_BLOCK</name></expr>,
  <expr><name>eCSSKeyword_inline_block</name></expr>,       <expr><name>NS_STYLE_DISPLAY_INLINE_BLOCK</name></expr>,
  <expr><name>eCSSKeyword_list_item</name></expr>,          <expr><name>NS_STYLE_DISPLAY_LIST_ITEM</name></expr>,
  <expr><name>eCSSKeyword__moz_run_in</name></expr>,        <expr><name>NS_STYLE_DISPLAY_RUN_IN</name></expr>,
  <expr><name>eCSSKeyword__moz_compact</name></expr>,       <expr><name>NS_STYLE_DISPLAY_COMPACT</name></expr>,
  <expr><name>eCSSKeyword__moz_marker</name></expr>,        <expr><name>NS_STYLE_DISPLAY_MARKER</name></expr>,
  <expr><name>eCSSKeyword_table</name></expr>,              <expr><name>NS_STYLE_DISPLAY_TABLE</name></expr>,
  <expr><name>eCSSKeyword_inline_table</name></expr>,       <expr><name>NS_STYLE_DISPLAY_INLINE_TABLE</name></expr>,
  <expr><name>eCSSKeyword_table_row_group</name></expr>,    <expr><name>NS_STYLE_DISPLAY_TABLE_ROW_GROUP</name></expr>,
  <expr><name>eCSSKeyword_table_header_group</name></expr>, <expr><name>NS_STYLE_DISPLAY_TABLE_HEADER_GROUP</name></expr>,
  <expr><name>eCSSKeyword_table_footer_group</name></expr>, <expr><name>NS_STYLE_DISPLAY_TABLE_FOOTER_GROUP</name></expr>,
  <expr><name>eCSSKeyword_table_row</name></expr>,          <expr><name>NS_STYLE_DISPLAY_TABLE_ROW</name></expr>,
  <expr><name>eCSSKeyword_table_column_group</name></expr>, <expr><name>NS_STYLE_DISPLAY_TABLE_COLUMN_GROUP</name></expr>,
  <expr><name>eCSSKeyword_table_column</name></expr>,       <expr><name>NS_STYLE_DISPLAY_TABLE_COLUMN</name></expr>,
  <expr><name>eCSSKeyword_table_cell</name></expr>,         <expr><name>NS_STYLE_DISPLAY_TABLE_CELL</name></expr>,
  <expr><name>eCSSKeyword_table_caption</name></expr>,      <expr><name>NS_STYLE_DISPLAY_TABLE_CAPTION</name></expr>,
  <comment type="line">// Make sure this is kept in sync with the code in</comment>
  <comment type="line">// nsCSSFrameConstructor::ConstructXULFrame</comment>
  <expr><name>eCSSKeyword__moz_box</name></expr>,           <expr><name>NS_STYLE_DISPLAY_BOX</name></expr>,
  <expr><name>eCSSKeyword__moz_inline_box</name></expr>,    <expr><name>NS_STYLE_DISPLAY_INLINE_BOX</name></expr>,
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>MOZ_XUL</name></cpp:ifdef>  
  <expr><name>eCSSKeyword__moz_grid</name></expr>,          <expr><name>NS_STYLE_DISPLAY_GRID</name></expr>,
  <expr><name>eCSSKeyword__moz_inline_grid</name></expr>,   <expr><name>NS_STYLE_DISPLAY_INLINE_GRID</name></expr>,
  <expr><name>eCSSKeyword__moz_grid_group</name></expr>,    <expr><name>NS_STYLE_DISPLAY_GRID_GROUP</name></expr>,
  <expr><name>eCSSKeyword__moz_grid_line</name></expr>,     <expr><name>NS_STYLE_DISPLAY_GRID_LINE</name></expr>,
  <expr><name>eCSSKeyword__moz_stack</name></expr>,         <expr><name>NS_STYLE_DISPLAY_STACK</name></expr>,
  <expr><name>eCSSKeyword__moz_inline_stack</name></expr>,  <expr><name>NS_STYLE_DISPLAY_INLINE_STACK</name></expr>,
  <expr><name>eCSSKeyword__moz_deck</name></expr>,          <expr><name>NS_STYLE_DISPLAY_DECK</name></expr>,
  <expr><name>eCSSKeyword__moz_popup</name></expr>,         <expr><name>NS_STYLE_DISPLAY_POPUP</name></expr>,
  <expr><name>eCSSKeyword__moz_groupbox</name></expr>,      <expr><name>NS_STYLE_DISPLAY_GROUPBOX</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kElevationKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_below</name></expr>,  <expr><name>NS_STYLE_ELEVATION_BELOW</name></expr>,
  <expr><name>eCSSKeyword_level</name></expr>,  <expr><name>NS_STYLE_ELEVATION_LEVEL</name></expr>,
  <expr><name>eCSSKeyword_above</name></expr>,  <expr><name>NS_STYLE_ELEVATION_ABOVE</name></expr>,
  <expr><name>eCSSKeyword_higher</name></expr>, <expr><name>NS_STYLE_ELEVATION_HIGHER</name></expr>,
  <expr><name>eCSSKeyword_lower</name></expr>,  <expr><name>NS_STYLE_ELEVATION_LOWER</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kEmptyCellsKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_show</name></expr>,                 <expr><name>NS_STYLE_TABLE_EMPTY_CELLS_SHOW</name></expr>,
  <expr><name>eCSSKeyword_hide</name></expr>,                 <expr><name>NS_STYLE_TABLE_EMPTY_CELLS_HIDE</name></expr>,
  <expr><name>eCSSKeyword__moz_show_background</name></expr>, <expr><name>NS_STYLE_TABLE_EMPTY_CELLS_SHOW_BACKGROUND</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kFloatKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_left</name></expr>,  <expr><name>NS_STYLE_FLOAT_LEFT</name></expr>,
  <expr><name>eCSSKeyword_right</name></expr>, <expr><name>NS_STYLE_FLOAT_RIGHT</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kFloatEdgeKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_content_box</name></expr>,  <expr><name>NS_STYLE_FLOAT_EDGE_CONTENT</name></expr>,
  <expr><name>eCSSKeyword_margin_box</name></expr>,  <expr><name>NS_STYLE_FLOAT_EDGE_MARGIN</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kFontKTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// CSS2.</comment>
  <expr><name>eCSSKeyword_caption</name></expr>, <expr><name>NS_STYLE_FONT_CAPTION</name></expr>,
  <expr><name>eCSSKeyword_icon</name></expr>, <expr><name>NS_STYLE_FONT_ICON</name></expr>,
  <expr><name>eCSSKeyword_menu</name></expr>, <expr><name>NS_STYLE_FONT_MENU</name></expr>,
  <expr><name>eCSSKeyword_message_box</name></expr>, <expr><name>NS_STYLE_FONT_MESSAGE_BOX</name></expr>,
  <expr><name>eCSSKeyword_small_caption</name></expr>, <expr><name>NS_STYLE_FONT_SMALL_CAPTION</name></expr>,
  <expr><name>eCSSKeyword_status_bar</name></expr>, <expr><name>NS_STYLE_FONT_STATUS_BAR</name></expr>,

  <comment type="line">// Proposed for CSS3.</comment>
  <expr><name>eCSSKeyword__moz_window</name></expr>, <expr><name>NS_STYLE_FONT_WINDOW</name></expr>,
  <expr><name>eCSSKeyword__moz_document</name></expr>, <expr><name>NS_STYLE_FONT_DOCUMENT</name></expr>,
  <expr><name>eCSSKeyword__moz_workspace</name></expr>, <expr><name>NS_STYLE_FONT_WORKSPACE</name></expr>,
  <expr><name>eCSSKeyword__moz_desktop</name></expr>, <expr><name>NS_STYLE_FONT_DESKTOP</name></expr>,
  <expr><name>eCSSKeyword__moz_info</name></expr>, <expr><name>NS_STYLE_FONT_INFO</name></expr>,
  <expr><name>eCSSKeyword__moz_dialog</name></expr>, <expr><name>NS_STYLE_FONT_DIALOG</name></expr>,
  <expr><name>eCSSKeyword__moz_button</name></expr>, <expr><name>NS_STYLE_FONT_BUTTON</name></expr>,
  <expr><name>eCSSKeyword__moz_pull_down_menu</name></expr>, <expr><name>NS_STYLE_FONT_PULL_DOWN_MENU</name></expr>,
  <expr><name>eCSSKeyword__moz_list</name></expr>, <expr><name>NS_STYLE_FONT_LIST</name></expr>,
  <expr><name>eCSSKeyword__moz_field</name></expr>, <expr><name>NS_STYLE_FONT_FIELD</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kFontSizeKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_xx_small</name></expr>, <expr><name>NS_STYLE_FONT_SIZE_XXSMALL</name></expr>,
  <expr><name>eCSSKeyword_x_small</name></expr>, <expr><name>NS_STYLE_FONT_SIZE_XSMALL</name></expr>,
  <expr><name>eCSSKeyword_small</name></expr>, <expr><name>NS_STYLE_FONT_SIZE_SMALL</name></expr>,
  <expr><name>eCSSKeyword_medium</name></expr>, <expr><name>NS_STYLE_FONT_SIZE_MEDIUM</name></expr>,
  <expr><name>eCSSKeyword_large</name></expr>, <expr><name>NS_STYLE_FONT_SIZE_LARGE</name></expr>,
  <expr><name>eCSSKeyword_x_large</name></expr>, <expr><name>NS_STYLE_FONT_SIZE_XLARGE</name></expr>,
  <expr><name>eCSSKeyword_xx_large</name></expr>, <expr><name>NS_STYLE_FONT_SIZE_XXLARGE</name></expr>,
  <expr><name>eCSSKeyword_larger</name></expr>, <expr><name>NS_STYLE_FONT_SIZE_LARGER</name></expr>,
  <expr><name>eCSSKeyword_smaller</name></expr>, <expr><name>NS_STYLE_FONT_SIZE_SMALLER</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kFontStretchKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_wider</name></expr>, <expr><name>NS_STYLE_FONT_STRETCH_WIDER</name></expr>,
  <expr><name>eCSSKeyword_narrower</name></expr>, <expr><name>NS_STYLE_FONT_STRETCH_NARROWER</name></expr>,
  <expr><name>eCSSKeyword_ultra_condensed</name></expr>, <expr><name>NS_STYLE_FONT_STRETCH_ULTRA_CONDENSED</name></expr>,
  <expr><name>eCSSKeyword_extra_condensed</name></expr>, <expr><name>NS_STYLE_FONT_STRETCH_EXTRA_CONDENSED</name></expr>,
  <expr><name>eCSSKeyword_condensed</name></expr>, <expr><name>NS_STYLE_FONT_STRETCH_CONDENSED</name></expr>,
  <expr><name>eCSSKeyword_semi_condensed</name></expr>, <expr><name>NS_STYLE_FONT_STRETCH_SEMI_CONDENSED</name></expr>,
  <expr><name>eCSSKeyword_semi_expanded</name></expr>, <expr><name>NS_STYLE_FONT_STRETCH_SEMI_EXPANDED</name></expr>,
  <expr><name>eCSSKeyword_expanded</name></expr>, <expr><name>NS_STYLE_FONT_STRETCH_EXPANDED</name></expr>,
  <expr><name>eCSSKeyword_extra_expanded</name></expr>, <expr><name>NS_STYLE_FONT_STRETCH_EXTRA_EXPANDED</name></expr>,
  <expr><name>eCSSKeyword_ultra_expanded</name></expr>, <expr><name>NS_STYLE_FONT_STRETCH_ULTRA_EXPANDED</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kFontStyleKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_italic</name></expr>, <expr><name>NS_STYLE_FONT_STYLE_ITALIC</name></expr>,
  <expr><name>eCSSKeyword_oblique</name></expr>, <expr><name>NS_STYLE_FONT_STYLE_OBLIQUE</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kFontVariantKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_small_caps</name></expr>, <expr><name>NS_STYLE_FONT_VARIANT_SMALL_CAPS</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kFontWeightKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_bold</name></expr>, <expr><name>NS_STYLE_FONT_WEIGHT_BOLD</name></expr>,
  <expr><name>eCSSKeyword_bolder</name></expr>, <expr><name>NS_STYLE_FONT_WEIGHT_BOLDER</name></expr>,
  <expr><name>eCSSKeyword_lighter</name></expr>, <expr><name>NS_STYLE_FONT_WEIGHT_LIGHTER</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kIMEModeKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_active</name></expr>, <expr><name>NS_STYLE_IME_MODE_ACTIVE</name></expr>,
  <expr><name>eCSSKeyword_disabled</name></expr>, <expr><name>NS_STYLE_IME_MODE_DISABLED</name></expr>,
  <expr><name>eCSSKeyword_inactive</name></expr>, <expr><name>NS_STYLE_IME_MODE_INACTIVE</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<comment type="line">// XXX What's the point?</comment>
<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kKeyEquivalentKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kListStylePositionKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_inside</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_POSITION_INSIDE</name></expr>,
  <expr><name>eCSSKeyword_outside</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_POSITION_OUTSIDE</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kListStyleKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_disc</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_DISC</name></expr>,
  <expr><name>eCSSKeyword_circle</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_CIRCLE</name></expr>,
  <expr><name>eCSSKeyword_square</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_SQUARE</name></expr>,
  <expr><name>eCSSKeyword_decimal</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_DECIMAL</name></expr>,
  <expr><name>eCSSKeyword_decimal_leading_zero</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_DECIMAL_LEADING_ZERO</name></expr>,
  <expr><name>eCSSKeyword_lower_roman</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_LOWER_ROMAN</name></expr>,
  <expr><name>eCSSKeyword_upper_roman</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_UPPER_ROMAN</name></expr>,
  <expr><name>eCSSKeyword_lower_greek</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_LOWER_GREEK</name></expr>,
  <expr><name>eCSSKeyword_lower_alpha</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_LOWER_ALPHA</name></expr>,
  <expr><name>eCSSKeyword_lower_latin</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_LOWER_LATIN</name></expr>,
  <expr><name>eCSSKeyword_upper_alpha</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_UPPER_ALPHA</name></expr>,
  <expr><name>eCSSKeyword_upper_latin</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_UPPER_LATIN</name></expr>,
  <expr><name>eCSSKeyword_hebrew</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_HEBREW</name></expr>,
  <expr><name>eCSSKeyword_armenian</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_ARMENIAN</name></expr>,
  <expr><name>eCSSKeyword_georgian</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_GEORGIAN</name></expr>,
  <expr><name>eCSSKeyword_cjk_ideographic</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_CJK_IDEOGRAPHIC</name></expr>,
  <expr><name>eCSSKeyword_hiragana</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_HIRAGANA</name></expr>,
  <expr><name>eCSSKeyword_katakana</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_KATAKANA</name></expr>,
  <expr><name>eCSSKeyword_hiragana_iroha</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_HIRAGANA_IROHA</name></expr>,
  <expr><name>eCSSKeyword_katakana_iroha</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_KATAKANA_IROHA</name></expr>,
  <expr><name>eCSSKeyword__moz_cjk_heavenly_stem</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_CJK_HEAVENLY_STEM</name></expr>,
  <expr><name>eCSSKeyword__moz_cjk_earthly_branch</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_CJK_EARTHLY_BRANCH</name></expr>,
  <expr><name>eCSSKeyword__moz_trad_chinese_informal</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_TRAD_CHINESE_INFORMAL</name></expr>,
  <expr><name>eCSSKeyword__moz_trad_chinese_formal</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_TRAD_CHINESE_FORMAL</name></expr>,
  <expr><name>eCSSKeyword__moz_simp_chinese_informal</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_SIMP_CHINESE_INFORMAL</name></expr>,
  <expr><name>eCSSKeyword__moz_simp_chinese_formal</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_SIMP_CHINESE_FORMAL</name></expr>,
  <expr><name>eCSSKeyword__moz_japanese_informal</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_JAPANESE_INFORMAL</name></expr>,
  <expr><name>eCSSKeyword__moz_japanese_formal</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_JAPANESE_FORMAL</name></expr>,
  <expr><name>eCSSKeyword__moz_arabic_indic</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_ARABIC_INDIC</name></expr>,
  <expr><name>eCSSKeyword__moz_persian</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_PERSIAN</name></expr>,
  <expr><name>eCSSKeyword__moz_urdu</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_URDU</name></expr>,
  <expr><name>eCSSKeyword__moz_devanagari</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_DEVANAGARI</name></expr>,
  <expr><name>eCSSKeyword__moz_gurmukhi</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_GURMUKHI</name></expr>,
  <expr><name>eCSSKeyword__moz_gujarati</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_GUJARATI</name></expr>,
  <expr><name>eCSSKeyword__moz_oriya</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_ORIYA</name></expr>,
  <expr><name>eCSSKeyword__moz_kannada</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_KANNADA</name></expr>,
  <expr><name>eCSSKeyword__moz_malayalam</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_MALAYALAM</name></expr>,
  <expr><name>eCSSKeyword__moz_bengali</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_BENGALI</name></expr>,
  <expr><name>eCSSKeyword__moz_tamil</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_TAMIL</name></expr>,
  <expr><name>eCSSKeyword__moz_telugu</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_TELUGU</name></expr>,
  <expr><name>eCSSKeyword__moz_thai</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_THAI</name></expr>,
  <expr><name>eCSSKeyword__moz_lao</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_LAO</name></expr>,
  <expr><name>eCSSKeyword__moz_myanmar</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_MYANMAR</name></expr>,
  <expr><name>eCSSKeyword__moz_khmer</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_KHMER</name></expr>,
  <expr><name>eCSSKeyword__moz_hangul</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_HANGUL</name></expr>,
  <expr><name>eCSSKeyword__moz_hangul_consonant</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_HANGUL_CONSONANT</name></expr>,
  <expr><name>eCSSKeyword__moz_ethiopic_halehame</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_ETHIOPIC_HALEHAME</name></expr>,
  <expr><name>eCSSKeyword__moz_ethiopic_numeric</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_ETHIOPIC_NUMERIC</name></expr>,
  <expr><name>eCSSKeyword__moz_ethiopic_halehame_am</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_ETHIOPIC_HALEHAME_AM</name></expr>,
  <expr><name>eCSSKeyword__moz_ethiopic_halehame_ti_er</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_ETHIOPIC_HALEHAME_TI_ER</name></expr>,
  <expr><name>eCSSKeyword__moz_ethiopic_halehame_ti_et</name></expr>, <expr><name>NS_STYLE_LIST_STYLE_MOZ_ETHIOPIC_HALEHAME_TI_ET</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<comment type="line">// Same as kBorderStyleKTable except 'hidden'.</comment>
<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kOutlineStyleKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_dotted</name></expr>, <expr><name>NS_STYLE_BORDER_STYLE_DOTTED</name></expr>,
  <expr><name>eCSSKeyword_dashed</name></expr>, <expr><name>NS_STYLE_BORDER_STYLE_DASHED</name></expr>,
  <expr><name>eCSSKeyword_solid</name></expr>,  <expr><name>NS_STYLE_BORDER_STYLE_SOLID</name></expr>,
  <expr><name>eCSSKeyword_double</name></expr>, <expr><name>NS_STYLE_BORDER_STYLE_DOUBLE</name></expr>,
  <expr><name>eCSSKeyword_groove</name></expr>, <expr><name>NS_STYLE_BORDER_STYLE_GROOVE</name></expr>,
  <expr><name>eCSSKeyword_ridge</name></expr>,  <expr><name>NS_STYLE_BORDER_STYLE_RIDGE</name></expr>,
  <expr><name>eCSSKeyword_inset</name></expr>,  <expr><name>NS_STYLE_BORDER_STYLE_INSET</name></expr>,
  <expr><name>eCSSKeyword_outset</name></expr>, <expr><name>NS_STYLE_BORDER_STYLE_OUTSET</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kOutlineColorKTable</name><index>[]</index></name> <init>= <expr><block>{
<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>GFX_HAS_INVERT</name></cpp:ifdef>
  <expr><name>eCSSKeyword_invert</name></expr>, <expr><name>NS_STYLE_COLOR_INVERT</name></expr>,
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
  <expr><name>eCSSKeyword__moz_use_text_color</name></expr>, <expr><name>NS_STYLE_COLOR_MOZ_USE_TEXT_COLOR</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kOverflowKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_visible</name></expr>, <expr><name>NS_STYLE_OVERFLOW_VISIBLE</name></expr>,
  <expr><name>eCSSKeyword_hidden</name></expr>, <expr><name>NS_STYLE_OVERFLOW_HIDDEN</name></expr>,
  <expr><name>eCSSKeyword_scroll</name></expr>, <expr><name>NS_STYLE_OVERFLOW_SCROLL</name></expr>,
  <comment type="line">// Deprecated:</comment>
  <expr><name>eCSSKeyword__moz_scrollbars_none</name></expr>, <expr><name>NS_STYLE_OVERFLOW_HIDDEN</name></expr>,
  <expr><name>eCSSKeyword__moz_scrollbars_horizontal</name></expr>, <expr><name>NS_STYLE_OVERFLOW_SCROLLBARS_HORIZONTAL</name></expr>,
  <expr><name>eCSSKeyword__moz_scrollbars_vertical</name></expr>, <expr><name>NS_STYLE_OVERFLOW_SCROLLBARS_VERTICAL</name></expr>,
  <expr><name>eCSSKeyword__moz_hidden_unscrollable</name></expr>, <expr><name>NS_STYLE_OVERFLOW_CLIP</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kOverflowSubKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_visible</name></expr>, <expr><name>NS_STYLE_OVERFLOW_VISIBLE</name></expr>,
  <expr><name>eCSSKeyword_hidden</name></expr>, <expr><name>NS_STYLE_OVERFLOW_HIDDEN</name></expr>,
  <expr><name>eCSSKeyword_scroll</name></expr>, <expr><name>NS_STYLE_OVERFLOW_SCROLL</name></expr>,
  <comment type="line">// Deprecated:</comment>
  <expr><name>eCSSKeyword__moz_hidden_unscrollable</name></expr>, <expr><name>NS_STYLE_OVERFLOW_CLIP</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kPageBreakKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_always</name></expr>, <expr><name>NS_STYLE_PAGE_BREAK_ALWAYS</name></expr>,
  <expr><name>eCSSKeyword_avoid</name></expr>, <expr><name>NS_STYLE_PAGE_BREAK_AVOID</name></expr>,
  <expr><name>eCSSKeyword_left</name></expr>, <expr><name>NS_STYLE_PAGE_BREAK_LEFT</name></expr>,
  <expr><name>eCSSKeyword_right</name></expr>, <expr><name>NS_STYLE_PAGE_BREAK_RIGHT</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kPageBreakInsideKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_avoid</name></expr>, <expr><name>NS_STYLE_PAGE_BREAK_AVOID</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kPageMarksKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_crop</name></expr>, <expr><name>NS_STYLE_PAGE_MARKS_CROP</name></expr>,
  <expr><name>eCSSKeyword_cross</name></expr>, <expr><name>NS_STYLE_PAGE_MARKS_REGISTER</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kPageSizeKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_landscape</name></expr>, <expr><name>NS_STYLE_PAGE_SIZE_LANDSCAPE</name></expr>,
  <expr><name>eCSSKeyword_portrait</name></expr>, <expr><name>NS_STYLE_PAGE_SIZE_PORTRAIT</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kPitchKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_x_low</name></expr>, <expr><name>NS_STYLE_PITCH_X_LOW</name></expr>,
  <expr><name>eCSSKeyword_low</name></expr>, <expr><name>NS_STYLE_PITCH_LOW</name></expr>,
  <expr><name>eCSSKeyword_medium</name></expr>, <expr><name>NS_STYLE_PITCH_MEDIUM</name></expr>,
  <expr><name>eCSSKeyword_high</name></expr>, <expr><name>NS_STYLE_PITCH_HIGH</name></expr>,
  <expr><name>eCSSKeyword_x_high</name></expr>, <expr><name>NS_STYLE_PITCH_X_HIGH</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kPositionKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_static</name></expr>, <expr><name>NS_STYLE_POSITION_STATIC</name></expr>,
  <expr><name>eCSSKeyword_relative</name></expr>, <expr><name>NS_STYLE_POSITION_RELATIVE</name></expr>,
  <expr><name>eCSSKeyword_absolute</name></expr>, <expr><name>NS_STYLE_POSITION_ABSOLUTE</name></expr>,
  <expr><name>eCSSKeyword_fixed</name></expr>, <expr><name>NS_STYLE_POSITION_FIXED</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kSpeakKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_spell_out</name></expr>, <expr><name>NS_STYLE_SPEAK_SPELL_OUT</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kSpeakHeaderKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_once</name></expr>, <expr><name>NS_STYLE_SPEAK_HEADER_ONCE</name></expr>,
  <expr><name>eCSSKeyword_always</name></expr>, <expr><name>NS_STYLE_SPEAK_HEADER_ALWAYS</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kSpeakNumeralKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_digits</name></expr>, <expr><name>NS_STYLE_SPEAK_NUMERAL_DIGITS</name></expr>,
  <expr><name>eCSSKeyword_continuous</name></expr>, <expr><name>NS_STYLE_SPEAK_NUMERAL_CONTINUOUS</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kSpeakPunctuationKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_code</name></expr>, <expr><name>NS_STYLE_SPEAK_PUNCTUATION_CODE</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kSpeechRateKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_x_slow</name></expr>, <expr><name>NS_STYLE_SPEECH_RATE_X_SLOW</name></expr>,
  <expr><name>eCSSKeyword_slow</name></expr>, <expr><name>NS_STYLE_SPEECH_RATE_SLOW</name></expr>,
  <expr><name>eCSSKeyword_medium</name></expr>, <expr><name>NS_STYLE_SPEECH_RATE_MEDIUM</name></expr>,
  <expr><name>eCSSKeyword_fast</name></expr>, <expr><name>NS_STYLE_SPEECH_RATE_FAST</name></expr>,
  <expr><name>eCSSKeyword_x_fast</name></expr>, <expr><name>NS_STYLE_SPEECH_RATE_X_FAST</name></expr>,
  <expr><name>eCSSKeyword_faster</name></expr>, <expr><name>NS_STYLE_SPEECH_RATE_FASTER</name></expr>,
  <expr><name>eCSSKeyword_slower</name></expr>, <expr><name>NS_STYLE_SPEECH_RATE_SLOWER</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kStackSizingKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_ignore</name></expr>, <expr><name>NS_STYLE_STACK_SIZING_IGNORE</name></expr>,
  <expr><name>eCSSKeyword_stretch_to_fit</name></expr>, <expr><name>NS_STYLE_STACK_SIZING_STRETCH_TO_FIT</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kTableLayoutKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_fixed</name></expr>, <expr><name>NS_STYLE_TABLE_LAYOUT_FIXED</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kTextAlignKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_left</name></expr>, <expr><name>NS_STYLE_TEXT_ALIGN_LEFT</name></expr>,
  <expr><name>eCSSKeyword_right</name></expr>, <expr><name>NS_STYLE_TEXT_ALIGN_RIGHT</name></expr>,
  <expr><name>eCSSKeyword_center</name></expr>, <expr><name>NS_STYLE_TEXT_ALIGN_CENTER</name></expr>,
  <expr><name>eCSSKeyword_justify</name></expr>, <expr><name>NS_STYLE_TEXT_ALIGN_JUSTIFY</name></expr>,
  <expr><name>eCSSKeyword__moz_center</name></expr>, <expr><name>NS_STYLE_TEXT_ALIGN_MOZ_CENTER</name></expr>,
  <expr><name>eCSSKeyword__moz_right</name></expr>, <expr><name>NS_STYLE_TEXT_ALIGN_MOZ_RIGHT</name></expr>,
  <expr><name>eCSSKeyword__moz_left</name></expr>, <expr><name>NS_STYLE_TEXT_ALIGN_MOZ_LEFT</name></expr>,
  <expr><name>eCSSKeyword_start</name></expr>, <expr><name>NS_STYLE_TEXT_ALIGN_DEFAULT</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kTextDecorationKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_underline</name></expr>, <expr><name>NS_STYLE_TEXT_DECORATION_UNDERLINE</name></expr>,
  <expr><name>eCSSKeyword_overline</name></expr>, <expr><name>NS_STYLE_TEXT_DECORATION_OVERLINE</name></expr>,
  <expr><name>eCSSKeyword_line_through</name></expr>, <expr><name>NS_STYLE_TEXT_DECORATION_LINE_THROUGH</name></expr>,
  <expr><name>eCSSKeyword_blink</name></expr>, <expr><name>NS_STYLE_TEXT_DECORATION_BLINK</name></expr>,
  <expr><name>eCSSKeyword__moz_anchor_decoration</name></expr>, <expr><name>NS_STYLE_TEXT_DECORATION_PREF_ANCHORS</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kTextTransformKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_capitalize</name></expr>, <expr><name>NS_STYLE_TEXT_TRANSFORM_CAPITALIZE</name></expr>,
  <expr><name>eCSSKeyword_lowercase</name></expr>, <expr><name>NS_STYLE_TEXT_TRANSFORM_LOWERCASE</name></expr>,
  <expr><name>eCSSKeyword_uppercase</name></expr>, <expr><name>NS_STYLE_TEXT_TRANSFORM_UPPERCASE</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kUnicodeBidiKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_embed</name></expr>, <expr><name>NS_STYLE_UNICODE_BIDI_EMBED</name></expr>,
  <expr><name>eCSSKeyword_bidi_override</name></expr>, <expr><name>NS_STYLE_UNICODE_BIDI_OVERRIDE</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kUserFocusKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_ignore</name></expr>,         <expr><name>NS_STYLE_USER_FOCUS_IGNORE</name></expr>,
  <expr><name>eCSSKeyword_select_all</name></expr>,     <expr><name>NS_STYLE_USER_FOCUS_SELECT_ALL</name></expr>,
  <expr><name>eCSSKeyword_select_before</name></expr>,  <expr><name>NS_STYLE_USER_FOCUS_SELECT_BEFORE</name></expr>,
  <expr><name>eCSSKeyword_select_after</name></expr>,   <expr><name>NS_STYLE_USER_FOCUS_SELECT_AFTER</name></expr>,
  <expr><name>eCSSKeyword_select_same</name></expr>,    <expr><name>NS_STYLE_USER_FOCUS_SELECT_SAME</name></expr>,
  <expr><name>eCSSKeyword_select_menu</name></expr>,    <expr><name>NS_STYLE_USER_FOCUS_SELECT_MENU</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kUserInputKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_enabled</name></expr>,  <expr><name>NS_STYLE_USER_INPUT_ENABLED</name></expr>,
  <expr><name>eCSSKeyword_disabled</name></expr>, <expr><name>NS_STYLE_USER_INPUT_DISABLED</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kUserModifyKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_read_only</name></expr>,  <expr><name>NS_STYLE_USER_MODIFY_READ_ONLY</name></expr>,
  <expr><name>eCSSKeyword_read_write</name></expr>, <expr><name>NS_STYLE_USER_MODIFY_READ_WRITE</name></expr>,
  <expr><name>eCSSKeyword_write_only</name></expr>, <expr><name>NS_STYLE_USER_MODIFY_WRITE_ONLY</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kUserSelectKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_text</name></expr>,       <expr><name>NS_STYLE_USER_SELECT_TEXT</name></expr>,
  <expr><name>eCSSKeyword_element</name></expr>,    <expr><name>NS_STYLE_USER_SELECT_ELEMENT</name></expr>,
  <expr><name>eCSSKeyword_elements</name></expr>,   <expr><name>NS_STYLE_USER_SELECT_ELEMENTS</name></expr>,
  <expr><name>eCSSKeyword_all</name></expr>,        <expr><name>NS_STYLE_USER_SELECT_ALL</name></expr>,
  <expr><name>eCSSKeyword_toggle</name></expr>,     <expr><name>NS_STYLE_USER_SELECT_TOGGLE</name></expr>,
  <expr><name>eCSSKeyword_tri_state</name></expr>,  <expr><name>NS_STYLE_USER_SELECT_TRI_STATE</name></expr>,
  <expr><name>eCSSKeyword__moz_all</name></expr>,   <expr><name>NS_STYLE_USER_SELECT_MOZ_ALL</name></expr>,
  <expr><name>eCSSKeyword__moz_none</name></expr>,  <expr><name>NS_STYLE_USER_SELECT_MOZ_NONE</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kVerticalAlignKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_baseline</name></expr>, <expr><name>NS_STYLE_VERTICAL_ALIGN_BASELINE</name></expr>,
  <expr><name>eCSSKeyword_sub</name></expr>, <expr><name>NS_STYLE_VERTICAL_ALIGN_SUB</name></expr>,
  <expr><name>eCSSKeyword_super</name></expr>, <expr><name>NS_STYLE_VERTICAL_ALIGN_SUPER</name></expr>,
  <expr><name>eCSSKeyword_top</name></expr>, <expr><name>NS_STYLE_VERTICAL_ALIGN_TOP</name></expr>,
  <expr><name>eCSSKeyword_text_top</name></expr>, <expr><name>NS_STYLE_VERTICAL_ALIGN_TEXT_TOP</name></expr>,
  <expr><name>eCSSKeyword_middle</name></expr>, <expr><name>NS_STYLE_VERTICAL_ALIGN_MIDDLE</name></expr>,
  <expr><name>eCSSKeyword__moz_middle_with_baseline</name></expr>, <expr><name>NS_STYLE_VERTICAL_ALIGN_MIDDLE_WITH_BASELINE</name></expr>,
  <expr><name>eCSSKeyword_bottom</name></expr>, <expr><name>NS_STYLE_VERTICAL_ALIGN_BOTTOM</name></expr>,
  <expr><name>eCSSKeyword_text_bottom</name></expr>, <expr><name>NS_STYLE_VERTICAL_ALIGN_TEXT_BOTTOM</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kVisibilityKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_visible</name></expr>, <expr><name>NS_STYLE_VISIBILITY_VISIBLE</name></expr>,
  <expr><name>eCSSKeyword_hidden</name></expr>, <expr><name>NS_STYLE_VISIBILITY_HIDDEN</name></expr>,
  <expr><name>eCSSKeyword_collapse</name></expr>, <expr><name>NS_STYLE_VISIBILITY_COLLAPSE</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kVolumeKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_silent</name></expr>, <expr><name>NS_STYLE_VOLUME_SILENT</name></expr>,
  <expr><name>eCSSKeyword_x_soft</name></expr>, <expr><name>NS_STYLE_VOLUME_X_SOFT</name></expr>,
  <expr><name>eCSSKeyword_soft</name></expr>, <expr><name>NS_STYLE_VOLUME_SOFT</name></expr>,
  <expr><name>eCSSKeyword_medium</name></expr>, <expr><name>NS_STYLE_VOLUME_MEDIUM</name></expr>,
  <expr><name>eCSSKeyword_loud</name></expr>, <expr><name>NS_STYLE_VOLUME_LOUD</name></expr>,
  <expr><name>eCSSKeyword_x_loud</name></expr>, <expr><name>NS_STYLE_VOLUME_X_LOUD</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kWhitespaceKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_pre</name></expr>, <expr><name>NS_STYLE_WHITESPACE_PRE</name></expr>,
  <expr><name>eCSSKeyword_nowrap</name></expr>, <expr><name>NS_STYLE_WHITESPACE_NOWRAP</name></expr>,
  <expr><name>eCSSKeyword_pre_wrap</name></expr>, <expr><name>NS_STYLE_WHITESPACE_PRE_WRAP</name></expr>,
  <expr><name>eCSSKeyword_pre_line</name></expr>, <expr><name>NS_STYLE_WHITESPACE_PRE_LINE</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kWidthKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword__moz_max_content</name></expr>, <expr><name>NS_STYLE_WIDTH_MAX_CONTENT</name></expr>,
  <expr><name>eCSSKeyword__moz_min_content</name></expr>, <expr><name>NS_STYLE_WIDTH_MIN_CONTENT</name></expr>,
  <expr><name>eCSSKeyword__moz_fit_content</name></expr>, <expr><name>NS_STYLE_WIDTH_FIT_CONTENT</name></expr>,
  <expr><name>eCSSKeyword__moz_available</name></expr>, <expr><name>NS_STYLE_WIDTH_AVAILABLE</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kWindowShadowKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_default</name></expr>, <expr><name>NS_STYLE_WINDOW_SHADOW_DEFAULT</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kWordwrapKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_normal</name></expr>, <expr><name>NS_STYLE_WORDWRAP_NORMAL</name></expr>,
  <expr><name>eCSSKeyword_break_word</name></expr>, <expr><name>NS_STYLE_WORDWRAP_BREAK_WORD</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<comment type="line">// Specific keyword tables for XUL.properties</comment>
<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kBoxAlignKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_stretch</name></expr>,  <expr><name>NS_STYLE_BOX_ALIGN_STRETCH</name></expr>,
  <expr><name>eCSSKeyword_start</name></expr>,   <expr><name>NS_STYLE_BOX_ALIGN_START</name></expr>,
  <expr><name>eCSSKeyword_center</name></expr>, <expr><name>NS_STYLE_BOX_ALIGN_CENTER</name></expr>,
  <expr><name>eCSSKeyword_baseline</name></expr>, <expr><name>NS_STYLE_BOX_ALIGN_BASELINE</name></expr>, 
  <expr><name>eCSSKeyword_end</name></expr>, <expr><name>NS_STYLE_BOX_ALIGN_END</name></expr>, 
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kBoxDirectionKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_normal</name></expr>,  <expr><name>NS_STYLE_BOX_DIRECTION_NORMAL</name></expr>,
  <expr><name>eCSSKeyword_reverse</name></expr>,   <expr><name>NS_STYLE_BOX_DIRECTION_REVERSE</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kBoxOrientKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_horizontal</name></expr>,  <expr><name>NS_STYLE_BOX_ORIENT_HORIZONTAL</name></expr>,
  <expr><name>eCSSKeyword_vertical</name></expr>,   <expr><name>NS_STYLE_BOX_ORIENT_VERTICAL</name></expr>,
  <expr><name>eCSSKeyword_inline_axis</name></expr>, <expr><name>NS_STYLE_BOX_ORIENT_HORIZONTAL</name></expr>,
  <expr><name>eCSSKeyword_block_axis</name></expr>, <expr><name>NS_STYLE_BOX_ORIENT_VERTICAL</name></expr>, 
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kBoxPackKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_start</name></expr>,  <expr><name>NS_STYLE_BOX_PACK_START</name></expr>,
  <expr><name>eCSSKeyword_center</name></expr>,   <expr><name>NS_STYLE_BOX_PACK_CENTER</name></expr>,
  <expr><name>eCSSKeyword_end</name></expr>, <expr><name>NS_STYLE_BOX_PACK_END</name></expr>,
  <expr><name>eCSSKeyword_justify</name></expr>, <expr><name>NS_STYLE_BOX_PACK_JUSTIFY</name></expr>, 
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>,<expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>MOZ_SVG</name></cpp:ifdef>
<comment type="line">// keyword tables for SVG properties</comment>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kDominantBaselineKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_use_script</name></expr>, <expr><name>NS_STYLE_DOMINANT_BASELINE_USE_SCRIPT</name></expr>,
  <expr><name>eCSSKeyword_no_change</name></expr>, <expr><name>NS_STYLE_DOMINANT_BASELINE_NO_CHANGE</name></expr>,
  <expr><name>eCSSKeyword_reset_size</name></expr>, <expr><name>NS_STYLE_DOMINANT_BASELINE_RESET_SIZE</name></expr>,
  <expr><name>eCSSKeyword_alphabetic</name></expr>, <expr><name>NS_STYLE_DOMINANT_BASELINE_ALPHABETIC</name></expr>,
  <expr><name>eCSSKeyword_hanging</name></expr>, <expr><name>NS_STYLE_DOMINANT_BASELINE_HANGING</name></expr>,
  <expr><name>eCSSKeyword_ideographic</name></expr>, <expr><name>NS_STYLE_DOMINANT_BASELINE_IDEOGRAPHIC</name></expr>,
  <expr><name>eCSSKeyword_mathematical</name></expr>, <expr><name>NS_STYLE_DOMINANT_BASELINE_MATHEMATICAL</name></expr>,
  <expr><name>eCSSKeyword_central</name></expr>, <expr><name>NS_STYLE_DOMINANT_BASELINE_CENTRAL</name></expr>,
  <expr><name>eCSSKeyword_middle</name></expr>, <expr><name>NS_STYLE_DOMINANT_BASELINE_MIDDLE</name></expr>,
  <expr><name>eCSSKeyword_text_after_edge</name></expr>, <expr><name>NS_STYLE_DOMINANT_BASELINE_TEXT_AFTER_EDGE</name></expr>,
  <expr><name>eCSSKeyword_text_before_edge</name></expr>, <expr><name>NS_STYLE_DOMINANT_BASELINE_TEXT_BEFORE_EDGE</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>, <expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kFillRuleKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_nonzero</name></expr>, <expr><name>NS_STYLE_FILL_RULE_NONZERO</name></expr>,
  <expr><name>eCSSKeyword_evenodd</name></expr>, <expr><name>NS_STYLE_FILL_RULE_EVENODD</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>, <expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kPointerEventsKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_visiblepainted</name></expr>, <expr><name>NS_STYLE_POINTER_EVENTS_VISIBLEPAINTED</name></expr>,
  <expr><name>eCSSKeyword_visiblefill</name></expr>, <expr><name>NS_STYLE_POINTER_EVENTS_VISIBLEFILL</name></expr>,
  <expr><name>eCSSKeyword_visiblestroke</name></expr>, <expr><name>NS_STYLE_POINTER_EVENTS_VISIBLESTROKE</name></expr>,
  <expr><name>eCSSKeyword_visible</name></expr>, <expr><name>NS_STYLE_POINTER_EVENTS_VISIBLE</name></expr>,
  <expr><name>eCSSKeyword_painted</name></expr>, <expr><name>NS_STYLE_POINTER_EVENTS_PAINTED</name></expr>,
  <expr><name>eCSSKeyword_fill</name></expr>, <expr><name>NS_STYLE_POINTER_EVENTS_FILL</name></expr>,
  <expr><name>eCSSKeyword_stroke</name></expr>, <expr><name>NS_STYLE_POINTER_EVENTS_STROKE</name></expr>,
  <expr><name>eCSSKeyword_all</name></expr>, <expr><name>NS_STYLE_POINTER_EVENTS_ALL</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>, <expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kShapeRenderingKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_optimizespeed</name></expr>, <expr><name>NS_STYLE_SHAPE_RENDERING_OPTIMIZESPEED</name></expr>,
  <expr><name>eCSSKeyword_crispedges</name></expr>, <expr><name>NS_STYLE_SHAPE_RENDERING_CRISPEDGES</name></expr>,
  <expr><name>eCSSKeyword_geometricprecision</name></expr>, <expr><name>NS_STYLE_SHAPE_RENDERING_GEOMETRICPRECISION</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>, <expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kStrokeLinecapKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_butt</name></expr>, <expr><name>NS_STYLE_STROKE_LINECAP_BUTT</name></expr>,
  <expr><name>eCSSKeyword_round</name></expr>, <expr><name>NS_STYLE_STROKE_LINECAP_ROUND</name></expr>,
  <expr><name>eCSSKeyword_square</name></expr>, <expr><name>NS_STYLE_STROKE_LINECAP_SQUARE</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>, <expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kStrokeLinejoinKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_miter</name></expr>, <expr><name>NS_STYLE_STROKE_LINEJOIN_MITER</name></expr>,
  <expr><name>eCSSKeyword_round</name></expr>, <expr><name>NS_STYLE_STROKE_LINEJOIN_ROUND</name></expr>,
  <expr><name>eCSSKeyword_bevel</name></expr>, <expr><name>NS_STYLE_STROKE_LINEJOIN_BEVEL</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>, <expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kTextAnchorKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_start</name></expr>, <expr><name>NS_STYLE_TEXT_ANCHOR_START</name></expr>,
  <expr><name>eCSSKeyword_middle</name></expr>, <expr><name>NS_STYLE_TEXT_ANCHOR_MIDDLE</name></expr>,
  <expr><name>eCSSKeyword_end</name></expr>, <expr><name>NS_STYLE_TEXT_ANCHOR_END</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>, <expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kTextRenderingKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_optimizespeed</name></expr>, <expr><name>NS_STYLE_TEXT_RENDERING_OPTIMIZESPEED</name></expr>,
  <expr><name>eCSSKeyword_optimizelegibility</name></expr>, <expr><name>NS_STYLE_TEXT_RENDERING_OPTIMIZELEGIBILITY</name></expr>,
  <expr><name>eCSSKeyword_geometricprecision</name></expr>, <expr><name>NS_STYLE_TEXT_RENDERING_GEOMETRICPRECISION</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>, <expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>nsCSSProps</name>::<name>kColorInterpolationKTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSKeyword_srgb</name></expr>, <expr><name>NS_STYLE_COLOR_INTERPOLATION_SRGB</name></expr>,
  <expr><name>eCSSKeyword_linearrgb</name></expr>, <expr><name>NS_STYLE_COLOR_INTERPOLATION_LINEARRGB</name></expr>,
  <expr><name>eCSSKeyword_UNKNOWN</name></expr>, <expr>-1</expr>
}</block></expr></init></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><name>PRBool</name></type>
<name><name>nsCSSProps</name>::<name>FindKeyword</name></name><parameter_list>(<param><decl><type><name>nsCSSKeyword</name></type> <name>aKeyword</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>aTable</name><index>[]</index></name></decl></param>, <param><decl><type><name>PRInt32</name>&amp;</type> <name>aResult</name></decl></param>)</parameter_list>
<block>{
  <decl_stmt><decl><type><name>PRInt32</name></type> <name>index</name> <init>= <expr>0</expr></init></decl>;</decl_stmt>
  <while>while <condition>(<expr><name>eCSSKeyword_UNKNOWN</name> != <call><name>nsCSSKeyword</name><argument_list>(<argument><expr><name><name>aTable</name><index>[<expr><name>index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{
    <if>if <condition>(<expr><name>aKeyword</name> == <call><name>nsCSSKeyword</name><argument_list>(<argument><expr><name><name>aTable</name><index>[<expr><name>index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
      <expr_stmt><expr><name>aResult</name> = <name><name>aTable</name><index>[<expr><name>index</name>+1</expr>]</index></name></expr>;</expr_stmt>
      <return>return <expr><name>PR_TRUE</name></expr>;</return>
    }</block></then></if>
    <expr_stmt><expr><name>index</name> += 2</expr>;</expr_stmt>
  }</block></while>
  <return>return <expr><name>PR_FALSE</name></expr>;</return>
}</block></function>

<function><type><name>nsCSSKeyword</name></type>
<name><name>nsCSSProps</name>::<name>ValueToKeywordEnum</name></name><parameter_list>(<param><decl><type><name>PRInt32</name></type> <name>aValue</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>aTable</name><index>[]</index></name></decl></param>)</parameter_list>
<block>{
  <decl_stmt><decl><type><name>PRInt32</name></type> <name>i</name> <init>= <expr>1</expr></init></decl>;</decl_stmt>
  <for>for (<init>;</init><condition>;</condition><incr/>) <block>{
    <if>if <condition>(<expr><name><name>aTable</name><index>[<expr><name>i</name></expr>]</index></name> == -1 &amp;&amp; <name><name>aTable</name><index>[<expr><name>i</name>-1</expr>]</index></name> == <name>eCSSKeyword_UNKNOWN</name></expr>)</condition><then> <block>{
      <break>break;</break>
    }</block></then></if>
    <if>if <condition>(<expr><name>aValue</name> == <name><name>aTable</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition><then> <block>{
      <return>return <expr><call><name>nsCSSKeyword</name><argument_list>(<argument><expr><name><name>aTable</name><index>[<expr><name>i</name>-1</expr>]</index></name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></then></if>
    <expr_stmt><expr><name>i</name> += 2</expr>;</expr_stmt>
  }</block></for>
  <return>return <expr><name>eCSSKeyword_UNKNOWN</name></expr>;</return>
}</block></function>

<function><type><specifier>const</specifier> <name>nsAFlatCString</name>&amp;</type>
<name><name>nsCSSProps</name>::<name>ValueToKeyword</name></name><parameter_list>(<param><decl><type><name>PRInt32</name></type> <name>aValue</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>PRInt32</name></type> <name><name>aTable</name><index>[]</index></name></decl></param>)</parameter_list>
<block>{
  <decl_stmt><decl><type><name>nsCSSKeyword</name></type> <name>keyword</name> <init>= <expr><call><name>ValueToKeywordEnum</name><argument_list>(<argument><expr><name>aValue</name></expr></argument>, <argument><expr><name>aTable</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <if>if <condition>(<expr><name>keyword</name> == <name>eCSSKeyword_UNKNOWN</name></expr>)</condition><then> <block>{
    <decl_stmt><decl><type><specifier>static</specifier> <name>nsDependentCString</name></type> <name>sNullStr</name><argument_list>(<argument><expr>""</expr></argument>)</argument_list></decl>;</decl_stmt>
    <return>return <expr><name>sNullStr</name></expr>;</return>
  }</block></then> <else>else <block>{
    <return>return <expr><call><name><name>nsCSSKeywords</name>::<name>GetStringValue</name></name><argument_list>(<argument><expr><name>keyword</name></expr></argument>)</argument_list></call></expr>;</return>
  }</block></else></if>
}</block></function>

<comment type="block">/* static */</comment> <decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name>* <specifier>const</specifier></type>
<name><name>nsCSSProps</name>::<name>kKeywordTableTable</name><index>[<expr><name>eCSSProperty_COUNT_no_shorthands</name></expr>]</index></name> <init>= <expr><block>{
  <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>kwtable_,</cpp:value></cpp:define>
  <cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsCSSPropList.h"</cpp:file></cpp:include>
  <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP</name></cpp:undef>
}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>const</specifier> <name>nsAFlatCString</name>&amp;</type> 
<name><name>nsCSSProps</name>::<name>LookupPropertyValue</name></name><parameter_list>(<param><decl><type><name>nsCSSProperty</name></type> <name>aProp</name></decl></param>, <param><decl><type><name>PRInt32</name></type> <name>aValue</name></decl></param>)</parameter_list>
<block>{
  <expr_stmt><expr><call><name>NS_ASSERTION</name><argument_list>(<argument><expr><name>aProp</name> &gt;= 0 &amp;&amp; <name>aProp</name> &lt; <name>eCSSProperty_COUNT</name></expr></argument>, <argument><expr>"property out of range"</expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <decl_stmt><decl><type><specifier>const</specifier> <name>PRInt32</name>*</type> <name>kwtable</name> <init>= <expr><name>nsnull</name></expr></init></decl>;</decl_stmt>
  <if>if <condition>(<expr><name>aProp</name> &lt; <name>eCSSProperty_COUNT_no_shorthands</name></expr>)</condition><then>
    <expr_stmt><expr><name>kwtable</name> = <name><name>kKeywordTableTable</name><index>[<expr><name>aProp</name></expr>]</index></name></expr>;</expr_stmt></then></if>

  <if>if <condition>(<expr><name>kwtable</name></expr>)</condition><then>
    <return>return <expr><call><name>ValueToKeyword</name><argument_list>(<argument><expr><name>aValue</name></expr></argument>, <argument><expr><name>kwtable</name></expr></argument>)</argument_list></call></expr>;</return></then></if>

  <decl_stmt><decl><type><specifier>static</specifier> <name>nsDependentCString</name></type> <name>sNullStr</name><argument_list>(<argument><expr>""</expr></argument>)</argument_list></decl>;</decl_stmt>
  <return>return <expr><name>sNullStr</name></expr>;</return>
}</block></function>

<function><type><name>PRBool</name></type> <name><name>nsCSSProps</name>::<name>GetColorName</name></name><parameter_list>(<param><decl><type><name>PRInt32</name></type> <name>aPropValue</name></decl></param>, <param><decl><type><name>nsCString</name> &amp;</type><name>aStr</name></decl></param>)</parameter_list>
<block>{
  <decl_stmt><decl><type><name>PRBool</name></type> <name>rv</name> <init>= <expr><name>PR_FALSE</name></expr></init></decl>;</decl_stmt>

  <comment type="line">// first get the keyword corresponding to the property Value from the color table</comment>
  <decl_stmt><decl><type><name>nsCSSKeyword</name></type> <name>keyword</name> <init>= <expr><call><name>ValueToKeywordEnum</name><argument_list>(<argument><expr><name>aPropValue</name></expr></argument>, <argument><expr><name>kColorKTable</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

  <comment type="line">// next get the name as a string from the keywords table</comment>
  <if>if <condition>(<expr><name>keyword</name> != <name>eCSSKeyword_UNKNOWN</name></expr>)</condition><then> <block>{
    <expr_stmt><expr><call><name><name>nsCSSKeywords</name>::<name>AddRefTable</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>aStr</name> = <call><name><name>nsCSSKeywords</name>::<name>GetStringValue</name></name><argument_list>(<argument><expr><name>keyword</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>nsCSSKeywords</name>::<name>ReleaseTable</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>rv</name> = <name>PR_TRUE</name></expr>;</expr_stmt>
  }</block></then></if>
  <return>return <expr><name>rv</name></expr>;</return>
}</block></function>

<comment type="line">// define array of all CSS property types</comment>
<decl_stmt><decl><type><specifier>const</specifier> <name>nsCSSType</name></type> <name><name>nsCSSProps</name>::<name>kTypeTable</name><index>[<expr><name>eCSSProperty_COUNT_no_shorthands</name></expr>]</index></name> <init>= <expr><block>{
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>type_,</cpp:value></cpp:define>
    <cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsCSSPropList.h"</cpp:file></cpp:include>
    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP</name></cpp:undef>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>nsStyleStructID</name></type> <name><name>nsCSSProps</name>::<name>kSIDTable</name><index>[<expr><name>eCSSProperty_COUNT_no_shorthands</name></expr>]</index></name> <init>= <expr><block>{
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP_FONT</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>eStyleStruct_Font,</cpp:value></cpp:define>
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP_COLOR</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>eStyleStruct_Color,</cpp:value></cpp:define>
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP_BACKGROUND</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>eStyleStruct_Background,</cpp:value></cpp:define>
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP_LIST</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>eStyleStruct_List,</cpp:value></cpp:define>
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP_POSITION</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>eStyleStruct_Position,</cpp:value></cpp:define>
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP_TEXT</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>eStyleStruct_Text,</cpp:value></cpp:define>
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP_TEXTRESET</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>eStyleStruct_TextReset,</cpp:value></cpp:define>
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP_DISPLAY</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>eStyleStruct_Display,</cpp:value></cpp:define>
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP_VISIBILITY</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>eStyleStruct_Visibility,</cpp:value></cpp:define>
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP_CONTENT</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>eStyleStruct_Content,</cpp:value></cpp:define>
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP_QUOTES</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>eStyleStruct_Quotes,</cpp:value></cpp:define>
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP_USERINTERFACE</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>eStyleStruct_UserInterface,</cpp:value></cpp:define>
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP_UIRESET</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>eStyleStruct_UIReset,</cpp:value></cpp:define>
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP_TABLE</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>eStyleStruct_Table,</cpp:value></cpp:define>
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP_TABLEBORDER</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>eStyleStruct_TableBorder,</cpp:value></cpp:define>
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP_MARGIN</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>eStyleStruct_Margin,</cpp:value></cpp:define>
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP_PADDING</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>eStyleStruct_Padding,</cpp:value></cpp:define>
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP_BORDER</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>eStyleStruct_Border,</cpp:value></cpp:define>
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP_OUTLINE</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>eStyleStruct_Outline,</cpp:value></cpp:define>
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP_XUL</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>eStyleStruct_XUL,</cpp:value></cpp:define>
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP_SVG</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>eStyleStruct_SVG,</cpp:value></cpp:define>
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP_SVGRESET</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>eStyleStruct_SVGReset,</cpp:value></cpp:define>
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP_COLUMN</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>eStyleStruct_Column,</cpp:value></cpp:define>
    <comment type="line">// This shouldn't matter, but we need something to go here.</comment>
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP_BACKENDONLY</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>nsStyleStructID(-1),</cpp:value></cpp:define>

    <cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsCSSPropList.h"</cpp:file></cpp:include>

    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP_FONT</name></cpp:undef>
    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP_COLOR</name></cpp:undef>
    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP_BACKGROUND</name></cpp:undef>
    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP_LIST</name></cpp:undef>
    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP_POSITION</name></cpp:undef>
    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP_TEXT</name></cpp:undef>
    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP_TEXTRESET</name></cpp:undef>
    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP_DISPLAY</name></cpp:undef>
    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP_VISIBILITY</name></cpp:undef>
    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP_CONTENT</name></cpp:undef>
    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP_QUOTES</name></cpp:undef>
    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP_USERINTERFACE</name></cpp:undef>
    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP_UIRESET</name></cpp:undef>
    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP_TABLE</name></cpp:undef>
    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP_TABLEBORDER</name></cpp:undef>
    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP_MARGIN</name></cpp:undef>
    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP_PADDING</name></cpp:undef>
    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP_BORDER</name></cpp:undef>
    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP_OUTLINE</name></cpp:undef>
    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP_XUL</name></cpp:undef>
    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP_SVG</name></cpp:undef>
    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP_SVGRESET</name></cpp:undef>
    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP_COLUMN</name></cpp:undef>
    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP_BACKENDONLY</name></cpp:undef>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PRUint32</name></type> <name><name>nsCSSProps</name>::<name>kFlagsTable</name><index>[<expr><name>eCSSProperty_COUNT</name></expr>]</index></name> <init>= <expr><block>{
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>, <param><type><name>datastruct_</name></type></param>, <param><type><name>member_</name></type></param>, <param><type><name>type_</name></type></param>, <param><type><name>kwtable_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>flags_,</cpp:value></cpp:define>
    <cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsCSSPropList.h"</cpp:file></cpp:include>
    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP</name></cpp:undef>
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP_SHORTHAND</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>flags_,</cpp:value></cpp:define>
    <cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsCSSPropList.h"</cpp:file></cpp:include>
    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP_SHORTHAND</name></cpp:undef>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gMozBorderRadiusSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// Code relies on these being in topleft-topright-bottomright-bottomleft</comment>
  <comment type="line">// order.</comment>
  <expr><name>eCSSProperty__moz_border_radius_topLeft</name></expr>,
  <expr><name>eCSSProperty__moz_border_radius_topRight</name></expr>,
  <expr><name>eCSSProperty__moz_border_radius_bottomRight</name></expr>,
  <expr><name>eCSSProperty__moz_border_radius_bottomLeft</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gMozOutlineRadiusSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// Code relies on these being in topleft-topright-bottomright-bottomleft</comment>
  <comment type="line">// order.</comment>
  <expr><name>eCSSProperty__moz_outline_radius_topLeft</name></expr>,
  <expr><name>eCSSProperty__moz_outline_radius_topRight</name></expr>,
  <expr><name>eCSSProperty__moz_outline_radius_bottomRight</name></expr>,
  <expr><name>eCSSProperty__moz_outline_radius_bottomLeft</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gBackgroundSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSProperty_background_color</name></expr>,
  <expr><name>eCSSProperty_background_image</name></expr>,
  <expr><name>eCSSProperty_background_repeat</name></expr>,
  <expr><name>eCSSProperty_background_attachment</name></expr>,
  <expr><name>eCSSProperty_background_position</name></expr>,
  <expr><name>eCSSProperty__moz_background_clip</name></expr>, <comment type="line">// XXX Added LDB.</comment>
  <expr><name>eCSSProperty__moz_background_origin</name></expr>, <comment type="line">// XXX Added LDB.</comment>
  <expr><name>eCSSProperty__moz_background_inline_policy</name></expr>, <comment type="line">// XXX Added LDB.</comment>
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gBorderSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSProperty_border_top_width</name></expr>,
  <expr><name>eCSSProperty_border_right_width_value</name></expr>,
  <expr><name>eCSSProperty_border_right_width_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_right_width_rtl_source</name></expr>,
  <expr><name>eCSSProperty_border_bottom_width</name></expr>,
  <expr><name>eCSSProperty_border_left_width_value</name></expr>,
  <expr><name>eCSSProperty_border_left_width_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_left_width_rtl_source</name></expr>,
  <expr><name>eCSSProperty_border_top_style</name></expr>,
  <expr><name>eCSSProperty_border_right_style_value</name></expr>,
  <expr><name>eCSSProperty_border_right_style_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_right_style_rtl_source</name></expr>,
  <expr><name>eCSSProperty_border_bottom_style</name></expr>,
  <expr><name>eCSSProperty_border_left_style_value</name></expr>,
  <expr><name>eCSSProperty_border_left_style_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_left_style_rtl_source</name></expr>,
  <expr><name>eCSSProperty_border_top_color</name></expr>,
  <expr><name>eCSSProperty_border_right_color_value</name></expr>,
  <expr><name>eCSSProperty_border_right_color_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_right_color_rtl_source</name></expr>,
  <expr><name>eCSSProperty_border_bottom_color</name></expr>,
  <expr><name>eCSSProperty_border_left_color_value</name></expr>,
  <expr><name>eCSSProperty_border_left_color_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_left_color_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gBorderBottomSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// nsCSSDeclaration.cpp outputs the subproperties in this order.</comment>
  <expr><name>eCSSProperty_border_bottom_width</name></expr>,
  <expr><name>eCSSProperty_border_bottom_style</name></expr>,
  <expr><name>eCSSProperty_border_bottom_color</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gBorderColorSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// Code relies on these being in top-right-bottom-left order.</comment>
  <expr><name>eCSSProperty_border_top_color</name></expr>,
  <expr><name>eCSSProperty_border_right_color_value</name></expr>,
  <expr><name>eCSSProperty_border_bottom_color</name></expr>,
  <expr><name>eCSSProperty_border_left_color_value</name></expr>,
  <comment type="line">// extras:</comment>
  <expr><name>eCSSProperty_border_left_color_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_left_color_rtl_source</name></expr>,
  <expr><name>eCSSProperty_border_right_color_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_right_color_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gMozBorderEndColorSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// nsCSSParser::ParseDirectionalBoxProperty depends on this order</comment>
  <expr><name>eCSSProperty_border_end_color_value</name></expr>,
  <expr><name>eCSSProperty_border_right_color_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_left_color_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gBorderLeftColorSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// nsCSSParser::ParseDirectionalBoxProperty depends on this order</comment>
  <expr><name>eCSSProperty_border_left_color_value</name></expr>,
  <expr><name>eCSSProperty_border_left_color_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_left_color_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gBorderRightColorSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// nsCSSParser::ParseDirectionalBoxProperty depends on this order</comment>
  <expr><name>eCSSProperty_border_right_color_value</name></expr>,
  <expr><name>eCSSProperty_border_right_color_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_right_color_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gMozBorderStartColorSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// nsCSSParser::ParseDirectionalBoxProperty depends on this order</comment>
  <expr><name>eCSSProperty_border_start_color_value</name></expr>,
  <expr><name>eCSSProperty_border_left_color_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_right_color_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gMozBorderEndSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// nsCSSDeclaration.cpp output the subproperties in this order.</comment>
  <expr><name>eCSSProperty_border_end_width_value</name></expr>,
  <expr><name>eCSSProperty_border_end_style_value</name></expr>,
  <expr><name>eCSSProperty_border_end_color_value</name></expr>,
  <comment type="line">// extras:</comment>
  <expr><name>eCSSProperty_border_right_width_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_left_width_rtl_source</name></expr>,
  <expr><name>eCSSProperty_border_right_style_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_left_style_rtl_source</name></expr>,
  <expr><name>eCSSProperty_border_right_color_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_left_color_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gBorderLeftSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// nsCSSDeclaration.cpp outputs the subproperties in this order.</comment>
  <expr><name>eCSSProperty_border_left_width_value</name></expr>,
  <expr><name>eCSSProperty_border_left_style_value</name></expr>,
  <expr><name>eCSSProperty_border_left_color_value</name></expr>,
  <comment type="line">// extras:</comment>
  <expr><name>eCSSProperty_border_left_width_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_left_width_rtl_source</name></expr>,
  <expr><name>eCSSProperty_border_left_style_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_left_style_rtl_source</name></expr>,
  <expr><name>eCSSProperty_border_left_color_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_left_color_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gBorderRightSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// nsCSSDeclaration.cpp outputs the subproperties in this order.</comment>
  <expr><name>eCSSProperty_border_right_width_value</name></expr>,
  <expr><name>eCSSProperty_border_right_style_value</name></expr>,
  <expr><name>eCSSProperty_border_right_color_value</name></expr>,
  <comment type="line">// extras:</comment>
  <expr><name>eCSSProperty_border_right_width_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_right_width_rtl_source</name></expr>,
  <expr><name>eCSSProperty_border_right_style_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_right_style_rtl_source</name></expr>,
  <expr><name>eCSSProperty_border_right_color_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_right_color_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gMozBorderStartSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// nsCSSDeclaration.cpp outputs the subproperties in this order.</comment>
  <expr><name>eCSSProperty_border_start_width_value</name></expr>,
  <expr><name>eCSSProperty_border_start_style_value</name></expr>,
  <expr><name>eCSSProperty_border_start_color_value</name></expr>,
  <comment type="line">// extras:</comment>
  <expr><name>eCSSProperty_border_left_width_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_right_width_rtl_source</name></expr>,
  <expr><name>eCSSProperty_border_left_style_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_right_style_rtl_source</name></expr>,
  <expr><name>eCSSProperty_border_left_color_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_right_color_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gBorderStyleSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// Code relies on these being in top-right-bottom-left order.</comment>
  <expr><name>eCSSProperty_border_top_style</name></expr>,
  <expr><name>eCSSProperty_border_right_style_value</name></expr>,
  <expr><name>eCSSProperty_border_bottom_style</name></expr>,
  <expr><name>eCSSProperty_border_left_style_value</name></expr>,
  <comment type="line">// extras:</comment>
  <expr><name>eCSSProperty_border_left_style_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_left_style_rtl_source</name></expr>,
  <expr><name>eCSSProperty_border_right_style_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_right_style_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gBorderLeftStyleSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// nsCSSParser::ParseDirectionalBoxProperty depends on this order</comment>
  <expr><name>eCSSProperty_border_left_style_value</name></expr>,
  <expr><name>eCSSProperty_border_left_style_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_left_style_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gBorderRightStyleSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// nsCSSParser::ParseDirectionalBoxProperty depends on this order</comment>
  <expr><name>eCSSProperty_border_right_style_value</name></expr>,
  <expr><name>eCSSProperty_border_right_style_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_right_style_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gMozBorderStartStyleSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// nsCSSParser::ParseDirectionalBoxProperty depends on this order</comment>
  <expr><name>eCSSProperty_border_start_style_value</name></expr>,
  <expr><name>eCSSProperty_border_left_style_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_right_style_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gMozBorderEndStyleSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// nsCSSParser::ParseDirectionalBoxProperty depends on this order</comment>
  <expr><name>eCSSProperty_border_end_style_value</name></expr>,
  <expr><name>eCSSProperty_border_right_style_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_left_style_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gBorderTopSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// nsCSSDeclaration.cpp outputs the subproperties in this order.</comment>
  <expr><name>eCSSProperty_border_top_width</name></expr>,
  <expr><name>eCSSProperty_border_top_style</name></expr>,
  <expr><name>eCSSProperty_border_top_color</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gBorderWidthSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// Code relies on these being in top-right-bottom-left order.</comment>
  <expr><name>eCSSProperty_border_top_width</name></expr>,
  <expr><name>eCSSProperty_border_right_width_value</name></expr>,
  <expr><name>eCSSProperty_border_bottom_width</name></expr>,
  <expr><name>eCSSProperty_border_left_width_value</name></expr>,
  <comment type="line">// extras:</comment>
  <expr><name>eCSSProperty_border_left_width_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_left_width_rtl_source</name></expr>,
  <expr><name>eCSSProperty_border_right_width_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_right_width_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gBorderLeftWidthSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// nsCSSParser::ParseDirectionalBoxProperty depends on this order</comment>
  <expr><name>eCSSProperty_border_left_width_value</name></expr>,
  <expr><name>eCSSProperty_border_left_width_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_left_width_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gBorderRightWidthSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// nsCSSParser::ParseDirectionalBoxProperty depends on this order</comment>
  <expr><name>eCSSProperty_border_right_width_value</name></expr>,
  <expr><name>eCSSProperty_border_right_width_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_right_width_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gMozBorderStartWidthSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// nsCSSParser::ParseDirectionalBoxProperty depends on this order</comment>
  <expr><name>eCSSProperty_border_start_width_value</name></expr>,
  <expr><name>eCSSProperty_border_left_width_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_right_width_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gMozBorderEndWidthSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// nsCSSParser::ParseDirectionalBoxProperty depends on this order</comment>
  <expr><name>eCSSProperty_border_end_width_value</name></expr>,
  <expr><name>eCSSProperty_border_right_width_ltr_source</name></expr>,
  <expr><name>eCSSProperty_border_left_width_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gCueSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSProperty_cue_after</name></expr>,
  <expr><name>eCSSProperty_cue_before</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gFontSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSProperty_font_family</name></expr>,
  <expr><name>eCSSProperty_font_style</name></expr>,
  <expr><name>eCSSProperty_font_variant</name></expr>,
  <expr><name>eCSSProperty_font_weight</name></expr>,
  <expr><name>eCSSProperty_font_size</name></expr>,
  <expr><name>eCSSProperty_line_height</name></expr>,
  <expr><name>eCSSProperty_font_size_adjust</name></expr>, <comment type="line">// XXX Added LDB.</comment>
  <expr><name>eCSSProperty_font_stretch</name></expr>, <comment type="line">// XXX Added LDB.</comment>
  <expr><name>eCSSProperty__x_system_font</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gListStyleSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSProperty_list_style_type</name></expr>,
  <expr><name>eCSSProperty_list_style_image</name></expr>,
  <expr><name>eCSSProperty_list_style_position</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gMarginSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// Code relies on these being in top-right-bottom-left order.</comment>
  <expr><name>eCSSProperty_margin_top</name></expr>,
  <expr><name>eCSSProperty_margin_right_value</name></expr>,
  <expr><name>eCSSProperty_margin_bottom</name></expr>,
  <expr><name>eCSSProperty_margin_left_value</name></expr>,
  <comment type="line">// extras:</comment>
  <expr><name>eCSSProperty_margin_left_ltr_source</name></expr>,
  <expr><name>eCSSProperty_margin_left_rtl_source</name></expr>,
  <expr><name>eCSSProperty_margin_right_ltr_source</name></expr>,
  <expr><name>eCSSProperty_margin_right_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gMarginLeftSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// nsCSSParser::ParseDirectionalBoxProperty depends on this order</comment>
  <expr><name>eCSSProperty_margin_left_value</name></expr>,
  <expr><name>eCSSProperty_margin_left_ltr_source</name></expr>,
  <expr><name>eCSSProperty_margin_left_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gMarginRightSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// nsCSSParser::ParseDirectionalBoxProperty depends on this order</comment>
  <expr><name>eCSSProperty_margin_right_value</name></expr>,
  <expr><name>eCSSProperty_margin_right_ltr_source</name></expr>,
  <expr><name>eCSSProperty_margin_right_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gMozMarginStartSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// nsCSSParser::ParseDirectionalBoxProperty depends on this order</comment>
  <expr><name>eCSSProperty_margin_start_value</name></expr>,
  <expr><name>eCSSProperty_margin_left_ltr_source</name></expr>,
  <expr><name>eCSSProperty_margin_right_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gMozMarginEndSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// nsCSSParser::ParseDirectionalBoxProperty depends on this order</comment>
  <expr><name>eCSSProperty_margin_end_value</name></expr>,
  <expr><name>eCSSProperty_margin_right_ltr_source</name></expr>,
  <expr><name>eCSSProperty_margin_left_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gOutlineSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// nsCSSDeclaration.cpp outputs the subproperties in this order.</comment>
  <expr><name>eCSSProperty_outline_color</name></expr>,
  <expr><name>eCSSProperty_outline_style</name></expr>,
  <expr><name>eCSSProperty_outline_width</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gMozColumnRuleSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSProperty__moz_column_rule_width</name></expr>,
  <expr><name>eCSSProperty__moz_column_rule_style</name></expr>,
  <expr><name>eCSSProperty__moz_column_rule_color</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gOverflowSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSProperty_overflow_x</name></expr>,
  <expr><name>eCSSProperty_overflow_y</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gPaddingSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// Code relies on these being in top-right-bottom-left order.</comment>
  <expr><name>eCSSProperty_padding_top</name></expr>,
  <expr><name>eCSSProperty_padding_right_value</name></expr>,
  <expr><name>eCSSProperty_padding_bottom</name></expr>,
  <expr><name>eCSSProperty_padding_left_value</name></expr>,
  <comment type="line">// extras:</comment>
  <expr><name>eCSSProperty_padding_left_ltr_source</name></expr>,
  <expr><name>eCSSProperty_padding_left_rtl_source</name></expr>,
  <expr><name>eCSSProperty_padding_right_ltr_source</name></expr>,
  <expr><name>eCSSProperty_padding_right_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gPaddingLeftSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// nsCSSParser::ParseDirectionalBoxProperty depends on this order</comment>
  <expr><name>eCSSProperty_padding_left_value</name></expr>,
  <expr><name>eCSSProperty_padding_left_ltr_source</name></expr>,
  <expr><name>eCSSProperty_padding_left_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gPaddingRightSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// nsCSSParser::ParseDirectionalBoxProperty depends on this order</comment>
  <expr><name>eCSSProperty_padding_right_value</name></expr>,
  <expr><name>eCSSProperty_padding_right_ltr_source</name></expr>,
  <expr><name>eCSSProperty_padding_right_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gMozPaddingStartSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// nsCSSParser::ParseDirectionalBoxProperty depends on this order</comment>
  <expr><name>eCSSProperty_padding_start_value</name></expr>,
  <expr><name>eCSSProperty_padding_left_ltr_source</name></expr>,
  <expr><name>eCSSProperty_padding_right_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gMozPaddingEndSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <comment type="line">// nsCSSParser::ParseDirectionalBoxProperty depends on this order</comment>
  <expr><name>eCSSProperty_padding_end_value</name></expr>,
  <expr><name>eCSSProperty_padding_right_ltr_source</name></expr>,
  <expr><name>eCSSProperty_padding_left_rtl_source</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gPauseSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSProperty_pause_after</name></expr>,
  <expr><name>eCSSProperty_pause_before</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>MOZ_SVG</name></cpp:ifdef>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>nsCSSProperty</name></type> <name><name>gMarkerSubpropTable</name><index>[]</index></name> <init>= <expr><block>{
  <expr><name>eCSSProperty_marker_start</name></expr>,
  <expr><name>eCSSProperty_marker_mid</name></expr>,
  <expr><name>eCSSProperty_marker_end</name></expr>,
  <expr><name>eCSSProperty_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><specifier>const</specifier> <name>nsCSSProperty</name> *<specifier>const</specifier></type>
<name><name>nsCSSProps</name>::<name>kSubpropertyTable</name><index>[<expr><name>eCSSProperty_COUNT</name> - <name>eCSSProperty_COUNT_no_shorthands</name></expr>]</index></name> <init>= <expr><block>{
    <cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CSS_PROP_SHORTHAND</name><parameter_list>(<param><type><name>name_</name></type></param>, <param><type><name>id_</name></type></param>, <param><type><name>method_</name></type></param>, <param><type><name>flags_</name></type></param>)</parameter_list></cpp:macro> <cpp:value>g##method_##SubpropTable,</cpp:value></cpp:define>
    <cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsCSSPropList.h"</cpp:file></cpp:include>
    <cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CSS_PROP_SHORTHAND</name></cpp:undef>
}</block></expr></init></decl>;</decl_stmt>
</unit>

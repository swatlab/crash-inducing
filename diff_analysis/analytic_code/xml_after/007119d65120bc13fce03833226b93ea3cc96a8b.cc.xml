<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C++" filename="007119d65120bc13fce03833226b93ea3cc96a8b.cc"><comment type="line">// Copyright (c) 2006, Google Inc.</comment>
<comment type="line">// All rights reserved.</comment>
<comment type="line">//</comment>
<comment type="line">// Redistribution and use in source and binary forms, with or without</comment>
<comment type="line">// modification, are permitted provided that the following conditions are</comment>
<comment type="line">// met:</comment>
<comment type="line">//</comment>
<comment type="line">//     * Redistributions of source code must retain the above copyright</comment>
<comment type="line">// notice, this list of conditions and the following disclaimer.</comment>
<comment type="line">//     * Redistributions in binary form must reproduce the above</comment>
<comment type="line">// copyright notice, this list of conditions and the following disclaimer</comment>
<comment type="line">// in the documentation and/or other materials provided with the</comment>
<comment type="line">// distribution.</comment>
<comment type="line">//     * Neither the name of Google Inc. nor the names of its</comment>
<comment type="line">// contributors may be used to endorse or promote products derived from</comment>
<comment type="line">// this software without specific prior written permission.</comment>
<comment type="line">//</comment>
<comment type="line">// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</comment>
<comment type="line">// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</comment>
<comment type="line">// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR</comment>
<comment type="line">// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT</comment>
<comment type="line">// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,</comment>
<comment type="line">// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT</comment>
<comment type="line">// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,</comment>
<comment type="line">// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY</comment>
<comment type="line">// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT</comment>
<comment type="line">// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE</comment>
<comment type="line">// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</comment>

<comment type="line">// guid_string.cc: Convert GUIDs to strings.</comment>
<comment type="line">//</comment>
<comment type="line">// See guid_string.h for documentation.</comment>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;wchar.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/windows/string_utils-inl.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common/windows/guid_string.h"</cpp:file></cpp:include>

<namespace>namespace <name>google_breakpad</name> <block>{

<comment type="line">// static</comment>
<function><type><name>wstring</name></type> <name><name>GUIDString</name>::<name>GUIDToWString</name></name><parameter_list>(<param><decl><type><name>GUID</name> *</type><name>guid</name></decl></param>)</parameter_list> <block>{
  <decl_stmt><decl><type><name>wchar_t</name></type> <name><name>guid_string</name><index>[<expr>37</expr>]</index></name></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>swprintf</name><argument_list>(
      <argument><expr><name>guid_string</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>guid_string</name></expr></argument>)</argument_list></sizeof> / <sizeof>sizeof<argument_list>(<argument><expr><name><name>guid_string</name><index>[<expr>0</expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>,
      <argument><expr>L"%08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x"</expr></argument>,
      <argument><expr><name><name>guid</name>-&gt;<name>Data1</name></name></expr></argument>, <argument><expr><name><name>guid</name>-&gt;<name>Data2</name></name></expr></argument>, <argument><expr><name><name>guid</name>-&gt;<name>Data3</name></name></expr></argument>,
      <argument><expr><name><name>guid</name>-&gt;<name>Data4</name><index>[<expr>0</expr>]</index></name></expr></argument>, <argument><expr><name><name>guid</name>-&gt;<name>Data4</name><index>[<expr>1</expr>]</index></name></expr></argument>, <argument><expr><name><name>guid</name>-&gt;<name>Data4</name><index>[<expr>2</expr>]</index></name></expr></argument>,
      <argument><expr><name><name>guid</name>-&gt;<name>Data4</name><index>[<expr>3</expr>]</index></name></expr></argument>, <argument><expr><name><name>guid</name>-&gt;<name>Data4</name><index>[<expr>4</expr>]</index></name></expr></argument>, <argument><expr><name><name>guid</name>-&gt;<name>Data4</name><index>[<expr>5</expr>]</index></name></expr></argument>,
      <argument><expr><name><name>guid</name>-&gt;<name>Data4</name><index>[<expr>6</expr>]</index></name></expr></argument>, <argument><expr><name><name>guid</name>-&gt;<name>Data4</name><index>[<expr>7</expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <comment type="line">// remove when VC++7.1 is no longer supported</comment>
  <expr_stmt><expr><name><name>guid_string</name><index>[<expr><sizeof>sizeof<argument_list>(<argument><expr><name>guid_string</name></expr></argument>)</argument_list></sizeof> / <sizeof>sizeof<argument_list>(<argument><expr><name><name>guid_string</name><index>[<expr>0</expr>]</index></name></expr></argument>)</argument_list></sizeof> - 1</expr>]</index></name> = L'\0'</expr>;</expr_stmt>

  <return>return <expr><call><name>wstring</name><argument_list>(<argument><expr><name>guid_string</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<comment type="line">// static</comment>
<function><type><name>wstring</name></type> <name><name>GUIDString</name>::<name>GUIDToSymbolServerWString</name></name><parameter_list>(<param><decl><type><name>GUID</name> *</type><name>guid</name></decl></param>)</parameter_list> <block>{
  <decl_stmt><decl><type><name>wchar_t</name></type> <name><name>guid_string</name><index>[<expr>33</expr>]</index></name></decl>;</decl_stmt>
  <expr_stmt><expr><call><name>swprintf</name><argument_list>(
      <argument><expr><name>guid_string</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>guid_string</name></expr></argument>)</argument_list></sizeof> / <sizeof>sizeof<argument_list>(<argument><expr><name><name>guid_string</name><index>[<expr>0</expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>,
      <argument><expr>L"%08X%04X%04X%02X%02X%02X%02X%02X%02X%02X%02X"</expr></argument>,
      <argument><expr><name><name>guid</name>-&gt;<name>Data1</name></name></expr></argument>, <argument><expr><name><name>guid</name>-&gt;<name>Data2</name></name></expr></argument>, <argument><expr><name><name>guid</name>-&gt;<name>Data3</name></name></expr></argument>,
      <argument><expr><name><name>guid</name>-&gt;<name>Data4</name><index>[<expr>0</expr>]</index></name></expr></argument>, <argument><expr><name><name>guid</name>-&gt;<name>Data4</name><index>[<expr>1</expr>]</index></name></expr></argument>, <argument><expr><name><name>guid</name>-&gt;<name>Data4</name><index>[<expr>2</expr>]</index></name></expr></argument>,
      <argument><expr><name><name>guid</name>-&gt;<name>Data4</name><index>[<expr>3</expr>]</index></name></expr></argument>, <argument><expr><name><name>guid</name>-&gt;<name>Data4</name><index>[<expr>4</expr>]</index></name></expr></argument>, <argument><expr><name><name>guid</name>-&gt;<name>Data4</name><index>[<expr>5</expr>]</index></name></expr></argument>,
      <argument><expr><name><name>guid</name>-&gt;<name>Data4</name><index>[<expr>6</expr>]</index></name></expr></argument>, <argument><expr><name><name>guid</name>-&gt;<name>Data4</name><index>[<expr>7</expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <comment type="line">// remove when VC++7.1 is no longer supported</comment>
  <expr_stmt><expr><name><name>guid_string</name><index>[<expr><sizeof>sizeof<argument_list>(<argument><expr><name>guid_string</name></expr></argument>)</argument_list></sizeof> / <sizeof>sizeof<argument_list>(<argument><expr><name><name>guid_string</name><index>[<expr>0</expr>]</index></name></expr></argument>)</argument_list></sizeof> - 1</expr>]</index></name> = L'\0'</expr>;</expr_stmt>

  <return>return <expr><call><name>wstring</name><argument_list>(<argument><expr><name>guid_string</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

}</block></namespace>  <comment type="line">// namespace google_breakpad</comment>
</unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" language="C" filename="001a3b31f805c864b17815b24996bf104be04ece.h"><comment type="block">/* -*- Mode: C++; tab-width: 3; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is the Mozilla browser.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications, Inc.
 * Portions created by the Initial Developer are Copyright (C) 1999
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Radha Kulkarni &lt;radha@netscape.com&gt;
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>nsSHEntry_h</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nsSHEntry_h</name></cpp:macro></cpp:define>

<comment type="line">// Helper Classes</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsCOMPtr.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsCOMArray.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsString.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsVoidArray.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsAutoPtr.h"</cpp:file></cpp:include>

<comment type="line">// Interfaces needed</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsIContentViewer.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsIInputStream.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsILayoutHistoryState.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsISHEntry.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsISHContainer.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsIURI.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsIEnumerator.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsIHistoryEntry.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsRect.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsSupportsArray.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsIMutationObserver.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsExpirationTracker.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nsDocShellEditorData.h"</cpp:file></cpp:include>

<expr_stmt><expr><name>class</name> <name>nsSHEntry</name> : <name>public</name> <name>nsISHEntry</name></expr>,
                  <expr><name>public</name> <name>nsISHContainer</name></expr>,
                  <expr><name>public</name> <name>nsIMutationObserver</name>
<block>{
<expr><name>public</name>: 
  <call><name>nsSHEntry</name><argument_list>()</argument_list></call></expr>;
  <expr><call><name>nsSHEntry</name><argument_list>(<argument><expr>const <name>nsSHEntry</name> &amp;<name>other</name></expr></argument>)</argument_list></call></expr>;

  <expr><name>NS_DECL_ISUPPORTS</name>
  <name>NS_DECL_NSIHISTORYENTRY</name>
  <name>NS_DECL_NSISHENTRY</name>
  <name>NS_DECL_NSISHCONTAINER</name>
  <name>NS_DECL_NSIMUTATIONOBSERVER</name>

  <name>void</name> <call><name>DropPresentationState</name><argument_list>()</argument_list></call></expr>;

  <expr><name>void</name> <call><name>Expire</name><argument_list>()</argument_list></call></expr>;
  
  <expr><name>nsExpirationState</name> *<macro><name>GetExpirationState</name><argument_list>()</argument_list></macro> <block>{ <return>return <expr>&amp;<name>mExpirationState</name></expr>;</return></block></expr> }</block>
  
  static <name>nsresult</name> <call><name>Startup</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Shutdown</name><parameter_list>()</parameter_list>;</function_decl>
  
<label><name>private</name>:</label>
  <expr_stmt><expr>~<call><name>nsSHEntry</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
  <function_decl><type><name>void</name></type> <name>DocumentMutated</name><parameter_list>()</parameter_list>;</function_decl>

  <expr_stmt><expr><name>nsCOMPtr</name>&lt;<name>nsIURI</name>&gt;                <name>mURI</name></expr>;</expr_stmt>
  <expr_stmt><expr><name>nsCOMPtr</name>&lt;<name>nsIURI</name>&gt;                <name>mReferrerURI</name></expr>;</expr_stmt>
  <expr_stmt><expr><name>nsCOMPtr</name>&lt;<name>nsIContentViewer</name>&gt;      <name>mContentViewer</name></expr>;</expr_stmt>
  <expr_stmt><expr><name>nsCOMPtr</name>&lt;<name>nsIDocument</name>&gt;           <name>mDocument</name></expr>;</expr_stmt> <comment type="line">// document currently being observed</comment>
  <decl_stmt><decl><type><name>nsString</name></type>                        <name>mTitle</name></decl>;</decl_stmt>
  <expr_stmt><expr><name>nsCOMPtr</name>&lt;<name>nsIInputStream</name>&gt;        <name>mPostData</name></expr>;</expr_stmt>
  <expr_stmt><expr><name>nsCOMPtr</name>&lt;<name>nsILayoutHistoryState</name>&gt; <name>mLayoutHistoryState</name></expr>;</expr_stmt>
  <expr_stmt><expr><name>nsCOMArray</name>&lt;<name>nsISHEntry</name>&gt;          <name>mChildren</name></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>PRUint32</name></type>                        <name>mLoadType</name></decl>;</decl_stmt>  
  <decl_stmt><decl><type><name>PRUint32</name></type>                        <name>mID</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>PRUint32</name></type>                        <name>mPageIdentifier</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>PRInt32</name></type>                         <name>mScrollPositionX</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>PRInt32</name></type>                         <name>mScrollPositionY</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>PRPackedBool</name></type>                    <name>mIsFrameNavigation</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>PRPackedBool</name></type>                    <name>mSaveLayoutState</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>PRPackedBool</name></type>                    <name>mExpired</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>PRPackedBool</name></type>                    <name>mSticky</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name>nsCString</name></type>                       <name>mContentType</name></decl>;</decl_stmt>
  <expr_stmt><expr><name>nsCOMPtr</name>&lt;<name>nsISupports</name>&gt;           <name>mCacheKey</name></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>nsISHEntry</name> *</type>                    <name>mParent</name></decl>;</decl_stmt>  <comment type="line">// weak reference</comment>
  <expr_stmt><expr><name>nsCOMPtr</name>&lt;<name>nsISupports</name>&gt;           <name>mWindowState</name></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>nsRect</name></type>                          <name>mViewerBounds</name></decl>;</decl_stmt>
  <expr_stmt><expr><name>nsCOMArray</name>&lt;<name>nsIDocShellTreeItem</name>&gt; <name>mChildShells</name></expr>;</expr_stmt>
  <expr_stmt><expr><name>nsCOMPtr</name>&lt;<name>nsISupportsArray</name>&gt;      <name>mRefreshURIList</name></expr>;</expr_stmt>
  <expr_stmt><expr><name>nsCOMPtr</name>&lt;<name>nsISupports</name>&gt;           <name>mOwner</name></expr>;</expr_stmt>
  <decl_stmt><decl><type><name>nsExpirationState</name></type>               <name>mExpirationState</name></decl>;</decl_stmt>
  <expr_stmt><expr><name>nsAutoPtr</name>&lt;<name>nsDocShellEditorData</name>&gt; <name>mEditorData</name></expr>;</expr_stmt>
};

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> <comment type="block">/* nsSHEntry_h */</comment>
</unit>

{"bugs":{"520511":{"comments":[{"is_private":false,"attachment_id":null,"creator":"gary@rumblingedge.com","time":"2009-10-05T05:16:03Z","author":"gary@rumblingedge.com","bug_id":520511,"tags":[],"text":"for (b = 0; b < 1; b++) {\n    this.watch(\"x\", eval)\n}\n__defineGetter__(\"x\", gc);\nvar f = (function () {\n    __defineSetter__(\"x\", function () {})\n});\nfor (i = 0; i < 1; i++) {}\nf();\nfor (let a = 0; a < 1; a++) x = 1\n\n\ncrashes js opt shell on TM tip at js_PutBlockObject near null and asserts dbg shell at Assertion failure: JSVAL_IS_OBJECT(v), at ../jsapi.h:183\n\nautoBisecting soon...\n\n\nException Type:  EXC_BAD_ACCESS (SIGBUS)\nException Codes: KERN_PROTECTION_FAILURE at 0x000000000000001c\nCrashed Thread:  0\n\nThread 0 Crashed:\n0   js-opt-tm-darwin              \t0x00068cb3 js_PutBlockObject + 35\n1   js-opt-tm-darwin              \t0x00057250 js_Interpret + 37040\n2   js-opt-tm-darwin              \t0x0005df1a js_Execute + 362\n3   js-opt-tm-darwin              \t0x0000d52c JS_ExecuteScript + 60\n4   js-opt-tm-darwin              \t0x000040b8 __ZL7ProcessP9JSContextP8JSObjectPci + 1336\n5   js-opt-tm-darwin              \t0x00008174 main + 2212\n6   js-opt-tm-darwin              \t0x0000204b _start + 209\n7   js-opt-tm-darwin              \t0x00001f79 start + 41","id":4331502,"creation_time":"2009-10-05T05:16:03Z","raw_text":"for (b = 0; b < 1; b++) {\n    this.watch(\"x\", eval)\n}\n__defineGetter__(\"x\", gc);\nvar f = (function () {\n    __defineSetter__(\"x\", function () {})\n});\nfor (i = 0; i < 1; i++) {}\nf();\nfor (let a = 0; a < 1; a++) x = 1\n\n\ncrashes js opt shell on TM tip at js_PutBlockObject near null and asserts dbg shell at Assertion failure: JSVAL_IS_OBJECT(v), at ../jsapi.h:183\n\nautoBisecting soon...\n\n\nException Type:  EXC_BAD_ACCESS (SIGBUS)\nException Codes: KERN_PROTECTION_FAILURE at 0x000000000000001c\nCrashed Thread:  0\n\nThread 0 Crashed:\n0   js-opt-tm-darwin              \t0x00068cb3 js_PutBlockObject + 35\n1   js-opt-tm-darwin              \t0x00057250 js_Interpret + 37040\n2   js-opt-tm-darwin              \t0x0005df1a js_Execute + 362\n3   js-opt-tm-darwin              \t0x0000d52c JS_ExecuteScript + 60\n4   js-opt-tm-darwin              \t0x000040b8 __ZL7ProcessP9JSContextP8JSObjectPci + 1336\n5   js-opt-tm-darwin              \t0x00008174 main + 2212\n6   js-opt-tm-darwin              \t0x0000204b _start + 209\n7   js-opt-tm-darwin              \t0x00001f79 start + 41"},{"is_private":false,"attachment_id":null,"creator":"gary@rumblingedge.com","time":"2009-10-05T05:16:36Z","author":"gary@rumblingedge.com","bug_id":520511,"tags":[],"text":"I'm currently on http://hg.mozilla.org/tracemonkey/rev/07e524d2a503","id":4331503,"creation_time":"2009-10-05T05:16:36Z","raw_text":"I'm currently on http://hg.mozilla.org/tracemonkey/rev/07e524d2a503"},{"is_private":false,"attachment_id":null,"creator":"gary@rumblingedge.com","time":"2009-10-05T05:51:06Z","author":"gary@rumblingedge.com","bug_id":520511,"tags":[],"text":"The assert/crash occurs without -j.\n\nautoBisect shows this is probably related to bug 495325:\n\nThe first bad revision is:\nchangeset:   33133:de72243414cd\nuser:        Blake Kaplan\ndate:        Mon Aug 17 18:08:20 2009 -0700\nsummary:     Bug 495325 - Follow ES about indirect eval being global eval. r=brendan/igor","id":4331519,"creation_time":"2009-10-05T05:51:06Z","raw_text":"The assert/crash occurs without -j.\n\nautoBisect shows this is probably related to bug 495325:\n\nThe first bad revision is:\nchangeset:   33133:de72243414cd\nuser:        Blake Kaplan\ndate:        Mon Aug 17 18:08:20 2009 -0700\nsummary:     Bug 495325 - Follow ES about indirect eval being global eval. r=brendan/igor"},{"is_private":false,"attachment_id":null,"creator":"gary@rumblingedge.com","time":"2009-10-21T06:57:02Z","author":"gary@rumblingedge.com","bug_id":520511,"tags":[],"text":"I have a almost-fully-reduced-testcase that asserts identically but crashes at a scary location.","id":4356485,"creation_time":"2009-10-21T06:57:02Z","raw_text":"I have a almost-fully-reduced-testcase that asserts identically but crashes at a scary location."},{"is_private":false,"attachment_id":407474,"creator":"gary@rumblingedge.com","time":"2009-10-21T06:58:24Z","author":"gary@rumblingedge.com","bug_id":520511,"tags":[],"text":"Created attachment 407474\ntestcase\n\nThis crashes opt js shell without -j:\n\nException Type:  EXC_BAD_ACCESS (SIGSEGV)\nException Codes: KERN_INVALID_ADDRESS at 0x000000001aecdd50\nCrashed Thread:  0\n\nThread 0 Crashed:\n0   js-opt-tm-darwin              \t0x000c1b42 JSScope::searchTable(long, bool) + 50\n1   js-opt-tm-darwin              \t0x0006ba14 js_LookupPropertyWithFlags + 164\n2   js-opt-tm-darwin              \t0x0006d8e1 js_FindIdentifierBase + 161\n3   js-opt-tm-darwin              \t0x000513da js_Interpret + 11370\n4   js-opt-tm-darwin              \t0x0005e68c js_Execute + 444\n5   js-opt-tm-darwin              \t0x0000d57c JS_ExecuteScript + 60\n6   js-opt-tm-darwin              \t0x000041b5 __ZL7ProcessP9JSContextP8JSObjectPci + 1605\n7   js-opt-tm-darwin              \t0x000081a4 main + 2212\n8   js-opt-tm-darwin              \t0x0000203b _start + 209\n9   js-opt-tm-darwin              \t0x00001f69 start + 41\n\n\nand also asserts at Assertion failure: JSVAL_IS_OBJECT(v), at ../jsapi.h:183","id":4356488,"creation_time":"2009-10-21T06:58:24Z","raw_text":"This crashes opt js shell without -j:\n\nException Type:  EXC_BAD_ACCESS (SIGSEGV)\nException Codes: KERN_INVALID_ADDRESS at 0x000000001aecdd50\nCrashed Thread:  0\n\nThread 0 Crashed:\n0   js-opt-tm-darwin              \t0x000c1b42 JSScope::searchTable(long, bool) + 50\n1   js-opt-tm-darwin              \t0x0006ba14 js_LookupPropertyWithFlags + 164\n2   js-opt-tm-darwin              \t0x0006d8e1 js_FindIdentifierBase + 161\n3   js-opt-tm-darwin              \t0x000513da js_Interpret + 11370\n4   js-opt-tm-darwin              \t0x0005e68c js_Execute + 444\n5   js-opt-tm-darwin              \t0x0000d57c JS_ExecuteScript + 60\n6   js-opt-tm-darwin              \t0x000041b5 __ZL7ProcessP9JSContextP8JSObjectPci + 1605\n7   js-opt-tm-darwin              \t0x000081a4 main + 2212\n8   js-opt-tm-darwin              \t0x0000203b _start + 209\n9   js-opt-tm-darwin              \t0x00001f69 start + 41\n\n\nand also asserts at Assertion failure: JSVAL_IS_OBJECT(v), at ../jsapi.h:183"},{"is_private":false,"attachment_id":null,"creator":"mrbkap@mozilla.com","time":"2009-10-21T19:01:57Z","author":"mrbkap@mozilla.com","bug_id":520511,"tags":[],"text":"http://hg.mozilla.org/tracemonkey/rev/2581d8d91679","id":4357424,"creation_time":"2009-10-21T19:01:57Z","raw_text":"http://hg.mozilla.org/tracemonkey/rev/2581d8d91679"},{"is_private":false,"attachment_id":null,"creator":"sayrer@gmail.com","time":"2009-10-29T21:24:20Z","author":"sayrer@gmail.com","bug_id":520511,"tags":[],"text":"http://hg.mozilla.org/mozilla-central/rev/2581d8d91679","id":4370973,"creation_time":"2009-10-29T21:24:20Z","raw_text":"http://hg.mozilla.org/mozilla-central/rev/2581d8d91679"}]}},"comments":{}}
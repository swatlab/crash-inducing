{"bugs":{"809674":{"comments":[{"is_private":false,"attachment_id":679442,"creator":"jruderman@gmail.com","time":"2012-11-08T00:28:20Z","author":"jruderman@gmail.com","bug_id":809674,"tags":[],"text":"Created attachment 679442\ntestcase\n\nThis is similar to bug 805749, but with TimeEvents instead of UIEvents.","id":6803001,"creation_time":"2012-11-08T00:28:20Z","raw_text":"This is similar to bug 805749, but with TimeEvents instead of UIEvents."},{"is_private":false,"attachment_id":null,"creator":"jruderman@gmail.com","time":"2012-11-08T00:29:01Z","author":"jruderman@gmail.com","bug_id":809674,"tags":[],"text":"Same with PopupBlockedEvents / initPopupBlockedEvent, I think.","id":6803007,"creation_time":"2012-11-08T00:29:01Z","raw_text":"Same with PopupBlockedEvents / initPopupBlockedEvent, I think."},{"is_private":false,"attachment_id":null,"creator":"bugs@pettay.fi","time":"2012-11-08T01:32:12Z","author":"bugs@pettay.fi","bug_id":809674,"tags":[],"text":"Fun.\nThis all should be handled in XPConnect layer, but I guess I'll just handle them manually\nin events code.","id":6803243,"creation_time":"2012-11-08T01:32:12Z","raw_text":"Fun.\nThis all should be handled in XPConnect layer, but I guess I'll just handle them manually\nin events code."},{"is_private":false,"attachment_id":null,"creator":"bugs@pettay.fi","time":"2012-11-08T01:35:47Z","author":"bugs@pettay.fi","bug_id":809674,"tags":[],"text":"And I didn't know about TimeEvent. It should be implemented using event code generator.","id":6803275,"creation_time":"2012-11-08T01:35:47Z","raw_text":"And I didn't know about TimeEvent. It should be implemented using event code generator."},{"is_private":false,"attachment_id":null,"creator":"bugs@pettay.fi","time":"2012-11-08T01:37:09Z","author":"bugs@pettay.fi","bug_id":809674,"tags":[],"text":"...or maybe I did, but forgot. Apparently I reviewed the patch 2 years ago :)","id":6803282,"creation_time":"2012-11-08T01:37:09Z","raw_text":"...or maybe I did, but forgot. Apparently I reviewed the patch 2 years ago :)"},{"is_private":false,"attachment_id":null,"creator":"scoobidiver@netcourrier.com","time":"2012-11-08T09:32:05Z","author":"scoobidiver@netcourrier.com","bug_id":809674,"tags":[],"text":"On Windows: bp-c991ccc7-dda8-4df5-8d24-280e72121108.","id":6804052,"creation_time":"2012-11-08T09:32:05Z","raw_text":"On Windows: bp-c991ccc7-dda8-4df5-8d24-280e72121108."},{"is_private":false,"attachment_id":null,"creator":"bobbyholley@gmail.com","time":"2012-11-08T23:06:17Z","author":"bobbyholley@gmail.com","bug_id":809674,"tags":[],"text":"Investigating with debugger watchpoints. We appear to be trashing memory here. Marking s-s.","id":6806591,"creation_time":"2012-11-08T23:06:17Z","raw_text":"Investigating with debugger watchpoints. We appear to be trashing memory here. Marking s-s."},{"is_private":false,"attachment_id":679857,"creator":"bobbyholley@gmail.com","time":"2012-11-08T23:09:40Z","author":"bobbyholley@gmail.com","bug_id":809674,"tags":[],"text":"Created attachment 679857\nculprit stack (trashing memory)\n\nAttaching the stack where we write JSVAL_VOID into the JSContext, overwriting cx->runtime.","id":6806609,"creation_time":"2012-11-08T23:09:40Z","raw_text":"Attaching the stack where we write JSVAL_VOID into the JSContext, overwriting cx->runtime."},{"is_private":false,"attachment_id":null,"creator":"bobbyholley@gmail.com","time":"2012-11-08T23:43:17Z","author":"bobbyholley@gmail.com","bug_id":809674,"tags":[],"text":"We appear to be crashing while getting 'onunload' from the wrappedJS, passing a jsval.\n\nI'm pretty sure this is the XPCWrappedJS variant of bug 655878. I'll see if I can write up a fix tomorrow.","id":6806734,"creation_time":"2012-11-08T23:43:17Z","raw_text":"We appear to be crashing while getting 'onunload' from the wrappedJS, passing a jsval.\n\nI'm pretty sure this is the XPCWrappedJS variant of bug 655878. I'll see if I can write up a fix tomorrow."},{"is_private":false,"attachment_id":null,"creator":"continuation@gmail.com","time":"2012-11-09T01:08:07Z","author":"continuation@gmail.com","bug_id":809674,"tags":[],"text":"Is this going to allow random memory corruption, or are we just going to always crash in a fairly safe fashion?","id":6807082,"creation_time":"2012-11-09T01:08:07Z","raw_text":"Is this going to allow random memory corruption, or are we just going to always crash in a fairly safe fashion?"},{"is_private":false,"attachment_id":null,"creator":"bobbyholley@gmail.com","time":"2012-11-12T02:08:30Z","author":"bobbyholley@gmail.com","bug_id":809674,"tags":[],"text":"OK, so I think this is bug 778189. Basically, XPCWrappedJS doesn't know about the [implicit_jscontext] and [optional_arg], and thus doesn't know that it needs to rearrange the order of the params.\n\nSo for the attribute getter, a pointer to the jscontext gets passed as param 0, but the getter thinks it's an outparam (a jsval*), and stashes JSVAL_VOID in it. This clobbers the first few bytes of the jscontext, which ends up being the runtime. We crash shortly thereafter.\n\nClobbering cx->runtime probably isn't a security issue. But if there were some way to avoid making that part crash, or create the same effect using optional_argc, a clever script could confuse in-params and out-params, possibly allowing it to write to arbitrary locations.\n\nsec-critical, mitigated by the fact that attacker vectors are limited to whatever JS-implementable IDL uses [implicit_jscontext] or [optional_argc]. It may be that this is not exploitable in the status quo, but proving that definitively would probably require more work than just fixing this.","id":6812351,"creation_time":"2012-11-12T02:08:30Z","raw_text":"OK, so I think this is bug 778189. Basically, XPCWrappedJS doesn't know about the [implicit_jscontext] and [optional_arg], and thus doesn't know that it needs to rearrange the order of the params.\n\nSo for the attribute getter, a pointer to the jscontext gets passed as param 0, but the getter thinks it's an outparam (a jsval*), and stashes JSVAL_VOID in it. This clobbers the first few bytes of the jscontext, which ends up being the runtime. We crash shortly thereafter.\n\nClobbering cx->runtime probably isn't a security issue. But if there were some way to avoid making that part crash, or create the same effect using optional_argc, a clever script could confuse in-params and out-params, possibly allowing it to write to arbitrary locations.\n\nsec-critical, mitigated by the fact that attacker vectors are limited to whatever JS-implementable IDL uses [implicit_jscontext] or [optional_argc]. It may be that this is not exploitable in the status quo, but proving that definitively would probably require more work than just fixing this."},{"is_private":false,"attachment_id":null,"creator":"bobbyholley@gmail.com","time":"2012-11-12T02:52:06Z","author":"bobbyholley@gmail.com","bug_id":809674,"tags":[],"text":"Are we using sec-high for mitigated remote code execution?","id":6812391,"creation_time":"2012-11-12T02:52:06Z","raw_text":"Are we using sec-high for mitigated remote code execution?"},{"is_private":false,"attachment_id":680505,"creator":"bobbyholley@gmail.com","time":"2012-11-12T03:14:40Z","author":"bobbyholley@gmail.com","bug_id":809674,"tags":[],"text":"Created attachment 680505\nFail at call time when invoking an XPCWrappedJS method with [implicit_jscontext] or [optional_argc]. v1\n\nI think this is the path of least resistance here.","id":6812408,"creation_time":"2012-11-12T03:14:40Z","raw_text":"I think this is the path of least resistance here."},{"is_private":false,"attachment_id":680506,"creator":"bobbyholley@gmail.com","time":"2012-11-12T03:15:01Z","author":"bobbyholley@gmail.com","bug_id":809674,"tags":[],"text":"Created attachment 680506\nCrashtest. v1 r=me","id":6812409,"creation_time":"2012-11-12T03:15:01Z","raw_text":""},{"is_private":false,"attachment_id":null,"creator":"continuation@gmail.com","time":"2012-11-12T03:50:19Z","author":"continuation@gmail.com","bug_id":809674,"tags":[],"text":"My reasoning was just \"slightly worse than sec-crit, maybe, and anyways we treat sec-high identically\". I guess it would be more accurate to say \"sec-crit, but maybe not that bad, but let's be conservative\".","id":6812441,"creation_time":"2012-11-12T03:50:19Z","raw_text":"My reasoning was just \"slightly worse than sec-crit, maybe, and anyways we treat sec-high identically\". I guess it would be more accurate to say \"sec-crit, but maybe not that bad, but let's be conservative\"."},{"is_private":false,"attachment_id":680505,"creator":"mrbkap@mozilla.com","time":"2012-11-12T23:23:16Z","author":"mrbkap@mozilla.com","bug_id":809674,"tags":[],"text":"Comment on attachment 680505\nFail at call time when invoking an XPCWrappedJS method with [implicit_jscontext] or [optional_argc]. v1\n\nReview of attachment 680505:\n-----------------------------------------------------------------\n\nDo we have a bug on making whatever JS is implementing interfaces with [implicit_jscontext] or [optional_argc] not do that? Also, should we be marking such interfaces as builtinclass?\n\n::: js/xpconnect/src/XPCWrappedJSClass.cpp\n@@ +1147,5 @@\n> +    // [implicit_jscontext] and [optional_argc] have a different calling\n> +    // convention, which we don't support for JS-implemented components.\n> +    if (info->WantsOptArgc() || info->WantsContext()) {\n> +        JS_ReportError(cx, \"IDL methods marked with [implicit_jscontext] \"\n> +                           \"or [optional_argc] may not be implemented in JS\");\n\nWhere does this error get reported to? The caller here is going to be C++, unless we're a double-wrapped JS object (in which case this does the Right Thing). I'd also stick an NS_WARNING in here for good measure.","id":6815385,"creation_time":"2012-11-12T23:23:16Z","raw_text":"Review of attachment 680505:\n-----------------------------------------------------------------\n\nDo we have a bug on making whatever JS is implementing interfaces with [implicit_jscontext] or [optional_argc] not do that? Also, should we be marking such interfaces as builtinclass?\n\n::: js/xpconnect/src/XPCWrappedJSClass.cpp\n@@ +1147,5 @@\n> +    // [implicit_jscontext] and [optional_argc] have a different calling\n> +    // convention, which we don't support for JS-implemented components.\n> +    if (info->WantsOptArgc() || info->WantsContext()) {\n> +        JS_ReportError(cx, \"IDL methods marked with [implicit_jscontext] \"\n> +                           \"or [optional_argc] may not be implemented in JS\");\n\nWhere does this error get reported to? The caller here is going to be C++, unless we're a double-wrapped JS object (in which case this does the Right Thing). I'd also stick an NS_WARNING in here for good measure."},{"is_private":false,"attachment_id":null,"creator":"bugs@pettay.fi","time":"2012-11-12T23:25:50Z","author":"bugs@pettay.fi","bug_id":809674,"tags":[],"text":"(In reply to Blake Kaplan (:mrbkap) from comment #15)\n> Do we have a bug on making whatever JS is implementing interfaces with\n> [implicit_jscontext] or [optional_argc] not do that? Also, should we be\n> marking such interfaces as builtinclass?\nI think we should. Unfortunately I haven't figured out how to make nsIDOMWindow builtinclass\nwithout breaking one rather important test.\nI guess that test should be just rewritting from scratch","id":6815391,"creation_time":"2012-11-12T23:25:50Z","raw_text":"(In reply to Blake Kaplan (:mrbkap) from comment #15)\n> Do we have a bug on making whatever JS is implementing interfaces with\n> [implicit_jscontext] or [optional_argc] not do that? Also, should we be\n> marking such interfaces as builtinclass?\nI think we should. Unfortunately I haven't figured out how to make nsIDOMWindow builtinclass\nwithout breaking one rather important test.\nI guess that test should be just rewritting from scratch"},{"is_private":false,"attachment_id":null,"creator":"bobbyholley@gmail.com","time":"2012-11-13T00:02:21Z","author":"bobbyholley@gmail.com","bug_id":809674,"tags":[],"text":"(In reply to Blake Kaplan (:mrbkap) from comment #15)\n> Do we have a bug on making whatever JS is implementing interfaces with\n> [implicit_jscontext] or [optional_argc] not do that?\n\nWell, the issue is things like nsIDOMWindow aren't builtinclass, so content can just pass {}.\n\n> Where does this error get reported to? The caller here is going to be C++,\n> unless we're a double-wrapped JS object (in which case this does the Right\n> Thing). I'd also stick an NS_WARNING in here for good measure.\n\nOk, sounds good.","id":6815539,"creation_time":"2012-11-13T00:02:21Z","raw_text":"(In reply to Blake Kaplan (:mrbkap) from comment #15)\n> Do we have a bug on making whatever JS is implementing interfaces with\n> [implicit_jscontext] or [optional_argc] not do that?\n\nWell, the issue is things like nsIDOMWindow aren't builtinclass, so content can just pass {}.\n\n> Where does this error get reported to? The caller here is going to be C++,\n> unless we're a double-wrapped JS object (in which case this does the Right\n> Thing). I'd also stick an NS_WARNING in here for good measure.\n\nOk, sounds good."},{"is_private":false,"attachment_id":680858,"creator":"bobbyholley@gmail.com","time":"2012-11-13T00:11:11Z","author":"bobbyholley@gmail.com","bug_id":809674,"tags":[],"text":"Created attachment 680858\nTest. v2 r=me\n\nTurned this into a mochitest that checks to make sure we throw a helpful error\n(depends on bug 810743).","id":6815564,"creation_time":"2012-11-13T00:11:11Z","raw_text":"Turned this into a mochitest that checks to make sure we throw a helpful error\n(depends on bug 810743)."},{"is_private":false,"attachment_id":null,"creator":"bobbyholley@gmail.com","time":"2012-11-13T00:18:21Z","author":"bobbyholley@gmail.com","bug_id":809674,"tags":[],"text":"https://hg.mozilla.org/integration/mozilla-inbound/rev/bcb591d32bd6","id":6815594,"creation_time":"2012-11-13T00:18:21Z","raw_text":"https://hg.mozilla.org/integration/mozilla-inbound/rev/bcb591d32bd6"},{"is_private":false,"attachment_id":680505,"creator":"bobbyholley@gmail.com","time":"2012-11-13T00:24:51Z","author":"bobbyholley@gmail.com","bug_id":809674,"tags":[],"text":"Comment on attachment 680505\nFail at call time when invoking an XPCWrappedJS method with [implicit_jscontext] or [optional_argc]. v1\n\nDoh, I probably should have flagged sec-approval _before_ pushing to inbound. Water under the bridge at this point though.\n\n[Security approval request comment]\nHow easily can the security issue be deduced from the patch?\n\nThe patch is very clearly forbidding XPCWrappedJS from implementing [implicit_jscontext] and [optional_argc] interfaces. Recognizing how this is a security issue involves a lot of knowledge about XPConnect calling conventions, and even from there exploiting it is questionably possible (see comment 10). A proper exploit would be sec-critical though. \n\nDo comments in the patch, the check-in comment, or tests included in the patch paint a bulls-eye on the security problem?\n\nNot anymore than the patch itself.\n\nWhich older supported branches are affected by this flaw?\n\nAll.\n\nIf not all supported branches, which bug introduced the flaw?\n\nN/A.\n\nDo you have backports for the affected branches? If not, how different, hard to create, and risky will they be?\n\nBackports should be identical.\n\nHow likely is this patch to cause regressions; how much testing does it need?\n\nExtremely unlikely to cause regressions (this patch only takes effect in situations where we would otherwise crash hard).","id":6815616,"creation_time":"2012-11-13T00:24:51Z","raw_text":"Doh, I probably should have flagged sec-approval _before_ pushing to inbound. Water under the bridge at this point though.\n\n[Security approval request comment]\nHow easily can the security issue be deduced from the patch?\n\nThe patch is very clearly forbidding XPCWrappedJS from implementing [implicit_jscontext] and [optional_argc] interfaces. Recognizing how this is a security issue involves a lot of knowledge about XPConnect calling conventions, and even from there exploiting it is questionably possible (see comment 10). A proper exploit would be sec-critical though. \n\nDo comments in the patch, the check-in comment, or tests included in the patch paint a bulls-eye on the security problem?\n\nNot anymore than the patch itself.\n\nWhich older supported branches are affected by this flaw?\n\nAll.\n\nIf not all supported branches, which bug introduced the flaw?\n\nN/A.\n\nDo you have backports for the affected branches? If not, how different, hard to create, and risky will they be?\n\nBackports should be identical.\n\nHow likely is this patch to cause regressions; how much testing does it need?\n\nExtremely unlikely to cause regressions (this patch only takes effect in situations where we would otherwise crash hard)."},{"is_private":false,"attachment_id":680505,"creator":"bobbyholley@gmail.com","time":"2012-11-13T00:27:09Z","author":"bobbyholley@gmail.com","bug_id":809674,"tags":[],"text":"Comment on attachment 680505\nFail at call time when invoking an XPCWrappedJS method with [implicit_jscontext] or [optional_argc]. v1\n\nRegression caused by (bug #): Forever.\nUser impact if declined: Potential sec-critical.\nTesting completed (on m-c, etc.): Just pushed to inbound.\nRisk to taking this patch (and alternatives if risky): Very low risk. No alternatives.","id":6815624,"creation_time":"2012-11-13T00:27:09Z","raw_text":"Regression caused by (bug #): Forever.\nUser impact if declined: Potential sec-critical.\nTesting completed (on m-c, etc.): Just pushed to inbound.\nRisk to taking this patch (and alternatives if risky): Very low risk. No alternatives."},{"is_private":false,"attachment_id":680505,"creator":"abillings@mozilla.com","time":"2012-11-13T00:27:51Z","author":"abillings@mozilla.com","bug_id":809674,"tags":[],"text":"Comment on attachment 680505\nFail at call time when invoking an XPCWrappedJS method with [implicit_jscontext] or [optional_argc]. v1\n\nDue to accidental checkin, this is exposed so I'm giving a sec-approval+ here.","id":6815626,"creation_time":"2012-11-13T00:27:51Z","raw_text":"Due to accidental checkin, this is exposed so I'm giving a sec-approval+ here."},{"is_private":false,"attachment_id":680505,"creator":"lukasblakk+bugs@gmail.com","time":"2012-11-13T00:39:45Z","author":"lukasblakk+bugs@gmail.com","bug_id":809674,"tags":[],"text":"Comment on attachment 680505\nFail at call time when invoking an XPCWrappedJS method with [implicit_jscontext] or [optional_argc]. v1\n\nWon't respin 16 for this, approving for branches. Please land to beta asap for final build.","id":6815658,"creation_time":"2012-11-13T00:39:45Z","raw_text":"Won't respin 16 for this, approving for branches. Please land to beta asap for final build."},{"is_private":false,"attachment_id":680505,"creator":"bobbyholley@gmail.com","time":"2012-11-13T00:52:13Z","author":"bobbyholley@gmail.com","bug_id":809674,"tags":[],"text":"Comment on attachment 680505\nFail at call time when invoking an XPCWrappedJS method with [implicit_jscontext] or [optional_argc]. v1\n\nEr, I meant to flag for esr10, not release. Sorry.","id":6815702,"creation_time":"2012-11-13T00:52:13Z","raw_text":"Er, I meant to flag for esr10, not release. Sorry."},{"is_private":false,"attachment_id":null,"creator":"bobbyholley@gmail.com","time":"2012-11-13T00:59:27Z","author":"bobbyholley@gmail.com","bug_id":809674,"tags":[],"text":"https://hg.mozilla.org/releases/mozilla-beta/rev/9716e35a4c3b","id":6815725,"creation_time":"2012-11-13T00:59:27Z","raw_text":"https://hg.mozilla.org/releases/mozilla-beta/rev/9716e35a4c3b"},{"is_private":false,"attachment_id":null,"creator":"emorley@mozilla.com","time":"2012-11-13T13:51:31Z","author":"emorley@mozilla.com","bug_id":809674,"tags":[],"text":"Backed out on suspicion of breaking marionette-webapi:\nhttps://tbpl.mozilla.org/?tree=Mozilla-Inbound&fromchange=26c2e6c1c22e&tochange=bcb591d32bd6&jobname=webapi\n\nThe only other suspect is bug 810743, but by my (severely untrained) eyes this looked like the stronger candidate. Will reland if tip doesn't green up :-)\n\nBackout:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/d56d537a1843","id":6817027,"creation_time":"2012-11-13T13:51:31Z","raw_text":"Backed out on suspicion of breaking marionette-webapi:\nhttps://tbpl.mozilla.org/?tree=Mozilla-Inbound&fromchange=26c2e6c1c22e&tochange=bcb591d32bd6&jobname=webapi\n\nThe only other suspect is bug 810743, but by my (severely untrained) eyes this looked like the stronger candidate. Will reland if tip doesn't green up :-)\n\nBackout:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/d56d537a1843"},{"is_private":false,"attachment_id":null,"creator":"emorley@mozilla.com","time":"2012-11-13T14:40:45Z","author":"emorley@mozilla.com","bug_id":809674,"tags":[],"text":"Marionette was green after backout.","id":6817176,"creation_time":"2012-11-13T14:40:45Z","raw_text":"Marionette was green after backout."},{"is_private":false,"attachment_id":null,"creator":"bobbyholley@gmail.com","time":"2012-11-13T23:15:58Z","author":"bobbyholley@gmail.com","bug_id":809674,"tags":[],"text":"https://hg.mozilla.org/releases/mozilla-esr10/rev/46a00740eb8a","id":6819134,"creation_time":"2012-11-13T23:15:58Z","raw_text":"https://hg.mozilla.org/releases/mozilla-esr10/rev/46a00740eb8a"},{"is_private":false,"attachment_id":null,"creator":"akeybl@mozilla.com","time":"2012-11-15T16:34:35Z","author":"akeybl@mozilla.com","bug_id":809674,"tags":[],"text":"bholley - do you need help looking into the Marionette issues on 18/19?","id":6825464,"creation_time":"2012-11-15T16:34:35Z","raw_text":"bholley - do you need help looking into the Marionette issues on 18/19?"},{"is_private":false,"attachment_id":null,"creator":"bobbyholley@gmail.com","time":"2012-11-15T18:17:59Z","author":"bobbyholley@gmail.com","bug_id":809674,"tags":[],"text":"(In reply to Alex Keybl [:akeybl] from comment #29)\n> bholley - do you need help looking into the Marionette issues on 18/19?\n\nNow that bug 811414 has landed on trunk, this should be green.\n\nRelanded to m-i:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/bbe72fef7e0f","id":6825870,"creation_time":"2012-11-15T18:17:59Z","raw_text":"(In reply to Alex Keybl [:akeybl] from comment #29)\n> bholley - do you need help looking into the Marionette issues on 18/19?\n\nNow that bug 811414 has landed on trunk, this should be green.\n\nRelanded to m-i:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/bbe72fef7e0f"},{"is_private":false,"attachment_id":null,"creator":"bobbyholley@gmail.com","time":"2012-11-15T18:57:22Z","author":"bobbyholley@gmail.com","bug_id":809674,"tags":[],"text":"Flagging in-testsuite to remember to land the test.","id":6826088,"creation_time":"2012-11-15T18:57:22Z","raw_text":"Flagging in-testsuite to remember to land the test."},{"is_private":false,"attachment_id":null,"creator":"ryanvm@gmail.com","time":"2012-11-16T01:46:35Z","author":"ryanvm@gmail.com","bug_id":809674,"tags":[],"text":"https://hg.mozilla.org/mozilla-central/rev/bbe72fef7e0f","id":6827675,"creation_time":"2012-11-16T01:46:35Z","raw_text":"https://hg.mozilla.org/mozilla-central/rev/bbe72fef7e0f"},{"is_private":false,"attachment_id":null,"creator":"ryanvm@gmail.com","time":"2012-11-18T22:50:44Z","author":"ryanvm@gmail.com","bug_id":809674,"tags":[],"text":"https://hg.mozilla.org/releases/mozilla-aurora/rev/cf4eac9ed40f","id":6832657,"creation_time":"2012-11-18T22:50:44Z","raw_text":"https://hg.mozilla.org/releases/mozilla-aurora/rev/cf4eac9ed40f"},{"is_private":false,"attachment_id":null,"creator":"continuation@gmail.com","time":"2012-11-28T23:22:15Z","author":"continuation@gmail.com","bug_id":809674,"tags":[],"text":"*** Bug 805879 has been marked as a duplicate of this bug. ***","id":6862049,"creation_time":"2012-11-28T23:22:15Z","raw_text":""},{"is_private":false,"attachment_id":null,"creator":"anthony.s.hughes@gmail.com","time":"2012-11-29T20:02:54Z","author":"anthony.s.hughes@gmail.com","bug_id":809674,"tags":[],"text":"Kamil, can you please confirm this is fixed? Thanks.","id":6865595,"creation_time":"2012-11-29T20:02:54Z","raw_text":"Kamil, can you please confirm this is fixed? Thanks."},{"is_private":false,"attachment_id":null,"creator":"kjozwiak@mozilla.com","time":"2012-11-30T02:14:04Z","author":"kjozwiak@mozilla.com","bug_id":809674,"tags":[],"text":"The following issue was tested on:\n- Windows 8 x86\n\nUsed the following builds to ensure that the issue is reproducible:\n\nFirefox 19.0a1 (Reproduced): http://ftp.mozilla.org/pub/mozilla.org/firefox/nightly/2012-11-15-03-07-05-mozilla-central/\n- Ran through the attached test case and received the following crash: [@ JS_EndRequest(JSContext*) ]\n- https://crash-stats.mozilla.com/report/index/bp-0329661a-58ca-49b9-8c49-bc0c12121129\n- https://crash-stats.mozilla.com/report/index/bp-77dc4373-41d7-4e6f-910d-ca5ec2121129\n\nUsed the following builds to ensure that the issue has been resolved:\n\nFirefox 17.0 (No Issue): http://ftp.mozilla.org/pub/mozilla.org/firefox/releases/17.0/win32/en-US/\n- Used \"about:\" to ensure the correct build was being used\n- Ran through the attached test case and received NO crashes as in 19.0a1 (.html test case loaded without any issues)\n\nFirefox 17.0esr (No Issue): http://ftp.mozilla.org/pub/mozilla.org/firefox/releases/17.0esr/win32/en-US/\n- Used \"about:\" to ensure the correct build was being used\n- Ran through the attached test case and received NO crashes as in 19.0a1 (.html test case loaded without any issues)\n\nFirefox 18.0a2 (No Issue): http://ftp.mozilla.org/pub/mozilla.org/firefox/nightly/2012-11-19-04-20-13-mozilla-aurora/\n- Used \"about:\" to ensure the correct build was being used\n- Ran through the attached test case and received NO crashes as in 19.0a1 (.html test case loaded without any issues)\n\nFirefox 19.0a1 (No Issue): http://ftp.mozilla.org/pub/mozilla.org/firefox/nightly/2012-11-16-03-07-25-mozilla-central/\n- Used \"about:\" to ensure the correct build was being used\n- Ran through the attached test case and received NO crashes as in 19.0a1 (.html test case loaded without any issues)","id":6866887,"creation_time":"2012-11-30T02:14:04Z","raw_text":"The following issue was tested on:\n- Windows 8 x86\n\nUsed the following builds to ensure that the issue is reproducible:\n\nFirefox 19.0a1 (Reproduced): http://ftp.mozilla.org/pub/mozilla.org/firefox/nightly/2012-11-15-03-07-05-mozilla-central/\n- Ran through the attached test case and received the following crash: [@ JS_EndRequest(JSContext*) ]\n- https://crash-stats.mozilla.com/report/index/bp-0329661a-58ca-49b9-8c49-bc0c12121129\n- https://crash-stats.mozilla.com/report/index/bp-77dc4373-41d7-4e6f-910d-ca5ec2121129\n\nUsed the following builds to ensure that the issue has been resolved:\n\nFirefox 17.0 (No Issue): http://ftp.mozilla.org/pub/mozilla.org/firefox/releases/17.0/win32/en-US/\n- Used \"about:\" to ensure the correct build was being used\n- Ran through the attached test case and received NO crashes as in 19.0a1 (.html test case loaded without any issues)\n\nFirefox 17.0esr (No Issue): http://ftp.mozilla.org/pub/mozilla.org/firefox/releases/17.0esr/win32/en-US/\n- Used \"about:\" to ensure the correct build was being used\n- Ran through the attached test case and received NO crashes as in 19.0a1 (.html test case loaded without any issues)\n\nFirefox 18.0a2 (No Issue): http://ftp.mozilla.org/pub/mozilla.org/firefox/nightly/2012-11-19-04-20-13-mozilla-aurora/\n- Used \"about:\" to ensure the correct build was being used\n- Ran through the attached test case and received NO crashes as in 19.0a1 (.html test case loaded without any issues)\n\nFirefox 19.0a1 (No Issue): http://ftp.mozilla.org/pub/mozilla.org/firefox/nightly/2012-11-16-03-07-25-mozilla-central/\n- Used \"about:\" to ensure the correct build was being used\n- Ran through the attached test case and received NO crashes as in 19.0a1 (.html test case loaded without any issues)"},{"is_private":false,"attachment_id":null,"creator":"anthony.s.hughes@gmail.com","time":"2012-12-04T19:31:37Z","author":"anthony.s.hughes@gmail.com","bug_id":809674,"tags":[],"text":"Thank you, Kamil. Marking this bug verified.","id":6880189,"creation_time":"2012-12-04T19:31:37Z","raw_text":"Thank you, Kamil. Marking this bug verified."},{"is_private":false,"attachment_id":null,"creator":"bobbyholley@gmail.com","time":"2013-03-11T21:48:56Z","author":"bobbyholley@gmail.com","bug_id":809674,"tags":[],"text":"Pushed the tests: https://hg.mozilla.org/integration/mozilla-inbound/rev/ecc947f95662","id":7190885,"creation_time":"2013-03-11T21:48:56Z","raw_text":"Pushed the tests: https://hg.mozilla.org/integration/mozilla-inbound/rev/ecc947f95662"},{"is_private":false,"attachment_id":null,"creator":"ryanvm@gmail.com","time":"2013-03-12T20:01:24Z","author":"ryanvm@gmail.com","bug_id":809674,"tags":[],"text":"(In reply to Bobby Holley (:bholley) from comment #38)\n> Pushed the tests:\n> https://hg.mozilla.org/integration/mozilla-inbound/rev/ecc947f95662\n\nhttps://hg.mozilla.org/mozilla-central/rev/ecc947f95662","id":7195079,"creation_time":"2013-03-12T20:01:24Z","raw_text":"(In reply to Bobby Holley (:bholley) from comment #38)\n> Pushed the tests:\n> https://hg.mozilla.org/integration/mozilla-inbound/rev/ecc947f95662\n\nhttps://hg.mozilla.org/mozilla-central/rev/ecc947f95662"},{"is_private":false,"attachment_id":null,"creator":"bobbyholley@gmail.com","time":"2013-03-14T05:05:17Z","author":"bobbyholley@gmail.com","bug_id":809674,"tags":[],"text":"*** Bug 778189 has been marked as a duplicate of this bug. ***","id":7201592,"creation_time":"2013-03-14T05:05:17Z","raw_text":""},{"is_private":false,"attachment_id":null,"creator":"VYV03354@nifty.ne.jp","time":"2013-05-21T22:44:07Z","author":"VYV03354@nifty.ne.jp","bug_id":809674,"tags":[],"text":"I'm trying to convert TimeEvent to WebIDL bindings. This test no longer throws the exception after that.\nhttps://tbpl.mozilla.org/?tree=Try&rev=09188f50a672\nIs this expected?","id":7447997,"creation_time":"2013-05-21T22:44:07Z","raw_text":"I'm trying to convert TimeEvent to WebIDL bindings. This test no longer throws the exception after that.\nhttps://tbpl.mozilla.org/?tree=Try&rev=09188f50a672\nIs this expected?"},{"is_private":false,"attachment_id":null,"creator":"bobbyholley@gmail.com","time":"2013-05-22T00:08:01Z","author":"bobbyholley@gmail.com","bug_id":809674,"tags":[],"text":"(In reply to Masatoshi Kimura [:emk] from comment #41)\n> I'm trying to convert TimeEvent to WebIDL bindings. This test no longer\n> throws the exception after that.\n> https://tbpl.mozilla.org/?tree=Try&rev=09188f50a672\n> Is this expected?\n\nYeah, that's expected. This test is basically making sure that when we create a JS-implemented component implementing an interface with methods/attributes marked with [implicit_jscontext] or [optional_argc], calling those methods throws (rather than crashing, because we have no handling for such things in XPCWrappedJS).\n\nNow that TimeEvent is no longer on XPConnect bindings, this is likely to not work. A good replacement test would just be to add something to the existing test interfaces in idl/xpctest_* and add something to the corresponding xpcshell tests to make sure that we throw appropriately for the JS-implemented case.","id":7448322,"creation_time":"2013-05-22T00:08:01Z","raw_text":"(In reply to Masatoshi Kimura [:emk] from comment #41)\n> I'm trying to convert TimeEvent to WebIDL bindings. This test no longer\n> throws the exception after that.\n> https://tbpl.mozilla.org/?tree=Try&rev=09188f50a672\n> Is this expected?\n\nYeah, that's expected. This test is basically making sure that when we create a JS-implemented component implementing an interface with methods/attributes marked with [implicit_jscontext] or [optional_argc], calling those methods throws (rather than crashing, because we have no handling for such things in XPCWrappedJS).\n\nNow that TimeEvent is no longer on XPConnect bindings, this is likely to not work. A good replacement test would just be to add something to the existing test interfaces in idl/xpctest_* and add something to the corresponding xpcshell tests to make sure that we throw appropriately for the JS-implemented case."},{"is_private":false,"attachment_id":null,"creator":"VYV03354@nifty.ne.jp","time":"2013-05-23T00:26:29Z","author":"VYV03354@nifty.ne.jp","bug_id":809674,"tags":[],"text":"Thanks for the information. I attached a patch in bug 875155.","id":7453831,"creation_time":"2013-05-23T00:26:29Z","raw_text":"Thanks for the information. I attached a patch in bug 875155."}]}},"comments":{}}
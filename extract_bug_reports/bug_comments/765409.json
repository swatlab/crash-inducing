{"bugs":{"765409":{"comments":[{"is_private":false,"attachment_id":633722,"creator":"bob@bclary.com","time":"2012-06-15T23:40:29Z","author":"bob@bclary.com","bug_id":765409,"tags":[],"text":"Created attachment 633722\ncrash report\n\n1. http://www2.emersonprocess.com/en-US/brands/EIM-Actuators/Products/Electric/Pages/M2CP_Electric_Actuator.aspx\n\n###!!! ASSERTION: unexpected flow: 'mFrames.ContainsFrame(nextInFlow)', file c:/work/mozilla/builds/nightly/mozilla/layout/generic/nsInlineFrame.cpp, line 500\n\n###!!! ASSERTION: StealFrame: can't find aChild: 'removed', file c:/work/mozilla/builds/nightly/mozilla/layout/generic/nsContainerFrame.cpp, line 1210\n\n###!!! ASSERTION: StealFrame failure: 'NS_SUCCEEDED(rv)', file c:/work/mozilla/builds/nightly/mozilla/layout/generic/nsContainerFrame.cpp, line 1339\n\nCrash @ nsLineLayout::ReflowFrame(nsIFrame *,unsigned int &,nsHTMLReflowMetrics *,bool &)\n\nThis appears to be Beta/14, Aurora/15, and Nightly/16 though I am getting inconsistent results sometimes on different platforms.","id":6396827,"creation_time":"2012-06-15T23:40:29Z","raw_text":"1. http://www2.emersonprocess.com/en-US/brands/EIM-Actuators/Products/Electric/Pages/M2CP_Electric_Actuator.aspx\n\n###!!! ASSERTION: unexpected flow: 'mFrames.ContainsFrame(nextInFlow)', file c:/work/mozilla/builds/nightly/mozilla/layout/generic/nsInlineFrame.cpp, line 500\n\n###!!! ASSERTION: StealFrame: can't find aChild: 'removed', file c:/work/mozilla/builds/nightly/mozilla/layout/generic/nsContainerFrame.cpp, line 1210\n\n###!!! ASSERTION: StealFrame failure: 'NS_SUCCEEDED(rv)', file c:/work/mozilla/builds/nightly/mozilla/layout/generic/nsContainerFrame.cpp, line 1339\n\nCrash @ nsLineLayout::ReflowFrame(nsIFrame *,unsigned int &,nsHTMLReflowMetrics *,bool &)\n\nThis appears to be Beta/14, Aurora/15, and Nightly/16 though I am getting inconsistent results sometimes on different platforms."},{"is_private":false,"attachment_id":null,"creator":"epinal99-bugzilla2@yahoo.fr","time":"2012-06-16T14:04:31Z","author":"epinal99-bugzilla2@yahoo.fr","bug_id":765409,"tags":[],"text":"Mozregression range:\n\nm-c\ngood=2012-03-20\nbad=2012-03-21\nhttp://hg.mozilla.org/mozilla-central/pushloghtml?fromchange=b972b89518c3&tochange=4bdae514b9be\n\nm-i\ngood=2012-03-19\nbad=2012-03-20\nhttp://hg.mozilla.org/integration/mozilla-inbound/pushloghtml?fromchange=6dd5b6014511&tochange=46c5015550af","id":6397608,"creation_time":"2012-06-16T14:04:31Z","raw_text":"Mozregression range:\n\nm-c\ngood=2012-03-20\nbad=2012-03-21\nhttp://hg.mozilla.org/mozilla-central/pushloghtml?fromchange=b972b89518c3&tochange=4bdae514b9be\n\nm-i\ngood=2012-03-19\nbad=2012-03-20\nhttp://hg.mozilla.org/integration/mozilla-inbound/pushloghtml?fromchange=6dd5b6014511&tochange=46c5015550af"},{"is_private":false,"attachment_id":null,"creator":"scoobidiver@netcourrier.com","time":"2012-06-16T14:12:39Z","author":"scoobidiver@netcourrier.com","bug_id":765409,"tags":[],"text":"It might be a regression from bug 537624.","id":6397613,"creation_time":"2012-06-16T14:12:39Z","raw_text":"It might be a regression from bug 537624."},{"is_private":false,"attachment_id":633852,"creator":"mats@mozilla.com","time":"2012-06-17T00:44:44Z","author":"mats@mozilla.com","bug_id":765409,"tags":[],"text":"Created attachment 633852\nframe dump\n\nI think the assumption here\nhttp://hg.mozilla.org/mozilla-central/annotate/9602a9e99045/layout/generic/nsInlineFrame.cpp#l490\nthat all our children's NIFs must be in our child list and should\nbe reparented is wrong.","id":6398036,"creation_time":"2012-06-17T00:44:44Z","raw_text":"I think the assumption here\nhttp://hg.mozilla.org/mozilla-central/annotate/9602a9e99045/layout/generic/nsInlineFrame.cpp#l490\nthat all our children's NIFs must be in our child list and should\nbe reparented is wrong."},{"is_private":false,"attachment_id":633853,"creator":"mats@mozilla.com","time":"2012-06-17T00:47:09Z","author":"mats@mozilla.com","bug_id":765409,"tags":[],"text":"Created attachment 633853\nfix\n\nOnly reparent a child's next-in-flows that has our prevInFlow as parent (we stole those from its OverflowList).\n\nhttps://tbpl.mozilla.org/?usebuildbot=1&tree=Try&rev=09c6f9338c13","id":6398037,"creation_time":"2012-06-17T00:47:09Z","raw_text":"Only reparent a child's next-in-flows that has our prevInFlow as parent (we stole those from its OverflowList).\n\nhttps://tbpl.mozilla.org/?usebuildbot=1&tree=Try&rev=09c6f9338c13"},{"is_private":false,"attachment_id":null,"creator":"mats@mozilla.com","time":"2012-06-17T01:04:19Z","author":"mats@mozilla.com","bug_id":765409,"tags":[],"text":"The code here still looks a bit fragile.  If we leave the loop that\nreparent and reflow child frames early we leave a tail with the\nwrong parent.  It looks like we have something in Reflow to fix that\n(assuming they got pushed to our OverflowList):\nhttp://hg.mozilla.org/mozilla-central/annotate/9602a9e99045/layout/generic/nsInlineFrame.cpp#l364\nbut it only does a simple SetParent, not the ReparentFloatsForInlineChild\nand ReparentStyleContext that we do in the loop.\n\nI think it would be more robust to continue reparenting all the child\nframes, but not reflow any after 'done' is set true of course.","id":6398046,"creation_time":"2012-06-17T01:04:19Z","raw_text":"The code here still looks a bit fragile.  If we leave the loop that\nreparent and reflow child frames early we leave a tail with the\nwrong parent.  It looks like we have something in Reflow to fix that\n(assuming they got pushed to our OverflowList):\nhttp://hg.mozilla.org/mozilla-central/annotate/9602a9e99045/layout/generic/nsInlineFrame.cpp#l364\nbut it only does a simple SetParent, not the ReparentFloatsForInlineChild\nand ReparentStyleContext that we do in the loop.\n\nI think it would be more robust to continue reparenting all the child\nframes, but not reflow any after 'done' is set true of course."},{"is_private":false,"attachment_id":null,"creator":"mats@mozilla.com","time":"2012-06-17T02:51:39Z","author":"mats@mozilla.com","bug_id":765409,"tags":[],"text":"It's more complicated than that since ReflowInlineFrame also does\nreparenting, and may have pushed the tail to our own OverflowList:\nhttp://hg.mozilla.org/mozilla-central/annotate/9602a9e99045/layout/generic/nsInlineFrame.cpp#l670","id":6398105,"creation_time":"2012-06-17T02:51:39Z","raw_text":"It's more complicated than that since ReflowInlineFrame also does\nreparenting, and may have pushed the tail to our own OverflowList:\nhttp://hg.mozilla.org/mozilla-central/annotate/9602a9e99045/layout/generic/nsInlineFrame.cpp#l670"},{"is_private":false,"attachment_id":633872,"creator":"jruderman@gmail.com","time":"2012-06-17T09:10:46Z","author":"jruderman@gmail.com","bug_id":765409,"tags":[],"text":"Created attachment 633872\ntestcase (crashes Firefox when loaded)\n\nThe reduction was fairly straightforward. The less obvious bits:\n\n* A slow-loading image became a dynamic change to an inline-block element's size.\n\n* <div style=\"display: inline\"> became <span style=\"unicode-bidi: -moz-isolate\">\n\nSuddenly the fuzz testcase in bug 760957 doesn't seem so weird!","id":6398255,"creation_time":"2012-06-17T09:10:46Z","raw_text":"The reduction was fairly straightforward. The less obvious bits:\n\n* A slow-loading image became a dynamic change to an inline-block element's size.\n\n* <div style=\"display: inline\"> became <span style=\"unicode-bidi: -moz-isolate\">\n\nSuddenly the fuzz testcase in bug 760957 doesn't seem so weird!"},{"is_private":false,"attachment_id":null,"creator":"dveditz@mozilla.com","time":"2012-06-20T17:15:39Z","author":"dveditz@mozilla.com","bug_id":765409,"tags":[],"text":"*** Bug 765711 has been marked as a duplicate of this bug. ***","id":6407653,"creation_time":"2012-06-20T17:15:39Z","raw_text":""},{"is_private":false,"attachment_id":null,"creator":"dbolter@mozilla.com","time":"2012-06-21T20:25:47Z","author":"dbolter@mozilla.com","bug_id":765409,"tags":[],"text":"Hi Mats, it looks like you aren't quite happy with your current fix?","id":6411943,"creation_time":"2012-06-21T20:25:47Z","raw_text":"Hi Mats, it looks like you aren't quite happy with your current fix?"},{"is_private":false,"attachment_id":633853,"creator":"mats@mozilla.com","time":"2012-06-22T18:26:27Z","author":"mats@mozilla.com","bug_id":765409,"tags":[],"text":"Comment on attachment 633853\nfix\n\nRight.","id":6415073,"creation_time":"2012-06-22T18:26:27Z","raw_text":"Right."},{"is_private":false,"attachment_id":null,"creator":"dbolter@mozilla.com","time":"2012-07-19T20:24:29Z","author":"dbolter@mozilla.com","bug_id":765409,"tags":[],"text":"What should we do here?","id":6488962,"creation_time":"2012-07-19T20:24:29Z","raw_text":"What should we do here?"},{"is_private":false,"attachment_id":null,"creator":"akeybl@mozilla.com","time":"2012-07-27T00:11:24Z","author":"akeybl@mozilla.com","bug_id":765409,"tags":[],"text":"(In reply to David Bolter [:davidb] from comment #11)\n> What should we do here?\n\nWe're still targeting this for FF15 if a low risk fix is found. What are the next steps here?","id":6509996,"creation_time":"2012-07-27T00:11:24Z","raw_text":"(In reply to David Bolter [:davidb] from comment #11)\n> What should we do here?\n\nWe're still targeting this for FF15 if a low risk fix is found. What are the next steps here?"},{"is_private":false,"attachment_id":654369,"creator":"mats@mozilla.com","time":"2012-08-22T21:32:54Z","author":"mats@mozilla.com","bug_id":765409,"tags":[],"text":"Created attachment 654369\nfix v2\n\nComments roughly per hunk in the order they appear:\n\nReturn earlier in case of IsFrameTreeTooDeep (to avoid leaving frames\non the principal list that needs reparenting)\n\nIf we're not lazily reparenting, then reparent any frames we still\nfrom the prev-in-flow overflow list full - i.e. SetParent + \nReparentFloatsForInlineChild + ReparentStyleContext (if :first-line).\n\nReparent the next-in-flows of a child we're lazily parenting, until\nwe find a sibling with our next-in-flow as the parent (this is the\ncorrect condition to test for unlike the last patch).\n\nWhen lazily reparenting, if we stop reflowing children for some\nreason then continue reparenting the remaining children on the\nprincipal list...\n\n... thus no need to that in ReflowInlineFrame.\n\nIn PullOneFrame, we only need one frame so don't pull in all frames\nfrom the nif's overflow list since then we would need to reparent\nall of them. (thus leaving the nif's principal list empty when we\nreturn - I don't see a problem with that).\n\n\nGreen on Try:\nhttps://tbpl.mozilla.org/?usebuildbot=1&tree=Try&rev=c6defdd9ee36","id":6575715,"creation_time":"2012-08-22T21:32:54Z","raw_text":"Comments roughly per hunk in the order they appear:\n\nReturn earlier in case of IsFrameTreeTooDeep (to avoid leaving frames\non the principal list that needs reparenting)\n\nIf we're not lazily reparenting, then reparent any frames we still\nfrom the prev-in-flow overflow list full - i.e. SetParent + \nReparentFloatsForInlineChild + ReparentStyleContext (if :first-line).\n\nReparent the next-in-flows of a child we're lazily parenting, until\nwe find a sibling with our next-in-flow as the parent (this is the\ncorrect condition to test for unlike the last patch).\n\nWhen lazily reparenting, if we stop reflowing children for some\nreason then continue reparenting the remaining children on the\nprincipal list...\n\n... thus no need to that in ReflowInlineFrame.\n\nIn PullOneFrame, we only need one frame so don't pull in all frames\nfrom the nif's overflow list since then we would need to reparent\nall of them. (thus leaving the nif's principal list empty when we\nreturn - I don't see a problem with that).\n\n\nGreen on Try:\nhttps://tbpl.mozilla.org/?usebuildbot=1&tree=Try&rev=c6defdd9ee36"},{"is_private":false,"attachment_id":654370,"creator":"mats@mozilla.com","time":"2012-08-22T21:35:00Z","author":"mats@mozilla.com","bug_id":765409,"tags":[],"text":"Created attachment 654370\nfix v2, wdiff\n\n... well, the hunks I commented is the ones in this diff actually.","id":6575724,"creation_time":"2012-08-22T21:35:00Z","raw_text":"... well, the hunks I commented is the ones in this diff actually."},{"is_private":false,"attachment_id":null,"creator":"mats@mozilla.com","time":"2012-08-22T21:38:59Z","author":"mats@mozilla.com","bug_id":765409,"tags":[],"text":"(In reply to Alex Keybl [:akeybl] from comment #12)\n> We're still targeting this for FF15 if a low risk fix is found. What are the\n> next steps here?\n\nI think this patch is too high risk for 15.","id":6575730,"creation_time":"2012-08-22T21:38:59Z","raw_text":"(In reply to Alex Keybl [:akeybl] from comment #12)\n> We're still targeting this for FF15 if a low risk fix is found. What are the\n> next steps here?\n\nI think this patch is too high risk for 15."},{"is_private":false,"attachment_id":654369,"creator":"bzbarsky@mit.edu","time":"2012-09-05T04:22:55Z","author":"bzbarsky@mit.edu","bug_id":765409,"tags":[],"text":"Comment on attachment 654369\nfix v2\n\nr=me","id":6609893,"creation_time":"2012-09-05T04:22:55Z","raw_text":"r=me"},{"is_private":false,"attachment_id":658670,"creator":"mats@mozilla.com","time":"2012-09-05T22:40:53Z","author":"mats@mozilla.com","bug_id":765409,"tags":[],"text":"Created attachment 658670\nframe tree for failed assertion\n\nOops, I triggered this assertion while testing this again...\n\nIt seems our stop condition - that the child's nif's parent is\nour nif, does not hold because it can be further away in the\nnif chain.\n\nIn this case, we have an empty nif (lime 0x7fffddb49ae0) in\nbetween us (blue 0x7fffd70793f0) and our child's nif (red).","id":6612885,"creation_time":"2012-09-05T22:40:53Z","raw_text":"Oops, I triggered this assertion while testing this again...\n\nIt seems our stop condition - that the child's nif's parent is\nour nif, does not hold because it can be further away in the\nnif chain.\n\nIn this case, we have an empty nif (lime 0x7fffddb49ae0) in\nbetween us (blue 0x7fffd70793f0) and our child's nif (red)."},{"is_private":false,"attachment_id":null,"creator":"mats@mozilla.com","time":"2012-09-05T22:43:07Z","author":"mats@mozilla.com","bug_id":765409,"tags":[],"text":"So to avoid doing O(n*m) frame traversals we could put all\nthe (m) nifs in a temporary hashtable, but that seems a bit\nexpensive for the gain of lazy parenting.\n\nPerhaps we should just not do lazy parenting in case there\nare more than one nif?\n\nSuggestions?","id":6612897,"creation_time":"2012-09-05T22:43:07Z","raw_text":"So to avoid doing O(n*m) frame traversals we could put all\nthe (m) nifs in a temporary hashtable, but that seems a bit\nexpensive for the gain of lazy parenting.\n\nPerhaps we should just not do lazy parenting in case there\nare more than one nif?\n\nSuggestions?"},{"is_private":false,"attachment_id":null,"creator":"roc@ocallahan.org","time":"2012-09-06T05:12:06Z","author":"roc@ocallahan.org","bug_id":765409,"tags":[],"text":"Find our first non-empty next-in-flow and use that for all n frames?","id":6613724,"creation_time":"2012-09-06T05:12:06Z","raw_text":"Find our first non-empty next-in-flow and use that for all n frames?"},{"is_private":false,"attachment_id":659230,"creator":"mats@mozilla.com","time":"2012-09-07T13:04:01Z","author":"mats@mozilla.com","bug_id":765409,"tags":[],"text":"Created attachment 659230\nfix, v3\n\nThanks roc, yes that would work, but I think I've found better way.\nI collected some statistics on the frame tree when\n\"child->GetNextInFlow()\" is non-null:\n\nRunning reftests+crashtests results in 10 hits (~0.5%), in all of them\nthe nif equals GetNextSibling().\n\nLoading the Alexa top 100 sites results in zero hits (even when\nresizing the window, reloading etc).\n\nFor the crash URL, the hit rate is ~3%, in 75% of those the nif\nis the next-sibling.  The remaining 25% are either in the inline's nif,\nor in an empty nif's nif (and in these cases GetNextSibling() is null).\n\nSo, in 100% of the tests, the nif is either the next sibling (and\nwe should reparent it) or the next sibling is null (and we shouldn't).\nI think it's rather unlikely that we will have any other cases.\n\n====\n\nThis patch is the same as before but with the following inter-diff:\n140a141\n> +        nsIFrame* nextSibling = child->GetNextSibling();\n142,145c143,149\n< +        if (child && child->GetParent() == GetNextContinuation() &&\n< +            GetNextContinuation()) {\n< +          MOZ_ASSERT(!mFrames.ContainsFrame(child));\n< +          child = nullptr;\n---\n> +        if (NS_UNLIKELY(child)) {\n> +          while (child != nextSibling && nextSibling) {\n> +            nextSibling = nextSibling->GetNextSibling();\n> +          }\n> +          if (!nextSibling) {\n> +            child = nullptr;\n> +          }\n\nSo instead of testing the child's parent I'm simply iterating the\nsiblings to see of it can be found (for the test data above we will\nnever enter the loop).  This is better because it's exactly what\nwe want to do - if it's in mFrames it should be reparented.\n\nhttps://tbpl.mozilla.org/?tree=Try&rev=7ced33ae2dd1","id":6617744,"creation_time":"2012-09-07T13:04:01Z","raw_text":"Thanks roc, yes that would work, but I think I've found better way.\nI collected some statistics on the frame tree when\n\"child->GetNextInFlow()\" is non-null:\n\nRunning reftests+crashtests results in 10 hits (~0.5%), in all of them\nthe nif equals GetNextSibling().\n\nLoading the Alexa top 100 sites results in zero hits (even when\nresizing the window, reloading etc).\n\nFor the crash URL, the hit rate is ~3%, in 75% of those the nif\nis the next-sibling.  The remaining 25% are either in the inline's nif,\nor in an empty nif's nif (and in these cases GetNextSibling() is null).\n\nSo, in 100% of the tests, the nif is either the next sibling (and\nwe should reparent it) or the next sibling is null (and we shouldn't).\nI think it's rather unlikely that we will have any other cases.\n\n====\n\nThis patch is the same as before but with the following inter-diff:\n140a141\n> +        nsIFrame* nextSibling = child->GetNextSibling();\n142,145c143,149\n< +        if (child && child->GetParent() == GetNextContinuation() &&\n< +            GetNextContinuation()) {\n< +          MOZ_ASSERT(!mFrames.ContainsFrame(child));\n< +          child = nullptr;\n---\n> +        if (NS_UNLIKELY(child)) {\n> +          while (child != nextSibling && nextSibling) {\n> +            nextSibling = nextSibling->GetNextSibling();\n> +          }\n> +          if (!nextSibling) {\n> +            child = nullptr;\n> +          }\n\nSo instead of testing the child's parent I'm simply iterating the\nsiblings to see of it can be found (for the test data above we will\nnever enter the loop).  This is better because it's exactly what\nwe want to do - if it's in mFrames it should be reparented.\n\nhttps://tbpl.mozilla.org/?tree=Try&rev=7ced33ae2dd1"},{"is_private":false,"attachment_id":659230,"creator":"bzbarsky@mit.edu","time":"2012-09-07T13:09:53Z","author":"bzbarsky@mit.edu","bug_id":765409,"tags":[],"text":"Comment on attachment 659230\nfix, v3\n\nr=me","id":6617758,"creation_time":"2012-09-07T13:09:53Z","raw_text":"r=me"},{"is_private":false,"attachment_id":null,"creator":"mats@mozilla.com","time":"2012-09-08T00:35:39Z","author":"mats@mozilla.com","bug_id":765409,"tags":[],"text":"https://hg.mozilla.org/integration/mozilla-inbound/rev/e0c765e8be0f","id":6619619,"creation_time":"2012-09-08T00:35:39Z","raw_text":"https://hg.mozilla.org/integration/mozilla-inbound/rev/e0c765e8be0f"},{"is_private":false,"attachment_id":null,"creator":"ryanvm@gmail.com","time":"2012-09-08T04:18:15Z","author":"ryanvm@gmail.com","bug_id":765409,"tags":[],"text":"https://hg.mozilla.org/mozilla-central/rev/e0c765e8be0f","id":6619904,"creation_time":"2012-09-08T04:18:15Z","raw_text":"https://hg.mozilla.org/mozilla-central/rev/e0c765e8be0f"},{"is_private":false,"attachment_id":null,"creator":"kairo@kairo.at","time":"2012-10-17T21:09:48Z","author":"kairo@kairo.at","bug_id":765409,"tags":[],"text":"This is sec-critical and tracking-firefox17+, are we planning on landing this on beta?","id":6739560,"creation_time":"2012-10-17T21:09:48Z","raw_text":"This is sec-critical and tracking-firefox17+, are we planning on landing this on beta?"},{"is_private":false,"attachment_id":659230,"creator":"mats@mozilla.com","time":"2012-10-17T22:25:40Z","author":"mats@mozilla.com","bug_id":765409,"tags":[],"text":"Comment on attachment 659230\nfix, v3\n\n[Approval Request Comment]\nBug caused by (feature/regressing bug #): \nUser impact if declined: sec-critical crash\nTesting completed (on m-c, etc.): on trunk/aurora since 2012-09-07\nRisk to taking this patch (and alternatives if risky): medium risk since the code is somewhat fragile.  The final patch (v3) is much better than the earlier iterations though (which comment 15 refers to as high risk).\nString or UUID changes made by this patch: none","id":6739840,"creation_time":"2012-10-17T22:25:40Z","raw_text":"[Approval Request Comment]\nBug caused by (feature/regressing bug #): \nUser impact if declined: sec-critical crash\nTesting completed (on m-c, etc.): on trunk/aurora since 2012-09-07\nRisk to taking this patch (and alternatives if risky): medium risk since the code is somewhat fragile.  The final patch (v3) is much better than the earlier iterations though (which comment 15 refers to as high risk).\nString or UUID changes made by this patch: none"},{"is_private":false,"attachment_id":null,"creator":"scoobidiver@netcourrier.com","time":"2012-10-18T05:59:47Z","author":"scoobidiver@netcourrier.com","bug_id":765409,"tags":[],"text":"*** Bug 760952 has been marked as a duplicate of this bug. ***","id":6741010,"creation_time":"2012-10-18T05:59:47Z","raw_text":""},{"is_private":false,"attachment_id":null,"creator":"mats@mozilla.com","time":"2012-10-18T15:19:38Z","author":"mats@mozilla.com","bug_id":765409,"tags":[],"text":"*** Bug 802991 has been marked as a duplicate of this bug. ***","id":6742132,"creation_time":"2012-10-18T15:19:38Z","raw_text":""},{"is_private":false,"attachment_id":null,"creator":"lukasblakk+bugs@gmail.com","time":"2012-10-18T17:37:40Z","author":"lukasblakk+bugs@gmail.com","bug_id":765409,"tags":[],"text":"Please set sec-approval? on this patch as it fits the criteria, being sec-critical and looking for uplift.","id":6742740,"creation_time":"2012-10-18T17:37:40Z","raw_text":"Please set sec-approval? on this patch as it fits the criteria, being sec-critical and looking for uplift."},{"is_private":false,"attachment_id":659230,"creator":"lukasblakk+bugs@gmail.com","time":"2012-10-19T22:08:54Z","author":"lukasblakk+bugs@gmail.com","bug_id":765409,"tags":[],"text":"Comment on attachment 659230\nfix, v3\n\nSorry, my bad - this doesn't need sec-approval given that it's already on trunk & Aurora now.","id":6747579,"creation_time":"2012-10-19T22:08:54Z","raw_text":"Sorry, my bad - this doesn't need sec-approval given that it's already on trunk & Aurora now."},{"is_private":false,"attachment_id":null,"creator":"ryanvm@gmail.com","time":"2012-10-23T03:54:31Z","author":"ryanvm@gmail.com","bug_id":765409,"tags":[],"text":"https://hg.mozilla.org/releases/mozilla-beta/rev/f7d473f3a067","id":6753846,"creation_time":"2012-10-23T03:54:31Z","raw_text":"https://hg.mozilla.org/releases/mozilla-beta/rev/f7d473f3a067"},{"is_private":false,"attachment_id":null,"creator":"mwobensmith@mozilla.com","time":"2012-11-16T01:37:02Z","author":"mwobensmith@mozilla.com","bug_id":765409,"tags":[],"text":"Confirmed crash on build 2012-6-15 nightly\nVerified fixed on build 2012-11-13, 17.0b6\nWin7 and Mac OS 10.8","id":6827621,"creation_time":"2012-11-16T01:37:02Z","raw_text":"Confirmed crash on build 2012-6-15 nightly\nVerified fixed on build 2012-11-13, 17.0b6\nWin7 and Mac OS 10.8"},{"is_private":false,"attachment_id":null,"creator":"anthony.s.hughes@gmail.com","time":"2012-11-16T04:14:03Z","author":"anthony.s.hughes@gmail.com","bug_id":765409,"tags":[],"text":"Thanks Matt, can you also verify in the latest 17esr nightly? Aurora 18.0a2 too if you have time.","id":6827904,"creation_time":"2012-11-16T04:14:03Z","raw_text":"Thanks Matt, can you also verify in the latest 17esr nightly? Aurora 18.0a2 too if you have time."},{"is_private":false,"attachment_id":null,"creator":"mwobensmith@mozilla.com","time":"2012-11-16T23:19:32Z","author":"mwobensmith@mozilla.com","bug_id":765409,"tags":[],"text":"Verified fixed on build 2012-11-14, 17.0 ESR\nVerified fixed on build 2012-11-14, 18.0a2 Aurora","id":6830473,"creation_time":"2012-11-16T23:19:32Z","raw_text":"Verified fixed on build 2012-11-14, 17.0 ESR\nVerified fixed on build 2012-11-14, 18.0a2 Aurora"},{"is_private":false,"attachment_id":null,"creator":"anthony.s.hughes@gmail.com","time":"2013-02-07T19:38:33Z","author":"anthony.s.hughes@gmail.com","bug_id":765409,"tags":[],"text":"Thanks Matt.\n\nChanging status-firefox16:affected to wontfix since we won't be issuing patches for that version.","id":7081822,"creation_time":"2013-02-07T19:38:33Z","raw_text":"Thanks Matt.\n\nChanging status-firefox16:affected to wontfix since we won't be issuing patches for that version."},{"is_private":false,"attachment_id":null,"creator":"mats@mozilla.com","time":"2013-05-14T14:00:04Z","author":"mats@mozilla.com","bug_id":765409,"tags":[],"text":"Crash test:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/4c559cbeba13","id":7420956,"creation_time":"2013-05-14T14:00:04Z","raw_text":"Crash test:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/4c559cbeba13"},{"is_private":false,"attachment_id":null,"creator":"ryanvm@gmail.com","time":"2013-05-14T20:29:48Z","author":"ryanvm@gmail.com","bug_id":765409,"tags":[],"text":"https://hg.mozilla.org/mozilla-central/rev/4c559cbeba13","id":7422803,"creation_time":"2013-05-14T20:29:48Z","raw_text":"https://hg.mozilla.org/mozilla-central/rev/4c559cbeba13"}]}},"comments":{}}
    1: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
98983: /* This Source Code Form is subject to the terms of the Mozilla Public
98983:  * License, v. 2.0. If a copy of the MPL was not distributed with this
98983:  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
    1: 
    1: /* For documentation of the accessibility architecture, 
    1:  * see http://lxr.mozilla.org/seamonkey/source/accessible/accessible-docs.html
    1:  */
    1: 
99568: #ifndef mozilla_a11y_DocAccessibleWrap_h__
99568: #define mozilla_a11y_DocAccessibleWrap_h__
    1: 
    1: #include "ISimpleDOMDocument.h"
41384: 
99568: #include "DocAccessible.h"
    1: #include "nsIDocShellTreeItem.h"
    1: 
99568: class DocAccessibleWrap : public DocAccessible,
    1:                           public ISimpleDOMDocument
    1: {
    1: public:
99568:   DocAccessibleWrap(nsIDocument* aDocument, nsIContent* aRootContent,
89801:                     nsIPresShell* aPresShell);
99568:   virtual ~DocAccessibleWrap();
    1: 
    1:     // IUnknown
    1:     STDMETHODIMP_(ULONG) AddRef();
    1:     STDMETHODIMP_(ULONG) Release();
    1:     STDMETHODIMP      QueryInterface(REFIID, void**);
    1: 
    1:     // ISimpleDOMDocument
    1:     virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_URL( 
    1:         /* [out] */ BSTR __RPC_FAR *url);
    1:     
    1:     virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_title( 
    1:         /* [out] */ BSTR __RPC_FAR *title);
    1:     
    1:     virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_mimeType( 
    1:         /* [out] */ BSTR __RPC_FAR *mimeType);
    1:     
    1:     virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_docType( 
    1:         /* [out] */ BSTR __RPC_FAR *docType);
    1:     
    1:     virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nameSpaceURIForID( 
    1:         /* [in] */ short nameSpaceID,
    1:         /* [out] */ BSTR __RPC_FAR *nameSpaceURI);
    1: 
    1:     virtual /* [id] */ HRESULT STDMETHODCALLTYPE put_alternateViewMediaTypes( 
    1:         /* [in] */ BSTR __RPC_FAR *commaSeparatedMediaTypes);
    1: 
    1:     // IAccessible
    1: 
13094:     // Override get_accValue to provide URL when no other value is available
13094:     virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_accValue( 
13094:         /* [optional][in] */ VARIANT varChild,
13094:         /* [retval][out] */ BSTR __RPC_FAR *pszValue);
13094: 
54220:   // nsAccessNode
54220:   virtual void Shutdown();
54220: 
99568:   // DocAccessible
54220:   virtual void* GetNativeWindow() const;
54220: 
54220: protected:
99568:   // DocAccessible
75013:   virtual void DoInitialUpdate();
63261: 
63261: protected:
54220:   void* mHWND;
    1: };
    1: 
    1: #endif

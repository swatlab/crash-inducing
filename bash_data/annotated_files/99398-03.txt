98983: # This Source Code Form is subject to the terms of the Mozilla Public
98983: # License, v. 2.0. If a copy of the MPL was not distributed with this
98983: # file, You can obtain one at http://mozilla.org/MPL/2.0/.
35767: 
35767: DEPTH     = ../..
35767: topsrcdir = @top_srcdir@
35767: srcdir    = @srcdir@
35767: VPATH     = @srcdir@
35767: 
35767: include $(DEPTH)/config/autoconf.mk
35767: 
35767: MODULE = ipc
35767: 
35767: include $(topsrcdir)/ipc/app/defs.mk
35767: PROGRAM = $(MOZ_CHILD_PROCESS_NAME)
35767: 
97494: ifneq ($(dir $(PROGRAM)),./)
97494:   GENERATED_DIRS = $(dir $(PROGRAM))
97494: endif
80953: 
35767: CPPSRCS = \
35767:   MozillaRuntimeMain.cpp \
35767:   $(NULL)
35767: 
98036: ifeq (android,$(MOZ_WIDGET_TOOLKIT))
77590: WRAP_LDFLAGS =
55918: CPPSRCS = MozillaRuntimeMainAndroid.cpp
55918: else
35767: LIBS += \
35767:   $(XPCOM_LIBS) \
35767:   $(NSPR_LIBS) \
35767:   $(NULL)
55918: endif
35767: 
35767: LOCAL_INCLUDES += -I$(topsrcdir)/toolkit/xre
57361: LOCAL_INCLUDES += -I$(topsrcdir)/xpcom/base
35767: 
35767: ifndef MOZ_WINCONSOLE
35767: ifdef MOZ_DEBUG
35767: MOZ_WINCONSOLE = 1
35767: else
35767: MOZ_WINCONSOLE = 0
35767: endif
35767: endif
35767: 
35767: # This switches $(INSTALL) to copy mode, like $(SYSINSTALL), so things that
35767: # shouldn't get 755 perms need $(IFLAGS1) for either way of calling nsinstall.
35767: NSDISTMODE = copy
35767: 
35767: include $(topsrcdir)/config/config.mk
35767: include $(topsrcdir)/ipc/chromium/chromium-config.mk
35767: 
98036: ifeq (android,$(MOZ_WIDGET_TOOLKIT))
80953: FINAL_TARGET = $(DIST)/bin/lib
80953: endif
80953: 
35767: ifdef _MSC_VER
35767: # Always enter a Windows program through wmain, whether or not we're
35767: # a console application.
35767: WIN32_EXE_LDFLAGS += -ENTRY:wmainCRTStartup
35767: endif
35767: 
35767: include $(topsrcdir)/config/rules.mk
35767: 
99398: LDFLAGS += $(MOZ_ALLOW_HEAP_EXECUTE_FLAGS)
99398: 
95069: ifeq ($(OS_ARCH),WINNT) #{
35767: #
35767: # Control the default heap size.
35767: # This is the heap returned by GetProcessHeap().
35767: # As we use the CRT heap, the default size is too large and wastes VM.
35767: #
35767: # The default heap size is 1MB on Win32.
35767: # The heap will grow if need be.
35767: #
35767: # Set it to 256k.  See bug 127069.
35767: #
95069: ifndef GNU_CC #{
35767: LDFLAGS += /HEAP:0x40000
95069: ifeq ($(OS_TEST),x86_64) #{
49184: # set stack to 2MB on x64 build.  See bug 582910
49184: LDFLAGS += -STACK:2097152
95069: endif #}
95069: endif #}
95069: endif #}
47970: 
95069: ifeq (cocoa,$(MOZ_WIDGET_TOOLKIT)) #{
47970: 
47970: libs::
47970: 	$(NSINSTALL) -D $(DIST)/bin/$(PROGRAM).app
47970: 	rsync -a -C --exclude "*.in" $(srcdir)/macbuild/Contents $(DIST)/bin/$(PROGRAM).app 
47970: 	sed -e "s/%PROGRAM%/$(PROGRAM)/" $(srcdir)/macbuild/Contents/Info.plist.in > $(DIST)/bin/$(PROGRAM).app/Contents/Info.plist
47970: 	sed -e "s/%APP_NAME%/$(MOZ_APP_DISPLAYNAME)/" $(srcdir)/macbuild/Contents/Resources/English.lproj/InfoPlist.strings.in | \
47970: 	  iconv -f UTF-8 -t UTF-16 > $(DIST)/bin/$(PROGRAM).app/Contents/Resources/English.lproj/InfoPlist.strings
47970: 	$(NSINSTALL) -D $(DIST)/bin/$(PROGRAM).app/Contents/MacOS
47970: 	$(NSINSTALL) $(PROGRAM) $(DIST)/bin/$(PROGRAM).app/Contents/MacOS
95069: 	$(RM) $(DIST)/bin/$(PROGRAM)
95069: endif #}

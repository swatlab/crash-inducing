    1: /* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
    1: /* ***** BEGIN LICENSE BLOCK *****
    1:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
    1:  *
    1:  * The contents of this file are subject to the Mozilla Public License Version
    1:  * 1.1 (the "License"); you may not use this file except in compliance with
    1:  * the License. You may obtain a copy of the License at
    1:  * http://www.mozilla.org/MPL/
    1:  *
    1:  * Software distributed under the License is distributed on an "AS IS" basis,
    1:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
    1:  * for the specific language governing rights and limitations under the
    1:  * License.
    1:  *
    1:  * The Original Code is the Mozilla SVG project.
    1:  *
    1:  * The Initial Developer of the Original Code is
    1:  * Crocodile Clips Ltd..
    1:  * Portions created by the Initial Developer are Copyright (C) 2001
    1:  * the Initial Developer. All Rights Reserved.
    1:  *
    1:  * Contributor(s):
    1:  *   Alex Fritze <alex.fritze@crocodile-clips.com> (original author)
    1:  *
    1:  * Alternatively, the contents of this file may be used under the terms of
    1:  * either of the GNU General Public License Version 2 or later (the "GPL"),
    1:  * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
    1:  * in which case the provisions of the GPL or the LGPL are applicable instead
    1:  * of those above. If you wish to allow use of your version of this file only
    1:  * under the terms of either the GPL or the LGPL, and not to allow others to
    1:  * use your version of this file under the terms of the MPL, indicate your
    1:  * decision by deleting the provisions above and replace them with the notice
    1:  * and other provisions required by the GPL or the LGPL. If you do not delete
    1:  * the provisions above, a recipient may use your version of this file under
    1:  * the terms of any one of the MPL, the GPL or the LGPL.
    1:  *
    1:  * ***** END LICENSE BLOCK ***** */
    1: 
    1: #include "nsIDOMSVGElement.idl"
    1: 
    1: interface nsIDOMSVGAnimatedLength;
    1: interface nsIDOMSVGRect;
    1: interface nsIDOMSVGViewSpec;
    1: interface nsIDOMSVGPoint;
    1: interface nsIDOMSVGNumber;
    1: interface nsIDOMSVGLength;
    1: interface nsIDOMSVGAngle;
    1: interface nsIDOMSVGMatrix;
    1: interface nsIDOMSVGTransform;
    1: 
    1: // undef the GetCurrentTime macro defined in WinBase.h from the MS Platform SDK
    1: %{C++
    1: #ifdef GetCurrentTime
    1: #undef GetCurrentTime
    1: #endif
    1: %}
    1: 
89079: [scriptable, uuid(19198100-d373-408b-9b75-4c6c6310ea5b)]
    1: interface nsIDOMSVGSVGElement
    1:   : nsIDOMSVGElement
    1: /*
    1:         The SVG DOM makes use of multiple interface inheritance.
    1:         Since XPCOM only supports single interface inheritance,
    1:         the best thing that we can do is to promise that whenever
    1:         an object implements _this_ interface it will also
    1:         implement the following interfaces. (We then have to QI to
    1:         hop between them.)
    1:         
    1:     nsIDOMSVGTests,
    1:     nsIDOMSVGLangSpace,
    1:     nsIDOMSVGExternalResourcesRequired,
    1:     nsIDOMSVGStylable,
    1:     nsIDOMSVGLocatable,
    1:     nsIDOMSVGFitToViewBox,
    1:     nsIDOMSVGZoomAndPan,
    1:     events::nsIDOMEventTarget,
    1: */
    1: { 
    1:   readonly attribute nsIDOMSVGAnimatedLength x;
    1:   readonly attribute nsIDOMSVGAnimatedLength y;
    1:   readonly attribute nsIDOMSVGAnimatedLength width;
    1:   readonly attribute nsIDOMSVGAnimatedLength height;
    1:   attribute DOMString         contentScriptType;
    1:       // raises DOMException on setting
    1:   attribute DOMString         contentStyleType;
    1:       // raises DOMException on setting
    1:   readonly attribute nsIDOMSVGRect     viewport;
    1:   readonly attribute float pixelUnitToMillimeterX;
    1:   readonly attribute float pixelUnitToMillimeterY;
    1:   readonly attribute float screenPixelToMillimeterX;
    1:   readonly attribute float screenPixelToMillimeterY;
    1:   attribute boolean useCurrentView;
    1:       // raises DOMException on setting
    1:   readonly attribute nsIDOMSVGViewSpec currentView;
    1:   attribute float currentScale;
    1:       // raises DOMException on setting
    1:   readonly attribute nsIDOMSVGPoint currentTranslate;
    1: 
    1:   unsigned long suspendRedraw(in unsigned long max_wait_milliseconds);
    1:   void          unsuspendRedraw(in unsigned long suspend_handle_id);
    1:       // raises( DOMException );
    1:   void          unsuspendRedrawAll();
    1:   void          forceRedraw();
    1:   void          pauseAnimations();
    1:   void          unpauseAnimations();
    1:   boolean       animationsPaused();
    1:   float         getCurrentTime();
    1:   void          setCurrentTime(in float seconds);
    1:   nsIDOMNodeList getIntersectionList(in nsIDOMSVGRect rect,
    1:                                      in nsIDOMSVGElement referenceElement);
    1:   nsIDOMNodeList getEnclosureList(in nsIDOMSVGRect rect, in nsIDOMSVGElement referenceElement);
    1:   boolean       checkIntersection(in nsIDOMSVGElement element, in nsIDOMSVGRect rect);
    1:   boolean       checkEnclosure(in nsIDOMSVGElement element, in nsIDOMSVGRect rect);
    1:   void          deSelectAll();
    1:   nsIDOMSVGNumber       createSVGNumber();
    1:   nsIDOMSVGLength       createSVGLength();
    1:   nsIDOMSVGAngle        createSVGAngle();
    1:   nsIDOMSVGPoint        createSVGPoint();
    1:   nsIDOMSVGMatrix       createSVGMatrix();
    1:   nsIDOMSVGRect         createSVGRect();
    1:   nsIDOMSVGTransform    createSVGTransform();
    1:   nsIDOMSVGTransform    createSVGTransformFromMatrix(in nsIDOMSVGMatrix matrix);
    1:   nsIDOMElement         getElementById(in DOMString elementId);
    1: };

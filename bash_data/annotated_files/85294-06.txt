78085: //* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
78085: /* vim: set ts=2 et sw=2 tw=80: */
78085: /* ***** BEGIN LICENSE BLOCK *****
78085:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
78085:  *
78085:  * The contents of this file are subject to the Mozilla Public License Version
78085:  * 1.1 (the "License"); you may not use this file except in compliance with
78085:  * the License. You may obtain a copy of the License at
78085:  * http://www.mozilla.org/MPL/
78085:  *
78085:  * Software distributed under the License is distributed on an "AS IS" basis,
78085:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
78085:  * for the specific language governing rights and limitations under the
78085:  * License.
78085:  *
78085:  * The Original Code is Url Classifier code
78085:  *
78085:  * The Initial Developer of the Original Code is
78085:  * the Mozilla Foundation
78085:  * Portions created by the Initial Developer are Copyright (C) 2011
78085:  * the Initial Developer. All Rights Reserved.
78085:  *
78085:  * Contributor(s):
78085:  *   Gian-Carlo Pascutto <gpascutto@mozilla.com>
78085:  *   Mehdi Mulani <mars.martian+bugmail@gmail.com>
78085:  *
78085:  * Alternatively, the contents of this file may be used under the terms of
78085:  * either the GNU General Public License Version 2 or later (the "GPL"), or
78085:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
78085:  * in which case the provisions of the GPL or the LGPL are applicable instead
78085:  * of those above. If you wish to allow use of your version of this file only
78085:  * under the terms of either the GPL or the LGPL, and not to allow others to
78085:  * use your version of this file under the terms of the MPL, indicate your
78085:  * decision by deleting the provisions above and replace them with the notice
78085:  * and other provisions required by the GPL or the LGPL. If you do not delete
78085:  * the provisions above, a recipient may use your version of this file under
78085:  * the terms of any one of the MPL, the GPL or the LGPL.
78085:  *
78085:  * ***** END LICENSE BLOCK ***** */
78085: 
78085: #ifndef nsUrlClassifierPrefixSet_h_
78085: #define nsUrlClassifierPrefixSet_h_
78085: 
78085: #include "nsISupportsUtils.h"
78085: #include "nsID.h"
78090: #include "nsIFile.h"
78085: #include "nsIUrlClassifierPrefixSet.h"
82207: #include "nsIMemoryReporter.h"
78085: #include "nsToolkitCompsCID.h"
78087: #include "mozilla/Mutex.h"
78087: #include "mozilla/CondVar.h"
78090: #include "mozilla/FileUtils.h"
78085: 
82207: class nsPrefixSetReporter;
82207: 
78085: class nsUrlClassifierPrefixSet : public nsIUrlClassifierPrefixSet
78085: {
78085: public:
78085:   nsUrlClassifierPrefixSet();
82207:   virtual ~nsUrlClassifierPrefixSet();
78085: 
78087:   NS_IMETHOD SetPrefixes(const PRUint32* aArray, PRUint32 aLength);
79445:   NS_IMETHOD Probe(PRUint32 aPrefix, PRUint32 aKey, bool* aReady, bool* aFound);
79445:   NS_IMETHOD IsEmpty(bool * aEmpty);
78090:   NS_IMETHOD LoadFromFile(nsIFile* aFile);
78090:   NS_IMETHOD StoreToFile(nsIFile* aFile);
78092:   NS_IMETHOD GetKey(PRUint32* aKey);
78085: 
78085:   NS_DECL_ISUPPORTS
78085: 
84704:   // Return the estimated size of the set on disk and in memory,
84704:   // in bytes
84704:   size_t SizeOfIncludingThis(nsMallocSizeOfFun mallocSizeOf);
84704: 
78085: protected:
78085:   static const PRUint32 DELTAS_LIMIT = 100;
78085:   static const PRUint32 MAX_INDEX_DIFF = (1 << 16);
78090:   static const PRUint32 PREFIXSET_VERSION_MAGIC = 1;
78085: 
78090:   mozilla::Mutex mPrefixSetLock;
78090:   mozilla::CondVar mSetIsReady;
82207:   nsRefPtr<nsPrefixSetReporter> mReporter;
78087: 
85294:   nsresult Contains(PRUint32 aPrefix, bool* aFound);
85294:   nsresult MakePrefixSet(const PRUint32* aArray, PRUint32 aLength);
78085:   PRUint32 BinSearch(PRUint32 start, PRUint32 end, PRUint32 target);
78090:   nsresult LoadFromFd(mozilla::AutoFDClose & fileFd);
78090:   nsresult StoreToFd(mozilla::AutoFDClose & fileFd);
78092:   nsresult InitKey();
78085: 
78085:   // boolean indicating whether |setPrefixes| has been
78085:   // called with a non-empty array.
79445:   bool mHasPrefixes;
78092:   // key used to randomize hash collisions
78092:   PRUint32 mRandomKey;
78085:   // the prefix for each index.
85294:   FallibleTArray<PRUint32> mIndexPrefixes;
78085:   // the value corresponds to the beginning of the run
78085:   // (an index in |_deltas|) for the index
85294:   FallibleTArray<PRUint32> mIndexStarts;
78087:   // array containing deltas from indices.
85294:   FallibleTArray<PRUint16> mDeltas;
82207: 
78085: };
78085: 
78085: #endif

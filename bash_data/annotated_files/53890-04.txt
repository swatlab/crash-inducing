29805: /*
29805:  * Copyright (c) 2009 Mozilla Foundation
29805:  *
29805:  * Permission is hereby granted, free of charge, to any person obtaining a 
29805:  * copy of this software and associated documentation files (the "Software"), 
29805:  * to deal in the Software without restriction, including without limitation 
29805:  * the rights to use, copy, modify, merge, publish, distribute, sublicense, 
29805:  * and/or sell copies of the Software, and to permit persons to whom the 
29805:  * Software is furnished to do so, subject to the following conditions:
29805:  *
29805:  * The above copyright notice and this permission notice shall be included in 
29805:  * all copies or substantial portions of the Software.
29805:  *
29805:  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
29805:  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
29805:  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL 
29805:  * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
29805:  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
29805:  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
29805:  * DEALINGS IN THE SOFTWARE.
29805:  */
29805: 
29805: /*
29805:  * THIS IS A GENERATED FILE. PLEASE DO NOT EDIT.
29805:  * Please edit StateSnapshot.java instead and regenerate.
29805:  */
29805: 
29805: #define nsHtml5StateSnapshot_cpp__
29805: 
29805: #include "prtypes.h"
29805: #include "nsIAtom.h"
34978: #include "nsHtml5AtomTable.h"
29805: #include "nsString.h"
29805: #include "nsINameSpaceManager.h"
29805: #include "nsIContent.h"
29805: #include "nsIDocument.h"
29805: #include "nsTraceRefcnt.h"
29805: #include "jArray.h"
29805: #include "nsHtml5DocumentMode.h"
29805: #include "nsHtml5ArrayCopy.h"
29805: #include "nsHtml5NamedCharacters.h"
48076: #include "nsHtml5NamedCharactersAccel.h"
29805: #include "nsHtml5Atoms.h"
29805: #include "nsHtml5ByteReadable.h"
32917: #include "nsIUnicodeDecoder.h"
34979: #include "nsAHtml5TreeBuilderState.h"
41449: #include "nsHtml5Macros.h"
29805: 
29805: #include "nsHtml5Tokenizer.h"
29805: #include "nsHtml5TreeBuilder.h"
29805: #include "nsHtml5MetaScanner.h"
29805: #include "nsHtml5AttributeName.h"
29805: #include "nsHtml5ElementName.h"
29805: #include "nsHtml5HtmlAttributes.h"
29805: #include "nsHtml5StackNode.h"
29805: #include "nsHtml5UTF16Buffer.h"
29805: #include "nsHtml5Portability.h"
29805: 
29805: #include "nsHtml5StateSnapshot.h"
29805: 
29805: 
53890: nsHtml5StateSnapshot::nsHtml5StateSnapshot(jArray<nsHtml5StackNode*,PRInt32> stack, jArray<nsHtml5StackNode*,PRInt32> listOfActiveFormattingElements, nsIContent** formPointer, nsIContent** headPointer, nsIContent** deepTreeSurrogateParent, PRInt32 mode, PRInt32 originalMode, PRBool framesetOk, PRBool inForeign, PRBool needToDropLF, PRBool quirks)
29805:   : stack(stack),
29805:     listOfActiveFormattingElements(listOfActiveFormattingElements),
34979:     formPointer(formPointer),
34979:     headPointer(headPointer),
53890:     deepTreeSurrogateParent(deepTreeSurrogateParent),
34979:     mode(mode),
34979:     originalMode(originalMode),
36587:     framesetOk(framesetOk),
41449:     inForeign(inForeign),
34979:     needToDropLF(needToDropLF),
34979:     quirks(quirks)
29805: {
29805:   MOZ_COUNT_CTOR(nsHtml5StateSnapshot);
29805: }
29805: 
34979: jArray<nsHtml5StackNode*,PRInt32> 
34979: nsHtml5StateSnapshot::getStack()
34979: {
34979:   return stack;
34979: }
34979: 
34979: jArray<nsHtml5StackNode*,PRInt32> 
34979: nsHtml5StateSnapshot::getListOfActiveFormattingElements()
34979: {
34979:   return listOfActiveFormattingElements;
34979: }
34979: 
34979: nsIContent** 
34979: nsHtml5StateSnapshot::getFormPointer()
34979: {
34979:   return formPointer;
34979: }
34979: 
34979: nsIContent** 
34979: nsHtml5StateSnapshot::getHeadPointer()
34979: {
34979:   return headPointer;
34979: }
34979: 
53890: nsIContent** 
53890: nsHtml5StateSnapshot::getDeepTreeSurrogateParent()
53890: {
53890:   return deepTreeSurrogateParent;
53890: }
53890: 
34979: PRInt32 
34979: nsHtml5StateSnapshot::getMode()
34979: {
34979:   return mode;
34979: }
34979: 
34979: PRInt32 
34979: nsHtml5StateSnapshot::getOriginalMode()
34979: {
34979:   return originalMode;
34979: }
34979: 
36587: PRBool 
36587: nsHtml5StateSnapshot::isFramesetOk()
36587: {
36587:   return framesetOk;
36587: }
36587: 
41449: PRBool 
41449: nsHtml5StateSnapshot::isInForeign()
34979: {
41449:   return inForeign;
34979: }
34979: 
34979: PRBool 
34979: nsHtml5StateSnapshot::isNeedToDropLF()
34979: {
34979:   return needToDropLF;
34979: }
34979: 
34979: PRBool 
34979: nsHtml5StateSnapshot::isQuirks()
34979: {
34979:   return quirks;
34979: }
34979: 
34979: PRInt32 
40984: nsHtml5StateSnapshot::getListOfActiveFormattingElementsLength()
34979: {
34979:   return listOfActiveFormattingElements.length;
34979: }
34979: 
34979: PRInt32 
34979: nsHtml5StateSnapshot::getStackLength()
34979: {
34979:   return stack.length;
34979: }
34979: 
29805: 
29805: nsHtml5StateSnapshot::~nsHtml5StateSnapshot()
29805: {
29805:   MOZ_COUNT_DTOR(nsHtml5StateSnapshot);
29805:   for (PRInt32 i = 0; i < stack.length; i++) {
29805:     stack[i]->release();
29805:   }
29805:   stack.release();
29805:   for (PRInt32 i = 0; i < listOfActiveFormattingElements.length; i++) {
41449:     if (listOfActiveFormattingElements[i]) {
29805:       listOfActiveFormattingElements[i]->release();
29805:     }
29805:   }
29805:   listOfActiveFormattingElements.release();
34979:   ;
29805: }
29805: 
29805: void
29805: nsHtml5StateSnapshot::initializeStatics()
29805: {
29805: }
29805: 
29805: void
29805: nsHtml5StateSnapshot::releaseStatics()
29805: {
29805: }
29805: 
29805: 

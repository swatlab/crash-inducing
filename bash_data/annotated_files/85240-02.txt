 3037: /******* BEGIN LICENSE BLOCK *******
 3037:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 3037:  * 
 3037:  * The contents of this file are subject to the Mozilla Public License Version
 3037:  * 1.1 (the "License"); you may not use this file except in compliance with
 3037:  * the License. You may obtain a copy of the License at
 3037:  * http://www.mozilla.org/MPL/
 3037:  * 
 3037:  * Software distributed under the License is distributed on an "AS IS" basis,
 3037:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 3037:  * for the specific language governing rights and limitations under the
 3037:  * License.
 3037:  * 
 3037:  * The Initial Developers of the Original Code are Kevin Hendricks (MySpell)
 3042:  * and László Németh (Hunspell). Portions created by the Initial Developers
 3037:  * are Copyright (C) 2002-2005 the Initial Developers. All Rights Reserved.
 3037:  * 
 3037:  * Contributor(s): Kevin Hendricks (kevin.hendricks@sympatico.ca)
 3042:  *                 David Einstein (deinst@world.std.com)
 3037:  *                 László Németh (nemethl@gyorsposta.hu)
43385:  *                 L. David Baron (dbaron@dbaron.org)
43385:  *                 Caolan McNamara (caolanm@redhat.com)
 3037:  *                 Davide Prina
 3037:  *                 Giuseppe Modugno
 3037:  *                 Gianluca Turconi
 3037:  *                 Simon Brouwer
 3037:  *                 Noll Janos
 3037:  *                 Biro Arpad
 3037:  *                 Goldman Eleonora
 3037:  *                 Sarlos Tamas
 3037:  *                 Bencsath Boldizsar
 3037:  *                 Halacsy Peter
 3037:  *                 Dvornik Laszlo
 3037:  *                 Gefferth Andras
 3037:  *                 Nagy Viktor
 3037:  *                 Varga Daniel
 3037:  *                 Chris Halls
 3037:  *                 Rene Engelhard
 3037:  *                 Bram Moolenaar
 3037:  *                 Dafydd Jones
 3037:  *                 Harri Pitkanen
 3037:  *                 Andras Timar
 3037:  *                 Tor Lillqvist
 3037:  * 
 3037:  * Alternatively, the contents of this file may be used under the terms of
 3037:  * either the GNU General Public License Version 2 or later (the "GPL"), or
 3037:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 3037:  * in which case the provisions of the GPL or the LGPL are applicable instead
 3037:  * of those above. If you wish to allow use of your version of this file only
 3037:  * under the terms of either the GPL or the LGPL, and not to allow others to
 3037:  * use your version of this file under the terms of the MPL, indicate your
 3037:  * decision by deleting the provisions above and replace them with the notice
 3037:  * and other provisions required by the GPL or the LGPL. If you do not delete
 3037:  * the provisions above, a recipient may use your version of this file under
 3037:  * the terms of any one of the MPL, the GPL or the LGPL.
 3037:  *
 3037:  ******* END LICENSE BLOCK *******/
 3037: 
 3037: #include <stdlib.h> 
 3037: #include <string.h>
 3037: #include <stdio.h> 
 5768: #include <ctype.h>
 3037: 
43385: #include "csutil.hxx"
21326: #include "atypes.hxx"
 3037: #include "langnum.hxx"
 3037: 
63910: // Unicode character encoding information
63910: struct unicode_info {
63910:   unsigned short c;
63910:   unsigned short cupper;
63910:   unsigned short clower;
63910: };
63910: 
 3037: #ifdef OPENOFFICEORG
 3037: #  include <unicode/uchar.h>
 3037: #else
 3037: #  ifndef MOZILLA_CLIENT
 3037: #    include "utf_info.cxx"
 3037: #    define UTF_LST_LEN (sizeof(utf_lst) / (sizeof(unicode_info)))
 3037: #  endif
 3037: #endif
 3037: 
 3037: #ifdef MOZILLA_CLIENT
 3037: #include "nsCOMPtr.h"
 3037: #include "nsServiceManagerUtils.h"
 3037: #include "nsIUnicodeEncoder.h"
 3037: #include "nsIUnicodeDecoder.h"
63910: #include "nsUnicharUtils.h"
 3037: #include "nsICharsetConverterManager.h"
 3037: 
 3037: static NS_DEFINE_CID(kCharsetConverterManagerCID, NS_ICHARSETCONVERTERMANAGER_CID);
 3037: #endif
 3037: 
63910: struct unicode_info2 {
63910:   char cletter;
63910:   unsigned short cupper;
63910:   unsigned short clower;
63910: };
63910: 
 3648: static struct unicode_info2 * utf_tbl = NULL;
 3648: static int utf_tbl_count = 0; // utf_tbl can be used by multiple Hunspell instances
 3037: 
 3037: /* only UTF-16 (BMP) implementation */
 3037: char * u16_u8(char * dest, int size, const w_char * src, int srclen) {
21326:     signed char * u8 = (signed char *)dest;
21326:     signed char * u8_max = (signed char *)(u8 + size);
 3037:     const w_char * u2 = src;
 3037:     const w_char * u2_max = src + srclen;
 3037:     while ((u2 < u2_max) && (u8 < u8_max)) {
 3037:         if (u2->h) { // > 0xFF
 3037:             // XXX 4-byte haven't implemented yet.
 3037:             if (u2->h >= 0x08) {   // >= 0x800 (3-byte UTF-8 character)
 3037:                 *u8 = 0xe0 + (u2->h >> 4);
 3037:                 u8++;
 3037:                 if (u8 < u8_max) {
 3037:                     *u8 = 0x80 + ((u2->h & 0xf) << 2) + (u2->l >> 6);
 3037:                     u8++;
 3037:                     if (u8 < u8_max) {
 3037:                         *u8 = 0x80 + (u2->l & 0x3f);
 3037:                         u8++;
 3037:                     }
 3037:                 }
 3037:             } else { // < 0x800 (2-byte UTF-8 character)
 3037:                 *u8 = 0xc0 + (u2->h << 2) + (u2->l >> 6);
 3037:                 u8++;
 3037:                 if (u8 < u8_max) {
 3037:                     *u8 = 0x80 + (u2->l & 0x3f);
 3037:                     u8++;
 3037:                 }
 3037:             }
 3037:         } else { // <= 0xFF
 3037:             if (u2->l & 0x80) { // >0x80 (2-byte UTF-8 character)
 3037:                 *u8 = 0xc0 + (u2->l >> 6);
 3037:                 u8++;
 3037:                 if (u8 < u8_max) {
 3037:                     *u8 = 0x80 + (u2->l & 0x3f);
 3037:                     u8++;
 3037:                 }
 3037:             } else { // < 0x80 (1-byte UTF-8 character)
 3037:                 *u8 = u2->l;
 3037:                 u8++;
 3037:             }
 3037:         }
 3037:         u2++;
 3037:     }
 3037:     *u8 = '\0';
 3037:     return dest;
 3037: }
 3037: 
 3037: 
 3037: /* only UTF-16 (BMP) implementation */
 3037: int u8_u16(w_char * dest, int size, const char * src) {
21326:     const signed char * u8 = (const signed char *)src;
 3037:     w_char * u2 = dest;
 3037:     w_char * u2_max = u2 + size;
 3037:     
 3648:     while ((u2 < u2_max) && *u8) {
 3037:     switch ((*u8) & 0xf0) {
 3037:         case 0x00:
 3037:         case 0x10:
 3037:         case 0x20:
 3037:         case 0x30:
 3037:         case 0x40:
 3037:         case 0x50:
 3037:         case 0x60:
 3037:         case 0x70: {
 3037:             u2->h = 0;
 3037:             u2->l = *u8;
 3037:             break;
 3037:         }
 3037:         case 0x80:
 3037:         case 0x90:
 3037:         case 0xa0:
 3037:         case 0xb0: {
21326:             HUNSPELL_WARNING(stderr, "UTF-8 encoding error. Unexpected continuation bytes in %ld. character position\n%s\n", static_cast<long>(u8 - (signed char *)src), src);    
 3037:             u2->h = 0xff;
 3037:             u2->l = 0xfd;
 3037:             break;
 3037:         }
 3037:         case 0xc0:
 3037:         case 0xd0: {    // 2-byte UTF-8 codes
 3037:             if ((*(u8+1) & 0xc0) == 0x80) {
 3037:                 u2->h = (*u8 & 0x1f) >> 2;
 3037:                 u2->l = (*u8 << 6) + (*(u8+1) & 0x3f);
 3037:                 u8++;
 3037:             } else {
21326:                 HUNSPELL_WARNING(stderr, "UTF-8 encoding error. Missing continuation byte in %ld. character position:\n%s\n", static_cast<long>(u8 - (signed char *)src), src);
 3037:                 u2->h = 0xff;
 3037:                 u2->l = 0xfd;
 3037:             }
 3037:             break;
 3037:         }
 3037:         case 0xe0: {    // 3-byte UTF-8 codes
 3037:             if ((*(u8+1) & 0xc0) == 0x80) {
 3037:                 u2->h = ((*u8 & 0x0f) << 4) + ((*(u8+1) & 0x3f) >> 2);
 3037:                 u8++;
 3037:                 if ((*(u8+1) & 0xc0) == 0x80) {
 3037:                     u2->l = (*u8 << 6) + (*(u8+1) & 0x3f);
 3037:                     u8++;
 3037:                 } else {
21326:                     HUNSPELL_WARNING(stderr, "UTF-8 encoding error. Missing continuation byte in %ld. character position:\n%s\n", static_cast<long>(u8 - (signed char *)src), src);
 3037:                     u2->h = 0xff;
 3037:                     u2->l = 0xfd;
 3037:                 }
 3037:             } else {
21326:                 HUNSPELL_WARNING(stderr, "UTF-8 encoding error. Missing continuation byte in %ld. character position:\n%s\n", static_cast<long>(u8 - (signed char *)src), src);
 3037:                 u2->h = 0xff;
 3037:                 u2->l = 0xfd;
 3037:             }
 3037:             break;
 3037:         }
 3037:         case 0xf0: {    // 4 or more byte UTF-8 codes
 3037:             HUNSPELL_WARNING(stderr, "This UTF-8 encoding can't convert to UTF-16:\n%s\n", src);
 3037:             u2->h = 0xff;
 3037:             u2->l = 0xfd;
 3037:             return -1;
 3037:         }
 3037:     }
 3037:     u8++;
 3037:     u2++;
 3037:     }
43385:     return (int)(u2 - dest);
 3037: }
 3037: 
 3037: void flag_qsort(unsigned short flags[], int begin, int end) {
 3037:     unsigned short reg;
 3037:     if (end > begin) {
 3037:         unsigned short pivot = flags[begin];
 3037:         int l = begin + 1;
 3037:         int r = end;
 3037:         while(l < r) {
 3037:             if (flags[l] <= pivot) {
 3037:                 l++;
 3037:             } else {
 3037:              r--;
 3037:              reg = flags[l];
 3037:              flags[l] = flags[r];
 3037:              flags[r] = reg;
 3037:           }
 3037:        }
 3037:        l--;
 3037:        reg = flags[begin];
 3037:        flags[begin] = flags[l];
 3037:        flags[l] = reg;
 3037: 
 3037:        flag_qsort(flags, begin, l);
 3037:        flag_qsort(flags, r, end);
 3037:     }
 3037:  }
 3037: 
 3037: int flag_bsearch(unsigned short flags[], unsigned short flag, int length) {
 3037:    int mid;
 3037:    int left = 0;
 3037:    int right = length - 1;
 3037:    while (left <= right) {
 3037:       mid = (left + right) / 2;
 3037:       if (flags[mid] == flag) return 1;
 3037:       if (flag < flags[mid]) right = mid - 1;
 3037:       else left = mid + 1;
 3037:    }
 3037:    return 0;
 3037: }
 3037: 
 3037:  // strip strings into token based on single char delimiter
 3037:  // acts like strsep() but only uses a delim char and not
 3037:  // a delim string
 3037:  // default delimiter: white space characters
 3037:  
 3037:  char * mystrsep(char ** stringp, const char delim)
 3037:  {
 3037:    char * mp = *stringp;
21326:    if (*mp != '\0') {
 3037:       char * dp;
 3037:       if (delim) {
21326:         dp = strchr(mp, delim);
 3037:       } else {
 3037:         // don't use isspace() here, the string can be in some random charset
 3037:         // that's way different than the locale's
 3037:         for (dp = mp; (*dp && *dp != ' ' && *dp != '\t'); dp++);
 3037:         if (!*dp) dp = NULL;
 3037:       }
 3037:       if (dp) {
 3037:          *stringp = dp+1;
47948:          *dp = '\0';
 3037:       } else {
21326:          *stringp = mp + strlen(mp);
43385:       }
21326:       return mp;
 3037:    }
 3037:    return NULL;
 3037:  }
 3037: 
 3037:  // replaces strdup with ansi version
 3037:  char * mystrdup(const char * s)
 3037:  {
 3037:    char * d = NULL;
 3037:    if (s) {
47948:       size_t sl = strlen(s)+1;
43385:       d = (char *) malloc(sl);
21326:       if (d) {
43385:          memcpy(d,s,sl);
43385:       } else {
43385:          HUNSPELL_WARNING(stderr, "Can't allocate memory.\n");
21326:       }
 3037:    }
 3037:    return d;
 3037:  }
 3037: 
21326:  // strcat for limited length destination string
21326:  char * mystrcat(char * dest, const char * st, int max) {
21326:    int len;
21326:    int len2;
21326:    if (dest == NULL || st == NULL) return dest;
21326:    len = strlen(dest);
21326:    len2 = strlen(st);
21326:    if (len + len2 + 1 > max) return dest;
21326:    strcpy(dest + len, st);
21326:    return dest;
21326:  }
 3037: 
 3037:  // remove cross-platform text line end characters
 3037:  void mychomp(char * s)
 3037:  {
47948:    size_t k = strlen(s);
 3037:    if ((k > 0) && ((*(s+k-1)=='\r') || (*(s+k-1)=='\n'))) *(s+k-1) = '\0';
 3037:    if ((k > 1) && (*(s+k-2) == '\r')) *(s+k-2) = '\0';
 3037:  }
 3037:  
 3037:  
 3037:  //  does an ansi strdup of the reverse of a string
 3037:  char * myrevstrdup(const char * s)
 3037:  {
 3037:      char * d = NULL;
 3037:      if (s) {
47948:         size_t sl = strlen(s);
43385:         d = (char *) malloc(sl+1);
 3037:         if (d) {
 3037:           const char * p = s + sl - 1;
 3037:           char * q = d;
 3037:           while (p >= s) *q++ = *p--;
 3037:           *q = '\0';
43385:         } else {
43385:           HUNSPELL_WARNING(stderr, "Can't allocate memory.\n");
 3037:         }
 3037:      }
 3037:      return d;
 3037:  }
 3037: 
21326: // break text to lines
21326: // return number of lines
21326: int line_tok(const char * text, char *** lines, char breakchar) {
21326:     int linenum = 0;
43385:     if (!text) {
43385:         return linenum;
43385:     }
21326:     char * dup = mystrdup(text);
21326:     char * p = strchr(dup, breakchar);
21326:     while (p) {
21326:         linenum++;
21326:         *p = '\0';
21326:         p++;
21326:         p = strchr(p, breakchar);
21326:     }
21326:     linenum++;
21326:     *lines = (char **) malloc(linenum * sizeof(char *));
21326:     if (!(*lines)) {
21326:         free(dup);
21326:         return 0;
21326:     }
21326: 
21326:     p = dup;
21326:     int l = 0;
21326:     for (int i = 0; i < linenum; i++) {
21326:         if (*p != '\0') {
21326:             (*lines)[l] = mystrdup(p);
21326:             if (!(*lines)[l]) {
21326:                 for (i = 0; i < l; i++) free((*lines)[i]);
21326:                 free(dup);
21326:                 return 0;
21326:             }
21326:             l++;
21326:         }
21326:         p += strlen(p) + 1;
21326:     }
21326:     free(dup);
21326:     if (!l) free(*lines);
21326:     return l;
21326: }
21326: 
21326: // uniq line in place
21326: char * line_uniq(char * text, char breakchar) {
21326:     char ** lines;
21326:     int linenum = line_tok(text, &lines, breakchar);
21326:     int i;
21326:     strcpy(text, lines[0]);
21326:     for ( i = 1; i < linenum; i++ ) {
21326:         int dup = 0;
21326:         for (int j = 0; j < i; j++) {
21326:             if (strcmp(lines[i], lines[j]) == 0) dup = 1;
21326:         }
21326:         if (!dup) {
21326:             if ((i > 1) || (*(lines[0]) != '\0')) {
21326:                 sprintf(text + strlen(text), "%c", breakchar);
21326:             }
21326:             strcat(text, lines[i]);
21326:         }
21326:     }
21326:     for ( i = 0; i < linenum; i++ ) {
21326:         if (lines[i]) free(lines[i]);
21326:     }
21326:     if (lines) free(lines);
21326:     return text;
21326: }
21326: 
21326: // uniq and boundary for compound analysis: "1\n\2\n\1" -> " ( \1 | \2 ) "
21326: char * line_uniq_app(char ** text, char breakchar) {
21326:     if (!strchr(*text, breakchar)) {
21326:         return *text;
21326:     }
21326:     
21326:     char ** lines;
21326:     int i;
21326:     int linenum = line_tok(*text, &lines, breakchar);
21326:     int dup = 0;
21326:     for (i = 0; i < linenum; i++) {
21326:         for (int j = 0; j < (i - 1); j++) {
21326:             if (strcmp(lines[i], lines[j]) == 0) {
21326:                 *(lines[i]) = '\0';
21326:                 dup++;
21326:                 break;
21326:             }
21326:         }
21326:     }
21326:     if ((linenum - dup) == 1) {
21326:         strcpy(*text, lines[0]);
21326:         freelist(&lines, linenum);
21326:         return *text;
21326:     }
21326:     char * newtext = (char *) malloc(strlen(*text) + 2 * linenum + 3 + 1);
21326:     if (newtext) {
21326:         free(*text);
21326:         *text = newtext;
21326:     } else {
21326:         freelist(&lines, linenum);
21326:         return *text;
21326:     }    
21326:     strcpy(*text," ( ");
21326:     for (i = 0; i < linenum; i++) if (*(lines[i])) {
21326:         sprintf(*text + strlen(*text), "%s%s", lines[i], " | ");
21326:     }
21326:     (*text)[strlen(*text) - 2] = ')'; // " ) "
21326:     freelist(&lines, linenum);
21326:     return *text;
21326: }
21326: 
 3037:  // append s to ends of every lines in text
 3037:  void strlinecat(char * dest, const char * s)
 3037:  {
 3037:     char * dup = mystrdup(dest);
 3037:     char * source = dup;
 3037:     int len = strlen(s);
21326:     if (dup) {
 3037:         while (*source) {
 3037:             if (*source == '\n') {
 3037:                 strncpy(dest, s, len);
 3037:                 dest += len;
 3037:             }
 3037:             *dest = *source;
 3037:             source++; dest++;
 3037:         }
 3037:         strcpy(dest, s);
 3037:         free(dup);
 3037:     }
 3037:  }
 3037: 
21326: // change \n to char c
21326: char * tr(char * text, char oldc, char newc) {
21326:     char * p;
21326:     for (p = text; *p; p++) if (*p == oldc) *p = newc;
 3037:     return text;
 3037: }
 3037: 
21326: // morphcmp(): compare MORPH_DERI_SFX, MORPH_INFL_SFX and MORPH_TERM_SFX fields
21326: // in the first line of the inputs
21326: // return 0, if inputs equal
21326: // return 1, if inputs may equal with a secondary suffix
21326: // otherwise return -1
21326: int morphcmp(const char * s, const char * t)
21326: {
21326:     int se = 0;
21326:     int te = 0;
21326:     const char * sl;
21326:     const char * tl;    
21326:     const char * olds;
21326:     const char * oldt;
21326:     if (!s || !t) return 1;
21326:     olds = s;
21326:     sl = strchr(s, '\n');
21326:     s = strstr(s, MORPH_DERI_SFX);
21326:     if (!s || (sl && sl < s)) s = strstr(olds, MORPH_INFL_SFX);
21326:     if (!s || (sl && sl < s)) {
21326:         s= strstr(olds, MORPH_TERM_SFX);
21326:         olds = NULL;
21326:     }
21326:     oldt = t;
21326:     tl = strchr(t, '\n');
21326:     t = strstr(t, MORPH_DERI_SFX);
21326:     if (!t || (tl && tl < t)) t = strstr(oldt, MORPH_INFL_SFX);
21326:     if (!t || (tl && tl < t)) {
21326:         t = strstr(oldt, MORPH_TERM_SFX);
21326:         oldt = NULL;
21326:     }
21326:     while (s && t && (!sl || sl > s) && (!tl || tl > t)) {
21326:         s += MORPH_TAG_LEN;
21326:         t += MORPH_TAG_LEN;
21326:         se = 0;
21326:         te = 0;
21326:         while ((*s == *t) && !se && !te) {
21326:             s++;
21326:             t++;
21326:             switch(*s) {
21326:                 case ' ':
21326:                 case '\n':
21326:                 case '\t':
21326:                 case '\0': se = 1;
21326:             }
21326:             switch(*t) {
21326:                 case ' ':
21326:                 case '\n':
21326:                 case '\t':
21326:                 case '\0': te = 1;
21326:             }
21326:         }
21326:         if (!se || !te) {
21326:             // not terminal suffix difference
21326:             if (olds) return -1;
21326:             return 1;
21326:         }
21326:         olds = s;
21326:         s = strstr(s, MORPH_DERI_SFX);
21326:         if (!s || (sl && sl < s)) s = strstr(olds, MORPH_INFL_SFX);
21326:         if (!s || (sl && sl < s)) {
21326:             s = strstr(olds, MORPH_TERM_SFX);
21326:             olds = NULL;
21326:         }
21326:         oldt = t;
21326:         t = strstr(t, MORPH_DERI_SFX);
21326:         if (!t || (tl && tl < t)) t = strstr(oldt, MORPH_INFL_SFX);
21326:         if (!t || (tl && tl < t)) {
21326:             t = strstr(oldt, MORPH_TERM_SFX);
21326:             oldt = NULL;
21326:         }
21326:     }
21326:     if (!s && !t && se && te) return 0;
21326:     return 1;
 3037: }
 3037: 
21326: int get_sfxcount(const char * morph)
21326: {
21326:     if (!morph || !*morph) return 0;
21326:     int n = 0;
21326:     const char * old = morph;
21326:     morph = strstr(morph, MORPH_DERI_SFX);
21326:     if (!morph) morph = strstr(old, MORPH_INFL_SFX);
21326:     if (!morph) morph = strstr(old, MORPH_TERM_SFX);
21326:     while (morph) {
21326:         n++;
21326:         old = morph;
21326:         morph = strstr(morph + 1, MORPH_DERI_SFX);
21326:         if (!morph) morph = strstr(old + 1, MORPH_INFL_SFX);
21326:         if (!morph) morph = strstr(old + 1, MORPH_TERM_SFX);
21326:     }
21326:     return n;
21326: }
 3037: 
21326: 
21326: int fieldlen(const char * r)
21326: {
21326:     int n = 0;
43385:     while (r && *r != ' ' && *r != '\t' && *r != '\0' && *r != '\n') {
21326:         r++;
21326:         n++;
 3037:     }
21326:     return n;
 3037: }
21326: 
21326: char * copy_field(char * dest, const char * morph, const char * var)
21326: {
21326:     if (!morph) return NULL;
21326:     const char * beg = strstr(morph, var);
21326:     if (beg) {
21326:        char * d = dest;
21326:        for (beg += MORPH_TAG_LEN; *beg != ' ' && *beg != '\t' &&
21326:             *beg != '\n' && *beg != '\0'; d++, beg++) {
21326:          *d = *beg;
 3037:        }
21326:        *d = '\0';
21326:        return dest;
 3037:   }
21326:   return NULL;
 3037: }
 3037: 
 3037: char * mystrrep(char * word, const char * pat, const char * rep) {
 3037:     char * pos = strstr(word, pat);
 3037:     if (pos) {
 3037:       int replen = strlen(rep);
 3037:       int patlen = strlen(pat);
63910:       while (pos) {
 3037:         if (replen < patlen) {
 3037:             char * end = word + strlen(word);
 3037:             char * next = pos + replen;
 3037:             char * prev = pos + strlen(pat);
 3037:             for (; prev < end; *next = *prev, prev++, next++);
 3037:             *next = '\0';
 3037:         } else if (replen > patlen) {
 3037:             char * end = pos + patlen;
 3037:             char * next = word + strlen(word) + replen - patlen;
 3037:             char * prev = next - replen + patlen;
 3037:             for (; prev >= end; *next = *prev, prev--, next--);
 3037:         }
 3037:         strncpy(pos, rep, replen);
63910:         pos = strstr(word, pat);
63910:       }
 3037:     }
 3037:     return word;
 3037: }
 3037: 
 3037:  // reverse word 
 3037:  int reverseword(char * word) {
 3037:    char r;
 3037:    for (char * dest = word + strlen(word) - 1; word < dest; word++, dest--) {
 3037:      r=*word;
 3037:      *word = *dest;
 3037:      *dest = r;
 3037:    }
 3037:    return 0;
 3037:  }
 3037: 
 3037:  // reverse word (error: 1)
 3037:  int reverseword_utf(char * word) {
 3037:    w_char w[MAXWORDLEN];
 3037:    w_char * p;
 3037:    w_char r;
 3037:    int l = u8_u16(w, MAXWORDLEN, word);
 3037:    if (l == -1) return 1;
 3037:    p = w;
 3037:    for (w_char * dest = w + l - 1; p < dest; p++, dest--) {
 3037:      r=*p;
 3037:      *p = *dest;
 3037:      *dest = r;
 3037:    }
 3037:    u16_u8(word, MAXWORDUTF8LEN, w, l);
 3037:    return 0;
 3037:  }
 3037: 
21326:  int uniqlist(char ** list, int n) {
21326:    int i;
21326:    if (n < 2) return n;
21326:    for (i = 0; i < n; i++) {
21326:      for (int j = 0; j < i; j++) {
21326:         if (list[j] && list[i] && (strcmp(list[j], list[i]) == 0)) {
21326:             free(list[i]);
21326:             list[i] = NULL;
21326:             break;
21326:         }
21326:      }
21326:    } 
21326:    int m = 1;  
21326:    for (i = 1; i < n; i++) if (list[i]) {
21326:         list[m] = list[i];
21326:         m++;
21326:     }
21326:    return m;
21326:  }
21326:  
21326:  void freelist(char *** list, int n) {
21326:    if (list && *list && n > 0) {
21326:      for (int i = 0; i < n; i++) if ((*list)[i]) free((*list)[i]);
21326:      free(*list);
21326:      *list = NULL;
21326:    }
21326:  }
21326:  
 3037:  // convert null terminated string to all caps
 3037:  void mkallcap(char * p, const struct cs_info * csconv)
 3037:  {
 3037:    while (*p != '\0') {
 3037:      *p = csconv[((unsigned char) *p)].cupper;
 3037:      p++;
 3037:    }
 3037:  }
 3037:   
 3037:  // convert null terminated string to all little
 3037:  void mkallsmall(char * p, const struct cs_info * csconv)
 3037:  {
 3037:    while (*p != '\0') {
 3037:      *p = csconv[((unsigned char) *p)].clower;
 3037:      p++;
 3037:    }
 3037:  }
 3037: 
 3037: void mkallsmall_utf(w_char * u, int nc, int langnum) {
 3037:     for (int i = 0; i < nc; i++) {
 3037:         unsigned short idx = (u[i].h << 8) + u[i].l;
 3037:         if (idx != unicodetolower(idx, langnum)) {
 3037:             u[i].h = (unsigned char) (unicodetolower(idx, langnum) >> 8);
 3037:             u[i].l = (unsigned char) (unicodetolower(idx, langnum) & 0x00FF);
 3037:         }
 3037:     }
 3037: }
 3037: 
 3037: void mkallcap_utf(w_char * u, int nc, int langnum) {
 3037:     for (int i = 0; i < nc; i++) {
 3037:         unsigned short idx = (u[i].h << 8) + u[i].l;
 3037:         if (idx != unicodetoupper(idx, langnum)) {
 3037:             u[i].h = (unsigned char) (unicodetoupper(idx, langnum) >> 8);
 3037:             u[i].l = (unsigned char) (unicodetoupper(idx, langnum) & 0x00FF);
 3037:         }
 3037:     }
 3037: }
 3037:  
43385:  // convert null terminated string to have initial capital
 3037:  void mkinitcap(char * p, const struct cs_info * csconv)
 3037:  {
 3037:    if (*p != '\0') *p = csconv[((unsigned char)*p)].cupper;
 3037:  }
 3037: 
21326:  // conversion function for protected memory
21326:  void store_pointer(char * dest, char * source)
21326:  {
21326:     memcpy(dest, &source, sizeof(char *));
21326:  }
21326: 
21326:  // conversion function for protected memory
43385:  char * get_stored_pointer(const char * s)
21326:  {
21326:     char * p;
21326:     memcpy(&p, s, sizeof(char *));
21326:     return p;
21326:  }
21326: 
 3037: #ifndef MOZILLA_CLIENT
 3037:  // convert null terminated string to all caps using encoding
 3037:  void enmkallcap(char * d, const char * p, const char * encoding)
 3037:  
 3037:  {
 3037:    struct cs_info * csconv = get_current_cs(encoding);
 3037:    while (*p != '\0') {
 3037:      *d++ = csconv[((unsigned char) *p)].cupper;
 3037:      p++;
 3037:    }
 3037:    *d = '\0';
 3037:  }
 3037: 
 3037:  // convert null terminated string to all little using encoding
 3037:  void enmkallsmall(char * d, const char * p, const char * encoding)
 3037:  {
 3037:    struct cs_info * csconv = get_current_cs(encoding);
 3037:    while (*p != '\0') {
 3037:      *d++ = csconv[((unsigned char) *p)].clower;
 3037:      p++;
 3037:    }
 3037:    *d = '\0';
 3037:  }
 3037: 
43385:  // convert null terminated string to have initial capital using encoding
 3037:  void enmkinitcap(char * d, const char * p, const char * encoding)
 3037:  {
 3037:    struct cs_info * csconv = get_current_cs(encoding);
 3037:    memcpy(d,p,(strlen(p)+1));
 3037:    if (*p != '\0') *d= csconv[((unsigned char)*p)].cupper;
 3037:  }
 3037: 
 3037: // these are simple character mappings for the 
 3037: // encodings supported
 3037: // supplying isupper, tolower, and toupper
 3037: 
43385: static struct cs_info iso1_tbl[] = {
 3037: { 0x00, 0x00, 0x00 },
 3037: { 0x00, 0x01, 0x01 },
 3037: { 0x00, 0x02, 0x02 },
 3037: { 0x00, 0x03, 0x03 },
 3037: { 0x00, 0x04, 0x04 },
 3037: { 0x00, 0x05, 0x05 },
 3037: { 0x00, 0x06, 0x06 },
 3037: { 0x00, 0x07, 0x07 },
 3037: { 0x00, 0x08, 0x08 },
 3037: { 0x00, 0x09, 0x09 },
 3037: { 0x00, 0x0a, 0x0a },
 3037: { 0x00, 0x0b, 0x0b },
 3037: { 0x00, 0x0c, 0x0c },
 3037: { 0x00, 0x0d, 0x0d },
 3037: { 0x00, 0x0e, 0x0e },
 3037: { 0x00, 0x0f, 0x0f },
 3037: { 0x00, 0x10, 0x10 },
 3037: { 0x00, 0x11, 0x11 },
 3037: { 0x00, 0x12, 0x12 },
 3037: { 0x00, 0x13, 0x13 },
 3037: { 0x00, 0x14, 0x14 },
 3037: { 0x00, 0x15, 0x15 },
 3037: { 0x00, 0x16, 0x16 },
 3037: { 0x00, 0x17, 0x17 },
 3037: { 0x00, 0x18, 0x18 },
 3037: { 0x00, 0x19, 0x19 },
 3037: { 0x00, 0x1a, 0x1a },
 3037: { 0x00, 0x1b, 0x1b },
 3037: { 0x00, 0x1c, 0x1c },
 3037: { 0x00, 0x1d, 0x1d },
 3037: { 0x00, 0x1e, 0x1e },
 3037: { 0x00, 0x1f, 0x1f },
 3037: { 0x00, 0x20, 0x20 },
 3037: { 0x00, 0x21, 0x21 },
 3037: { 0x00, 0x22, 0x22 },
 3037: { 0x00, 0x23, 0x23 },
 3037: { 0x00, 0x24, 0x24 },
 3037: { 0x00, 0x25, 0x25 },
 3037: { 0x00, 0x26, 0x26 },
 3037: { 0x00, 0x27, 0x27 },
 3037: { 0x00, 0x28, 0x28 },
 3037: { 0x00, 0x29, 0x29 },
 3037: { 0x00, 0x2a, 0x2a },
 3037: { 0x00, 0x2b, 0x2b },
 3037: { 0x00, 0x2c, 0x2c },
 3037: { 0x00, 0x2d, 0x2d },
 3037: { 0x00, 0x2e, 0x2e },
 3037: { 0x00, 0x2f, 0x2f },
 3037: { 0x00, 0x30, 0x30 },
 3037: { 0x00, 0x31, 0x31 },
 3037: { 0x00, 0x32, 0x32 },
 3037: { 0x00, 0x33, 0x33 },
 3037: { 0x00, 0x34, 0x34 },
 3037: { 0x00, 0x35, 0x35 },
 3037: { 0x00, 0x36, 0x36 },
 3037: { 0x00, 0x37, 0x37 },
 3037: { 0x00, 0x38, 0x38 },
 3037: { 0x00, 0x39, 0x39 },
 3037: { 0x00, 0x3a, 0x3a },
 3037: { 0x00, 0x3b, 0x3b },
 3037: { 0x00, 0x3c, 0x3c },
 3037: { 0x00, 0x3d, 0x3d },
 3037: { 0x00, 0x3e, 0x3e },
 3037: { 0x00, 0x3f, 0x3f },
 3037: { 0x00, 0x40, 0x40 },
 3037: { 0x01, 0x61, 0x41 },
 3037: { 0x01, 0x62, 0x42 },
 3037: { 0x01, 0x63, 0x43 },
 3037: { 0x01, 0x64, 0x44 },
 3037: { 0x01, 0x65, 0x45 },
 3037: { 0x01, 0x66, 0x46 },
 3037: { 0x01, 0x67, 0x47 },
 3037: { 0x01, 0x68, 0x48 },
 3037: { 0x01, 0x69, 0x49 },
 3037: { 0x01, 0x6a, 0x4a },
 3037: { 0x01, 0x6b, 0x4b },
 3037: { 0x01, 0x6c, 0x4c },
 3037: { 0x01, 0x6d, 0x4d },
 3037: { 0x01, 0x6e, 0x4e },
 3037: { 0x01, 0x6f, 0x4f },
 3037: { 0x01, 0x70, 0x50 },
 3037: { 0x01, 0x71, 0x51 },
 3037: { 0x01, 0x72, 0x52 },
 3037: { 0x01, 0x73, 0x53 },
 3037: { 0x01, 0x74, 0x54 },
 3037: { 0x01, 0x75, 0x55 },
 3037: { 0x01, 0x76, 0x56 },
 3037: { 0x01, 0x77, 0x57 },
 3037: { 0x01, 0x78, 0x58 },
 3037: { 0x01, 0x79, 0x59 },
 3037: { 0x01, 0x7a, 0x5a },
 3037: { 0x00, 0x5b, 0x5b },
 3037: { 0x00, 0x5c, 0x5c },
 3037: { 0x00, 0x5d, 0x5d },
 3037: { 0x00, 0x5e, 0x5e },
 3037: { 0x00, 0x5f, 0x5f },
 3037: { 0x00, 0x60, 0x60 },
 3037: { 0x00, 0x61, 0x41 },
 3037: { 0x00, 0x62, 0x42 },
 3037: { 0x00, 0x63, 0x43 },
 3037: { 0x00, 0x64, 0x44 },
 3037: { 0x00, 0x65, 0x45 },
 3037: { 0x00, 0x66, 0x46 },
 3037: { 0x00, 0x67, 0x47 },
 3037: { 0x00, 0x68, 0x48 },
 3037: { 0x00, 0x69, 0x49 },
 3037: { 0x00, 0x6a, 0x4a },
 3037: { 0x00, 0x6b, 0x4b },
 3037: { 0x00, 0x6c, 0x4c },
 3037: { 0x00, 0x6d, 0x4d },
 3037: { 0x00, 0x6e, 0x4e },
 3037: { 0x00, 0x6f, 0x4f },
 3037: { 0x00, 0x70, 0x50 },
 3037: { 0x00, 0x71, 0x51 },
 3037: { 0x00, 0x72, 0x52 },
 3037: { 0x00, 0x73, 0x53 },
 3037: { 0x00, 0x74, 0x54 },
 3037: { 0x00, 0x75, 0x55 },
 3037: { 0x00, 0x76, 0x56 },
 3037: { 0x00, 0x77, 0x57 },
 3037: { 0x00, 0x78, 0x58 },
 3037: { 0x00, 0x79, 0x59 },
 3037: { 0x00, 0x7a, 0x5a },
 3037: { 0x00, 0x7b, 0x7b },
 3037: { 0x00, 0x7c, 0x7c },
 3037: { 0x00, 0x7d, 0x7d },
 3037: { 0x00, 0x7e, 0x7e },
 3037: { 0x00, 0x7f, 0x7f },
 3037: { 0x00, 0x80, 0x80 },
 3037: { 0x00, 0x81, 0x81 },
 3037: { 0x00, 0x82, 0x82 },
 3037: { 0x00, 0x83, 0x83 },
 3037: { 0x00, 0x84, 0x84 },
 3037: { 0x00, 0x85, 0x85 },
 3037: { 0x00, 0x86, 0x86 },
 3037: { 0x00, 0x87, 0x87 },
 3037: { 0x00, 0x88, 0x88 },
 3037: { 0x00, 0x89, 0x89 },
 3037: { 0x00, 0x8a, 0x8a },
 3037: { 0x00, 0x8b, 0x8b },
 3037: { 0x00, 0x8c, 0x8c },
 3037: { 0x00, 0x8d, 0x8d },
 3037: { 0x00, 0x8e, 0x8e },
 3037: { 0x00, 0x8f, 0x8f },
 3037: { 0x00, 0x90, 0x90 },
 3037: { 0x00, 0x91, 0x91 },
 3037: { 0x00, 0x92, 0x92 },
 3037: { 0x00, 0x93, 0x93 },
 3037: { 0x00, 0x94, 0x94 },
 3037: { 0x00, 0x95, 0x95 },
 3037: { 0x00, 0x96, 0x96 },
 3037: { 0x00, 0x97, 0x97 },
 3037: { 0x00, 0x98, 0x98 },
 3037: { 0x00, 0x99, 0x99 },
 3037: { 0x00, 0x9a, 0x9a },
 3037: { 0x00, 0x9b, 0x9b },
 3037: { 0x00, 0x9c, 0x9c },
 3037: { 0x00, 0x9d, 0x9d },
 3037: { 0x00, 0x9e, 0x9e },
 3037: { 0x00, 0x9f, 0x9f },
 3037: { 0x00, 0xa0, 0xa0 },
 3037: { 0x00, 0xa1, 0xa1 },
 3037: { 0x00, 0xa2, 0xa2 },
 3037: { 0x00, 0xa3, 0xa3 },
 3037: { 0x00, 0xa4, 0xa4 },
 3037: { 0x00, 0xa5, 0xa5 },
 3037: { 0x00, 0xa6, 0xa6 },
 3037: { 0x00, 0xa7, 0xa7 },
 3037: { 0x00, 0xa8, 0xa8 },
 3037: { 0x00, 0xa9, 0xa9 },
 3037: { 0x00, 0xaa, 0xaa },
 3037: { 0x00, 0xab, 0xab },
 3037: { 0x00, 0xac, 0xac },
 3037: { 0x00, 0xad, 0xad },
 3037: { 0x00, 0xae, 0xae },
 3037: { 0x00, 0xaf, 0xaf },
 3037: { 0x00, 0xb0, 0xb0 },
 3037: { 0x00, 0xb1, 0xb1 },
 3037: { 0x00, 0xb2, 0xb2 },
 3037: { 0x00, 0xb3, 0xb3 },
 3037: { 0x00, 0xb4, 0xb4 },
 3037: { 0x00, 0xb5, 0xb5 },
 3037: { 0x00, 0xb6, 0xb6 },
 3037: { 0x00, 0xb7, 0xb7 },
 3037: { 0x00, 0xb8, 0xb8 },
 3037: { 0x00, 0xb9, 0xb9 },
 3037: { 0x00, 0xba, 0xba },
 3037: { 0x00, 0xbb, 0xbb },
 3037: { 0x00, 0xbc, 0xbc },
 3037: { 0x00, 0xbd, 0xbd },
 3037: { 0x00, 0xbe, 0xbe },
 3037: { 0x00, 0xbf, 0xbf },
 3037: { 0x01, 0xe0, 0xc0 },
 3037: { 0x01, 0xe1, 0xc1 },
 3037: { 0x01, 0xe2, 0xc2 },
 3037: { 0x01, 0xe3, 0xc3 },
 3037: { 0x01, 0xe4, 0xc4 },
 3037: { 0x01, 0xe5, 0xc5 },
 3037: { 0x01, 0xe6, 0xc6 },
 3037: { 0x01, 0xe7, 0xc7 },
 3037: { 0x01, 0xe8, 0xc8 },
 3037: { 0x01, 0xe9, 0xc9 },
 3037: { 0x01, 0xea, 0xca },
 3037: { 0x01, 0xeb, 0xcb },
 3037: { 0x01, 0xec, 0xcc },
 3037: { 0x01, 0xed, 0xcd },
 3037: { 0x01, 0xee, 0xce },
 3037: { 0x01, 0xef, 0xcf },
 3037: { 0x01, 0xf0, 0xd0 },
 3037: { 0x01, 0xf1, 0xd1 },
 3037: { 0x01, 0xf2, 0xd2 },
 3037: { 0x01, 0xf3, 0xd3 },
 3037: { 0x01, 0xf4, 0xd4 },
 3037: { 0x01, 0xf5, 0xd5 },
 3037: { 0x01, 0xf6, 0xd6 },
 3037: { 0x00, 0xd7, 0xd7 },
 3037: { 0x01, 0xf8, 0xd8 },
 3037: { 0x01, 0xf9, 0xd9 },
 3037: { 0x01, 0xfa, 0xda },
 3037: { 0x01, 0xfb, 0xdb },
 3037: { 0x01, 0xfc, 0xdc },
 3037: { 0x01, 0xfd, 0xdd },
 3037: { 0x01, 0xfe, 0xde },
 3037: { 0x00, 0xdf, 0xdf },
 3037: { 0x00, 0xe0, 0xc0 },
 3037: { 0x00, 0xe1, 0xc1 },
 3037: { 0x00, 0xe2, 0xc2 },
 3037: { 0x00, 0xe3, 0xc3 },
 3037: { 0x00, 0xe4, 0xc4 },
 3037: { 0x00, 0xe5, 0xc5 },
 3037: { 0x00, 0xe6, 0xc6 },
 3037: { 0x00, 0xe7, 0xc7 },
 3037: { 0x00, 0xe8, 0xc8 },
 3037: { 0x00, 0xe9, 0xc9 },
 3037: { 0x00, 0xea, 0xca },
 3037: { 0x00, 0xeb, 0xcb },
 3037: { 0x00, 0xec, 0xcc },
 3037: { 0x00, 0xed, 0xcd },
 3037: { 0x00, 0xee, 0xce },
 3037: { 0x00, 0xef, 0xcf },
 3037: { 0x00, 0xf0, 0xd0 },
 3037: { 0x00, 0xf1, 0xd1 },
 3037: { 0x00, 0xf2, 0xd2 },
 3037: { 0x00, 0xf3, 0xd3 },
 3037: { 0x00, 0xf4, 0xd4 },
 3037: { 0x00, 0xf5, 0xd5 },
 3037: { 0x00, 0xf6, 0xd6 },
 3037: { 0x00, 0xf7, 0xf7 },
 3037: { 0x00, 0xf8, 0xd8 },
 3037: { 0x00, 0xf9, 0xd9 },
 3037: { 0x00, 0xfa, 0xda },
 3037: { 0x00, 0xfb, 0xdb },
 3037: { 0x00, 0xfc, 0xdc },
 3037: { 0x00, 0xfd, 0xdd },
 3037: { 0x00, 0xfe, 0xde },
21326: { 0x00, 0xff, 0xff }
 3037: };
 3037: 
 3037: 
43385: static struct cs_info iso2_tbl[] = {
 3037: { 0x00, 0x00, 0x00 },
 3037: { 0x00, 0x01, 0x01 },
 3037: { 0x00, 0x02, 0x02 },
 3037: { 0x00, 0x03, 0x03 },
 3037: { 0x00, 0x04, 0x04 },
 3037: { 0x00, 0x05, 0x05 },
 3037: { 0x00, 0x06, 0x06 },
 3037: { 0x00, 0x07, 0x07 },
 3037: { 0x00, 0x08, 0x08 },
 3037: { 0x00, 0x09, 0x09 },
 3037: { 0x00, 0x0a, 0x0a },
 3037: { 0x00, 0x0b, 0x0b },
 3037: { 0x00, 0x0c, 0x0c },
 3037: { 0x00, 0x0d, 0x0d },
 3037: { 0x00, 0x0e, 0x0e },
 3037: { 0x00, 0x0f, 0x0f },
 3037: { 0x00, 0x10, 0x10 },
 3037: { 0x00, 0x11, 0x11 },
 3037: { 0x00, 0x12, 0x12 },
 3037: { 0x00, 0x13, 0x13 },
 3037: { 0x00, 0x14, 0x14 },
 3037: { 0x00, 0x15, 0x15 },
 3037: { 0x00, 0x16, 0x16 },
 3037: { 0x00, 0x17, 0x17 },
 3037: { 0x00, 0x18, 0x18 },
 3037: { 0x00, 0x19, 0x19 },
 3037: { 0x00, 0x1a, 0x1a },
 3037: { 0x00, 0x1b, 0x1b },
 3037: { 0x00, 0x1c, 0x1c },
 3037: { 0x00, 0x1d, 0x1d },
 3037: { 0x00, 0x1e, 0x1e },
 3037: { 0x00, 0x1f, 0x1f },
 3037: { 0x00, 0x20, 0x20 },
 3037: { 0x00, 0x21, 0x21 },
 3037: { 0x00, 0x22, 0x22 },
 3037: { 0x00, 0x23, 0x23 },
 3037: { 0x00, 0x24, 0x24 },
 3037: { 0x00, 0x25, 0x25 },
 3037: { 0x00, 0x26, 0x26 },
 3037: { 0x00, 0x27, 0x27 },
 3037: { 0x00, 0x28, 0x28 },
 3037: { 0x00, 0x29, 0x29 },
 3037: { 0x00, 0x2a, 0x2a },
 3037: { 0x00, 0x2b, 0x2b },
 3037: { 0x00, 0x2c, 0x2c },
 3037: { 0x00, 0x2d, 0x2d },
 3037: { 0x00, 0x2e, 0x2e },
 3037: { 0x00, 0x2f, 0x2f },
 3037: { 0x00, 0x30, 0x30 },
 3037: { 0x00, 0x31, 0x31 },
 3037: { 0x00, 0x32, 0x32 },
 3037: { 0x00, 0x33, 0x33 },
 3037: { 0x00, 0x34, 0x34 },
 3037: { 0x00, 0x35, 0x35 },
 3037: { 0x00, 0x36, 0x36 },
 3037: { 0x00, 0x37, 0x37 },
 3037: { 0x00, 0x38, 0x38 },
 3037: { 0x00, 0x39, 0x39 },
 3037: { 0x00, 0x3a, 0x3a },
 3037: { 0x00, 0x3b, 0x3b },
 3037: { 0x00, 0x3c, 0x3c },
 3037: { 0x00, 0x3d, 0x3d },
 3037: { 0x00, 0x3e, 0x3e },
 3037: { 0x00, 0x3f, 0x3f },
 3037: { 0x00, 0x40, 0x40 },
 3037: { 0x01, 0x61, 0x41 },
 3037: { 0x01, 0x62, 0x42 },
 3037: { 0x01, 0x63, 0x43 },
 3037: { 0x01, 0x64, 0x44 },
 3037: { 0x01, 0x65, 0x45 },
 3037: { 0x01, 0x66, 0x46 },
 3037: { 0x01, 0x67, 0x47 },
 3037: { 0x01, 0x68, 0x48 },
 3037: { 0x01, 0x69, 0x49 },
 3037: { 0x01, 0x6a, 0x4a },
 3037: { 0x01, 0x6b, 0x4b },
 3037: { 0x01, 0x6c, 0x4c },
 3037: { 0x01, 0x6d, 0x4d },
 3037: { 0x01, 0x6e, 0x4e },
 3037: { 0x01, 0x6f, 0x4f },
 3037: { 0x01, 0x70, 0x50 },
 3037: { 0x01, 0x71, 0x51 },
 3037: { 0x01, 0x72, 0x52 },
 3037: { 0x01, 0x73, 0x53 },
 3037: { 0x01, 0x74, 0x54 },
 3037: { 0x01, 0x75, 0x55 },
 3037: { 0x01, 0x76, 0x56 },
 3037: { 0x01, 0x77, 0x57 },
 3037: { 0x01, 0x78, 0x58 },
 3037: { 0x01, 0x79, 0x59 },
 3037: { 0x01, 0x7a, 0x5a },
 3037: { 0x00, 0x5b, 0x5b },
 3037: { 0x00, 0x5c, 0x5c },
 3037: { 0x00, 0x5d, 0x5d },
 3037: { 0x00, 0x5e, 0x5e },
 3037: { 0x00, 0x5f, 0x5f },
 3037: { 0x00, 0x60, 0x60 },
 3037: { 0x00, 0x61, 0x41 },
 3037: { 0x00, 0x62, 0x42 },
 3037: { 0x00, 0x63, 0x43 },
 3037: { 0x00, 0x64, 0x44 },
 3037: { 0x00, 0x65, 0x45 },
 3037: { 0x00, 0x66, 0x46 },
 3037: { 0x00, 0x67, 0x47 },
 3037: { 0x00, 0x68, 0x48 },
 3037: { 0x00, 0x69, 0x49 },
 3037: { 0x00, 0x6a, 0x4a },
 3037: { 0x00, 0x6b, 0x4b },
 3037: { 0x00, 0x6c, 0x4c },
 3037: { 0x00, 0x6d, 0x4d },
 3037: { 0x00, 0x6e, 0x4e },
 3037: { 0x00, 0x6f, 0x4f },
 3037: { 0x00, 0x70, 0x50 },
 3037: { 0x00, 0x71, 0x51 },
 3037: { 0x00, 0x72, 0x52 },
 3037: { 0x00, 0x73, 0x53 },
 3037: { 0x00, 0x74, 0x54 },
 3037: { 0x00, 0x75, 0x55 },
 3037: { 0x00, 0x76, 0x56 },
 3037: { 0x00, 0x77, 0x57 },
 3037: { 0x00, 0x78, 0x58 },
 3037: { 0x00, 0x79, 0x59 },
 3037: { 0x00, 0x7a, 0x5a },
 3037: { 0x00, 0x7b, 0x7b },
 3037: { 0x00, 0x7c, 0x7c },
 3037: { 0x00, 0x7d, 0x7d },
 3037: { 0x00, 0x7e, 0x7e },
 3037: { 0x00, 0x7f, 0x7f },
 3037: { 0x00, 0x80, 0x80 },
 3037: { 0x00, 0x81, 0x81 },
 3037: { 0x00, 0x82, 0x82 },
 3037: { 0x00, 0x83, 0x83 },
 3037: { 0x00, 0x84, 0x84 },
 3037: { 0x00, 0x85, 0x85 },
 3037: { 0x00, 0x86, 0x86 },
 3037: { 0x00, 0x87, 0x87 },
 3037: { 0x00, 0x88, 0x88 },
 3037: { 0x00, 0x89, 0x89 },
 3037: { 0x00, 0x8a, 0x8a },
 3037: { 0x00, 0x8b, 0x8b },
 3037: { 0x00, 0x8c, 0x8c },
 3037: { 0x00, 0x8d, 0x8d },
 3037: { 0x00, 0x8e, 0x8e },
 3037: { 0x00, 0x8f, 0x8f },
 3037: { 0x00, 0x90, 0x90 },
 3037: { 0x00, 0x91, 0x91 },
 3037: { 0x00, 0x92, 0x92 },
 3037: { 0x00, 0x93, 0x93 },
 3037: { 0x00, 0x94, 0x94 },
 3037: { 0x00, 0x95, 0x95 },
 3037: { 0x00, 0x96, 0x96 },
 3037: { 0x00, 0x97, 0x97 },
 3037: { 0x00, 0x98, 0x98 },
 3037: { 0x00, 0x99, 0x99 },
 3037: { 0x00, 0x9a, 0x9a },
 3037: { 0x00, 0x9b, 0x9b },
 3037: { 0x00, 0x9c, 0x9c },
 3037: { 0x00, 0x9d, 0x9d },
 3037: { 0x00, 0x9e, 0x9e },
 3037: { 0x00, 0x9f, 0x9f },
 3037: { 0x00, 0xa0, 0xa0 },
 3037: { 0x01, 0xb1, 0xa1 },
 3037: { 0x00, 0xa2, 0xa2 },
 3037: { 0x01, 0xb3, 0xa3 },
 3037: { 0x00, 0xa4, 0xa4 },
 3037: { 0x01, 0xb5, 0xa5 },
 3037: { 0x01, 0xb6, 0xa6 },
 3037: { 0x00, 0xa7, 0xa7 },
 3037: { 0x00, 0xa8, 0xa8 },
 3037: { 0x01, 0xb9, 0xa9 },
 3037: { 0x01, 0xba, 0xaa },
 3037: { 0x01, 0xbb, 0xab },
 3037: { 0x01, 0xbc, 0xac },
 3037: { 0x00, 0xad, 0xad },
 3037: { 0x01, 0xbe, 0xae },
 3037: { 0x01, 0xbf, 0xaf },
 3037: { 0x00, 0xb0, 0xb0 },
 3037: { 0x00, 0xb1, 0xa1 },
 3037: { 0x00, 0xb2, 0xb2 },
 3037: { 0x00, 0xb3, 0xa3 },
 3037: { 0x00, 0xb4, 0xb4 },
 3037: { 0x00, 0xb5, 0xa5 },
 3037: { 0x00, 0xb6, 0xa6 },
 3037: { 0x00, 0xb7, 0xb7 },
 3037: { 0x00, 0xb8, 0xb8 },
 3037: { 0x00, 0xb9, 0xa9 },
 3037: { 0x00, 0xba, 0xaa },
 3037: { 0x00, 0xbb, 0xab },
 3037: { 0x00, 0xbc, 0xac },
 3037: { 0x00, 0xbd, 0xbd },
 3037: { 0x00, 0xbe, 0xae },
 3037: { 0x00, 0xbf, 0xaf },
 3037: { 0x01, 0xe0, 0xc0 },
 3037: { 0x01, 0xe1, 0xc1 },
 3037: { 0x01, 0xe2, 0xc2 },
 3037: { 0x01, 0xe3, 0xc3 },
 3037: { 0x01, 0xe4, 0xc4 },
 3037: { 0x01, 0xe5, 0xc5 },
 3037: { 0x01, 0xe6, 0xc6 },
 3037: { 0x01, 0xe7, 0xc7 },
 3037: { 0x01, 0xe8, 0xc8 },
 3037: { 0x01, 0xe9, 0xc9 },
 3037: { 0x01, 0xea, 0xca },
 3037: { 0x01, 0xeb, 0xcb },
 3037: { 0x01, 0xec, 0xcc },
 3037: { 0x01, 0xed, 0xcd },
 3037: { 0x01, 0xee, 0xce },
 3037: { 0x01, 0xef, 0xcf },
 3037: { 0x01, 0xf0, 0xd0 },
 3037: { 0x01, 0xf1, 0xd1 },
 3037: { 0x01, 0xf2, 0xd2 },
 3037: { 0x01, 0xf3, 0xd3 },
 3037: { 0x01, 0xf4, 0xd4 },
 3037: { 0x01, 0xf5, 0xd5 },
 3037: { 0x01, 0xf6, 0xd6 },
 3037: { 0x00, 0xd7, 0xd7 },
 3037: { 0x01, 0xf8, 0xd8 },
 3037: { 0x01, 0xf9, 0xd9 },
 3037: { 0x01, 0xfa, 0xda },
 3037: { 0x01, 0xfb, 0xdb },
 3037: { 0x01, 0xfc, 0xdc },
 3037: { 0x01, 0xfd, 0xdd },
 3037: { 0x01, 0xfe, 0xde },
 3037: { 0x00, 0xdf, 0xdf },
 3037: { 0x00, 0xe0, 0xc0 },
 3037: { 0x00, 0xe1, 0xc1 },
 3037: { 0x00, 0xe2, 0xc2 },
 3037: { 0x00, 0xe3, 0xc3 },
 3037: { 0x00, 0xe4, 0xc4 },
 3037: { 0x00, 0xe5, 0xc5 },
 3037: { 0x00, 0xe6, 0xc6 },
 3037: { 0x00, 0xe7, 0xc7 },
 3037: { 0x00, 0xe8, 0xc8 },
 3037: { 0x00, 0xe9, 0xc9 },
 3037: { 0x00, 0xea, 0xca },
 3037: { 0x00, 0xeb, 0xcb },
 3037: { 0x00, 0xec, 0xcc },
 3037: { 0x00, 0xed, 0xcd },
 3037: { 0x00, 0xee, 0xce },
 3037: { 0x00, 0xef, 0xcf },
 3037: { 0x00, 0xf0, 0xd0 },
 3037: { 0x00, 0xf1, 0xd1 },
 3037: { 0x00, 0xf2, 0xd2 },
 3037: { 0x00, 0xf3, 0xd3 },
 3037: { 0x00, 0xf4, 0xd4 },
 3037: { 0x00, 0xf5, 0xd5 },
 3037: { 0x00, 0xf6, 0xd6 },
 3037: { 0x00, 0xf7, 0xf7 },
 3037: { 0x00, 0xf8, 0xd8 },
 3037: { 0x00, 0xf9, 0xd9 },
 3037: { 0x00, 0xfa, 0xda },
 3037: { 0x00, 0xfb, 0xdb },
 3037: { 0x00, 0xfc, 0xdc },
 3037: { 0x00, 0xfd, 0xdd },
 3037: { 0x00, 0xfe, 0xde },
21326: { 0x00, 0xff, 0xff }
 3037: };
 3037: 
 3037: 
43385: static struct cs_info iso3_tbl[] = {
 3037: { 0x00, 0x00, 0x00 },
 3037: { 0x00, 0x01, 0x01 },
 3037: { 0x00, 0x02, 0x02 },
 3037: { 0x00, 0x03, 0x03 },
 3037: { 0x00, 0x04, 0x04 },
 3037: { 0x00, 0x05, 0x05 },
 3037: { 0x00, 0x06, 0x06 },
 3037: { 0x00, 0x07, 0x07 },
 3037: { 0x00, 0x08, 0x08 },
 3037: { 0x00, 0x09, 0x09 },
 3037: { 0x00, 0x0a, 0x0a },
 3037: { 0x00, 0x0b, 0x0b },
 3037: { 0x00, 0x0c, 0x0c },
 3037: { 0x00, 0x0d, 0x0d },
 3037: { 0x00, 0x0e, 0x0e },
 3037: { 0x00, 0x0f, 0x0f },
 3037: { 0x00, 0x10, 0x10 },
 3037: { 0x00, 0x11, 0x11 },
 3037: { 0x00, 0x12, 0x12 },
 3037: { 0x00, 0x13, 0x13 },
 3037: { 0x00, 0x14, 0x14 },
 3037: { 0x00, 0x15, 0x15 },
 3037: { 0x00, 0x16, 0x16 },
 3037: { 0x00, 0x17, 0x17 },
 3037: { 0x00, 0x18, 0x18 },
 3037: { 0x00, 0x19, 0x19 },
 3037: { 0x00, 0x1a, 0x1a },
 3037: { 0x00, 0x1b, 0x1b },
 3037: { 0x00, 0x1c, 0x1c },
 3037: { 0x00, 0x1d, 0x1d },
 3037: { 0x00, 0x1e, 0x1e },
 3037: { 0x00, 0x1f, 0x1f },
 3037: { 0x00, 0x20, 0x20 },
 3037: { 0x00, 0x21, 0x21 },
 3037: { 0x00, 0x22, 0x22 },
 3037: { 0x00, 0x23, 0x23 },
 3037: { 0x00, 0x24, 0x24 },
 3037: { 0x00, 0x25, 0x25 },
 3037: { 0x00, 0x26, 0x26 },
 3037: { 0x00, 0x27, 0x27 },
 3037: { 0x00, 0x28, 0x28 },
 3037: { 0x00, 0x29, 0x29 },
 3037: { 0x00, 0x2a, 0x2a },
 3037: { 0x00, 0x2b, 0x2b },
 3037: { 0x00, 0x2c, 0x2c },
 3037: { 0x00, 0x2d, 0x2d },
 3037: { 0x00, 0x2e, 0x2e },
 3037: { 0x00, 0x2f, 0x2f },
 3037: { 0x00, 0x30, 0x30 },
 3037: { 0x00, 0x31, 0x31 },
 3037: { 0x00, 0x32, 0x32 },
 3037: { 0x00, 0x33, 0x33 },
 3037: { 0x00, 0x34, 0x34 },
 3037: { 0x00, 0x35, 0x35 },
 3037: { 0x00, 0x36, 0x36 },
 3037: { 0x00, 0x37, 0x37 },
 3037: { 0x00, 0x38, 0x38 },
 3037: { 0x00, 0x39, 0x39 },
 3037: { 0x00, 0x3a, 0x3a },
 3037: { 0x00, 0x3b, 0x3b },
 3037: { 0x00, 0x3c, 0x3c },
 3037: { 0x00, 0x3d, 0x3d },
 3037: { 0x00, 0x3e, 0x3e },
 3037: { 0x00, 0x3f, 0x3f },
 3037: { 0x00, 0x40, 0x40 },
 3037: { 0x01, 0x61, 0x41 },
 3037: { 0x01, 0x62, 0x42 },
 3037: { 0x01, 0x63, 0x43 },
 3037: { 0x01, 0x64, 0x44 },
 3037: { 0x01, 0x65, 0x45 },
 3037: { 0x01, 0x66, 0x46 },
 3037: { 0x01, 0x67, 0x47 },
 3037: { 0x01, 0x68, 0x48 },
 3037: { 0x01, 0x69, 0x49 },
 3037: { 0x01, 0x6a, 0x4a },
 3037: { 0x01, 0x6b, 0x4b },
 3037: { 0x01, 0x6c, 0x4c },
 3037: { 0x01, 0x6d, 0x4d },
 3037: { 0x01, 0x6e, 0x4e },
 3037: { 0x01, 0x6f, 0x4f },
 3037: { 0x01, 0x70, 0x50 },
 3037: { 0x01, 0x71, 0x51 },
 3037: { 0x01, 0x72, 0x52 },
 3037: { 0x01, 0x73, 0x53 },
 3037: { 0x01, 0x74, 0x54 },
 3037: { 0x01, 0x75, 0x55 },
 3037: { 0x01, 0x76, 0x56 },
 3037: { 0x01, 0x77, 0x57 },
 3037: { 0x01, 0x78, 0x58 },
 3037: { 0x01, 0x79, 0x59 },
 3037: { 0x01, 0x7a, 0x5a },
 3037: { 0x00, 0x5b, 0x5b },
 3037: { 0x00, 0x5c, 0x5c },
 3037: { 0x00, 0x5d, 0x5d },
 3037: { 0x00, 0x5e, 0x5e },
 3037: { 0x00, 0x5f, 0x5f },
 3037: { 0x00, 0x60, 0x60 },
 3037: { 0x00, 0x61, 0x41 },
 3037: { 0x00, 0x62, 0x42 },
 3037: { 0x00, 0x63, 0x43 },
 3037: { 0x00, 0x64, 0x44 },
 3037: { 0x00, 0x65, 0x45 },
 3037: { 0x00, 0x66, 0x46 },
 3037: { 0x00, 0x67, 0x47 },
 3037: { 0x00, 0x68, 0x48 },
 3037: { 0x00, 0x69, 0x49 },
 3037: { 0x00, 0x6a, 0x4a },
 3037: { 0x00, 0x6b, 0x4b },
 3037: { 0x00, 0x6c, 0x4c },
 3037: { 0x00, 0x6d, 0x4d },
 3037: { 0x00, 0x6e, 0x4e },
 3037: { 0x00, 0x6f, 0x4f },
 3037: { 0x00, 0x70, 0x50 },
 3037: { 0x00, 0x71, 0x51 },
 3037: { 0x00, 0x72, 0x52 },
 3037: { 0x00, 0x73, 0x53 },
 3037: { 0x00, 0x74, 0x54 },
 3037: { 0x00, 0x75, 0x55 },
 3037: { 0x00, 0x76, 0x56 },
 3037: { 0x00, 0x77, 0x57 },
 3037: { 0x00, 0x78, 0x58 },
 3037: { 0x00, 0x79, 0x59 },
 3037: { 0x00, 0x7a, 0x5a },
 3037: { 0x00, 0x7b, 0x7b },
 3037: { 0x00, 0x7c, 0x7c },
 3037: { 0x00, 0x7d, 0x7d },
 3037: { 0x00, 0x7e, 0x7e },
 3037: { 0x00, 0x7f, 0x7f },
 3037: { 0x00, 0x80, 0x80 },
 3037: { 0x00, 0x81, 0x81 },
 3037: { 0x00, 0x82, 0x82 },
 3037: { 0x00, 0x83, 0x83 },
 3037: { 0x00, 0x84, 0x84 },
 3037: { 0x00, 0x85, 0x85 },
 3037: { 0x00, 0x86, 0x86 },
 3037: { 0x00, 0x87, 0x87 },
 3037: { 0x00, 0x88, 0x88 },
 3037: { 0x00, 0x89, 0x89 },
 3037: { 0x00, 0x8a, 0x8a },
 3037: { 0x00, 0x8b, 0x8b },
 3037: { 0x00, 0x8c, 0x8c },
 3037: { 0x00, 0x8d, 0x8d },
 3037: { 0x00, 0x8e, 0x8e },
 3037: { 0x00, 0x8f, 0x8f },
 3037: { 0x00, 0x90, 0x90 },
 3037: { 0x00, 0x91, 0x91 },
 3037: { 0x00, 0x92, 0x92 },
 3037: { 0x00, 0x93, 0x93 },
 3037: { 0x00, 0x94, 0x94 },
 3037: { 0x00, 0x95, 0x95 },
 3037: { 0x00, 0x96, 0x96 },
 3037: { 0x00, 0x97, 0x97 },
 3037: { 0x00, 0x98, 0x98 },
 3037: { 0x00, 0x99, 0x99 },
 3037: { 0x00, 0x9a, 0x9a },
 3037: { 0x00, 0x9b, 0x9b },
 3037: { 0x00, 0x9c, 0x9c },
 3037: { 0x00, 0x9d, 0x9d },
 3037: { 0x00, 0x9e, 0x9e },
 3037: { 0x00, 0x9f, 0x9f },
 3037: { 0x00, 0xa0, 0xa0 },
 3037: { 0x01, 0xb1, 0xa1 },
 3037: { 0x00, 0xa2, 0xa2 },
 3037: { 0x00, 0xa3, 0xa3 },
 3037: { 0x00, 0xa4, 0xa4 },
 3037: { 0x00, 0xa5, 0xa5 },
 3037: { 0x01, 0xb6, 0xa6 },
 3037: { 0x00, 0xa7, 0xa7 },
 3037: { 0x00, 0xa8, 0xa8 },
 3037: { 0x01, 0x69, 0xa9 },
 3037: { 0x01, 0xba, 0xaa },
 3037: { 0x01, 0xbb, 0xab },
 3037: { 0x01, 0xbc, 0xac },
 3037: { 0x00, 0xad, 0xad },
 3037: { 0x00, 0xae, 0xae },
 3037: { 0x01, 0xbf, 0xaf },
 3037: { 0x00, 0xb0, 0xb0 },
 3037: { 0x00, 0xb1, 0xa1 },
 3037: { 0x00, 0xb2, 0xb2 },
 3037: { 0x00, 0xb3, 0xb3 },
 3037: { 0x00, 0xb4, 0xb4 },
 3037: { 0x00, 0xb5, 0xb5 },
 3037: { 0x00, 0xb6, 0xa6 },
 3037: { 0x00, 0xb7, 0xb7 },
 3037: { 0x00, 0xb8, 0xb8 },
 3037: { 0x00, 0xb9, 0x49 },
 3037: { 0x00, 0xba, 0xaa },
 3037: { 0x00, 0xbb, 0xab },
 3037: { 0x00, 0xbc, 0xac },
 3037: { 0x00, 0xbd, 0xbd },
 3037: { 0x00, 0xbe, 0xbe },
 3037: { 0x00, 0xbf, 0xaf },
 3037: { 0x01, 0xe0, 0xc0 },
 3037: { 0x01, 0xe1, 0xc1 },
 3037: { 0x01, 0xe2, 0xc2 },
 3037: { 0x00, 0xc3, 0xc3 },
 3037: { 0x01, 0xe4, 0xc4 },
 3037: { 0x01, 0xe5, 0xc5 },
 3037: { 0x01, 0xe6, 0xc6 },
 3037: { 0x01, 0xe7, 0xc7 },
 3037: { 0x01, 0xe8, 0xc8 },
 3037: { 0x01, 0xe9, 0xc9 },
 3037: { 0x01, 0xea, 0xca },
 3037: { 0x01, 0xeb, 0xcb },
 3037: { 0x01, 0xec, 0xcc },
 3037: { 0x01, 0xed, 0xcd },
 3037: { 0x01, 0xee, 0xce },
 3037: { 0x01, 0xef, 0xcf },
 3037: { 0x00, 0xd0, 0xd0 },
 3037: { 0x01, 0xf1, 0xd1 },
 3037: { 0x01, 0xf2, 0xd2 },
 3037: { 0x01, 0xf3, 0xd3 },
 3037: { 0x01, 0xf4, 0xd4 },
 3037: { 0x01, 0xf5, 0xd5 },
 3037: { 0x01, 0xf6, 0xd6 },
 3037: { 0x00, 0xd7, 0xd7 },
 3037: { 0x01, 0xf8, 0xd8 },
 3037: { 0x01, 0xf9, 0xd9 },
 3037: { 0x01, 0xfa, 0xda },
 3037: { 0x01, 0xfb, 0xdb },
 3037: { 0x01, 0xfc, 0xdc },
 3037: { 0x01, 0xfd, 0xdd },
 3037: { 0x01, 0xfe, 0xde },
 3037: { 0x00, 0xdf, 0xdf },
 3037: { 0x00, 0xe0, 0xc0 },
 3037: { 0x00, 0xe1, 0xc1 },
 3037: { 0x00, 0xe2, 0xc2 },
 3037: { 0x00, 0xe3, 0xe3 },
 3037: { 0x00, 0xe4, 0xc4 },
 3037: { 0x00, 0xe5, 0xc5 },
 3037: { 0x00, 0xe6, 0xc6 },
 3037: { 0x00, 0xe7, 0xc7 },
 3037: { 0x00, 0xe8, 0xc8 },
 3037: { 0x00, 0xe9, 0xc9 },
 3037: { 0x00, 0xea, 0xca },
 3037: { 0x00, 0xeb, 0xcb },
 3037: { 0x00, 0xec, 0xcc },
 3037: { 0x00, 0xed, 0xcd },
 3037: { 0x00, 0xee, 0xce },
 3037: { 0x00, 0xef, 0xcf },
 3037: { 0x00, 0xf0, 0xf0 },
 3037: { 0x00, 0xf1, 0xd1 },
 3037: { 0x00, 0xf2, 0xd2 },
 3037: { 0x00, 0xf3, 0xd3 },
 3037: { 0x00, 0xf4, 0xd4 },
 3037: { 0x00, 0xf5, 0xd5 },
 3037: { 0x00, 0xf6, 0xd6 },
 3037: { 0x00, 0xf7, 0xf7 },
 3037: { 0x00, 0xf8, 0xd8 },
 3037: { 0x00, 0xf9, 0xd9 },
 3037: { 0x00, 0xfa, 0xda },
 3037: { 0x00, 0xfb, 0xdb },
 3037: { 0x00, 0xfc, 0xdc },
 3037: { 0x00, 0xfd, 0xdd },
 3037: { 0x00, 0xfe, 0xde },
21326: { 0x00, 0xff, 0xff }
 3037: };
 3037: 
43385: static struct cs_info iso4_tbl[] = {
 3037: { 0x00, 0x00, 0x00 },
 3037: { 0x00, 0x01, 0x01 },
 3037: { 0x00, 0x02, 0x02 },
 3037: { 0x00, 0x03, 0x03 },
 3037: { 0x00, 0x04, 0x04 },
 3037: { 0x00, 0x05, 0x05 },
 3037: { 0x00, 0x06, 0x06 },
 3037: { 0x00, 0x07, 0x07 },
 3037: { 0x00, 0x08, 0x08 },
 3037: { 0x00, 0x09, 0x09 },
 3037: { 0x00, 0x0a, 0x0a },
 3037: { 0x00, 0x0b, 0x0b },
 3037: { 0x00, 0x0c, 0x0c },
 3037: { 0x00, 0x0d, 0x0d },
 3037: { 0x00, 0x0e, 0x0e },
 3037: { 0x00, 0x0f, 0x0f },
 3037: { 0x00, 0x10, 0x10 },
 3037: { 0x00, 0x11, 0x11 },
 3037: { 0x00, 0x12, 0x12 },
 3037: { 0x00, 0x13, 0x13 },
 3037: { 0x00, 0x14, 0x14 },
 3037: { 0x00, 0x15, 0x15 },
 3037: { 0x00, 0x16, 0x16 },
 3037: { 0x00, 0x17, 0x17 },
 3037: { 0x00, 0x18, 0x18 },
 3037: { 0x00, 0x19, 0x19 },
 3037: { 0x00, 0x1a, 0x1a },
 3037: { 0x00, 0x1b, 0x1b },
 3037: { 0x00, 0x1c, 0x1c },
 3037: { 0x00, 0x1d, 0x1d },
 3037: { 0x00, 0x1e, 0x1e },
 3037: { 0x00, 0x1f, 0x1f },
 3037: { 0x00, 0x20, 0x20 },
 3037: { 0x00, 0x21, 0x21 },
 3037: { 0x00, 0x22, 0x22 },
 3037: { 0x00, 0x23, 0x23 },
 3037: { 0x00, 0x24, 0x24 },
 3037: { 0x00, 0x25, 0x25 },
 3037: { 0x00, 0x26, 0x26 },
 3037: { 0x00, 0x27, 0x27 },
 3037: { 0x00, 0x28, 0x28 },
 3037: { 0x00, 0x29, 0x29 },
 3037: { 0x00, 0x2a, 0x2a },
 3037: { 0x00, 0x2b, 0x2b },
 3037: { 0x00, 0x2c, 0x2c },
 3037: { 0x00, 0x2d, 0x2d },
 3037: { 0x00, 0x2e, 0x2e },
 3037: { 0x00, 0x2f, 0x2f },
 3037: { 0x00, 0x30, 0x30 },
 3037: { 0x00, 0x31, 0x31 },
 3037: { 0x00, 0x32, 0x32 },
 3037: { 0x00, 0x33, 0x33 },
 3037: { 0x00, 0x34, 0x34 },
 3037: { 0x00, 0x35, 0x35 },
 3037: { 0x00, 0x36, 0x36 },
 3037: { 0x00, 0x37, 0x37 },
 3037: { 0x00, 0x38, 0x38 },
 3037: { 0x00, 0x39, 0x39 },
 3037: { 0x00, 0x3a, 0x3a },
 3037: { 0x00, 0x3b, 0x3b },
 3037: { 0x00, 0x3c, 0x3c },
 3037: { 0x00, 0x3d, 0x3d },
 3037: { 0x00, 0x3e, 0x3e },
 3037: { 0x00, 0x3f, 0x3f },
 3037: { 0x00, 0x40, 0x40 },
 3037: { 0x01, 0x61, 0x41 },
 3037: { 0x01, 0x62, 0x42 },
 3037: { 0x01, 0x63, 0x43 },
 3037: { 0x01, 0x64, 0x44 },
 3037: { 0x01, 0x65, 0x45 },
 3037: { 0x01, 0x66, 0x46 },
 3037: { 0x01, 0x67, 0x47 },
 3037: { 0x01, 0x68, 0x48 },
 3037: { 0x01, 0x69, 0x49 },
 3037: { 0x01, 0x6a, 0x4a },
 3037: { 0x01, 0x6b, 0x4b },
 3037: { 0x01, 0x6c, 0x4c },
 3037: { 0x01, 0x6d, 0x4d },
 3037: { 0x01, 0x6e, 0x4e },
 3037: { 0x01, 0x6f, 0x4f },
 3037: { 0x01, 0x70, 0x50 },
 3037: { 0x01, 0x71, 0x51 },
 3037: { 0x01, 0x72, 0x52 },
 3037: { 0x01, 0x73, 0x53 },
 3037: { 0x01, 0x74, 0x54 },
 3037: { 0x01, 0x75, 0x55 },
 3037: { 0x01, 0x76, 0x56 },
 3037: { 0x01, 0x77, 0x57 },
 3037: { 0x01, 0x78, 0x58 },
 3037: { 0x01, 0x79, 0x59 },
 3037: { 0x01, 0x7a, 0x5a },
 3037: { 0x00, 0x5b, 0x5b },
 3037: { 0x00, 0x5c, 0x5c },
 3037: { 0x00, 0x5d, 0x5d },
 3037: { 0x00, 0x5e, 0x5e },
 3037: { 0x00, 0x5f, 0x5f },
 3037: { 0x00, 0x60, 0x60 },
 3037: { 0x00, 0x61, 0x41 },
 3037: { 0x00, 0x62, 0x42 },
 3037: { 0x00, 0x63, 0x43 },
 3037: { 0x00, 0x64, 0x44 },
 3037: { 0x00, 0x65, 0x45 },
 3037: { 0x00, 0x66, 0x46 },
 3037: { 0x00, 0x67, 0x47 },
 3037: { 0x00, 0x68, 0x48 },
 3037: { 0x00, 0x69, 0x49 },
 3037: { 0x00, 0x6a, 0x4a },
 3037: { 0x00, 0x6b, 0x4b },
 3037: { 0x00, 0x6c, 0x4c },
 3037: { 0x00, 0x6d, 0x4d },
 3037: { 0x00, 0x6e, 0x4e },
 3037: { 0x00, 0x6f, 0x4f },
 3037: { 0x00, 0x70, 0x50 },
 3037: { 0x00, 0x71, 0x51 },
 3037: { 0x00, 0x72, 0x52 },
 3037: { 0x00, 0x73, 0x53 },
 3037: { 0x00, 0x74, 0x54 },
 3037: { 0x00, 0x75, 0x55 },
 3037: { 0x00, 0x76, 0x56 },
 3037: { 0x00, 0x77, 0x57 },
 3037: { 0x00, 0x78, 0x58 },
 3037: { 0x00, 0x79, 0x59 },
 3037: { 0x00, 0x7a, 0x5a },
 3037: { 0x00, 0x7b, 0x7b },
 3037: { 0x00, 0x7c, 0x7c },
 3037: { 0x00, 0x7d, 0x7d },
 3037: { 0x00, 0x7e, 0x7e },
 3037: { 0x00, 0x7f, 0x7f },
 3037: { 0x00, 0x80, 0x80 },
 3037: { 0x00, 0x81, 0x81 },
 3037: { 0x00, 0x82, 0x82 },
 3037: { 0x00, 0x83, 0x83 },
 3037: { 0x00, 0x84, 0x84 },
 3037: { 0x00, 0x85, 0x85 },
 3037: { 0x00, 0x86, 0x86 },
 3037: { 0x00, 0x87, 0x87 },
 3037: { 0x00, 0x88, 0x88 },
 3037: { 0x00, 0x89, 0x89 },
 3037: { 0x00, 0x8a, 0x8a },
 3037: { 0x00, 0x8b, 0x8b },
 3037: { 0x00, 0x8c, 0x8c },
 3037: { 0x00, 0x8d, 0x8d },
 3037: { 0x00, 0x8e, 0x8e },
 3037: { 0x00, 0x8f, 0x8f },
 3037: { 0x00, 0x90, 0x90 },
 3037: { 0x00, 0x91, 0x91 },
 3037: { 0x00, 0x92, 0x92 },
 3037: { 0x00, 0x93, 0x93 },
 3037: { 0x00, 0x94, 0x94 },
 3037: { 0x00, 0x95, 0x95 },
 3037: { 0x00, 0x96, 0x96 },
 3037: { 0x00, 0x97, 0x97 },
 3037: { 0x00, 0x98, 0x98 },
 3037: { 0x00, 0x99, 0x99 },
 3037: { 0x00, 0x9a, 0x9a },
 3037: { 0x00, 0x9b, 0x9b },
 3037: { 0x00, 0x9c, 0x9c },
 3037: { 0x00, 0x9d, 0x9d },
 3037: { 0x00, 0x9e, 0x9e },
 3037: { 0x00, 0x9f, 0x9f },
 3037: { 0x00, 0xa0, 0xa0 },
 3037: { 0x01, 0xb1, 0xa1 },
 3037: { 0x00, 0xa2, 0xa2 },
 3037: { 0x01, 0xb3, 0xa3 },
 3037: { 0x00, 0xa4, 0xa4 },
 3037: { 0x01, 0xb5, 0xa5 },
 3037: { 0x01, 0xb6, 0xa6 },
 3037: { 0x00, 0xa7, 0xa7 },
 3037: { 0x00, 0xa8, 0xa8 },
 3037: { 0x01, 0xb9, 0xa9 },
 3037: { 0x01, 0xba, 0xaa },
 3037: { 0x01, 0xbb, 0xab },
 3037: { 0x01, 0xbc, 0xac },
 3037: { 0x00, 0xad, 0xad },
 3037: { 0x01, 0xbe, 0xae },
 3037: { 0x00, 0xaf, 0xaf },
 3037: { 0x00, 0xb0, 0xb0 },
 3037: { 0x00, 0xb1, 0xa1 },
 3037: { 0x00, 0xb2, 0xb2 },
 3037: { 0x00, 0xb3, 0xa3 },
 3037: { 0x00, 0xb4, 0xb4 },
 3037: { 0x00, 0xb5, 0xa5 },
 3037: { 0x00, 0xb6, 0xa6 },
 3037: { 0x00, 0xb7, 0xb7 },
 3037: { 0x00, 0xb8, 0xb8 },
 3037: { 0x00, 0xb9, 0xa9 },
 3037: { 0x00, 0xba, 0xaa },
 3037: { 0x00, 0xbb, 0xab },
 3037: { 0x00, 0xbc, 0xac },
 3037: { 0x00, 0xbd, 0xbd },
 3037: { 0x00, 0xbe, 0xae },
 3037: { 0x00, 0xbf, 0xbf },
 3037: { 0x01, 0xe0, 0xc0 },
 3037: { 0x01, 0xe1, 0xc1 },
 3037: { 0x01, 0xe2, 0xc2 },
 3037: { 0x01, 0xe3, 0xc3 },
 3037: { 0x01, 0xe4, 0xc4 },
 3037: { 0x01, 0xe5, 0xc5 },
 3037: { 0x01, 0xe6, 0xc6 },
 3037: { 0x01, 0xe7, 0xc7 },
 3037: { 0x01, 0xe8, 0xc8 },
 3037: { 0x01, 0xe9, 0xc9 },
 3037: { 0x01, 0xea, 0xca },
 3037: { 0x01, 0xeb, 0xcb },
 3037: { 0x01, 0xec, 0xcc },
 3037: { 0x01, 0xed, 0xcd },
 3037: { 0x01, 0xee, 0xce },
 3037: { 0x01, 0xef, 0xcf },
 3037: { 0x01, 0xf0, 0xd0 },
 3037: { 0x01, 0xf1, 0xd1 },
 3037: { 0x01, 0xf2, 0xd2 },
 3037: { 0x01, 0xf3, 0xd3 },
 3037: { 0x01, 0xf4, 0xd4 },
 3037: { 0x01, 0xf5, 0xd5 },
 3037: { 0x01, 0xf6, 0xd6 },
 3037: { 0x00, 0xd7, 0xd7 },
 3037: { 0x01, 0xf8, 0xd8 },
 3037: { 0x01, 0xf9, 0xd9 },
 3037: { 0x01, 0xfa, 0xda },
 3037: { 0x01, 0xfb, 0xdb },
 3037: { 0x01, 0xfc, 0xdc },
 3037: { 0x01, 0xfd, 0xdd },
 3037: { 0x01, 0xfe, 0xde },
 3037: { 0x00, 0xdf, 0xdf },
 3037: { 0x00, 0xe0, 0xc0 },
 3037: { 0x00, 0xe1, 0xc1 },
 3037: { 0x00, 0xe2, 0xc2 },
 3037: { 0x00, 0xe3, 0xc3 },
 3037: { 0x00, 0xe4, 0xc4 },
 3037: { 0x00, 0xe5, 0xc5 },
 3037: { 0x00, 0xe6, 0xc6 },
 3037: { 0x00, 0xe7, 0xc7 },
 3037: { 0x00, 0xe8, 0xc8 },
 3037: { 0x00, 0xe9, 0xc9 },
 3037: { 0x00, 0xea, 0xca },
 3037: { 0x00, 0xeb, 0xcb },
 3037: { 0x00, 0xec, 0xcc },
 3037: { 0x00, 0xed, 0xcd },
 3037: { 0x00, 0xee, 0xce },
 3037: { 0x00, 0xef, 0xcf },
 3037: { 0x00, 0xf0, 0xd0 },
 3037: { 0x00, 0xf1, 0xd1 },
 3037: { 0x00, 0xf2, 0xd2 },
 3037: { 0x00, 0xf3, 0xd3 },
 3037: { 0x00, 0xf4, 0xd4 },
 3037: { 0x00, 0xf5, 0xd5 },
 3037: { 0x00, 0xf6, 0xd6 },
 3037: { 0x00, 0xf7, 0xf7 },
 3037: { 0x00, 0xf8, 0xd8 },
 3037: { 0x00, 0xf9, 0xd9 },
 3037: { 0x00, 0xfa, 0xda },
 3037: { 0x00, 0xfb, 0xdb },
 3037: { 0x00, 0xfc, 0xdc },
 3037: { 0x00, 0xfd, 0xdd },
 3037: { 0x00, 0xfe, 0xde },
21326: { 0x00, 0xff, 0xff }
 3037: };
 3037: 
43385: static struct cs_info iso5_tbl[] = {
 3037: { 0x00, 0x00, 0x00 },
 3037: { 0x00, 0x01, 0x01 },
 3037: { 0x00, 0x02, 0x02 },
 3037: { 0x00, 0x03, 0x03 },
 3037: { 0x00, 0x04, 0x04 },
 3037: { 0x00, 0x05, 0x05 },
 3037: { 0x00, 0x06, 0x06 },
 3037: { 0x00, 0x07, 0x07 },
 3037: { 0x00, 0x08, 0x08 },
 3037: { 0x00, 0x09, 0x09 },
 3037: { 0x00, 0x0a, 0x0a },
 3037: { 0x00, 0x0b, 0x0b },
 3037: { 0x00, 0x0c, 0x0c },
 3037: { 0x00, 0x0d, 0x0d },
 3037: { 0x00, 0x0e, 0x0e },
 3037: { 0x00, 0x0f, 0x0f },
 3037: { 0x00, 0x10, 0x10 },
 3037: { 0x00, 0x11, 0x11 },
 3037: { 0x00, 0x12, 0x12 },
 3037: { 0x00, 0x13, 0x13 },
 3037: { 0x00, 0x14, 0x14 },
 3037: { 0x00, 0x15, 0x15 },
 3037: { 0x00, 0x16, 0x16 },
 3037: { 0x00, 0x17, 0x17 },
 3037: { 0x00, 0x18, 0x18 },
 3037: { 0x00, 0x19, 0x19 },
 3037: { 0x00, 0x1a, 0x1a },
 3037: { 0x00, 0x1b, 0x1b },
 3037: { 0x00, 0x1c, 0x1c },
 3037: { 0x00, 0x1d, 0x1d },
 3037: { 0x00, 0x1e, 0x1e },
 3037: { 0x00, 0x1f, 0x1f },
 3037: { 0x00, 0x20, 0x20 },
 3037: { 0x00, 0x21, 0x21 },
 3037: { 0x00, 0x22, 0x22 },
 3037: { 0x00, 0x23, 0x23 },
 3037: { 0x00, 0x24, 0x24 },
 3037: { 0x00, 0x25, 0x25 },
 3037: { 0x00, 0x26, 0x26 },
 3037: { 0x00, 0x27, 0x27 },
 3037: { 0x00, 0x28, 0x28 },
 3037: { 0x00, 0x29, 0x29 },
 3037: { 0x00, 0x2a, 0x2a },
 3037: { 0x00, 0x2b, 0x2b },
 3037: { 0x00, 0x2c, 0x2c },
 3037: { 0x00, 0x2d, 0x2d },
 3037: { 0x00, 0x2e, 0x2e },
 3037: { 0x00, 0x2f, 0x2f },
 3037: { 0x00, 0x30, 0x30 },
 3037: { 0x00, 0x31, 0x31 },
 3037: { 0x00, 0x32, 0x32 },
 3037: { 0x00, 0x33, 0x33 },
 3037: { 0x00, 0x34, 0x34 },
 3037: { 0x00, 0x35, 0x35 },
 3037: { 0x00, 0x36, 0x36 },
 3037: { 0x00, 0x37, 0x37 },
 3037: { 0x00, 0x38, 0x38 },
 3037: { 0x00, 0x39, 0x39 },
 3037: { 0x00, 0x3a, 0x3a },
 3037: { 0x00, 0x3b, 0x3b },
 3037: { 0x00, 0x3c, 0x3c },
 3037: { 0x00, 0x3d, 0x3d },
 3037: { 0x00, 0x3e, 0x3e },
 3037: { 0x00, 0x3f, 0x3f },
 3037: { 0x00, 0x40, 0x40 },
 3037: { 0x01, 0x61, 0x41 },
 3037: { 0x01, 0x62, 0x42 },
 3037: { 0x01, 0x63, 0x43 },
 3037: { 0x01, 0x64, 0x44 },
 3037: { 0x01, 0x65, 0x45 },
 3037: { 0x01, 0x66, 0x46 },
 3037: { 0x01, 0x67, 0x47 },
 3037: { 0x01, 0x68, 0x48 },
 3037: { 0x01, 0x69, 0x49 },
 3037: { 0x01, 0x6a, 0x4a },
 3037: { 0x01, 0x6b, 0x4b },
 3037: { 0x01, 0x6c, 0x4c },
 3037: { 0x01, 0x6d, 0x4d },
 3037: { 0x01, 0x6e, 0x4e },
 3037: { 0x01, 0x6f, 0x4f },
 3037: { 0x01, 0x70, 0x50 },
 3037: { 0x01, 0x71, 0x51 },
 3037: { 0x01, 0x72, 0x52 },
 3037: { 0x01, 0x73, 0x53 },
 3037: { 0x01, 0x74, 0x54 },
 3037: { 0x01, 0x75, 0x55 },
 3037: { 0x01, 0x76, 0x56 },
 3037: { 0x01, 0x77, 0x57 },
 3037: { 0x01, 0x78, 0x58 },
 3037: { 0x01, 0x79, 0x59 },
 3037: { 0x01, 0x7a, 0x5a },
 3037: { 0x00, 0x5b, 0x5b },
 3037: { 0x00, 0x5c, 0x5c },
 3037: { 0x00, 0x5d, 0x5d },
 3037: { 0x00, 0x5e, 0x5e },
 3037: { 0x00, 0x5f, 0x5f },
 3037: { 0x00, 0x60, 0x60 },
 3037: { 0x00, 0x61, 0x41 },
 3037: { 0x00, 0x62, 0x42 },
 3037: { 0x00, 0x63, 0x43 },
 3037: { 0x00, 0x64, 0x44 },
 3037: { 0x00, 0x65, 0x45 },
 3037: { 0x00, 0x66, 0x46 },
 3037: { 0x00, 0x67, 0x47 },
 3037: { 0x00, 0x68, 0x48 },
 3037: { 0x00, 0x69, 0x49 },
 3037: { 0x00, 0x6a, 0x4a },
 3037: { 0x00, 0x6b, 0x4b },
 3037: { 0x00, 0x6c, 0x4c },
 3037: { 0x00, 0x6d, 0x4d },
 3037: { 0x00, 0x6e, 0x4e },
 3037: { 0x00, 0x6f, 0x4f },
 3037: { 0x00, 0x70, 0x50 },
 3037: { 0x00, 0x71, 0x51 },
 3037: { 0x00, 0x72, 0x52 },
 3037: { 0x00, 0x73, 0x53 },
 3037: { 0x00, 0x74, 0x54 },
 3037: { 0x00, 0x75, 0x55 },
 3037: { 0x00, 0x76, 0x56 },
 3037: { 0x00, 0x77, 0x57 },
 3037: { 0x00, 0x78, 0x58 },
 3037: { 0x00, 0x79, 0x59 },
 3037: { 0x00, 0x7a, 0x5a },
 3037: { 0x00, 0x7b, 0x7b },
 3037: { 0x00, 0x7c, 0x7c },
 3037: { 0x00, 0x7d, 0x7d },
 3037: { 0x00, 0x7e, 0x7e },
 3037: { 0x00, 0x7f, 0x7f },
 3037: { 0x00, 0x80, 0x80 },
 3037: { 0x00, 0x81, 0x81 },
 3037: { 0x00, 0x82, 0x82 },
 3037: { 0x00, 0x83, 0x83 },
 3037: { 0x00, 0x84, 0x84 },
 3037: { 0x00, 0x85, 0x85 },
 3037: { 0x00, 0x86, 0x86 },
 3037: { 0x00, 0x87, 0x87 },
 3037: { 0x00, 0x88, 0x88 },
 3037: { 0x00, 0x89, 0x89 },
 3037: { 0x00, 0x8a, 0x8a },
 3037: { 0x00, 0x8b, 0x8b },
 3037: { 0x00, 0x8c, 0x8c },
 3037: { 0x00, 0x8d, 0x8d },
 3037: { 0x00, 0x8e, 0x8e },
 3037: { 0x00, 0x8f, 0x8f },
 3037: { 0x00, 0x90, 0x90 },
 3037: { 0x00, 0x91, 0x91 },
 3037: { 0x00, 0x92, 0x92 },
 3037: { 0x00, 0x93, 0x93 },
 3037: { 0x00, 0x94, 0x94 },
 3037: { 0x00, 0x95, 0x95 },
 3037: { 0x00, 0x96, 0x96 },
 3037: { 0x00, 0x97, 0x97 },
 3037: { 0x00, 0x98, 0x98 },
 3037: { 0x00, 0x99, 0x99 },
 3037: { 0x00, 0x9a, 0x9a },
 3037: { 0x00, 0x9b, 0x9b },
 3037: { 0x00, 0x9c, 0x9c },
 3037: { 0x00, 0x9d, 0x9d },
 3037: { 0x00, 0x9e, 0x9e },
 3037: { 0x00, 0x9f, 0x9f },
 3037: { 0x00, 0xa0, 0xa0 },
 3037: { 0x01, 0xf1, 0xa1 },
 3037: { 0x01, 0xf2, 0xa2 },
 3037: { 0x01, 0xf3, 0xa3 },
 3037: { 0x01, 0xf4, 0xa4 },
 3037: { 0x01, 0xf5, 0xa5 },
 3037: { 0x01, 0xf6, 0xa6 },
 3037: { 0x01, 0xf7, 0xa7 },
 3037: { 0x01, 0xf8, 0xa8 },
 3037: { 0x01, 0xf9, 0xa9 },
 3037: { 0x01, 0xfa, 0xaa },
 3037: { 0x01, 0xfb, 0xab },
 3037: { 0x01, 0xfc, 0xac },
 3037: { 0x00, 0xad, 0xad },
 3037: { 0x01, 0xfe, 0xae },
 3037: { 0x01, 0xff, 0xaf },
 3037: { 0x01, 0xd0, 0xb0 },
 3037: { 0x01, 0xd1, 0xb1 },
 3037: { 0x01, 0xd2, 0xb2 },
 3037: { 0x01, 0xd3, 0xb3 },
 3037: { 0x01, 0xd4, 0xb4 },
 3037: { 0x01, 0xd5, 0xb5 },
 3037: { 0x01, 0xd6, 0xb6 },
 3037: { 0x01, 0xd7, 0xb7 },
 3037: { 0x01, 0xd8, 0xb8 },
 3037: { 0x01, 0xd9, 0xb9 },
 3037: { 0x01, 0xda, 0xba },
 3037: { 0x01, 0xdb, 0xbb },
 3037: { 0x01, 0xdc, 0xbc },
 3037: { 0x01, 0xdd, 0xbd },
 3037: { 0x01, 0xde, 0xbe },
 3037: { 0x01, 0xdf, 0xbf },
 3037: { 0x01, 0xe0, 0xc0 },
 3037: { 0x01, 0xe1, 0xc1 },
 3037: { 0x01, 0xe2, 0xc2 },
 3037: { 0x01, 0xe3, 0xc3 },
 3037: { 0x01, 0xe4, 0xc4 },
 3037: { 0x01, 0xe5, 0xc5 },
 3037: { 0x01, 0xe6, 0xc6 },
 3037: { 0x01, 0xe7, 0xc7 },
 3037: { 0x01, 0xe8, 0xc8 },
 3037: { 0x01, 0xe9, 0xc9 },
 3037: { 0x01, 0xea, 0xca },
 3037: { 0x01, 0xeb, 0xcb },
 3037: { 0x01, 0xec, 0xcc },
 3037: { 0x01, 0xed, 0xcd },
 3037: { 0x01, 0xee, 0xce },
 3037: { 0x01, 0xef, 0xcf },
 3037: { 0x00, 0xd0, 0xb0 },
 3037: { 0x00, 0xd1, 0xb1 },
 3037: { 0x00, 0xd2, 0xb2 },
 3037: { 0x00, 0xd3, 0xb3 },
 3037: { 0x00, 0xd4, 0xb4 },
 3037: { 0x00, 0xd5, 0xb5 },
 3037: { 0x00, 0xd6, 0xb6 },
 3037: { 0x00, 0xd7, 0xb7 },
 3037: { 0x00, 0xd8, 0xb8 },
 3037: { 0x00, 0xd9, 0xb9 },
 3037: { 0x00, 0xda, 0xba },
 3037: { 0x00, 0xdb, 0xbb },
 3037: { 0x00, 0xdc, 0xbc },
 3037: { 0x00, 0xdd, 0xbd },
 3037: { 0x00, 0xde, 0xbe },
 3037: { 0x00, 0xdf, 0xbf },
 3037: { 0x00, 0xe0, 0xc0 },
 3037: { 0x00, 0xe1, 0xc1 },
 3037: { 0x00, 0xe2, 0xc2 },
 3037: { 0x00, 0xe3, 0xc3 },
 3037: { 0x00, 0xe4, 0xc4 },
 3037: { 0x00, 0xe5, 0xc5 },
 3037: { 0x00, 0xe6, 0xc6 },
 3037: { 0x00, 0xe7, 0xc7 },
 3037: { 0x00, 0xe8, 0xc8 },
 3037: { 0x00, 0xe9, 0xc9 },
 3037: { 0x00, 0xea, 0xca },
 3037: { 0x00, 0xeb, 0xcb },
 3037: { 0x00, 0xec, 0xcc },
 3037: { 0x00, 0xed, 0xcd },
 3037: { 0x00, 0xee, 0xce },
 3037: { 0x00, 0xef, 0xcf },
 3037: { 0x00, 0xf0, 0xf0 },
 3037: { 0x00, 0xf1, 0xa1 },
 3037: { 0x00, 0xf2, 0xa2 },
 3037: { 0x00, 0xf3, 0xa3 },
 3037: { 0x00, 0xf4, 0xa4 },
 3037: { 0x00, 0xf5, 0xa5 },
 3037: { 0x00, 0xf6, 0xa6 },
 3037: { 0x00, 0xf7, 0xa7 },
 3037: { 0x00, 0xf8, 0xa8 },
 3037: { 0x00, 0xf9, 0xa9 },
 3037: { 0x00, 0xfa, 0xaa },
 3037: { 0x00, 0xfb, 0xab },
 3037: { 0x00, 0xfc, 0xac },
 3037: { 0x00, 0xfd, 0xfd },
 3037: { 0x00, 0xfe, 0xae },
21326: { 0x00, 0xff, 0xaf }
 3037: };
 3037: 
43385: static struct cs_info iso6_tbl[] = {
 3037: { 0x00, 0x00, 0x00 },
 3037: { 0x00, 0x01, 0x01 },
 3037: { 0x00, 0x02, 0x02 },
 3037: { 0x00, 0x03, 0x03 },
 3037: { 0x00, 0x04, 0x04 },
 3037: { 0x00, 0x05, 0x05 },
 3037: { 0x00, 0x06, 0x06 },
 3037: { 0x00, 0x07, 0x07 },
 3037: { 0x00, 0x08, 0x08 },
 3037: { 0x00, 0x09, 0x09 },
 3037: { 0x00, 0x0a, 0x0a },
 3037: { 0x00, 0x0b, 0x0b },
 3037: { 0x00, 0x0c, 0x0c },
 3037: { 0x00, 0x0d, 0x0d },
 3037: { 0x00, 0x0e, 0x0e },
 3037: { 0x00, 0x0f, 0x0f },
 3037: { 0x00, 0x10, 0x10 },
 3037: { 0x00, 0x11, 0x11 },
 3037: { 0x00, 0x12, 0x12 },
 3037: { 0x00, 0x13, 0x13 },
 3037: { 0x00, 0x14, 0x14 },
 3037: { 0x00, 0x15, 0x15 },
 3037: { 0x00, 0x16, 0x16 },
 3037: { 0x00, 0x17, 0x17 },
 3037: { 0x00, 0x18, 0x18 },
 3037: { 0x00, 0x19, 0x19 },
 3037: { 0x00, 0x1a, 0x1a },
 3037: { 0x00, 0x1b, 0x1b },
 3037: { 0x00, 0x1c, 0x1c },
 3037: { 0x00, 0x1d, 0x1d },
 3037: { 0x00, 0x1e, 0x1e },
 3037: { 0x00, 0x1f, 0x1f },
 3037: { 0x00, 0x20, 0x20 },
 3037: { 0x00, 0x21, 0x21 },
 3037: { 0x00, 0x22, 0x22 },
 3037: { 0x00, 0x23, 0x23 },
 3037: { 0x00, 0x24, 0x24 },
 3037: { 0x00, 0x25, 0x25 },
 3037: { 0x00, 0x26, 0x26 },
 3037: { 0x00, 0x27, 0x27 },
 3037: { 0x00, 0x28, 0x28 },
 3037: { 0x00, 0x29, 0x29 },
 3037: { 0x00, 0x2a, 0x2a },
 3037: { 0x00, 0x2b, 0x2b },
 3037: { 0x00, 0x2c, 0x2c },
 3037: { 0x00, 0x2d, 0x2d },
 3037: { 0x00, 0x2e, 0x2e },
 3037: { 0x00, 0x2f, 0x2f },
 3037: { 0x00, 0x30, 0x30 },
 3037: { 0x00, 0x31, 0x31 },
 3037: { 0x00, 0x32, 0x32 },
 3037: { 0x00, 0x33, 0x33 },
 3037: { 0x00, 0x34, 0x34 },
 3037: { 0x00, 0x35, 0x35 },
 3037: { 0x00, 0x36, 0x36 },
 3037: { 0x00, 0x37, 0x37 },
 3037: { 0x00, 0x38, 0x38 },
 3037: { 0x00, 0x39, 0x39 },
 3037: { 0x00, 0x3a, 0x3a },
 3037: { 0x00, 0x3b, 0x3b },
 3037: { 0x00, 0x3c, 0x3c },
 3037: { 0x00, 0x3d, 0x3d },
 3037: { 0x00, 0x3e, 0x3e },
 3037: { 0x00, 0x3f, 0x3f },
 3037: { 0x00, 0x40, 0x40 },
 3037: { 0x01, 0x61, 0x41 },
 3037: { 0x01, 0x62, 0x42 },
 3037: { 0x01, 0x63, 0x43 },
 3037: { 0x01, 0x64, 0x44 },
 3037: { 0x01, 0x65, 0x45 },
 3037: { 0x01, 0x66, 0x46 },
 3037: { 0x01, 0x67, 0x47 },
 3037: { 0x01, 0x68, 0x48 },
 3037: { 0x01, 0x69, 0x49 },
 3037: { 0x01, 0x6a, 0x4a },
 3037: { 0x01, 0x6b, 0x4b },
 3037: { 0x01, 0x6c, 0x4c },
 3037: { 0x01, 0x6d, 0x4d },
 3037: { 0x01, 0x6e, 0x4e },
 3037: { 0x01, 0x6f, 0x4f },
 3037: { 0x01, 0x70, 0x50 },
 3037: { 0x01, 0x71, 0x51 },
 3037: { 0x01, 0x72, 0x52 },
 3037: { 0x01, 0x73, 0x53 },
 3037: { 0x01, 0x74, 0x54 },
 3037: { 0x01, 0x75, 0x55 },
 3037: { 0x01, 0x76, 0x56 },
 3037: { 0x01, 0x77, 0x57 },
 3037: { 0x01, 0x78, 0x58 },
 3037: { 0x01, 0x79, 0x59 },
 3037: { 0x01, 0x7a, 0x5a },
 3037: { 0x00, 0x5b, 0x5b },
 3037: { 0x00, 0x5c, 0x5c },
 3037: { 0x00, 0x5d, 0x5d },
 3037: { 0x00, 0x5e, 0x5e },
 3037: { 0x00, 0x5f, 0x5f },
 3037: { 0x00, 0x60, 0x60 },
 3037: { 0x00, 0x61, 0x41 },
 3037: { 0x00, 0x62, 0x42 },
 3037: { 0x00, 0x63, 0x43 },
 3037: { 0x00, 0x64, 0x44 },
 3037: { 0x00, 0x65, 0x45 },
 3037: { 0x00, 0x66, 0x46 },
 3037: { 0x00, 0x67, 0x47 },
 3037: { 0x00, 0x68, 0x48 },
 3037: { 0x00, 0x69, 0x49 },
 3037: { 0x00, 0x6a, 0x4a },
 3037: { 0x00, 0x6b, 0x4b },
 3037: { 0x00, 0x6c, 0x4c },
 3037: { 0x00, 0x6d, 0x4d },
 3037: { 0x00, 0x6e, 0x4e },
 3037: { 0x00, 0x6f, 0x4f },
 3037: { 0x00, 0x70, 0x50 },
 3037: { 0x00, 0x71, 0x51 },
 3037: { 0x00, 0x72, 0x52 },
 3037: { 0x00, 0x73, 0x53 },
 3037: { 0x00, 0x74, 0x54 },
 3037: { 0x00, 0x75, 0x55 },
 3037: { 0x00, 0x76, 0x56 },
 3037: { 0x00, 0x77, 0x57 },
 3037: { 0x00, 0x78, 0x58 },
 3037: { 0x00, 0x79, 0x59 },
 3037: { 0x00, 0x7a, 0x5a },
 3037: { 0x00, 0x7b, 0x7b },
 3037: { 0x00, 0x7c, 0x7c },
 3037: { 0x00, 0x7d, 0x7d },
 3037: { 0x00, 0x7e, 0x7e },
 3037: { 0x00, 0x7f, 0x7f },
 3037: { 0x00, 0x80, 0x80 },
 3037: { 0x00, 0x81, 0x81 },
 3037: { 0x00, 0x82, 0x82 },
 3037: { 0x00, 0x83, 0x83 },
 3037: { 0x00, 0x84, 0x84 },
 3037: { 0x00, 0x85, 0x85 },
 3037: { 0x00, 0x86, 0x86 },
 3037: { 0x00, 0x87, 0x87 },
 3037: { 0x00, 0x88, 0x88 },
 3037: { 0x00, 0x89, 0x89 },
 3037: { 0x00, 0x8a, 0x8a },
 3037: { 0x00, 0x8b, 0x8b },
 3037: { 0x00, 0x8c, 0x8c },
 3037: { 0x00, 0x8d, 0x8d },
 3037: { 0x00, 0x8e, 0x8e },
 3037: { 0x00, 0x8f, 0x8f },
 3037: { 0x00, 0x90, 0x90 },
 3037: { 0x00, 0x91, 0x91 },
 3037: { 0x00, 0x92, 0x92 },
 3037: { 0x00, 0x93, 0x93 },
 3037: { 0x00, 0x94, 0x94 },
 3037: { 0x00, 0x95, 0x95 },
 3037: { 0x00, 0x96, 0x96 },
 3037: { 0x00, 0x97, 0x97 },
 3037: { 0x00, 0x98, 0x98 },
 3037: { 0x00, 0x99, 0x99 },
 3037: { 0x00, 0x9a, 0x9a },
 3037: { 0x00, 0x9b, 0x9b },
 3037: { 0x00, 0x9c, 0x9c },
 3037: { 0x00, 0x9d, 0x9d },
 3037: { 0x00, 0x9e, 0x9e },
 3037: { 0x00, 0x9f, 0x9f },
 3037: { 0x00, 0xa0, 0xa0 },
 3037: { 0x00, 0xa1, 0xa1 },
 3037: { 0x00, 0xa2, 0xa2 },
 3037: { 0x00, 0xa3, 0xa3 },
 3037: { 0x00, 0xa4, 0xa4 },
 3037: { 0x00, 0xa5, 0xa5 },
 3037: { 0x00, 0xa6, 0xa6 },
 3037: { 0x00, 0xa7, 0xa7 },
 3037: { 0x00, 0xa8, 0xa8 },
 3037: { 0x00, 0xa9, 0xa9 },
 3037: { 0x00, 0xaa, 0xaa },
 3037: { 0x00, 0xab, 0xab },
 3037: { 0x00, 0xac, 0xac },
 3037: { 0x00, 0xad, 0xad },
 3037: { 0x00, 0xae, 0xae },
 3037: { 0x00, 0xaf, 0xaf },
 3037: { 0x00, 0xb0, 0xb0 },
 3037: { 0x00, 0xb1, 0xb1 },
 3037: { 0x00, 0xb2, 0xb2 },
 3037: { 0x00, 0xb3, 0xb3 },
 3037: { 0x00, 0xb4, 0xb4 },
 3037: { 0x00, 0xb5, 0xb5 },
 3037: { 0x00, 0xb6, 0xb6 },
 3037: { 0x00, 0xb7, 0xb7 },
 3037: { 0x00, 0xb8, 0xb8 },
 3037: { 0x00, 0xb9, 0xb9 },
 3037: { 0x00, 0xba, 0xba },
 3037: { 0x00, 0xbb, 0xbb },
 3037: { 0x00, 0xbc, 0xbc },
 3037: { 0x00, 0xbd, 0xbd },
 3037: { 0x00, 0xbe, 0xbe },
 3037: { 0x00, 0xbf, 0xbf },
 3037: { 0x00, 0xc0, 0xc0 },
 3037: { 0x00, 0xc1, 0xc1 },
 3037: { 0x00, 0xc2, 0xc2 },
 3037: { 0x00, 0xc3, 0xc3 },
 3037: { 0x00, 0xc4, 0xc4 },
 3037: { 0x00, 0xc5, 0xc5 },
 3037: { 0x00, 0xc6, 0xc6 },
 3037: { 0x00, 0xc7, 0xc7 },
 3037: { 0x00, 0xc8, 0xc8 },
 3037: { 0x00, 0xc9, 0xc9 },
 3037: { 0x00, 0xca, 0xca },
 3037: { 0x00, 0xcb, 0xcb },
 3037: { 0x00, 0xcc, 0xcc },
 3037: { 0x00, 0xcd, 0xcd },
 3037: { 0x00, 0xce, 0xce },
 3037: { 0x00, 0xcf, 0xcf },
 3037: { 0x00, 0xd0, 0xd0 },
 3037: { 0x00, 0xd1, 0xd1 },
 3037: { 0x00, 0xd2, 0xd2 },
 3037: { 0x00, 0xd3, 0xd3 },
 3037: { 0x00, 0xd4, 0xd4 },
 3037: { 0x00, 0xd5, 0xd5 },
 3037: { 0x00, 0xd6, 0xd6 },
 3037: { 0x00, 0xd7, 0xd7 },
 3037: { 0x00, 0xd8, 0xd8 },
 3037: { 0x00, 0xd9, 0xd9 },
 3037: { 0x00, 0xda, 0xda },
 3037: { 0x00, 0xdb, 0xdb },
 3037: { 0x00, 0xdc, 0xdc },
 3037: { 0x00, 0xdd, 0xdd },
 3037: { 0x00, 0xde, 0xde },
 3037: { 0x00, 0xdf, 0xdf },
 3037: { 0x00, 0xe0, 0xe0 },
 3037: { 0x00, 0xe1, 0xe1 },
 3037: { 0x00, 0xe2, 0xe2 },
 3037: { 0x00, 0xe3, 0xe3 },
 3037: { 0x00, 0xe4, 0xe4 },
 3037: { 0x00, 0xe5, 0xe5 },
 3037: { 0x00, 0xe6, 0xe6 },
 3037: { 0x00, 0xe7, 0xe7 },
 3037: { 0x00, 0xe8, 0xe8 },
 3037: { 0x00, 0xe9, 0xe9 },
 3037: { 0x00, 0xea, 0xea },
 3037: { 0x00, 0xeb, 0xeb },
 3037: { 0x00, 0xec, 0xec },
 3037: { 0x00, 0xed, 0xed },
 3037: { 0x00, 0xee, 0xee },
 3037: { 0x00, 0xef, 0xef },
 3037: { 0x00, 0xf0, 0xf0 },
 3037: { 0x00, 0xf1, 0xf1 },
 3037: { 0x00, 0xf2, 0xf2 },
 3037: { 0x00, 0xf3, 0xf3 },
 3037: { 0x00, 0xf4, 0xf4 },
 3037: { 0x00, 0xf5, 0xf5 },
 3037: { 0x00, 0xf6, 0xf6 },
 3037: { 0x00, 0xf7, 0xf7 },
 3037: { 0x00, 0xf8, 0xf8 },
 3037: { 0x00, 0xf9, 0xf9 },
 3037: { 0x00, 0xfa, 0xfa },
 3037: { 0x00, 0xfb, 0xfb },
 3037: { 0x00, 0xfc, 0xfc },
 3037: { 0x00, 0xfd, 0xfd },
 3037: { 0x00, 0xfe, 0xfe },
21326: { 0x00, 0xff, 0xff }
 3037: };
 3037: 
43385: static struct cs_info iso7_tbl[] = {
 3037: { 0x00, 0x00, 0x00 },
 3037: { 0x00, 0x01, 0x01 },
 3037: { 0x00, 0x02, 0x02 },
 3037: { 0x00, 0x03, 0x03 },
 3037: { 0x00, 0x04, 0x04 },
 3037: { 0x00, 0x05, 0x05 },
 3037: { 0x00, 0x06, 0x06 },
 3037: { 0x00, 0x07, 0x07 },
 3037: { 0x00, 0x08, 0x08 },
 3037: { 0x00, 0x09, 0x09 },
 3037: { 0x00, 0x0a, 0x0a },
 3037: { 0x00, 0x0b, 0x0b },
 3037: { 0x00, 0x0c, 0x0c },
 3037: { 0x00, 0x0d, 0x0d },
 3037: { 0x00, 0x0e, 0x0e },
 3037: { 0x00, 0x0f, 0x0f },
 3037: { 0x00, 0x10, 0x10 },
 3037: { 0x00, 0x11, 0x11 },
 3037: { 0x00, 0x12, 0x12 },
 3037: { 0x00, 0x13, 0x13 },
 3037: { 0x00, 0x14, 0x14 },
 3037: { 0x00, 0x15, 0x15 },
 3037: { 0x00, 0x16, 0x16 },
 3037: { 0x00, 0x17, 0x17 },
 3037: { 0x00, 0x18, 0x18 },
 3037: { 0x00, 0x19, 0x19 },
 3037: { 0x00, 0x1a, 0x1a },
 3037: { 0x00, 0x1b, 0x1b },
 3037: { 0x00, 0x1c, 0x1c },
 3037: { 0x00, 0x1d, 0x1d },
 3037: { 0x00, 0x1e, 0x1e },
 3037: { 0x00, 0x1f, 0x1f },
 3037: { 0x00, 0x20, 0x20 },
 3037: { 0x00, 0x21, 0x21 },
 3037: { 0x00, 0x22, 0x22 },
 3037: { 0x00, 0x23, 0x23 },
 3037: { 0x00, 0x24, 0x24 },
 3037: { 0x00, 0x25, 0x25 },
 3037: { 0x00, 0x26, 0x26 },
 3037: { 0x00, 0x27, 0x27 },
 3037: { 0x00, 0x28, 0x28 },
 3037: { 0x00, 0x29, 0x29 },
 3037: { 0x00, 0x2a, 0x2a },
 3037: { 0x00, 0x2b, 0x2b },
 3037: { 0x00, 0x2c, 0x2c },
 3037: { 0x00, 0x2d, 0x2d },
 3037: { 0x00, 0x2e, 0x2e },
 3037: { 0x00, 0x2f, 0x2f },
 3037: { 0x00, 0x30, 0x30 },
 3037: { 0x00, 0x31, 0x31 },
 3037: { 0x00, 0x32, 0x32 },
 3037: { 0x00, 0x33, 0x33 },
 3037: { 0x00, 0x34, 0x34 },
 3037: { 0x00, 0x35, 0x35 },
 3037: { 0x00, 0x36, 0x36 },
 3037: { 0x00, 0x37, 0x37 },
 3037: { 0x00, 0x38, 0x38 },
 3037: { 0x00, 0x39, 0x39 },
 3037: { 0x00, 0x3a, 0x3a },
 3037: { 0x00, 0x3b, 0x3b },
 3037: { 0x00, 0x3c, 0x3c },
 3037: { 0x00, 0x3d, 0x3d },
 3037: { 0x00, 0x3e, 0x3e },
 3037: { 0x00, 0x3f, 0x3f },
 3037: { 0x00, 0x40, 0x40 },
 3037: { 0x01, 0x61, 0x41 },
 3037: { 0x01, 0x62, 0x42 },
 3037: { 0x01, 0x63, 0x43 },
 3037: { 0x01, 0x64, 0x44 },
 3037: { 0x01, 0x65, 0x45 },
 3037: { 0x01, 0x66, 0x46 },
 3037: { 0x01, 0x67, 0x47 },
 3037: { 0x01, 0x68, 0x48 },
 3037: { 0x01, 0x69, 0x49 },
 3037: { 0x01, 0x6a, 0x4a },
 3037: { 0x01, 0x6b, 0x4b },
 3037: { 0x01, 0x6c, 0x4c },
 3037: { 0x01, 0x6d, 0x4d },
 3037: { 0x01, 0x6e, 0x4e },
 3037: { 0x01, 0x6f, 0x4f },
 3037: { 0x01, 0x70, 0x50 },
 3037: { 0x01, 0x71, 0x51 },
 3037: { 0x01, 0x72, 0x52 },
 3037: { 0x01, 0x73, 0x53 },
 3037: { 0x01, 0x74, 0x54 },
 3037: { 0x01, 0x75, 0x55 },
 3037: { 0x01, 0x76, 0x56 },
 3037: { 0x01, 0x77, 0x57 },
 3037: { 0x01, 0x78, 0x58 },
 3037: { 0x01, 0x79, 0x59 },
 3037: { 0x01, 0x7a, 0x5a },
 3037: { 0x00, 0x5b, 0x5b },
 3037: { 0x00, 0x5c, 0x5c },
 3037: { 0x00, 0x5d, 0x5d },
 3037: { 0x00, 0x5e, 0x5e },
 3037: { 0x00, 0x5f, 0x5f },
 3037: { 0x00, 0x60, 0x60 },
 3037: { 0x00, 0x61, 0x41 },
 3037: { 0x00, 0x62, 0x42 },
 3037: { 0x00, 0x63, 0x43 },
 3037: { 0x00, 0x64, 0x44 },
 3037: { 0x00, 0x65, 0x45 },
 3037: { 0x00, 0x66, 0x46 },
 3037: { 0x00, 0x67, 0x47 },
 3037: { 0x00, 0x68, 0x48 },
 3037: { 0x00, 0x69, 0x49 },
 3037: { 0x00, 0x6a, 0x4a },
 3037: { 0x00, 0x6b, 0x4b },
 3037: { 0x00, 0x6c, 0x4c },
 3037: { 0x00, 0x6d, 0x4d },
 3037: { 0x00, 0x6e, 0x4e },
 3037: { 0x00, 0x6f, 0x4f },
 3037: { 0x00, 0x70, 0x50 },
 3037: { 0x00, 0x71, 0x51 },
 3037: { 0x00, 0x72, 0x52 },
 3037: { 0x00, 0x73, 0x53 },
 3037: { 0x00, 0x74, 0x54 },
 3037: { 0x00, 0x75, 0x55 },
 3037: { 0x00, 0x76, 0x56 },
 3037: { 0x00, 0x77, 0x57 },
 3037: { 0x00, 0x78, 0x58 },
 3037: { 0x00, 0x79, 0x59 },
 3037: { 0x00, 0x7a, 0x5a },
 3037: { 0x00, 0x7b, 0x7b },
 3037: { 0x00, 0x7c, 0x7c },
 3037: { 0x00, 0x7d, 0x7d },
 3037: { 0x00, 0x7e, 0x7e },
 3037: { 0x00, 0x7f, 0x7f },
 3037: { 0x00, 0x80, 0x80 },
 3037: { 0x00, 0x81, 0x81 },
 3037: { 0x00, 0x82, 0x82 },
 3037: { 0x00, 0x83, 0x83 },
 3037: { 0x00, 0x84, 0x84 },
 3037: { 0x00, 0x85, 0x85 },
 3037: { 0x00, 0x86, 0x86 },
 3037: { 0x00, 0x87, 0x87 },
 3037: { 0x00, 0x88, 0x88 },
 3037: { 0x00, 0x89, 0x89 },
 3037: { 0x00, 0x8a, 0x8a },
 3037: { 0x00, 0x8b, 0x8b },
 3037: { 0x00, 0x8c, 0x8c },
 3037: { 0x00, 0x8d, 0x8d },
 3037: { 0x00, 0x8e, 0x8e },
 3037: { 0x00, 0x8f, 0x8f },
 3037: { 0x00, 0x90, 0x90 },
 3037: { 0x00, 0x91, 0x91 },
 3037: { 0x00, 0x92, 0x92 },
 3037: { 0x00, 0x93, 0x93 },
 3037: { 0x00, 0x94, 0x94 },
 3037: { 0x00, 0x95, 0x95 },
 3037: { 0x00, 0x96, 0x96 },
 3037: { 0x00, 0x97, 0x97 },
 3037: { 0x00, 0x98, 0x98 },
 3037: { 0x00, 0x99, 0x99 },
 3037: { 0x00, 0x9a, 0x9a },
 3037: { 0x00, 0x9b, 0x9b },
 3037: { 0x00, 0x9c, 0x9c },
 3037: { 0x00, 0x9d, 0x9d },
 3037: { 0x00, 0x9e, 0x9e },
 3037: { 0x00, 0x9f, 0x9f },
 3037: { 0x00, 0xa0, 0xa0 },
 3037: { 0x00, 0xa1, 0xa1 },
 3037: { 0x00, 0xa2, 0xa2 },
 3037: { 0x00, 0xa3, 0xa3 },
 3037: { 0x00, 0xa4, 0xa4 },
 3037: { 0x00, 0xa5, 0xa5 },
 3037: { 0x00, 0xa6, 0xa6 },
 3037: { 0x00, 0xa7, 0xa7 },
 3037: { 0x00, 0xa8, 0xa8 },
 3037: { 0x00, 0xa9, 0xa9 },
 3037: { 0x00, 0xaa, 0xaa },
 3037: { 0x00, 0xab, 0xab },
 3037: { 0x00, 0xac, 0xac },
 3037: { 0x00, 0xad, 0xad },
 3037: { 0x00, 0xae, 0xae },
 3037: { 0x00, 0xaf, 0xaf },
 3037: { 0x00, 0xb0, 0xb0 },
 3037: { 0x00, 0xb1, 0xb1 },
 3037: { 0x00, 0xb2, 0xb2 },
 3037: { 0x00, 0xb3, 0xb3 },
 3037: { 0x00, 0xb4, 0xb4 },
 3037: { 0x00, 0xb5, 0xb5 },
 3037: { 0x01, 0xdc, 0xb6 },
 3037: { 0x00, 0xb7, 0xb7 },
 3037: { 0x01, 0xdd, 0xb8 },
 3037: { 0x01, 0xde, 0xb9 },
 3037: { 0x01, 0xdf, 0xba },
 3037: { 0x00, 0xbb, 0xbb },
 3037: { 0x01, 0xfc, 0xbc },
 3037: { 0x00, 0xbd, 0xbd },
 3037: { 0x01, 0xfd, 0xbe },
 3037: { 0x01, 0xfe, 0xbf },
 3037: { 0x00, 0xc0, 0xc0 },
 3037: { 0x01, 0xe1, 0xc1 },
 3037: { 0x01, 0xe2, 0xc2 },
 3037: { 0x01, 0xe3, 0xc3 },
 3037: { 0x01, 0xe4, 0xc4 },
 3037: { 0x01, 0xe5, 0xc5 },
 3037: { 0x01, 0xe6, 0xc6 },
 3037: { 0x01, 0xe7, 0xc7 },
 3037: { 0x01, 0xe8, 0xc8 },
 3037: { 0x01, 0xe9, 0xc9 },
 3037: { 0x01, 0xea, 0xca },
 3037: { 0x01, 0xeb, 0xcb },
 3037: { 0x01, 0xec, 0xcc },
 3037: { 0x01, 0xed, 0xcd },
 3037: { 0x01, 0xee, 0xce },
 3037: { 0x01, 0xef, 0xcf },
 3037: { 0x01, 0xf0, 0xd0 },
 3037: { 0x01, 0xf1, 0xd1 },
 3037: { 0x00, 0xd2, 0xd2 },
 3037: { 0x01, 0xf3, 0xd3 },
 3037: { 0x01, 0xf4, 0xd4 },
 3037: { 0x01, 0xf5, 0xd5 },
 3037: { 0x01, 0xf6, 0xd6 },
 3037: { 0x01, 0xf7, 0xd7 },
 3037: { 0x01, 0xf8, 0xd8 },
 3037: { 0x01, 0xf9, 0xd9 },
 3037: { 0x01, 0xfa, 0xda },
 3037: { 0x01, 0xfb, 0xdb },
 3037: { 0x00, 0xdc, 0xb6 },
 3037: { 0x00, 0xdd, 0xb8 },
 3037: { 0x00, 0xde, 0xb9 },
 3037: { 0x00, 0xdf, 0xba },
 3037: { 0x00, 0xe0, 0xe0 },
 3037: { 0x00, 0xe1, 0xc1 },
 3037: { 0x00, 0xe2, 0xc2 },
 3037: { 0x00, 0xe3, 0xc3 },
 3037: { 0x00, 0xe4, 0xc4 },
 3037: { 0x00, 0xe5, 0xc5 },
 3037: { 0x00, 0xe6, 0xc6 },
 3037: { 0x00, 0xe7, 0xc7 },
 3037: { 0x00, 0xe8, 0xc8 },
 3037: { 0x00, 0xe9, 0xc9 },
 3037: { 0x00, 0xea, 0xca },
 3037: { 0x00, 0xeb, 0xcb },
 3037: { 0x00, 0xec, 0xcc },
 3037: { 0x00, 0xed, 0xcd },
 3037: { 0x00, 0xee, 0xce },
 3037: { 0x00, 0xef, 0xcf },
 3037: { 0x00, 0xf0, 0xd0 },
 3037: { 0x00, 0xf1, 0xd1 },
 3037: { 0x00, 0xf2, 0xd3 },
 3037: { 0x00, 0xf3, 0xd3 },
 3037: { 0x00, 0xf4, 0xd4 },
 3037: { 0x00, 0xf5, 0xd5 },
 3037: { 0x00, 0xf6, 0xd6 },
 3037: { 0x00, 0xf7, 0xd7 },
 3037: { 0x00, 0xf8, 0xd8 },
 3037: { 0x00, 0xf9, 0xd9 },
 3037: { 0x00, 0xfa, 0xda },
 3037: { 0x00, 0xfb, 0xdb },
 3037: { 0x00, 0xfc, 0xbc },
 3037: { 0x00, 0xfd, 0xbe },
 3037: { 0x00, 0xfe, 0xbf },
21326: { 0x00, 0xff, 0xff }
 3037: };
 3037: 
43385: static struct cs_info iso8_tbl[] = {
 3037: { 0x00, 0x00, 0x00 },
 3037: { 0x00, 0x01, 0x01 },
 3037: { 0x00, 0x02, 0x02 },
 3037: { 0x00, 0x03, 0x03 },
 3037: { 0x00, 0x04, 0x04 },
 3037: { 0x00, 0x05, 0x05 },
 3037: { 0x00, 0x06, 0x06 },
 3037: { 0x00, 0x07, 0x07 },
 3037: { 0x00, 0x08, 0x08 },
 3037: { 0x00, 0x09, 0x09 },
 3037: { 0x00, 0x0a, 0x0a },
 3037: { 0x00, 0x0b, 0x0b },
 3037: { 0x00, 0x0c, 0x0c },
 3037: { 0x00, 0x0d, 0x0d },
 3037: { 0x00, 0x0e, 0x0e },
 3037: { 0x00, 0x0f, 0x0f },
 3037: { 0x00, 0x10, 0x10 },
 3037: { 0x00, 0x11, 0x11 },
 3037: { 0x00, 0x12, 0x12 },
 3037: { 0x00, 0x13, 0x13 },
 3037: { 0x00, 0x14, 0x14 },
 3037: { 0x00, 0x15, 0x15 },
 3037: { 0x00, 0x16, 0x16 },
 3037: { 0x00, 0x17, 0x17 },
 3037: { 0x00, 0x18, 0x18 },
 3037: { 0x00, 0x19, 0x19 },
 3037: { 0x00, 0x1a, 0x1a },
 3037: { 0x00, 0x1b, 0x1b },
 3037: { 0x00, 0x1c, 0x1c },
 3037: { 0x00, 0x1d, 0x1d },
 3037: { 0x00, 0x1e, 0x1e },
 3037: { 0x00, 0x1f, 0x1f },
 3037: { 0x00, 0x20, 0x20 },
 3037: { 0x00, 0x21, 0x21 },
 3037: { 0x00, 0x22, 0x22 },
 3037: { 0x00, 0x23, 0x23 },
 3037: { 0x00, 0x24, 0x24 },
 3037: { 0x00, 0x25, 0x25 },
 3037: { 0x00, 0x26, 0x26 },
 3037: { 0x00, 0x27, 0x27 },
 3037: { 0x00, 0x28, 0x28 },
 3037: { 0x00, 0x29, 0x29 },
 3037: { 0x00, 0x2a, 0x2a },
 3037: { 0x00, 0x2b, 0x2b },
 3037: { 0x00, 0x2c, 0x2c },
 3037: { 0x00, 0x2d, 0x2d },
 3037: { 0x00, 0x2e, 0x2e },
 3037: { 0x00, 0x2f, 0x2f },
 3037: { 0x00, 0x30, 0x30 },
 3037: { 0x00, 0x31, 0x31 },
 3037: { 0x00, 0x32, 0x32 },
 3037: { 0x00, 0x33, 0x33 },
 3037: { 0x00, 0x34, 0x34 },
 3037: { 0x00, 0x35, 0x35 },
 3037: { 0x00, 0x36, 0x36 },
 3037: { 0x00, 0x37, 0x37 },
 3037: { 0x00, 0x38, 0x38 },
 3037: { 0x00, 0x39, 0x39 },
 3037: { 0x00, 0x3a, 0x3a },
 3037: { 0x00, 0x3b, 0x3b },
 3037: { 0x00, 0x3c, 0x3c },
 3037: { 0x00, 0x3d, 0x3d },
 3037: { 0x00, 0x3e, 0x3e },
 3037: { 0x00, 0x3f, 0x3f },
 3037: { 0x00, 0x40, 0x40 },
 3037: { 0x01, 0x61, 0x41 },
 3037: { 0x01, 0x62, 0x42 },
 3037: { 0x01, 0x63, 0x43 },
 3037: { 0x01, 0x64, 0x44 },
 3037: { 0x01, 0x65, 0x45 },
 3037: { 0x01, 0x66, 0x46 },
 3037: { 0x01, 0x67, 0x47 },
 3037: { 0x01, 0x68, 0x48 },
 3037: { 0x01, 0x69, 0x49 },
 3037: { 0x01, 0x6a, 0x4a },
 3037: { 0x01, 0x6b, 0x4b },
 3037: { 0x01, 0x6c, 0x4c },
 3037: { 0x01, 0x6d, 0x4d },
 3037: { 0x01, 0x6e, 0x4e },
 3037: { 0x01, 0x6f, 0x4f },
 3037: { 0x01, 0x70, 0x50 },
 3037: { 0x01, 0x71, 0x51 },
 3037: { 0x01, 0x72, 0x52 },
 3037: { 0x01, 0x73, 0x53 },
 3037: { 0x01, 0x74, 0x54 },
 3037: { 0x01, 0x75, 0x55 },
 3037: { 0x01, 0x76, 0x56 },
 3037: { 0x01, 0x77, 0x57 },
 3037: { 0x01, 0x78, 0x58 },
 3037: { 0x01, 0x79, 0x59 },
 3037: { 0x01, 0x7a, 0x5a },
 3037: { 0x00, 0x5b, 0x5b },
 3037: { 0x00, 0x5c, 0x5c },
 3037: { 0x00, 0x5d, 0x5d },
 3037: { 0x00, 0x5e, 0x5e },
 3037: { 0x00, 0x5f, 0x5f },
 3037: { 0x00, 0x60, 0x60 },
 3037: { 0x00, 0x61, 0x41 },
 3037: { 0x00, 0x62, 0x42 },
 3037: { 0x00, 0x63, 0x43 },
 3037: { 0x00, 0x64, 0x44 },
 3037: { 0x00, 0x65, 0x45 },
 3037: { 0x00, 0x66, 0x46 },
 3037: { 0x00, 0x67, 0x47 },
 3037: { 0x00, 0x68, 0x48 },
 3037: { 0x00, 0x69, 0x49 },
 3037: { 0x00, 0x6a, 0x4a },
 3037: { 0x00, 0x6b, 0x4b },
 3037: { 0x00, 0x6c, 0x4c },
 3037: { 0x00, 0x6d, 0x4d },
 3037: { 0x00, 0x6e, 0x4e },
 3037: { 0x00, 0x6f, 0x4f },
 3037: { 0x00, 0x70, 0x50 },
 3037: { 0x00, 0x71, 0x51 },
 3037: { 0x00, 0x72, 0x52 },
 3037: { 0x00, 0x73, 0x53 },
 3037: { 0x00, 0x74, 0x54 },
 3037: { 0x00, 0x75, 0x55 },
 3037: { 0x00, 0x76, 0x56 },
 3037: { 0x00, 0x77, 0x57 },
 3037: { 0x00, 0x78, 0x58 },
 3037: { 0x00, 0x79, 0x59 },
 3037: { 0x00, 0x7a, 0x5a },
 3037: { 0x00, 0x7b, 0x7b },
 3037: { 0x00, 0x7c, 0x7c },
 3037: { 0x00, 0x7d, 0x7d },
 3037: { 0x00, 0x7e, 0x7e },
 3037: { 0x00, 0x7f, 0x7f },
 3037: { 0x00, 0x80, 0x80 },
 3037: { 0x00, 0x81, 0x81 },
 3037: { 0x00, 0x82, 0x82 },
 3037: { 0x00, 0x83, 0x83 },
 3037: { 0x00, 0x84, 0x84 },
 3037: { 0x00, 0x85, 0x85 },
 3037: { 0x00, 0x86, 0x86 },
 3037: { 0x00, 0x87, 0x87 },
 3037: { 0x00, 0x88, 0x88 },
 3037: { 0x00, 0x89, 0x89 },
 3037: { 0x00, 0x8a, 0x8a },
 3037: { 0x00, 0x8b, 0x8b },
 3037: { 0x00, 0x8c, 0x8c },
 3037: { 0x00, 0x8d, 0x8d },
 3037: { 0x00, 0x8e, 0x8e },
 3037: { 0x00, 0x8f, 0x8f },
 3037: { 0x00, 0x90, 0x90 },
 3037: { 0x00, 0x91, 0x91 },
 3037: { 0x00, 0x92, 0x92 },
 3037: { 0x00, 0x93, 0x93 },
 3037: { 0x00, 0x94, 0x94 },
 3037: { 0x00, 0x95, 0x95 },
 3037: { 0x00, 0x96, 0x96 },
 3037: { 0x00, 0x97, 0x97 },
 3037: { 0x00, 0x98, 0x98 },
 3037: { 0x00, 0x99, 0x99 },
 3037: { 0x00, 0x9a, 0x9a },
 3037: { 0x00, 0x9b, 0x9b },
 3037: { 0x00, 0x9c, 0x9c },
 3037: { 0x00, 0x9d, 0x9d },
 3037: { 0x00, 0x9e, 0x9e },
 3037: { 0x00, 0x9f, 0x9f },
 3037: { 0x00, 0xa0, 0xa0 },
 3037: { 0x00, 0xa1, 0xa1 },
 3037: { 0x00, 0xa2, 0xa2 },
 3037: { 0x00, 0xa3, 0xa3 },
 3037: { 0x00, 0xa4, 0xa4 },
 3037: { 0x00, 0xa5, 0xa5 },
 3037: { 0x00, 0xa6, 0xa6 },
 3037: { 0x00, 0xa7, 0xa7 },
 3037: { 0x00, 0xa8, 0xa8 },
 3037: { 0x00, 0xa9, 0xa9 },
 3037: { 0x00, 0xaa, 0xaa },
 3037: { 0x00, 0xab, 0xab },
 3037: { 0x00, 0xac, 0xac },
 3037: { 0x00, 0xad, 0xad },
 3037: { 0x00, 0xae, 0xae },
 3037: { 0x00, 0xaf, 0xaf },
 3037: { 0x00, 0xb0, 0xb0 },
 3037: { 0x00, 0xb1, 0xb1 },
 3037: { 0x00, 0xb2, 0xb2 },
 3037: { 0x00, 0xb3, 0xb3 },
 3037: { 0x00, 0xb4, 0xb4 },
 3037: { 0x00, 0xb5, 0xb5 },
 3037: { 0x00, 0xb6, 0xb6 },
 3037: { 0x00, 0xb7, 0xb7 },
 3037: { 0x00, 0xb8, 0xb8 },
 3037: { 0x00, 0xb9, 0xb9 },
 3037: { 0x00, 0xba, 0xba },
 3037: { 0x00, 0xbb, 0xbb },
 3037: { 0x00, 0xbc, 0xbc },
 3037: { 0x00, 0xbd, 0xbd },
 3037: { 0x00, 0xbe, 0xbe },
 3037: { 0x00, 0xbf, 0xbf },
 3037: { 0x00, 0xc0, 0xc0 },
 3037: { 0x00, 0xc1, 0xc1 },
 3037: { 0x00, 0xc2, 0xc2 },
 3037: { 0x00, 0xc3, 0xc3 },
 3037: { 0x00, 0xc4, 0xc4 },
 3037: { 0x00, 0xc5, 0xc5 },
 3037: { 0x00, 0xc6, 0xc6 },
 3037: { 0x00, 0xc7, 0xc7 },
 3037: { 0x00, 0xc8, 0xc8 },
 3037: { 0x00, 0xc9, 0xc9 },
 3037: { 0x00, 0xca, 0xca },
 3037: { 0x00, 0xcb, 0xcb },
 3037: { 0x00, 0xcc, 0xcc },
 3037: { 0x00, 0xcd, 0xcd },
 3037: { 0x00, 0xce, 0xce },
 3037: { 0x00, 0xcf, 0xcf },
 3037: { 0x00, 0xd0, 0xd0 },
 3037: { 0x00, 0xd1, 0xd1 },
 3037: { 0x00, 0xd2, 0xd2 },
 3037: { 0x00, 0xd3, 0xd3 },
 3037: { 0x00, 0xd4, 0xd4 },
 3037: { 0x00, 0xd5, 0xd5 },
 3037: { 0x00, 0xd6, 0xd6 },
 3037: { 0x00, 0xd7, 0xd7 },
 3037: { 0x00, 0xd8, 0xd8 },
 3037: { 0x00, 0xd9, 0xd9 },
 3037: { 0x00, 0xda, 0xda },
 3037: { 0x00, 0xdb, 0xdb },
 3037: { 0x00, 0xdc, 0xdc },
 3037: { 0x00, 0xdd, 0xdd },
 3037: { 0x00, 0xde, 0xde },
 3037: { 0x00, 0xdf, 0xdf },
 3037: { 0x00, 0xe0, 0xe0 },
 3037: { 0x00, 0xe1, 0xe1 },
 3037: { 0x00, 0xe2, 0xe2 },
 3037: { 0x00, 0xe3, 0xe3 },
 3037: { 0x00, 0xe4, 0xe4 },
 3037: { 0x00, 0xe5, 0xe5 },
 3037: { 0x00, 0xe6, 0xe6 },
 3037: { 0x00, 0xe7, 0xe7 },
 3037: { 0x00, 0xe8, 0xe8 },
 3037: { 0x00, 0xe9, 0xe9 },
 3037: { 0x00, 0xea, 0xea },
 3037: { 0x00, 0xeb, 0xeb },
 3037: { 0x00, 0xec, 0xec },
 3037: { 0x00, 0xed, 0xed },
 3037: { 0x00, 0xee, 0xee },
 3037: { 0x00, 0xef, 0xef },
 3037: { 0x00, 0xf0, 0xf0 },
 3037: { 0x00, 0xf1, 0xf1 },
 3037: { 0x00, 0xf2, 0xf2 },
 3037: { 0x00, 0xf3, 0xf3 },
 3037: { 0x00, 0xf4, 0xf4 },
 3037: { 0x00, 0xf5, 0xf5 },
 3037: { 0x00, 0xf6, 0xf6 },
 3037: { 0x00, 0xf7, 0xf7 },
 3037: { 0x00, 0xf8, 0xf8 },
 3037: { 0x00, 0xf9, 0xf9 },
 3037: { 0x00, 0xfa, 0xfa },
 3037: { 0x00, 0xfb, 0xfb },
 3037: { 0x00, 0xfc, 0xfc },
 3037: { 0x00, 0xfd, 0xfd },
 3037: { 0x00, 0xfe, 0xfe },
21326: { 0x00, 0xff, 0xff }
 3037: };
 3037: 
43385: static struct cs_info iso9_tbl[] = {
 3037: { 0x00, 0x00, 0x00 },
 3037: { 0x00, 0x01, 0x01 },
 3037: { 0x00, 0x02, 0x02 },
 3037: { 0x00, 0x03, 0x03 },
 3037: { 0x00, 0x04, 0x04 },
 3037: { 0x00, 0x05, 0x05 },
 3037: { 0x00, 0x06, 0x06 },
 3037: { 0x00, 0x07, 0x07 },
 3037: { 0x00, 0x08, 0x08 },
 3037: { 0x00, 0x09, 0x09 },
 3037: { 0x00, 0x0a, 0x0a },
 3037: { 0x00, 0x0b, 0x0b },
 3037: { 0x00, 0x0c, 0x0c },
 3037: { 0x00, 0x0d, 0x0d },
 3037: { 0x00, 0x0e, 0x0e },
 3037: { 0x00, 0x0f, 0x0f },
 3037: { 0x00, 0x10, 0x10 },
 3037: { 0x00, 0x11, 0x11 },
 3037: { 0x00, 0x12, 0x12 },
 3037: { 0x00, 0x13, 0x13 },
 3037: { 0x00, 0x14, 0x14 },
 3037: { 0x00, 0x15, 0x15 },
 3037: { 0x00, 0x16, 0x16 },
 3037: { 0x00, 0x17, 0x17 },
 3037: { 0x00, 0x18, 0x18 },
 3037: { 0x00, 0x19, 0x19 },
 3037: { 0x00, 0x1a, 0x1a },
 3037: { 0x00, 0x1b, 0x1b },
 3037: { 0x00, 0x1c, 0x1c },
 3037: { 0x00, 0x1d, 0x1d },
 3037: { 0x00, 0x1e, 0x1e },
 3037: { 0x00, 0x1f, 0x1f },
 3037: { 0x00, 0x20, 0x20 },
 3037: { 0x00, 0x21, 0x21 },
 3037: { 0x00, 0x22, 0x22 },
 3037: { 0x00, 0x23, 0x23 },
 3037: { 0x00, 0x24, 0x24 },
 3037: { 0x00, 0x25, 0x25 },
 3037: { 0x00, 0x26, 0x26 },
 3037: { 0x00, 0x27, 0x27 },
 3037: { 0x00, 0x28, 0x28 },
 3037: { 0x00, 0x29, 0x29 },
 3037: { 0x00, 0x2a, 0x2a },
 3037: { 0x00, 0x2b, 0x2b },
 3037: { 0x00, 0x2c, 0x2c },
 3037: { 0x00, 0x2d, 0x2d },
 3037: { 0x00, 0x2e, 0x2e },
 3037: { 0x00, 0x2f, 0x2f },
 3037: { 0x00, 0x30, 0x30 },
 3037: { 0x00, 0x31, 0x31 },
 3037: { 0x00, 0x32, 0x32 },
 3037: { 0x00, 0x33, 0x33 },
 3037: { 0x00, 0x34, 0x34 },
 3037: { 0x00, 0x35, 0x35 },
 3037: { 0x00, 0x36, 0x36 },
 3037: { 0x00, 0x37, 0x37 },
 3037: { 0x00, 0x38, 0x38 },
 3037: { 0x00, 0x39, 0x39 },
 3037: { 0x00, 0x3a, 0x3a },
 3037: { 0x00, 0x3b, 0x3b },
 3037: { 0x00, 0x3c, 0x3c },
 3037: { 0x00, 0x3d, 0x3d },
 3037: { 0x00, 0x3e, 0x3e },
 3037: { 0x00, 0x3f, 0x3f },
 3037: { 0x00, 0x40, 0x40 },
 3037: { 0x01, 0x61, 0x41 },
 3037: { 0x01, 0x62, 0x42 },
 3037: { 0x01, 0x63, 0x43 },
 3037: { 0x01, 0x64, 0x44 },
 3037: { 0x01, 0x65, 0x45 },
 3037: { 0x01, 0x66, 0x46 },
 3037: { 0x01, 0x67, 0x47 },
 3037: { 0x01, 0x68, 0x48 },
 3037: { 0x01, 0xfd, 0x49 },
 3037: { 0x01, 0x6a, 0x4a },
 3037: { 0x01, 0x6b, 0x4b },
 3037: { 0x01, 0x6c, 0x4c },
 3037: { 0x01, 0x6d, 0x4d },
 3037: { 0x01, 0x6e, 0x4e },
 3037: { 0x01, 0x6f, 0x4f },
 3037: { 0x01, 0x70, 0x50 },
 3037: { 0x01, 0x71, 0x51 },
 3037: { 0x01, 0x72, 0x52 },
 3037: { 0x01, 0x73, 0x53 },
 3037: { 0x01, 0x74, 0x54 },
 3037: { 0x01, 0x75, 0x55 },
 3037: { 0x01, 0x76, 0x56 },
 3037: { 0x01, 0x77, 0x57 },
 3037: { 0x01, 0x78, 0x58 },
 3037: { 0x01, 0x79, 0x59 },
 3037: { 0x01, 0x7a, 0x5a },
 3037: { 0x00, 0x5b, 0x5b },
 3037: { 0x00, 0x5c, 0x5c },
 3037: { 0x00, 0x5d, 0x5d },
 3037: { 0x00, 0x5e, 0x5e },
 3037: { 0x00, 0x5f, 0x5f },
 3037: { 0x00, 0x60, 0x60 },
 3037: { 0x00, 0x61, 0x41 },
 3037: { 0x00, 0x62, 0x42 },
 3037: { 0x00, 0x63, 0x43 },
 3037: { 0x00, 0x64, 0x44 },
 3037: { 0x00, 0x65, 0x45 },
 3037: { 0x00, 0x66, 0x46 },
 3037: { 0x00, 0x67, 0x47 },
 3037: { 0x00, 0x68, 0x48 },
 3037: { 0x00, 0x69, 0xdd },
 3037: { 0x00, 0x6a, 0x4a },
 3037: { 0x00, 0x6b, 0x4b },
 3037: { 0x00, 0x6c, 0x4c },
 3037: { 0x00, 0x6d, 0x4d },
 3037: { 0x00, 0x6e, 0x4e },
 3037: { 0x00, 0x6f, 0x4f },
 3037: { 0x00, 0x70, 0x50 },
 3037: { 0x00, 0x71, 0x51 },
 3037: { 0x00, 0x72, 0x52 },
 3037: { 0x00, 0x73, 0x53 },
 3037: { 0x00, 0x74, 0x54 },
 3037: { 0x00, 0x75, 0x55 },
 3037: { 0x00, 0x76, 0x56 },
 3037: { 0x00, 0x77, 0x57 },
 3037: { 0x00, 0x78, 0x58 },
 3037: { 0x00, 0x79, 0x59 },
 3037: { 0x00, 0x7a, 0x5a },
 3037: { 0x00, 0x7b, 0x7b },
 3037: { 0x00, 0x7c, 0x7c },
 3037: { 0x00, 0x7d, 0x7d },
 3037: { 0x00, 0x7e, 0x7e },
 3037: { 0x00, 0x7f, 0x7f },
 3037: { 0x00, 0x80, 0x80 },
 3037: { 0x00, 0x81, 0x81 },
 3037: { 0x00, 0x82, 0x82 },
 3037: { 0x00, 0x83, 0x83 },
 3037: { 0x00, 0x84, 0x84 },
 3037: { 0x00, 0x85, 0x85 },
 3037: { 0x00, 0x86, 0x86 },
 3037: { 0x00, 0x87, 0x87 },
 3037: { 0x00, 0x88, 0x88 },
 3037: { 0x00, 0x89, 0x89 },
 3037: { 0x00, 0x8a, 0x8a },
 3037: { 0x00, 0x8b, 0x8b },
 3037: { 0x00, 0x8c, 0x8c },
 3037: { 0x00, 0x8d, 0x8d },
 3037: { 0x00, 0x8e, 0x8e },
 3037: { 0x00, 0x8f, 0x8f },
 3037: { 0x00, 0x90, 0x90 },
 3037: { 0x00, 0x91, 0x91 },
 3037: { 0x00, 0x92, 0x92 },
 3037: { 0x00, 0x93, 0x93 },
 3037: { 0x00, 0x94, 0x94 },
 3037: { 0x00, 0x95, 0x95 },
 3037: { 0x00, 0x96, 0x96 },
 3037: { 0x00, 0x97, 0x97 },
 3037: { 0x00, 0x98, 0x98 },
 3037: { 0x00, 0x99, 0x99 },
 3037: { 0x00, 0x9a, 0x9a },
 3037: { 0x00, 0x9b, 0x9b },
 3037: { 0x00, 0x9c, 0x9c },
 3037: { 0x00, 0x9d, 0x9d },
 3037: { 0x00, 0x9e, 0x9e },
 3037: { 0x00, 0x9f, 0x9f },
 3037: { 0x00, 0xa0, 0xa0 },
 3037: { 0x00, 0xa1, 0xa1 },
 3037: { 0x00, 0xa2, 0xa2 },
 3037: { 0x00, 0xa3, 0xa3 },
 3037: { 0x00, 0xa4, 0xa4 },
 3037: { 0x00, 0xa5, 0xa5 },
 3037: { 0x00, 0xa6, 0xa6 },
 3037: { 0x00, 0xa7, 0xa7 },
 3037: { 0x00, 0xa8, 0xa8 },
 3037: { 0x00, 0xa9, 0xa9 },
 3037: { 0x00, 0xaa, 0xaa },
 3037: { 0x00, 0xab, 0xab },
 3037: { 0x00, 0xac, 0xac },
 3037: { 0x00, 0xad, 0xad },
 3037: { 0x00, 0xae, 0xae },
 3037: { 0x00, 0xaf, 0xaf },
 3037: { 0x00, 0xb0, 0xb0 },
 3037: { 0x00, 0xb1, 0xb1 },
 3037: { 0x00, 0xb2, 0xb2 },
 3037: { 0x00, 0xb3, 0xb3 },
 3037: { 0x00, 0xb4, 0xb4 },
 3037: { 0x00, 0xb5, 0xb5 },
 3037: { 0x00, 0xb6, 0xb6 },
 3037: { 0x00, 0xb7, 0xb7 },
 3037: { 0x00, 0xb8, 0xb8 },
 3037: { 0x00, 0xb9, 0xb9 },
 3037: { 0x00, 0xba, 0xba },
 3037: { 0x00, 0xbb, 0xbb },
 3037: { 0x00, 0xbc, 0xbc },
 3037: { 0x00, 0xbd, 0xbd },
 3037: { 0x00, 0xbe, 0xbe },
 3037: { 0x00, 0xbf, 0xbf },
 3037: { 0x01, 0xe0, 0xc0 },
 3037: { 0x01, 0xe1, 0xc1 },
 3037: { 0x01, 0xe2, 0xc2 },
 3037: { 0x01, 0xe3, 0xc3 },
 3037: { 0x01, 0xe4, 0xc4 },
 3037: { 0x01, 0xe5, 0xc5 },
 3037: { 0x01, 0xe6, 0xc6 },
 3037: { 0x01, 0xe7, 0xc7 },
 3037: { 0x01, 0xe8, 0xc8 },
 3037: { 0x01, 0xe9, 0xc9 },
 3037: { 0x01, 0xea, 0xca },
 3037: { 0x01, 0xeb, 0xcb },
 3037: { 0x01, 0xec, 0xcc },
 3037: { 0x01, 0xed, 0xcd },
 3037: { 0x01, 0xee, 0xce },
 3037: { 0x01, 0xef, 0xcf },
 3037: { 0x01, 0xf0, 0xd0 },
 3037: { 0x01, 0xf1, 0xd1 },
 3037: { 0x01, 0xf2, 0xd2 },
 3037: { 0x01, 0xf3, 0xd3 },
 3037: { 0x01, 0xf4, 0xd4 },
 3037: { 0x01, 0xf5, 0xd5 },
 3037: { 0x01, 0xf6, 0xd6 },
 3037: { 0x00, 0xd7, 0xd7 },
 3037: { 0x01, 0xf8, 0xd8 },
 3037: { 0x01, 0xf9, 0xd9 },
 3037: { 0x01, 0xfa, 0xda },
 3037: { 0x01, 0xfb, 0xdb },
 3037: { 0x01, 0xfc, 0xdc },
 3037: { 0x01, 0x69, 0xdd },
 3037: { 0x01, 0xfe, 0xde },
 3037: { 0x00, 0xdf, 0xdf },
 3037: { 0x00, 0xe0, 0xc0 },
 3037: { 0x00, 0xe1, 0xc1 },
 3037: { 0x00, 0xe2, 0xc2 },
 3037: { 0x00, 0xe3, 0xc3 },
 3037: { 0x00, 0xe4, 0xc4 },
 3037: { 0x00, 0xe5, 0xc5 },
 3037: { 0x00, 0xe6, 0xc6 },
 3037: { 0x00, 0xe7, 0xc7 },
 3037: { 0x00, 0xe8, 0xc8 },
 3037: { 0x00, 0xe9, 0xc9 },
 3037: { 0x00, 0xea, 0xca },
 3037: { 0x00, 0xeb, 0xcb },
 3037: { 0x00, 0xec, 0xcc },
 3037: { 0x00, 0xed, 0xcd },
 3037: { 0x00, 0xee, 0xce },
 3037: { 0x00, 0xef, 0xcf },
 3037: { 0x00, 0xf0, 0xd0 },
 3037: { 0x00, 0xf1, 0xd1 },
 3037: { 0x00, 0xf2, 0xd2 },
 3037: { 0x00, 0xf3, 0xd3 },
 3037: { 0x00, 0xf4, 0xd4 },
 3037: { 0x00, 0xf5, 0xd5 },
 3037: { 0x00, 0xf6, 0xd6 },
 3037: { 0x00, 0xf7, 0xf7 },
 3037: { 0x00, 0xf8, 0xd8 },
 3037: { 0x00, 0xf9, 0xd9 },
 3037: { 0x00, 0xfa, 0xda },
 3037: { 0x00, 0xfb, 0xdb },
 3037: { 0x00, 0xfc, 0xdc },
 3037: { 0x00, 0xfd, 0x49 },
 3037: { 0x00, 0xfe, 0xde },
21326: { 0x00, 0xff, 0xff }
 3037: };
 3037: 
43385: static struct cs_info iso10_tbl[] = {
 3037: { 0x00, 0x00, 0x00 },
 3037: { 0x00, 0x01, 0x01 },
 3037: { 0x00, 0x02, 0x02 },
 3037: { 0x00, 0x03, 0x03 },
 3037: { 0x00, 0x04, 0x04 },
 3037: { 0x00, 0x05, 0x05 },
 3037: { 0x00, 0x06, 0x06 },
 3037: { 0x00, 0x07, 0x07 },
 3037: { 0x00, 0x08, 0x08 },
 3037: { 0x00, 0x09, 0x09 },
 3037: { 0x00, 0x0a, 0x0a },
 3037: { 0x00, 0x0b, 0x0b },
 3037: { 0x00, 0x0c, 0x0c },
 3037: { 0x00, 0x0d, 0x0d },
 3037: { 0x00, 0x0e, 0x0e },
 3037: { 0x00, 0x0f, 0x0f },
 3037: { 0x00, 0x10, 0x10 },
 3037: { 0x00, 0x11, 0x11 },
 3037: { 0x00, 0x12, 0x12 },
 3037: { 0x00, 0x13, 0x13 },
 3037: { 0x00, 0x14, 0x14 },
 3037: { 0x00, 0x15, 0x15 },
 3037: { 0x00, 0x16, 0x16 },
 3037: { 0x00, 0x17, 0x17 },
 3037: { 0x00, 0x18, 0x18 },
 3037: { 0x00, 0x19, 0x19 },
 3037: { 0x00, 0x1a, 0x1a },
 3037: { 0x00, 0x1b, 0x1b },
 3037: { 0x00, 0x1c, 0x1c },
 3037: { 0x00, 0x1d, 0x1d },
 3037: { 0x00, 0x1e, 0x1e },
 3037: { 0x00, 0x1f, 0x1f },
 3037: { 0x00, 0x20, 0x20 },
 3037: { 0x00, 0x21, 0x21 },
 3037: { 0x00, 0x22, 0x22 },
 3037: { 0x00, 0x23, 0x23 },
 3037: { 0x00, 0x24, 0x24 },
 3037: { 0x00, 0x25, 0x25 },
 3037: { 0x00, 0x26, 0x26 },
 3037: { 0x00, 0x27, 0x27 },
 3037: { 0x00, 0x28, 0x28 },
 3037: { 0x00, 0x29, 0x29 },
 3037: { 0x00, 0x2a, 0x2a },
 3037: { 0x00, 0x2b, 0x2b },
 3037: { 0x00, 0x2c, 0x2c },
 3037: { 0x00, 0x2d, 0x2d },
 3037: { 0x00, 0x2e, 0x2e },
 3037: { 0x00, 0x2f, 0x2f },
 3037: { 0x00, 0x30, 0x30 },
 3037: { 0x00, 0x31, 0x31 },
 3037: { 0x00, 0x32, 0x32 },
 3037: { 0x00, 0x33, 0x33 },
 3037: { 0x00, 0x34, 0x34 },
 3037: { 0x00, 0x35, 0x35 },
 3037: { 0x00, 0x36, 0x36 },
 3037: { 0x00, 0x37, 0x37 },
 3037: { 0x00, 0x38, 0x38 },
 3037: { 0x00, 0x39, 0x39 },
 3037: { 0x00, 0x3a, 0x3a },
 3037: { 0x00, 0x3b, 0x3b },
 3037: { 0x00, 0x3c, 0x3c },
 3037: { 0x00, 0x3d, 0x3d },
 3037: { 0x00, 0x3e, 0x3e },
 3037: { 0x00, 0x3f, 0x3f },
 3037: { 0x00, 0x40, 0x40 },
 3037: { 0x01, 0x61, 0x41 },
 3037: { 0x01, 0x62, 0x42 },
 3037: { 0x01, 0x63, 0x43 },
 3037: { 0x01, 0x64, 0x44 },
 3037: { 0x01, 0x65, 0x45 },
 3037: { 0x01, 0x66, 0x46 },
 3037: { 0x01, 0x67, 0x47 },
 3037: { 0x01, 0x68, 0x48 },
 3037: { 0x01, 0x69, 0x49 },
 3037: { 0x01, 0x6a, 0x4a },
 3037: { 0x01, 0x6b, 0x4b },
 3037: { 0x01, 0x6c, 0x4c },
 3037: { 0x01, 0x6d, 0x4d },
 3037: { 0x01, 0x6e, 0x4e },
 3037: { 0x01, 0x6f, 0x4f },
 3037: { 0x01, 0x70, 0x50 },
 3037: { 0x01, 0x71, 0x51 },
 3037: { 0x01, 0x72, 0x52 },
 3037: { 0x01, 0x73, 0x53 },
 3037: { 0x01, 0x74, 0x54 },
 3037: { 0x01, 0x75, 0x55 },
 3037: { 0x01, 0x76, 0x56 },
 3037: { 0x01, 0x77, 0x57 },
 3037: { 0x01, 0x78, 0x58 },
 3037: { 0x01, 0x79, 0x59 },
 3037: { 0x01, 0x7a, 0x5a },
 3037: { 0x00, 0x5b, 0x5b },
 3037: { 0x00, 0x5c, 0x5c },
 3037: { 0x00, 0x5d, 0x5d },
 3037: { 0x00, 0x5e, 0x5e },
 3037: { 0x00, 0x5f, 0x5f },
 3037: { 0x00, 0x60, 0x60 },
 3037: { 0x00, 0x61, 0x41 },
 3037: { 0x00, 0x62, 0x42 },
 3037: { 0x00, 0x63, 0x43 },
 3037: { 0x00, 0x64, 0x44 },
 3037: { 0x00, 0x65, 0x45 },
 3037: { 0x00, 0x66, 0x46 },
 3037: { 0x00, 0x67, 0x47 },
 3037: { 0x00, 0x68, 0x48 },
 3037: { 0x00, 0x69, 0x49 },
 3037: { 0x00, 0x6a, 0x4a },
 3037: { 0x00, 0x6b, 0x4b },
 3037: { 0x00, 0x6c, 0x4c },
 3037: { 0x00, 0x6d, 0x4d },
 3037: { 0x00, 0x6e, 0x4e },
 3037: { 0x00, 0x6f, 0x4f },
 3037: { 0x00, 0x70, 0x50 },
 3037: { 0x00, 0x71, 0x51 },
 3037: { 0x00, 0x72, 0x52 },
 3037: { 0x00, 0x73, 0x53 },
 3037: { 0x00, 0x74, 0x54 },
 3037: { 0x00, 0x75, 0x55 },
 3037: { 0x00, 0x76, 0x56 },
 3037: { 0x00, 0x77, 0x57 },
 3037: { 0x00, 0x78, 0x58 },
 3037: { 0x00, 0x79, 0x59 },
 3037: { 0x00, 0x7a, 0x5a },
 3037: { 0x00, 0x7b, 0x7b },
 3037: { 0x00, 0x7c, 0x7c },
 3037: { 0x00, 0x7d, 0x7d },
 3037: { 0x00, 0x7e, 0x7e },
 3037: { 0x00, 0x7f, 0x7f },
 3037: { 0x00, 0x80, 0x80 },
 3037: { 0x00, 0x81, 0x81 },
 3037: { 0x00, 0x82, 0x82 },
 3037: { 0x00, 0x83, 0x83 },
 3037: { 0x00, 0x84, 0x84 },
 3037: { 0x00, 0x85, 0x85 },
 3037: { 0x00, 0x86, 0x86 },
 3037: { 0x00, 0x87, 0x87 },
 3037: { 0x00, 0x88, 0x88 },
 3037: { 0x00, 0x89, 0x89 },
 3037: { 0x00, 0x8a, 0x8a },
 3037: { 0x00, 0x8b, 0x8b },
 3037: { 0x00, 0x8c, 0x8c },
 3037: { 0x00, 0x8d, 0x8d },
 3037: { 0x00, 0x8e, 0x8e },
 3037: { 0x00, 0x8f, 0x8f },
 3037: { 0x00, 0x90, 0x90 },
 3037: { 0x00, 0x91, 0x91 },
 3037: { 0x00, 0x92, 0x92 },
 3037: { 0x00, 0x93, 0x93 },
 3037: { 0x00, 0x94, 0x94 },
 3037: { 0x00, 0x95, 0x95 },
 3037: { 0x00, 0x96, 0x96 },
 3037: { 0x00, 0x97, 0x97 },
 3037: { 0x00, 0x98, 0x98 },
 3037: { 0x00, 0x99, 0x99 },
 3037: { 0x00, 0x9a, 0x9a },
 3037: { 0x00, 0x9b, 0x9b },
 3037: { 0x00, 0x9c, 0x9c },
 3037: { 0x00, 0x9d, 0x9d },
 3037: { 0x00, 0x9e, 0x9e },
 3037: { 0x00, 0x9f, 0x9f },
 3037: { 0x00, 0xa0, 0xa0 },
 3037: { 0x00, 0xa1, 0xa1 },
 3037: { 0x00, 0xa2, 0xa2 },
 3037: { 0x00, 0xa3, 0xa3 },
 3037: { 0x00, 0xa4, 0xa4 },
 3037: { 0x00, 0xa5, 0xa5 },
 3037: { 0x00, 0xa6, 0xa6 },
 3037: { 0x00, 0xa7, 0xa7 },
 3037: { 0x00, 0xa8, 0xa8 },
 3037: { 0x00, 0xa9, 0xa9 },
 3037: { 0x00, 0xaa, 0xaa },
 3037: { 0x00, 0xab, 0xab },
 3037: { 0x00, 0xac, 0xac },
 3037: { 0x00, 0xad, 0xad },
 3037: { 0x00, 0xae, 0xae },
 3037: { 0x00, 0xaf, 0xaf },
 3037: { 0x00, 0xb0, 0xb0 },
 3037: { 0x00, 0xb1, 0xb1 },
 3037: { 0x00, 0xb2, 0xb2 },
 3037: { 0x00, 0xb3, 0xb3 },
 3037: { 0x00, 0xb4, 0xb4 },
 3037: { 0x00, 0xb5, 0xb5 },
 3037: { 0x00, 0xb6, 0xb6 },
 3037: { 0x00, 0xb7, 0xb7 },
 3037: { 0x00, 0xb8, 0xb8 },
 3037: { 0x00, 0xb9, 0xb9 },
 3037: { 0x00, 0xba, 0xba },
 3037: { 0x00, 0xbb, 0xbb },
 3037: { 0x00, 0xbc, 0xbc },
 3037: { 0x00, 0xbd, 0xbd },
 3037: { 0x00, 0xbe, 0xbe },
 3037: { 0x00, 0xbf, 0xbf },
 3037: { 0x00, 0xc0, 0xc0 },
 3037: { 0x00, 0xc1, 0xc1 },
 3037: { 0x00, 0xc2, 0xc2 },
 3037: { 0x00, 0xc3, 0xc3 },
 3037: { 0x00, 0xc4, 0xc4 },
 3037: { 0x00, 0xc5, 0xc5 },
 3037: { 0x00, 0xc6, 0xc6 },
 3037: { 0x00, 0xc7, 0xc7 },
 3037: { 0x00, 0xc8, 0xc8 },
 3037: { 0x00, 0xc9, 0xc9 },
 3037: { 0x00, 0xca, 0xca },
 3037: { 0x00, 0xcb, 0xcb },
 3037: { 0x00, 0xcc, 0xcc },
 3037: { 0x00, 0xcd, 0xcd },
 3037: { 0x00, 0xce, 0xce },
 3037: { 0x00, 0xcf, 0xcf },
 3037: { 0x00, 0xd0, 0xd0 },
 3037: { 0x00, 0xd1, 0xd1 },
 3037: { 0x00, 0xd2, 0xd2 },
 3037: { 0x00, 0xd3, 0xd3 },
 3037: { 0x00, 0xd4, 0xd4 },
 3037: { 0x00, 0xd5, 0xd5 },
 3037: { 0x00, 0xd6, 0xd6 },
 3037: { 0x00, 0xd7, 0xd7 },
 3037: { 0x00, 0xd8, 0xd8 },
 3037: { 0x00, 0xd9, 0xd9 },
 3037: { 0x00, 0xda, 0xda },
 3037: { 0x00, 0xdb, 0xdb },
 3037: { 0x00, 0xdc, 0xdc },
 3037: { 0x00, 0xdd, 0xdd },
 3037: { 0x00, 0xde, 0xde },
 3037: { 0x00, 0xdf, 0xdf },
 3037: { 0x00, 0xe0, 0xe0 },
 3037: { 0x00, 0xe1, 0xe1 },
 3037: { 0x00, 0xe2, 0xe2 },
 3037: { 0x00, 0xe3, 0xe3 },
 3037: { 0x00, 0xe4, 0xe4 },
 3037: { 0x00, 0xe5, 0xe5 },
 3037: { 0x00, 0xe6, 0xe6 },
 3037: { 0x00, 0xe7, 0xe7 },
 3037: { 0x00, 0xe8, 0xe8 },
 3037: { 0x00, 0xe9, 0xe9 },
 3037: { 0x00, 0xea, 0xea },
 3037: { 0x00, 0xeb, 0xeb },
 3037: { 0x00, 0xec, 0xec },
 3037: { 0x00, 0xed, 0xed },
 3037: { 0x00, 0xee, 0xee },
 3037: { 0x00, 0xef, 0xef },
 3037: { 0x00, 0xf0, 0xf0 },
 3037: { 0x00, 0xf1, 0xf1 },
 3037: { 0x00, 0xf2, 0xf2 },
 3037: { 0x00, 0xf3, 0xf3 },
 3037: { 0x00, 0xf4, 0xf4 },
 3037: { 0x00, 0xf5, 0xf5 },
 3037: { 0x00, 0xf6, 0xf6 },
 3037: { 0x00, 0xf7, 0xf7 },
 3037: { 0x00, 0xf8, 0xf8 },
 3037: { 0x00, 0xf9, 0xf9 },
 3037: { 0x00, 0xfa, 0xfa },
 3037: { 0x00, 0xfb, 0xfb },
 3037: { 0x00, 0xfc, 0xfc },
 3037: { 0x00, 0xfd, 0xfd },
 3037: { 0x00, 0xfe, 0xfe },
21326: { 0x00, 0xff, 0xff }
 3037: };
 3037: 
43385: static struct cs_info koi8r_tbl[] = {
 3037: { 0x00, 0x00, 0x00 },
 3037: { 0x00, 0x01, 0x01 },
 3037: { 0x00, 0x02, 0x02 },
 3037: { 0x00, 0x03, 0x03 },
 3037: { 0x00, 0x04, 0x04 },
 3037: { 0x00, 0x05, 0x05 },
 3037: { 0x00, 0x06, 0x06 },
 3037: { 0x00, 0x07, 0x07 },
 3037: { 0x00, 0x08, 0x08 },
 3037: { 0x00, 0x09, 0x09 },
 3037: { 0x00, 0x0a, 0x0a },
 3037: { 0x00, 0x0b, 0x0b },
 3037: { 0x00, 0x0c, 0x0c },
 3037: { 0x00, 0x0d, 0x0d },
 3037: { 0x00, 0x0e, 0x0e },
 3037: { 0x00, 0x0f, 0x0f },
 3037: { 0x00, 0x10, 0x10 },
 3037: { 0x00, 0x11, 0x11 },
 3037: { 0x00, 0x12, 0x12 },
 3037: { 0x00, 0x13, 0x13 },
 3037: { 0x00, 0x14, 0x14 },
 3037: { 0x00, 0x15, 0x15 },
 3037: { 0x00, 0x16, 0x16 },
 3037: { 0x00, 0x17, 0x17 },
 3037: { 0x00, 0x18, 0x18 },
 3037: { 0x00, 0x19, 0x19 },
 3037: { 0x00, 0x1a, 0x1a },
 3037: { 0x00, 0x1b, 0x1b },
 3037: { 0x00, 0x1c, 0x1c },
 3037: { 0x00, 0x1d, 0x1d },
 3037: { 0x00, 0x1e, 0x1e },
 3037: { 0x00, 0x1f, 0x1f },
 3037: { 0x00, 0x20, 0x20 },
 3037: { 0x00, 0x21, 0x21 },
 3037: { 0x00, 0x22, 0x22 },
 3037: { 0x00, 0x23, 0x23 },
 3037: { 0x00, 0x24, 0x24 },
 3037: { 0x00, 0x25, 0x25 },
 3037: { 0x00, 0x26, 0x26 },
 3037: { 0x00, 0x27, 0x27 },
 3037: { 0x00, 0x28, 0x28 },
 3037: { 0x00, 0x29, 0x29 },
 3037: { 0x00, 0x2a, 0x2a },
 3037: { 0x00, 0x2b, 0x2b },
 3037: { 0x00, 0x2c, 0x2c },
 3037: { 0x00, 0x2d, 0x2d },
 3037: { 0x00, 0x2e, 0x2e },
 3037: { 0x00, 0x2f, 0x2f },
 3037: { 0x00, 0x30, 0x30 },
 3037: { 0x00, 0x31, 0x31 },
 3037: { 0x00, 0x32, 0x32 },
 3037: { 0x00, 0x33, 0x33 },
 3037: { 0x00, 0x34, 0x34 },
 3037: { 0x00, 0x35, 0x35 },
 3037: { 0x00, 0x36, 0x36 },
 3037: { 0x00, 0x37, 0x37 },
 3037: { 0x00, 0x38, 0x38 },
 3037: { 0x00, 0x39, 0x39 },
 3037: { 0x00, 0x3a, 0x3a },
 3037: { 0x00, 0x3b, 0x3b },
 3037: { 0x00, 0x3c, 0x3c },
 3037: { 0x00, 0x3d, 0x3d },
 3037: { 0x00, 0x3e, 0x3e },
 3037: { 0x00, 0x3f, 0x3f },
 3037: { 0x00, 0x40, 0x40 },
 3037: { 0x01, 0x61, 0x41 },
 3037: { 0x01, 0x62, 0x42 },
 3037: { 0x01, 0x63, 0x43 },
 3037: { 0x01, 0x64, 0x44 },
 3037: { 0x01, 0x65, 0x45 },
 3037: { 0x01, 0x66, 0x46 },
 3037: { 0x01, 0x67, 0x47 },
 3037: { 0x01, 0x68, 0x48 },
 3037: { 0x01, 0x69, 0x49 },
 3037: { 0x01, 0x6a, 0x4a },
 3037: { 0x01, 0x6b, 0x4b },
 3037: { 0x01, 0x6c, 0x4c },
 3037: { 0x01, 0x6d, 0x4d },
 3037: { 0x01, 0x6e, 0x4e },
 3037: { 0x01, 0x6f, 0x4f },
 3037: { 0x01, 0x70, 0x50 },
 3037: { 0x01, 0x71, 0x51 },
 3037: { 0x01, 0x72, 0x52 },
 3037: { 0x01, 0x73, 0x53 },
 3037: { 0x01, 0x74, 0x54 },
 3037: { 0x01, 0x75, 0x55 },
 3037: { 0x01, 0x76, 0x56 },
 3037: { 0x01, 0x77, 0x57 },
 3037: { 0x01, 0x78, 0x58 },
 3037: { 0x01, 0x79, 0x59 },
 3037: { 0x01, 0x7a, 0x5a },
 3037: { 0x00, 0x5b, 0x5b },
 3037: { 0x00, 0x5c, 0x5c },
 3037: { 0x00, 0x5d, 0x5d },
 3037: { 0x00, 0x5e, 0x5e },
 3037: { 0x00, 0x5f, 0x5f },
 3037: { 0x00, 0x60, 0x60 },
 3037: { 0x00, 0x61, 0x41 },
 3037: { 0x00, 0x62, 0x42 },
 3037: { 0x00, 0x63, 0x43 },
 3037: { 0x00, 0x64, 0x44 },
 3037: { 0x00, 0x65, 0x45 },
 3037: { 0x00, 0x66, 0x46 },
 3037: { 0x00, 0x67, 0x47 },
 3037: { 0x00, 0x68, 0x48 },
 3037: { 0x00, 0x69, 0x49 },
 3037: { 0x00, 0x6a, 0x4a },
 3037: { 0x00, 0x6b, 0x4b },
 3037: { 0x00, 0x6c, 0x4c },
 3037: { 0x00, 0x6d, 0x4d },
 3037: { 0x00, 0x6e, 0x4e },
 3037: { 0x00, 0x6f, 0x4f },
 3037: { 0x00, 0x70, 0x50 },
 3037: { 0x00, 0x71, 0x51 },
 3037: { 0x00, 0x72, 0x52 },
 3037: { 0x00, 0x73, 0x53 },
 3037: { 0x00, 0x74, 0x54 },
 3037: { 0x00, 0x75, 0x55 },
 3037: { 0x00, 0x76, 0x56 },
 3037: { 0x00, 0x77, 0x57 },
 3037: { 0x00, 0x78, 0x58 },
 3037: { 0x00, 0x79, 0x59 },
 3037: { 0x00, 0x7a, 0x5a },
 3037: { 0x00, 0x7b, 0x7b },
 3037: { 0x00, 0x7c, 0x7c },
 3037: { 0x00, 0x7d, 0x7d },
 3037: { 0x00, 0x7e, 0x7e },
 3037: { 0x00, 0x7f, 0x7f },
 3037: { 0x00, 0x80, 0x80 },
 3037: { 0x00, 0x81, 0x81 },
 3037: { 0x00, 0x82, 0x82 },
 3037: { 0x00, 0x83, 0x83 },
 3037: { 0x00, 0x84, 0x84 },
 3037: { 0x00, 0x85, 0x85 },
 3037: { 0x00, 0x86, 0x86 },
 3037: { 0x00, 0x87, 0x87 },
 3037: { 0x00, 0x88, 0x88 },
 3037: { 0x00, 0x89, 0x89 },
 3037: { 0x00, 0x8a, 0x8a },
 3037: { 0x00, 0x8b, 0x8b },
 3037: { 0x00, 0x8c, 0x8c },
 3037: { 0x00, 0x8d, 0x8d },
 3037: { 0x00, 0x8e, 0x8e },
 3037: { 0x00, 0x8f, 0x8f },
 3037: { 0x00, 0x90, 0x90 },
 3037: { 0x00, 0x91, 0x91 },
 3037: { 0x00, 0x92, 0x92 },
 3037: { 0x00, 0x93, 0x93 },
 3037: { 0x00, 0x94, 0x94 },
 3037: { 0x00, 0x95, 0x95 },
 3037: { 0x00, 0x96, 0x96 },
 3037: { 0x00, 0x97, 0x97 },
 3037: { 0x00, 0x98, 0x98 },
 3037: { 0x00, 0x99, 0x99 },
 3037: { 0x00, 0x9a, 0x9a },
 3037: { 0x00, 0x9b, 0x9b },
 3037: { 0x00, 0x9c, 0x9c },
 3037: { 0x00, 0x9d, 0x9d },
 3037: { 0x00, 0x9e, 0x9e },
 3037: { 0x00, 0x9f, 0x9f },
 3037: { 0x00, 0xa0, 0xa0 },
 3037: { 0x00, 0xa1, 0xa1 },
 3037: { 0x00, 0xa2, 0xa2 },
 3037: { 0x00, 0xa3, 0xb3 },
 3037: { 0x00, 0xa4, 0xa4 },
 3037: { 0x00, 0xa5, 0xa5 },
 3037: { 0x00, 0xa6, 0xa6 },
 3037: { 0x00, 0xa7, 0xa7 },
 3037: { 0x00, 0xa8, 0xa8 },
 3037: { 0x00, 0xa9, 0xa9 },
 3037: { 0x00, 0xaa, 0xaa },
 3037: { 0x00, 0xab, 0xab },
 3037: { 0x00, 0xac, 0xac },
 3037: { 0x00, 0xad, 0xad },
 3037: { 0x00, 0xae, 0xae },
 3037: { 0x00, 0xaf, 0xaf },
 3037: { 0x00, 0xb0, 0xb0 },
 3037: { 0x00, 0xb1, 0xb1 },
 3037: { 0x00, 0xb2, 0xb2 },
 3037: { 0x01, 0xa3, 0xb3 },
 3037: { 0x00, 0xb4, 0xb4 },
 3037: { 0x00, 0xb5, 0xb5 },
 3037: { 0x00, 0xb6, 0xb6 },
 3037: { 0x00, 0xb7, 0xb7 },
 3037: { 0x00, 0xb8, 0xb8 },
 3037: { 0x00, 0xb9, 0xb9 },
 3037: { 0x00, 0xba, 0xba },
 3037: { 0x00, 0xbb, 0xbb },
 3037: { 0x00, 0xbc, 0xbc },
 3037: { 0x00, 0xbd, 0xbd },
 3037: { 0x00, 0xbe, 0xbe },
 3037: { 0x00, 0xbf, 0xbf },
 3037: { 0x00, 0xc0, 0xe0 },
 3037: { 0x00, 0xc1, 0xe1 },
 3037: { 0x00, 0xc2, 0xe2 },
 3037: { 0x00, 0xc3, 0xe3 },
 3037: { 0x00, 0xc4, 0xe4 },
 3037: { 0x00, 0xc5, 0xe5 },
 3037: { 0x00, 0xc6, 0xe6 },
 3037: { 0x00, 0xc7, 0xe7 },
 3037: { 0x00, 0xc8, 0xe8 },
 3037: { 0x00, 0xc9, 0xe9 },
 3037: { 0x00, 0xca, 0xea },
 3037: { 0x00, 0xcb, 0xeb },
 3037: { 0x00, 0xcc, 0xec },
 3037: { 0x00, 0xcd, 0xed },
 3037: { 0x00, 0xce, 0xee },
 3037: { 0x00, 0xcf, 0xef },
 3037: { 0x00, 0xd0, 0xf0 },
 3037: { 0x00, 0xd1, 0xf1 },
 3037: { 0x00, 0xd2, 0xf2 },
 3037: { 0x00, 0xd3, 0xf3 },
 3037: { 0x00, 0xd4, 0xf4 },
 3037: { 0x00, 0xd5, 0xf5 },
 3037: { 0x00, 0xd6, 0xf6 },
 3037: { 0x00, 0xd7, 0xf7 },
 3037: { 0x00, 0xd8, 0xf8 },
 3037: { 0x00, 0xd9, 0xf9 },
 3037: { 0x00, 0xda, 0xfa },
 3037: { 0x00, 0xdb, 0xfb },
 3037: { 0x00, 0xdc, 0xfc },
 3037: { 0x00, 0xdd, 0xfd },
 3037: { 0x00, 0xde, 0xfe },
 3037: { 0x00, 0xdf, 0xff },
 3037: { 0x01, 0xc0, 0xe0 },
 3037: { 0x01, 0xc1, 0xe1 },
 3037: { 0x01, 0xc2, 0xe2 },
 3037: { 0x01, 0xc3, 0xe3 },
 3037: { 0x01, 0xc4, 0xe4 },
 3037: { 0x01, 0xc5, 0xe5 },
 3037: { 0x01, 0xc6, 0xe6 },
 3037: { 0x01, 0xc7, 0xe7 },
 3037: { 0x01, 0xc8, 0xe8 },
 3037: { 0x01, 0xc9, 0xe9 },
 3037: { 0x01, 0xca, 0xea },
 3037: { 0x01, 0xcb, 0xeb },
 3037: { 0x01, 0xcc, 0xec },
 3037: { 0x01, 0xcd, 0xed },
 3037: { 0x01, 0xce, 0xee },
 3037: { 0x01, 0xcf, 0xef },
 3037: { 0x01, 0xd0, 0xf0 },
 3037: { 0x01, 0xd1, 0xf1 },
 3037: { 0x01, 0xd2, 0xf2 },
 3037: { 0x01, 0xd3, 0xf3 },
 3037: { 0x01, 0xd4, 0xf4 },
 3037: { 0x01, 0xd5, 0xf5 },
 3037: { 0x01, 0xd6, 0xf6 },
 3037: { 0x01, 0xd7, 0xf7 },
 3037: { 0x01, 0xd8, 0xf8 },
 3037: { 0x01, 0xd9, 0xf9 },
 3037: { 0x01, 0xda, 0xfa },
 3037: { 0x01, 0xdb, 0xfb },
 3037: { 0x01, 0xdc, 0xfc },
 3037: { 0x01, 0xdd, 0xfd },
 3037: { 0x01, 0xde, 0xfe },
21326: { 0x01, 0xdf, 0xff }
 3037: };
 3037: 
43385: static struct cs_info koi8u_tbl[] = {
 3037: { 0x00, 0x00, 0x00 },
 3037: { 0x00, 0x01, 0x01 },
 3037: { 0x00, 0x02, 0x02 },
 3037: { 0x00, 0x03, 0x03 },
 3037: { 0x00, 0x04, 0x04 },
 3037: { 0x00, 0x05, 0x05 },
 3037: { 0x00, 0x06, 0x06 },
 3037: { 0x00, 0x07, 0x07 },
 3037: { 0x00, 0x08, 0x08 },
 3037: { 0x00, 0x09, 0x09 },
 3037: { 0x00, 0x0a, 0x0a },
 3037: { 0x00, 0x0b, 0x0b },
 3037: { 0x00, 0x0c, 0x0c },
 3037: { 0x00, 0x0d, 0x0d },
 3037: { 0x00, 0x0e, 0x0e },
 3037: { 0x00, 0x0f, 0x0f },
 3037: { 0x00, 0x10, 0x10 },
 3037: { 0x00, 0x11, 0x11 },
 3037: { 0x00, 0x12, 0x12 },
 3037: { 0x00, 0x13, 0x13 },
 3037: { 0x00, 0x14, 0x14 },
 3037: { 0x00, 0x15, 0x15 },
 3037: { 0x00, 0x16, 0x16 },
 3037: { 0x00, 0x17, 0x17 },
 3037: { 0x00, 0x18, 0x18 },
 3037: { 0x00, 0x19, 0x19 },
 3037: { 0x00, 0x1a, 0x1a },
 3037: { 0x00, 0x1b, 0x1b },
 3037: { 0x00, 0x1c, 0x1c },
 3037: { 0x00, 0x1d, 0x1d },
 3037: { 0x00, 0x1e, 0x1e },
 3037: { 0x00, 0x1f, 0x1f },
 3037: { 0x00, 0x20, 0x20 },
 3037: { 0x00, 0x21, 0x21 },
 3037: { 0x00, 0x22, 0x22 },
 3037: { 0x00, 0x23, 0x23 },
 3037: { 0x00, 0x24, 0x24 },
 3037: { 0x00, 0x25, 0x25 },
 3037: { 0x00, 0x26, 0x26 },
 3037: { 0x00, 0x27, 0x27 },
 3037: { 0x00, 0x28, 0x28 },
 3037: { 0x00, 0x29, 0x29 },
 3037: { 0x00, 0x2a, 0x2a },
 3037: { 0x00, 0x2b, 0x2b },
 3037: { 0x00, 0x2c, 0x2c },
 3037: { 0x00, 0x2d, 0x2d },
 3037: { 0x00, 0x2e, 0x2e },
 3037: { 0x00, 0x2f, 0x2f },
 3037: { 0x00, 0x30, 0x30 },
 3037: { 0x00, 0x31, 0x31 },
 3037: { 0x00, 0x32, 0x32 },
 3037: { 0x00, 0x33, 0x33 },
 3037: { 0x00, 0x34, 0x34 },
 3037: { 0x00, 0x35, 0x35 },
 3037: { 0x00, 0x36, 0x36 },
 3037: { 0x00, 0x37, 0x37 },
 3037: { 0x00, 0x38, 0x38 },
 3037: { 0x00, 0x39, 0x39 },
 3037: { 0x00, 0x3a, 0x3a },
 3037: { 0x00, 0x3b, 0x3b },
 3037: { 0x00, 0x3c, 0x3c },
 3037: { 0x00, 0x3d, 0x3d },
 3037: { 0x00, 0x3e, 0x3e },
 3037: { 0x00, 0x3f, 0x3f },
 3037: { 0x00, 0x40, 0x40 },
 3037: { 0x01, 0x61, 0x41 },
 3037: { 0x01, 0x62, 0x42 },
 3037: { 0x01, 0x63, 0x43 },
 3037: { 0x01, 0x64, 0x44 },
 3037: { 0x01, 0x65, 0x45 },
 3037: { 0x01, 0x66, 0x46 },
 3037: { 0x01, 0x67, 0x47 },
 3037: { 0x01, 0x68, 0x48 },
 3037: { 0x01, 0x69, 0x49 },
 3037: { 0x01, 0x6a, 0x4a },
 3037: { 0x01, 0x6b, 0x4b },
 3037: { 0x01, 0x6c, 0x4c },
 3037: { 0x01, 0x6d, 0x4d },
 3037: { 0x01, 0x6e, 0x4e },
 3037: { 0x01, 0x6f, 0x4f },
 3037: { 0x01, 0x70, 0x50 },
 3037: { 0x01, 0x71, 0x51 },
 3037: { 0x01, 0x72, 0x52 },
 3037: { 0x01, 0x73, 0x53 },
 3037: { 0x01, 0x74, 0x54 },
 3037: { 0x01, 0x75, 0x55 },
 3037: { 0x01, 0x76, 0x56 },
 3037: { 0x01, 0x77, 0x57 },
 3037: { 0x01, 0x78, 0x58 },
 3037: { 0x01, 0x79, 0x59 },
 3037: { 0x01, 0x7a, 0x5a },
 3037: { 0x00, 0x5b, 0x5b },
 3037: { 0x00, 0x5c, 0x5c },
 3037: { 0x00, 0x5d, 0x5d },
 3037: { 0x00, 0x5e, 0x5e },
 3037: { 0x00, 0x5f, 0x5f },
 3037: { 0x00, 0x60, 0x60 },
 3037: { 0x00, 0x61, 0x41 },
 3037: { 0x00, 0x62, 0x42 },
 3037: { 0x00, 0x63, 0x43 },
 3037: { 0x00, 0x64, 0x44 },
 3037: { 0x00, 0x65, 0x45 },
 3037: { 0x00, 0x66, 0x46 },
 3037: { 0x00, 0x67, 0x47 },
 3037: { 0x00, 0x68, 0x48 },
 3037: { 0x00, 0x69, 0x49 },
 3037: { 0x00, 0x6a, 0x4a },
 3037: { 0x00, 0x6b, 0x4b },
 3037: { 0x00, 0x6c, 0x4c },
 3037: { 0x00, 0x6d, 0x4d },
 3037: { 0x00, 0x6e, 0x4e },
 3037: { 0x00, 0x6f, 0x4f },
 3037: { 0x00, 0x70, 0x50 },
 3037: { 0x00, 0x71, 0x51 },
 3037: { 0x00, 0x72, 0x52 },
 3037: { 0x00, 0x73, 0x53 },
 3037: { 0x00, 0x74, 0x54 },
 3037: { 0x00, 0x75, 0x55 },
 3037: { 0x00, 0x76, 0x56 },
 3037: { 0x00, 0x77, 0x57 },
 3037: { 0x00, 0x78, 0x58 },
 3037: { 0x00, 0x79, 0x59 },
 3037: { 0x00, 0x7a, 0x5a },
 3037: { 0x00, 0x7b, 0x7b },
 3037: { 0x00, 0x7c, 0x7c },
 3037: { 0x00, 0x7d, 0x7d },
 3037: { 0x00, 0x7e, 0x7e },
 3037: { 0x00, 0x7f, 0x7f },
 3037: { 0x00, 0x80, 0x80 },
 3037: { 0x00, 0x81, 0x81 },
 3037: { 0x00, 0x82, 0x82 },
 3037: { 0x00, 0x83, 0x83 },
 3037: { 0x00, 0x84, 0x84 },
 3037: { 0x00, 0x85, 0x85 },
 3037: { 0x00, 0x86, 0x86 },
 3037: { 0x00, 0x87, 0x87 },
 3037: { 0x00, 0x88, 0x88 },
 3037: { 0x00, 0x89, 0x89 },
 3037: { 0x00, 0x8a, 0x8a },
 3037: { 0x00, 0x8b, 0x8b },
 3037: { 0x00, 0x8c, 0x8c },
 3037: { 0x00, 0x8d, 0x8d },
 3037: { 0x00, 0x8e, 0x8e },
 3037: { 0x00, 0x8f, 0x8f },
 3037: { 0x00, 0x90, 0x90 },
 3037: { 0x00, 0x91, 0x91 },
 3037: { 0x00, 0x92, 0x92 },
 3037: { 0x00, 0x93, 0x93 },
 3037: { 0x00, 0x94, 0x94 },
 3037: { 0x00, 0x95, 0x95 },
 3037: { 0x00, 0x96, 0x96 },
 3037: { 0x00, 0x97, 0x97 },
 3037: { 0x00, 0x98, 0x98 },
 3037: { 0x00, 0x99, 0x99 },
 3037: { 0x00, 0x9a, 0x9a },
 3037: { 0x00, 0x9b, 0x9b },
 3037: { 0x00, 0x9c, 0x9c },
 3037: { 0x00, 0x9d, 0x9d },
 3037: { 0x00, 0x9e, 0x9e },
 3037: { 0x00, 0x9f, 0x9f },
 3037: { 0x00, 0xa0, 0xa0 },
 3037: { 0x00, 0xa1, 0xa1 },
 3037: { 0x00, 0xa2, 0xa2 },
 3037: { 0x00, 0xa3, 0xb3 },
 3037: { 0x00, 0xa4, 0xb4 }, /* ie */
 3037: { 0x00, 0xa5, 0xa5 },
 3037: { 0x00, 0xa6, 0xb6 }, /* i */
 3037: { 0x00, 0xa7, 0xb7 }, /* ii */
 3037: { 0x00, 0xa8, 0xa8 },
 3037: { 0x00, 0xa9, 0xa9 },
 3037: { 0x00, 0xaa, 0xaa },
 3037: { 0x00, 0xab, 0xab },
 3037: { 0x00, 0xac, 0xac },
 3037: { 0x00, 0xad, 0xbd }, /* g'' */
 3037: { 0x00, 0xae, 0xae },
 3037: { 0x00, 0xaf, 0xaf },
 3037: { 0x00, 0xb0, 0xb0 },
 3037: { 0x00, 0xb1, 0xb1 },
 3037: { 0x00, 0xb2, 0xb2 },
 3037: { 0x01, 0xa3, 0xb3 },
 3037: { 0x00, 0xb4, 0xb4 }, /* IE */
 3037: { 0x00, 0xb5, 0xb5 },
 3037: { 0x00, 0xb6, 0xb6 }, /* I */
 3037: { 0x00, 0xb7, 0xb7 }, /* II */
 3037: { 0x00, 0xb8, 0xb8 },
 3037: { 0x00, 0xb9, 0xb9 },
 3037: { 0x00, 0xba, 0xba },
 3037: { 0x00, 0xbb, 0xbb },
 3037: { 0x00, 0xbc, 0xbc },
 3037: { 0x00, 0xbd, 0xbd },
 3037: { 0x00, 0xbe, 0xbe },
 3037: { 0x00, 0xbf, 0xbf },
 3037: { 0x00, 0xc0, 0xe0 },
 3037: { 0x00, 0xc1, 0xe1 },
 3037: { 0x00, 0xc2, 0xe2 },
 3037: { 0x00, 0xc3, 0xe3 },
 3037: { 0x00, 0xc4, 0xe4 },
 3037: { 0x00, 0xc5, 0xe5 },
 3037: { 0x00, 0xc6, 0xe6 },
 3037: { 0x00, 0xc7, 0xe7 },
 3037: { 0x00, 0xc8, 0xe8 },
 3037: { 0x00, 0xc9, 0xe9 },
 3037: { 0x00, 0xca, 0xea },
 3037: { 0x00, 0xcb, 0xeb },
 3037: { 0x00, 0xcc, 0xec },
 3037: { 0x00, 0xcd, 0xed },
 3037: { 0x00, 0xce, 0xee },
 3037: { 0x00, 0xcf, 0xef },
 3037: { 0x00, 0xd0, 0xf0 },
 3037: { 0x00, 0xd1, 0xf1 },
 3037: { 0x00, 0xd2, 0xf2 },
 3037: { 0x00, 0xd3, 0xf3 },
 3037: { 0x00, 0xd4, 0xf4 },
 3037: { 0x00, 0xd5, 0xf5 },
 3037: { 0x00, 0xd6, 0xf6 },
 3037: { 0x00, 0xd7, 0xf7 },
 3037: { 0x00, 0xd8, 0xf8 },
 3037: { 0x00, 0xd9, 0xf9 },
 3037: { 0x00, 0xda, 0xfa },
 3037: { 0x00, 0xdb, 0xfb },
 3037: { 0x00, 0xdc, 0xfc },
 3037: { 0x00, 0xdd, 0xfd },
 3037: { 0x00, 0xde, 0xfe },
 3037: { 0x00, 0xdf, 0xff },
 3037: { 0x01, 0xc0, 0xe0 },
 3037: { 0x01, 0xc1, 0xe1 },
 3037: { 0x01, 0xc2, 0xe2 },
 3037: { 0x01, 0xc3, 0xe3 },
 3037: { 0x01, 0xc4, 0xe4 },
 3037: { 0x01, 0xc5, 0xe5 },
 3037: { 0x01, 0xc6, 0xe6 },
 3037: { 0x01, 0xc7, 0xe7 },
 3037: { 0x01, 0xc8, 0xe8 },
 3037: { 0x01, 0xc9, 0xe9 },
 3037: { 0x01, 0xca, 0xea },
 3037: { 0x01, 0xcb, 0xeb },
 3037: { 0x01, 0xcc, 0xec },
 3037: { 0x01, 0xcd, 0xed },
 3037: { 0x01, 0xce, 0xee },
 3037: { 0x01, 0xcf, 0xef },
 3037: { 0x01, 0xd0, 0xf0 },
 3037: { 0x01, 0xd1, 0xf1 },
 3037: { 0x01, 0xd2, 0xf2 },
 3037: { 0x01, 0xd3, 0xf3 },
 3037: { 0x01, 0xd4, 0xf4 },
 3037: { 0x01, 0xd5, 0xf5 },
 3037: { 0x01, 0xd6, 0xf6 },
 3037: { 0x01, 0xd7, 0xf7 },
 3037: { 0x01, 0xd8, 0xf8 },
 3037: { 0x01, 0xd9, 0xf9 },
 3037: { 0x01, 0xda, 0xfa },
 3037: { 0x01, 0xdb, 0xfb },
 3037: { 0x01, 0xdc, 0xfc },
 3037: { 0x01, 0xdd, 0xfd },
 3037: { 0x01, 0xde, 0xfe },
21326: { 0x01, 0xdf, 0xff }
 3037: };
 3037: 
43385: static struct cs_info cp1251_tbl[] = {
 3037: { 0x00, 0x00, 0x00 },
 3037: { 0x00, 0x01, 0x01 },
 3037: { 0x00, 0x02, 0x02 },
 3037: { 0x00, 0x03, 0x03 },
 3037: { 0x00, 0x04, 0x04 },
 3037: { 0x00, 0x05, 0x05 },
 3037: { 0x00, 0x06, 0x06 },
 3037: { 0x00, 0x07, 0x07 },
 3037: { 0x00, 0x08, 0x08 },
 3037: { 0x00, 0x09, 0x09 },
 3037: { 0x00, 0x0a, 0x0a },
 3037: { 0x00, 0x0b, 0x0b },
 3037: { 0x00, 0x0c, 0x0c },
 3037: { 0x00, 0x0d, 0x0d },
 3037: { 0x00, 0x0e, 0x0e },
 3037: { 0x00, 0x0f, 0x0f },
 3037: { 0x00, 0x10, 0x10 },
 3037: { 0x00, 0x11, 0x11 },
 3037: { 0x00, 0x12, 0x12 },
 3037: { 0x00, 0x13, 0x13 },
 3037: { 0x00, 0x14, 0x14 },
 3037: { 0x00, 0x15, 0x15 },
 3037: { 0x00, 0x16, 0x16 },
 3037: { 0x00, 0x17, 0x17 },
 3037: { 0x00, 0x18, 0x18 },
 3037: { 0x00, 0x19, 0x19 },
 3037: { 0x00, 0x1a, 0x1a },
 3037: { 0x00, 0x1b, 0x1b },
 3037: { 0x00, 0x1c, 0x1c },
 3037: { 0x00, 0x1d, 0x1d },
 3037: { 0x00, 0x1e, 0x1e },
 3037: { 0x00, 0x1f, 0x1f },
 3037: { 0x00, 0x20, 0x20 },
 3037: { 0x00, 0x21, 0x21 },
 3037: { 0x00, 0x22, 0x22 },
 3037: { 0x00, 0x23, 0x23 },
 3037: { 0x00, 0x24, 0x24 },
 3037: { 0x00, 0x25, 0x25 },
 3037: { 0x00, 0x26, 0x26 },
 3037: { 0x00, 0x27, 0x27 },
 3037: { 0x00, 0x28, 0x28 },
 3037: { 0x00, 0x29, 0x29 },
 3037: { 0x00, 0x2a, 0x2a },
 3037: { 0x00, 0x2b, 0x2b },
 3037: { 0x00, 0x2c, 0x2c },
 3037: { 0x00, 0x2d, 0x2d },
 3037: { 0x00, 0x2e, 0x2e },
 3037: { 0x00, 0x2f, 0x2f },
 3037: { 0x00, 0x30, 0x30 },
 3037: { 0x00, 0x31, 0x31 },
 3037: { 0x00, 0x32, 0x32 },
 3037: { 0x00, 0x33, 0x33 },
 3037: { 0x00, 0x34, 0x34 },
 3037: { 0x00, 0x35, 0x35 },
 3037: { 0x00, 0x36, 0x36 },
 3037: { 0x00, 0x37, 0x37 },
 3037: { 0x00, 0x38, 0x38 },
 3037: { 0x00, 0x39, 0x39 },
 3037: { 0x00, 0x3a, 0x3a },
 3037: { 0x00, 0x3b, 0x3b },
 3037: { 0x00, 0x3c, 0x3c },
 3037: { 0x00, 0x3d, 0x3d },
 3037: { 0x00, 0x3e, 0x3e },
 3037: { 0x00, 0x3f, 0x3f },
 3037: { 0x00, 0x40, 0x40 },
 3037: { 0x01, 0x61, 0x41 },
 3037: { 0x01, 0x62, 0x42 },
 3037: { 0x01, 0x63, 0x43 },
 3037: { 0x01, 0x64, 0x44 },
 3037: { 0x01, 0x65, 0x45 },
 3037: { 0x01, 0x66, 0x46 },
 3037: { 0x01, 0x67, 0x47 },
 3037: { 0x01, 0x68, 0x48 },
 3037: { 0x01, 0x69, 0x49 },
 3037: { 0x01, 0x6a, 0x4a },
 3037: { 0x01, 0x6b, 0x4b },
 3037: { 0x01, 0x6c, 0x4c },
 3037: { 0x01, 0x6d, 0x4d },
 3037: { 0x01, 0x6e, 0x4e },
 3037: { 0x01, 0x6f, 0x4f },
 3037: { 0x01, 0x70, 0x50 },
 3037: { 0x01, 0x71, 0x51 },
 3037: { 0x01, 0x72, 0x52 },
 3037: { 0x01, 0x73, 0x53 },
 3037: { 0x01, 0x74, 0x54 },
 3037: { 0x01, 0x75, 0x55 },
 3037: { 0x01, 0x76, 0x56 },
 3037: { 0x01, 0x77, 0x57 },
 3037: { 0x01, 0x78, 0x58 },
 3037: { 0x01, 0x79, 0x59 },
 3037: { 0x01, 0x7a, 0x5a },
 3037: { 0x00, 0x5b, 0x5b },
 3037: { 0x00, 0x5c, 0x5c },
 3037: { 0x00, 0x5d, 0x5d },
 3037: { 0x00, 0x5e, 0x5e },
 3037: { 0x00, 0x5f, 0x5f },
 3037: { 0x00, 0x60, 0x60 },
 3037: { 0x00, 0x61, 0x41 },
 3037: { 0x00, 0x62, 0x42 },
 3037: { 0x00, 0x63, 0x43 },
 3037: { 0x00, 0x64, 0x44 },
 3037: { 0x00, 0x65, 0x45 },
 3037: { 0x00, 0x66, 0x46 },
 3037: { 0x00, 0x67, 0x47 },
 3037: { 0x00, 0x68, 0x48 },
 3037: { 0x00, 0x69, 0x49 },
 3037: { 0x00, 0x6a, 0x4a },
 3037: { 0x00, 0x6b, 0x4b },
 3037: { 0x00, 0x6c, 0x4c },
 3037: { 0x00, 0x6d, 0x4d },
 3037: { 0x00, 0x6e, 0x4e },
 3037: { 0x00, 0x6f, 0x4f },
 3037: { 0x00, 0x70, 0x50 },
 3037: { 0x00, 0x71, 0x51 },
 3037: { 0x00, 0x72, 0x52 },
 3037: { 0x00, 0x73, 0x53 },
 3037: { 0x00, 0x74, 0x54 },
 3037: { 0x00, 0x75, 0x55 },
 3037: { 0x00, 0x76, 0x56 },
 3037: { 0x00, 0x77, 0x57 },
 3037: { 0x00, 0x78, 0x58 },
 3037: { 0x00, 0x79, 0x59 },
 3037: { 0x00, 0x7a, 0x5a },
 3037: { 0x00, 0x7b, 0x7b },
 3037: { 0x00, 0x7c, 0x7c },
 3037: { 0x00, 0x7d, 0x7d },
 3037: { 0x00, 0x7e, 0x7e },
 3037: { 0x00, 0x7f, 0x7f },
 3037: { 0x01, 0x90, 0x80 },
 3037: { 0x01, 0x83, 0x81 },
 3037: { 0x00, 0x82, 0x82 },
 3037: { 0x00, 0x83, 0x81 },
 3037: { 0x00, 0x84, 0x84 },
 3037: { 0x00, 0x85, 0x85 },
 3037: { 0x00, 0x86, 0x86 },
 3037: { 0x00, 0x87, 0x87 },
 3037: { 0x00, 0x88, 0x88 },
 3037: { 0x00, 0x89, 0x89 },
 3037: { 0x01, 0x9a, 0x8a },
 3037: { 0x00, 0x8b, 0x8b },
 3037: { 0x01, 0x9c, 0x8c },
 3037: { 0x01, 0x9d, 0x8d },
 3037: { 0x01, 0x9e, 0x8e },
 3037: { 0x01, 0x9f, 0x8f },
 3037: { 0x00, 0x90, 0x80 },
 3037: { 0x00, 0x91, 0x91 },
 3037: { 0x00, 0x92, 0x92 },
 3037: { 0x00, 0x93, 0x93 },
 3037: { 0x00, 0x94, 0x94 },
 3037: { 0x00, 0x95, 0x95 },
 3037: { 0x00, 0x96, 0x96 },
 3037: { 0x00, 0x97, 0x97 },
 3037: { 0x00, 0x98, 0x98 },
 3037: { 0x00, 0x99, 0x99 },
 3037: { 0x00, 0x9a, 0x8a },
 3037: { 0x00, 0x9b, 0x9b },
 3037: { 0x00, 0x9c, 0x8c },
 3037: { 0x00, 0x9d, 0x8d },
 3037: { 0x00, 0x9e, 0x8e },
 3037: { 0x00, 0x9f, 0x8f },
 3037: { 0x00, 0xa0, 0xa0 },
 3037: { 0x01, 0xa2, 0xa1 },
 3037: { 0x00, 0xa2, 0xa1 },
 3037: { 0x01, 0xbc, 0xa3 },
 3037: { 0x00, 0xa4, 0xa4 },
 3037: { 0x01, 0xb4, 0xa5 },
 3037: { 0x00, 0xa6, 0xa6 },
 3037: { 0x00, 0xa7, 0xa7 },
 3037: { 0x01, 0xb8, 0xa8 },
 3037: { 0x00, 0xa9, 0xa9 },
 3037: { 0x01, 0xba, 0xaa },
 3037: { 0x00, 0xab, 0xab },
 3037: { 0x00, 0xac, 0xac },
 3037: { 0x00, 0xad, 0xad },
 3037: { 0x00, 0xae, 0xae },
 3037: { 0x01, 0xbf, 0xaf },
 3037: { 0x00, 0xb0, 0xb0 },
 3037: { 0x00, 0xb1, 0xb1 },
 3037: { 0x01, 0xb3, 0xb2 },
 3037: { 0x00, 0xb3, 0xb2 },
 3037: { 0x00, 0xb4, 0xa5 },
 3037: { 0x00, 0xb5, 0xb5 },
 3037: { 0x00, 0xb6, 0xb6 },
 3037: { 0x00, 0xb7, 0xb7 },
 3037: { 0x00, 0xb8, 0xa8 },
 3037: { 0x00, 0xb9, 0xb9 },
 3037: { 0x00, 0xba, 0xaa },
 3037: { 0x00, 0xbb, 0xbb },
 3037: { 0x00, 0xbc, 0xa3 },
 3037: { 0x01, 0xbe, 0xbd },
 3037: { 0x00, 0xbe, 0xbd },
 3037: { 0x00, 0xbf, 0xaf },
 3037: { 0x01, 0xe0, 0xc0 },
 3037: { 0x01, 0xe1, 0xc1 },
 3037: { 0x01, 0xe2, 0xc2 },
 3037: { 0x01, 0xe3, 0xc3 },
 3037: { 0x01, 0xe4, 0xc4 },
 3037: { 0x01, 0xe5, 0xc5 },
 3037: { 0x01, 0xe6, 0xc6 },
 3037: { 0x01, 0xe7, 0xc7 },
 3037: { 0x01, 0xe8, 0xc8 },
 3037: { 0x01, 0xe9, 0xc9 },
 3037: { 0x01, 0xea, 0xca },
 3037: { 0x01, 0xeb, 0xcb },
 3037: { 0x01, 0xec, 0xcc },
 3037: { 0x01, 0xed, 0xcd },
 3037: { 0x01, 0xee, 0xce },
 3037: { 0x01, 0xef, 0xcf },
 3037: { 0x01, 0xf0, 0xd0 },
 3037: { 0x01, 0xf1, 0xd1 },
 3037: { 0x01, 0xf2, 0xd2 },
 3037: { 0x01, 0xf3, 0xd3 },
 3037: { 0x01, 0xf4, 0xd4 },
 3037: { 0x01, 0xf5, 0xd5 },
 3037: { 0x01, 0xf6, 0xd6 },
 3037: { 0x01, 0xf7, 0xd7 },
 3037: { 0x01, 0xf8, 0xd8 },
 3037: { 0x01, 0xf9, 0xd9 },
 3037: { 0x01, 0xfa, 0xda },
 3037: { 0x01, 0xfb, 0xdb },
 3037: { 0x01, 0xfc, 0xdc },
 3037: { 0x01, 0xfd, 0xdd },
 3037: { 0x01, 0xfe, 0xde },
 3037: { 0x01, 0xff, 0xdf },
 3037: { 0x00, 0xe0, 0xc0 },
 3037: { 0x00, 0xe1, 0xc1 },
 3037: { 0x00, 0xe2, 0xc2 },
 3037: { 0x00, 0xe3, 0xc3 },
 3037: { 0x00, 0xe4, 0xc4 },
 3037: { 0x00, 0xe5, 0xc5 },
 3037: { 0x00, 0xe6, 0xc6 },
 3037: { 0x00, 0xe7, 0xc7 },
 3037: { 0x00, 0xe8, 0xc8 },
 3037: { 0x00, 0xe9, 0xc9 },
 3037: { 0x00, 0xea, 0xca },
 3037: { 0x00, 0xeb, 0xcb },
 3037: { 0x00, 0xec, 0xcc },
 3037: { 0x00, 0xed, 0xcd },
 3037: { 0x00, 0xee, 0xce },
 3037: { 0x00, 0xef, 0xcf },
 3037: { 0x00, 0xf0, 0xd0 },
 3037: { 0x00, 0xf1, 0xd1 },
 3037: { 0x00, 0xf2, 0xd2 },
 3037: { 0x00, 0xf3, 0xd3 },
 3037: { 0x00, 0xf4, 0xd4 },
 3037: { 0x00, 0xf5, 0xd5 },
 3037: { 0x00, 0xf6, 0xd6 },
 3037: { 0x00, 0xf7, 0xd7 },
 3037: { 0x00, 0xf8, 0xd8 },
 3037: { 0x00, 0xf9, 0xd9 },
 3037: { 0x00, 0xfa, 0xda },
 3037: { 0x00, 0xfb, 0xdb },
 3037: { 0x00, 0xfc, 0xdc },
 3037: { 0x00, 0xfd, 0xdd },
 3037: { 0x00, 0xfe, 0xde },
21326: { 0x00, 0xff, 0xdf }
 3037: };
 3037: 
43385: static struct cs_info iso13_tbl[] = {
 3037: { 0x00, 0x00, 0x00 },
 3037: { 0x00, 0x01, 0x01 },
 3037: { 0x00, 0x02, 0x02 },
 3037: { 0x00, 0x03, 0x03 },
 3037: { 0x00, 0x04, 0x04 },
 3037: { 0x00, 0x05, 0x05 },
 3037: { 0x00, 0x06, 0x06 },
 3037: { 0x00, 0x07, 0x07 },
 3037: { 0x00, 0x08, 0x08 },
 3037: { 0x00, 0x09, 0x09 },
 3037: { 0x00, 0x0A, 0x0A },
 3037: { 0x00, 0x0B, 0x0B },
 3037: { 0x00, 0x0C, 0x0C },
 3037: { 0x00, 0x0D, 0x0D },
 3037: { 0x00, 0x0E, 0x0E },
 3037: { 0x00, 0x0F, 0x0F },
 3037: { 0x00, 0x10, 0x10 },
 3037: { 0x00, 0x11, 0x11 },
 3037: { 0x00, 0x12, 0x12 },
 3037: { 0x00, 0x13, 0x13 },
 3037: { 0x00, 0x14, 0x14 },
 3037: { 0x00, 0x15, 0x15 },
 3037: { 0x00, 0x16, 0x16 },
 3037: { 0x00, 0x17, 0x17 },
 3037: { 0x00, 0x18, 0x18 },
 3037: { 0x00, 0x19, 0x19 },
 3037: { 0x00, 0x1A, 0x1A },
 3037: { 0x00, 0x1B, 0x1B },
 3037: { 0x00, 0x1C, 0x1C },
 3037: { 0x00, 0x1D, 0x1D },
 3037: { 0x00, 0x1E, 0x1E },
 3037: { 0x00, 0x1F, 0x1F },
 3037: { 0x00, 0x20, 0x20 },
 3037: { 0x00, 0x21, 0x21 },
 3037: { 0x00, 0x22, 0x22 },
 3037: { 0x00, 0x23, 0x23 },
 3037: { 0x00, 0x24, 0x24 },
 3037: { 0x00, 0x25, 0x25 },
 3037: { 0x00, 0x26, 0x26 },
 3037: { 0x00, 0x27, 0x27 },
 3037: { 0x00, 0x28, 0x28 },
 3037: { 0x00, 0x29, 0x29 },
 3037: { 0x00, 0x2A, 0x2A },
 3037: { 0x00, 0x2B, 0x2B },
 3037: { 0x00, 0x2C, 0x2C },
 3037: { 0x00, 0x2D, 0x2D },
 3037: { 0x00, 0x2E, 0x2E },
 3037: { 0x00, 0x2F, 0x2F },
 3037: { 0x00, 0x30, 0x30 },
 3037: { 0x00, 0x31, 0x31 },
 3037: { 0x00, 0x32, 0x32 },
 3037: { 0x00, 0x33, 0x33 },
 3037: { 0x00, 0x34, 0x34 },
 3037: { 0x00, 0x35, 0x35 },
 3037: { 0x00, 0x36, 0x36 },
 3037: { 0x00, 0x37, 0x37 },
 3037: { 0x00, 0x38, 0x38 },
 3037: { 0x00, 0x39, 0x39 },
 3037: { 0x00, 0x3A, 0x3A },
 3037: { 0x00, 0x3B, 0x3B },
 3037: { 0x00, 0x3C, 0x3C },
 3037: { 0x00, 0x3D, 0x3D },
 3037: { 0x00, 0x3E, 0x3E },
 3037: { 0x00, 0x3F, 0x3F },
 3037: { 0x00, 0x40, 0x40 },
 3037: { 0x01, 0x61, 0x41 },
 3037: { 0x01, 0x62, 0x42 },
 3037: { 0x01, 0x63, 0x43 },
 3037: { 0x01, 0x64, 0x44 },
 3037: { 0x01, 0x65, 0x45 },
 3037: { 0x01, 0x66, 0x46 },
 3037: { 0x01, 0x67, 0x47 },
 3037: { 0x01, 0x68, 0x48 },
 3037: { 0x01, 0x69, 0x49 },
 3037: { 0x01, 0x6A, 0x4A },
 3037: { 0x01, 0x6B, 0x4B },
 3037: { 0x01, 0x6C, 0x4C },
 3037: { 0x01, 0x6D, 0x4D },
 3037: { 0x01, 0x6E, 0x4E },
 3037: { 0x01, 0x6F, 0x4F },
 3037: { 0x01, 0x70, 0x50 },
 3037: { 0x01, 0x71, 0x51 },
 3037: { 0x01, 0x72, 0x52 },
 3037: { 0x01, 0x73, 0x53 },
 3037: { 0x01, 0x74, 0x54 },
 3037: { 0x01, 0x75, 0x55 },
 3037: { 0x01, 0x76, 0x56 },
 3037: { 0x01, 0x77, 0x57 },
 3037: { 0x01, 0x78, 0x58 },
 3037: { 0x01, 0x79, 0x59 },
 3037: { 0x01, 0x7A, 0x5A },
 3037: { 0x00, 0x5B, 0x5B },
 3037: { 0x00, 0x5C, 0x5C },
 3037: { 0x00, 0x5D, 0x5D },
 3037: { 0x00, 0x5E, 0x5E },
 3037: { 0x00, 0x5F, 0x5F },
 3037: { 0x00, 0x60, 0x60 },
 3037: { 0x00, 0x61, 0x41 },
 3037: { 0x00, 0x62, 0x42 },
 3037: { 0x00, 0x63, 0x43 },
 3037: { 0x00, 0x64, 0x44 },
 3037: { 0x00, 0x65, 0x45 },
 3037: { 0x00, 0x66, 0x46 },
 3037: { 0x00, 0x67, 0x47 },
 3037: { 0x00, 0x68, 0x48 },
 3037: { 0x00, 0x69, 0x49 },
 3037: { 0x00, 0x6A, 0x4A },
 3037: { 0x00, 0x6B, 0x4B },
 3037: { 0x00, 0x6C, 0x4C },
 3037: { 0x00, 0x6D, 0x4D },
 3037: { 0x00, 0x6E, 0x4E },
 3037: { 0x00, 0x6F, 0x4F },
 3037: { 0x00, 0x70, 0x50 },
 3037: { 0x00, 0x71, 0x51 },
 3037: { 0x00, 0x72, 0x52 },
 3037: { 0x00, 0x73, 0x53 },
 3037: { 0x00, 0x74, 0x54 },
 3037: { 0x00, 0x75, 0x55 },
 3037: { 0x00, 0x76, 0x56 },
 3037: { 0x00, 0x77, 0x57 },
 3037: { 0x00, 0x78, 0x58 },
 3037: { 0x00, 0x79, 0x59 },
 3037: { 0x00, 0x7A, 0x5A },
 3037: { 0x00, 0x7B, 0x7B },
 3037: { 0x00, 0x7C, 0x7C },
 3037: { 0x00, 0x7D, 0x7D },
 3037: { 0x00, 0x7E, 0x7E },
 3037: { 0x00, 0x7F, 0x7F },
 3037: { 0x00, 0x80, 0x80 },
 3037: { 0x00, 0x81, 0x81 },
 3037: { 0x00, 0x82, 0x82 },
 3037: { 0x00, 0x83, 0x83 },
 3037: { 0x00, 0x84, 0x84 },
 3037: { 0x00, 0x85, 0x85 },
 3037: { 0x00, 0x86, 0x86 },
 3037: { 0x00, 0x87, 0x87 },
 3037: { 0x00, 0x88, 0x88 },
 3037: { 0x00, 0x89, 0x89 },
 3037: { 0x00, 0x8A, 0x8A },
 3037: { 0x00, 0x8B, 0x8B },
 3037: { 0x00, 0x8C, 0x8C },
 3037: { 0x00, 0x8D, 0x8D },
 3037: { 0x00, 0x8E, 0x8E },
 3037: { 0x00, 0x8F, 0x8F },
 3037: { 0x00, 0x90, 0x90 },
 3037: { 0x00, 0x91, 0x91 },
 3037: { 0x00, 0x92, 0x92 },
 3037: { 0x00, 0x93, 0x93 },
 3037: { 0x00, 0x94, 0x94 },
 3037: { 0x00, 0x95, 0x95 },
 3037: { 0x00, 0x96, 0x96 },
 3037: { 0x00, 0x97, 0x97 },
 3037: { 0x00, 0x98, 0x98 },
 3037: { 0x00, 0x99, 0x99 },
 3037: { 0x00, 0x9A, 0x9A },
 3037: { 0x00, 0x9B, 0x9B },
 3037: { 0x00, 0x9C, 0x9C },
 3037: { 0x00, 0x9D, 0x9D },
 3037: { 0x00, 0x9E, 0x9E },
 3037: { 0x00, 0x9F, 0x9F },
 3037: { 0x00, 0xA0, 0xA0 },
 3037: { 0x00, 0xA1, 0xA1 },
 3037: { 0x00, 0xA2, 0xA2 },
 3037: { 0x00, 0xA3, 0xA3 },
 3037: { 0x00, 0xA4, 0xA4 },
 3037: { 0x00, 0xA5, 0xA5 },
 3037: { 0x00, 0xA6, 0xA6 },
 3037: { 0x00, 0xA7, 0xA7 },
 3037: { 0x01, 0xB8, 0xA8 },
 3037: { 0x00, 0xA9, 0xA9 },
 3037: { 0x01, 0xBA, 0xAA },
 3037: { 0x00, 0xAB, 0xAB },
 3037: { 0x00, 0xAC, 0xAC },
 3037: { 0x00, 0xAD, 0xAD },
 3037: { 0x00, 0xAE, 0xAE },
 3037: { 0x01, 0xBF, 0xAF },
 3037: { 0x00, 0xB0, 0xB0 },
 3037: { 0x00, 0xB1, 0xB1 },
 3037: { 0x00, 0xB2, 0xB2 },
 3037: { 0x00, 0xB3, 0xB3 },
 3037: { 0x00, 0xB4, 0xB4 },
 3037: { 0x00, 0xB5, 0xB5 },
 3037: { 0x00, 0xB6, 0xB6 },
 3037: { 0x00, 0xB7, 0xB7 },
 3037: { 0x00, 0xB8, 0xA8 },
 3037: { 0x00, 0xB9, 0xB9 },
 3037: { 0x00, 0xBA, 0xAA },
 3037: { 0x00, 0xBB, 0xBB },
 3037: { 0x00, 0xBC, 0xBC },
 3037: { 0x00, 0xBD, 0xBD },
 3037: { 0x00, 0xBE, 0xBE },
 3037: { 0x00, 0xBF, 0xAF },
 3037: { 0x01, 0xE0, 0xC0 },
 3037: { 0x01, 0xE1, 0xC1 },
 3037: { 0x01, 0xE2, 0xC2 },
 3037: { 0x01, 0xE3, 0xC3 },
 3037: { 0x01, 0xE4, 0xC4 },
 3037: { 0x01, 0xE5, 0xC5 },
 3037: { 0x01, 0xE6, 0xC6 },
 3037: { 0x01, 0xE7, 0xC7 },
 3037: { 0x01, 0xE8, 0xC8 },
 3037: { 0x01, 0xE9, 0xC9 },
 3037: { 0x01, 0xEA, 0xCA },
 3037: { 0x01, 0xEB, 0xCB },
 3037: { 0x01, 0xEC, 0xCC },
 3037: { 0x01, 0xED, 0xCD },
 3037: { 0x01, 0xEE, 0xCE },
 3037: { 0x01, 0xEF, 0xCF },
 3037: { 0x01, 0xF0, 0xD0 },
 3037: { 0x01, 0xF1, 0xD1 },
 3037: { 0x01, 0xF2, 0xD2 },
 3037: { 0x01, 0xF3, 0xD3 },
 3037: { 0x01, 0xF4, 0xD4 },
 3037: { 0x01, 0xF5, 0xD5 },
 3037: { 0x01, 0xF6, 0xD6 },
 3037: { 0x00, 0xD7, 0xD7 },
 3037: { 0x01, 0xF8, 0xD8 },
 3037: { 0x01, 0xF9, 0xD9 },
 3037: { 0x01, 0xFA, 0xDA },
 3037: { 0x01, 0xFB, 0xDB },
 3037: { 0x01, 0xFC, 0xDC },
 3037: { 0x01, 0xFD, 0xDD },
 3037: { 0x01, 0xFE, 0xDE },
 3037: { 0x00, 0xDF, 0xDF },
 3037: { 0x00, 0xE0, 0xC0 },
 3037: { 0x00, 0xE1, 0xC1 },
 3037: { 0x00, 0xE2, 0xC2 },
 3037: { 0x00, 0xE3, 0xC3 },
 3037: { 0x00, 0xE4, 0xC4 },
 3037: { 0x00, 0xE5, 0xC5 },
 3037: { 0x00, 0xE6, 0xC6 },
 3037: { 0x00, 0xE7, 0xC7 },
 3037: { 0x00, 0xE8, 0xC8 },
 3037: { 0x00, 0xE9, 0xC9 },
 3037: { 0x00, 0xEA, 0xCA },
 3037: { 0x00, 0xEB, 0xCB },
 3037: { 0x00, 0xEC, 0xCC },
 3037: { 0x00, 0xED, 0xCD },
 3037: { 0x00, 0xEE, 0xCE },
 3037: { 0x00, 0xEF, 0xCF },
 3037: { 0x00, 0xF0, 0xD0 },
 3037: { 0x00, 0xF1, 0xD1 },
 3037: { 0x00, 0xF2, 0xD2 },
 3037: { 0x00, 0xF3, 0xD3 },
 3037: { 0x00, 0xF4, 0xD4 },
 3037: { 0x00, 0xF5, 0xD5 },
 3037: { 0x00, 0xF6, 0xD6 },
 3037: { 0x00, 0xF7, 0xF7 },
 3037: { 0x00, 0xF8, 0xD8 },
 3037: { 0x00, 0xF9, 0xD9 },
 3037: { 0x00, 0xFA, 0xDA },
 3037: { 0x00, 0xFB, 0xDB },
 3037: { 0x00, 0xFC, 0xDC },
 3037: { 0x00, 0xFD, 0xDD },
 3037: { 0x00, 0xFE, 0xDE },
21326: { 0x00, 0xFF, 0xFF }
 3037: };
 3037: 
 3037: 
43385: static struct cs_info iso14_tbl[] = {
 3037: { 0x00, 0x00, 0x00 },
 3037: { 0x00, 0x01, 0x01 },
 3037: { 0x00, 0x02, 0x02 },
 3037: { 0x00, 0x03, 0x03 },
 3037: { 0x00, 0x04, 0x04 },
 3037: { 0x00, 0x05, 0x05 },
 3037: { 0x00, 0x06, 0x06 },
 3037: { 0x00, 0x07, 0x07 },
 3037: { 0x00, 0x08, 0x08 },
 3037: { 0x00, 0x09, 0x09 },
 3037: { 0x00, 0x0a, 0x0a },
 3037: { 0x00, 0x0b, 0x0b },
 3037: { 0x00, 0x0c, 0x0c },
 3037: { 0x00, 0x0d, 0x0d },
 3037: { 0x00, 0x0e, 0x0e },
 3037: { 0x00, 0x0f, 0x0f },
 3037: { 0x00, 0x10, 0x10 },
 3037: { 0x00, 0x11, 0x11 },
 3037: { 0x00, 0x12, 0x12 },
 3037: { 0x00, 0x13, 0x13 },
 3037: { 0x00, 0x14, 0x14 },
 3037: { 0x00, 0x15, 0x15 },
 3037: { 0x00, 0x16, 0x16 },
 3037: { 0x00, 0x17, 0x17 },
 3037: { 0x00, 0x18, 0x18 },
 3037: { 0x00, 0x19, 0x19 },
 3037: { 0x00, 0x1a, 0x1a },
 3037: { 0x00, 0x1b, 0x1b },
 3037: { 0x00, 0x1c, 0x1c },
 3037: { 0x00, 0x1d, 0x1d },
 3037: { 0x00, 0x1e, 0x1e },
 3037: { 0x00, 0x1f, 0x1f },
 3037: { 0x00, 0x20, 0x20 },
 3037: { 0x00, 0x21, 0x21 },
 3037: { 0x00, 0x22, 0x22 },
 3037: { 0x00, 0x23, 0x23 },
 3037: { 0x00, 0x24, 0x24 },
 3037: { 0x00, 0x25, 0x25 },
 3037: { 0x00, 0x26, 0x26 },
 3037: { 0x00, 0x27, 0x27 },
 3037: { 0x00, 0x28, 0x28 },
 3037: { 0x00, 0x29, 0x29 },
 3037: { 0x00, 0x2a, 0x2a },
 3037: { 0x00, 0x2b, 0x2b },
 3037: { 0x00, 0x2c, 0x2c },
 3037: { 0x00, 0x2d, 0x2d },
 3037: { 0x00, 0x2e, 0x2e },
 3037: { 0x00, 0x2f, 0x2f },
 3037: { 0x00, 0x30, 0x30 },
 3037: { 0x00, 0x31, 0x31 },
 3037: { 0x00, 0x32, 0x32 },
 3037: { 0x00, 0x33, 0x33 },
 3037: { 0x00, 0x34, 0x34 },
 3037: { 0x00, 0x35, 0x35 },
 3037: { 0x00, 0x36, 0x36 },
 3037: { 0x00, 0x37, 0x37 },
 3037: { 0x00, 0x38, 0x38 },
 3037: { 0x00, 0x39, 0x39 },
 3037: { 0x00, 0x3a, 0x3a },
 3037: { 0x00, 0x3b, 0x3b },
 3037: { 0x00, 0x3c, 0x3c },
 3037: { 0x00, 0x3d, 0x3d },
 3037: { 0x00, 0x3e, 0x3e },
 3037: { 0x00, 0x3f, 0x3f },
 3037: { 0x00, 0x40, 0x40 },
 3037: { 0x01, 0x61, 0x41 },
 3037: { 0x01, 0x62, 0x42 },
 3037: { 0x01, 0x63, 0x43 },
 3037: { 0x01, 0x64, 0x44 },
 3037: { 0x01, 0x65, 0x45 },
 3037: { 0x01, 0x66, 0x46 },
 3037: { 0x01, 0x67, 0x47 },
 3037: { 0x01, 0x68, 0x48 },
 3037: { 0x01, 0x69, 0x49 },
 3037: { 0x01, 0x6a, 0x4a },
 3037: { 0x01, 0x6b, 0x4b },
 3037: { 0x01, 0x6c, 0x4c },
 3037: { 0x01, 0x6d, 0x4d },
 3037: { 0x01, 0x6e, 0x4e },
 3037: { 0x01, 0x6f, 0x4f },
 3037: { 0x01, 0x70, 0x50 },
 3037: { 0x01, 0x71, 0x51 },
 3037: { 0x01, 0x72, 0x52 },
 3037: { 0x01, 0x73, 0x53 },
 3037: { 0x01, 0x74, 0x54 },
 3037: { 0x01, 0x75, 0x55 },
 3037: { 0x01, 0x76, 0x56 },
 3037: { 0x01, 0x77, 0x57 },
 3037: { 0x01, 0x78, 0x58 },
 3037: { 0x01, 0x79, 0x59 },
 3037: { 0x01, 0x7a, 0x5a },
 3037: { 0x00, 0x5b, 0x5b },
 3037: { 0x00, 0x5c, 0x5c },
 3037: { 0x00, 0x5d, 0x5d },
 3037: { 0x00, 0x5e, 0x5e },
 3037: { 0x00, 0x5f, 0x5f },
 3037: { 0x00, 0x60, 0x60 },
 3037: { 0x00, 0x61, 0x41 },
 3037: { 0x00, 0x62, 0x42 },
 3037: { 0x00, 0x63, 0x43 },
 3037: { 0x00, 0x64, 0x44 },
 3037: { 0x00, 0x65, 0x45 },
 3037: { 0x00, 0x66, 0x46 },
 3037: { 0x00, 0x67, 0x47 },
 3037: { 0x00, 0x68, 0x48 },
 3037: { 0x00, 0x69, 0x49 },
 3037: { 0x00, 0x6a, 0x4a },
 3037: { 0x00, 0x6b, 0x4b },
 3037: { 0x00, 0x6c, 0x4c },
 3037: { 0x00, 0x6d, 0x4d },
 3037: { 0x00, 0x6e, 0x4e },
 3037: { 0x00, 0x6f, 0x4f },
 3037: { 0x00, 0x70, 0x50 },
 3037: { 0x00, 0x71, 0x51 },
 3037: { 0x00, 0x72, 0x52 },
 3037: { 0x00, 0x73, 0x53 },
 3037: { 0x00, 0x74, 0x54 },
 3037: { 0x00, 0x75, 0x55 },
 3037: { 0x00, 0x76, 0x56 },
 3037: { 0x00, 0x77, 0x57 },
 3037: { 0x00, 0x78, 0x58 },
 3037: { 0x00, 0x79, 0x59 },
 3037: { 0x00, 0x7a, 0x5a },
 3037: { 0x00, 0x7b, 0x7b },
 3037: { 0x00, 0x7c, 0x7c },
 3037: { 0x00, 0x7d, 0x7d },
 3037: { 0x00, 0x7e, 0x7e },
 3037: { 0x00, 0x7f, 0x7f },
 3037: { 0x00, 0x80, 0x80 },
 3037: { 0x00, 0x81, 0x81 },
 3037: { 0x00, 0x82, 0x82 },
 3037: { 0x00, 0x83, 0x83 },
 3037: { 0x00, 0x84, 0x84 },
 3037: { 0x00, 0x85, 0x85 },
 3037: { 0x00, 0x86, 0x86 },
 3037: { 0x00, 0x87, 0x87 },
 3037: { 0x00, 0x88, 0x88 },
 3037: { 0x00, 0x89, 0x89 },
 3037: { 0x00, 0x8a, 0x8a },
 3037: { 0x00, 0x8b, 0x8b },
 3037: { 0x00, 0x8c, 0x8c },
 3037: { 0x00, 0x8d, 0x8d },
 3037: { 0x00, 0x8e, 0x8e },
 3037: { 0x00, 0x8f, 0x8f },
 3037: { 0x00, 0x90, 0x90 },
 3037: { 0x00, 0x91, 0x91 },
 3037: { 0x00, 0x92, 0x92 },
 3037: { 0x00, 0x93, 0x93 },
 3037: { 0x00, 0x94, 0x94 },
 3037: { 0x00, 0x95, 0x95 },
 3037: { 0x00, 0x96, 0x96 },
 3037: { 0x00, 0x97, 0x97 },
 3037: { 0x00, 0x98, 0x98 },
 3037: { 0x00, 0x99, 0x99 },
 3037: { 0x00, 0x9a, 0x9a },
 3037: { 0x00, 0x9b, 0x9b },
 3037: { 0x00, 0x9c, 0x9c },
 3037: { 0x00, 0x9d, 0x9d },
 3037: { 0x00, 0x9e, 0x9e },
 3037: { 0x00, 0x9f, 0x9f },
 3037: { 0x00, 0xa0, 0xa0 },
 3037: { 0x01, 0xa2, 0xa1 },
 3037: { 0x00, 0xa2, 0xa1 },
 3037: { 0x00, 0xa3, 0xa3 },
 3037: { 0x01, 0xa5, 0xa4 },
 3037: { 0x00, 0xa5, 0xa4 },
 3037: { 0x01, 0xa6, 0xab },
 3037: { 0x00, 0xa7, 0xa7 },
 3037: { 0x01, 0xb8, 0xa8 },
 3037: { 0x00, 0xa9, 0xa9 },
 3037: { 0x01, 0xba, 0xaa },
 3037: { 0x00, 0xab, 0xa6 },
 3037: { 0x01, 0xbc, 0xac },
 3037: { 0x00, 0xad, 0xad },
 3037: { 0x00, 0xae, 0xae },
 3037: { 0x01, 0xff, 0xaf },
 3037: { 0x01, 0xb1, 0xb0 },
 3037: { 0x00, 0xb1, 0xb0 },
 3037: { 0x01, 0xb3, 0xb2 },
 3037: { 0x00, 0xb3, 0xb2 },
 3037: { 0x01, 0xb5, 0xb4 },
 3037: { 0x00, 0xb5, 0xb4 },
 3037: { 0x00, 0xb6, 0xb6 },
 3037: { 0x01, 0xb9, 0xb7 },
 3037: { 0x00, 0xb8, 0xa8 },
 3037: { 0x00, 0xb9, 0xb6 },
 3037: { 0x00, 0xba, 0xaa },
 3037: { 0x01, 0xbf, 0xbb },
 3037: { 0x00, 0xbc, 0xac },
 3037: { 0x01, 0xbe, 0xbd },
 3037: { 0x00, 0xbe, 0xbd },
 3037: { 0x00, 0xbf, 0xbb },
 3037: { 0x01, 0xe0, 0xc0 },
 3037: { 0x01, 0xe1, 0xc1 },
 3037: { 0x01, 0xe2, 0xc2 },
 3037: { 0x01, 0xe3, 0xc3 },
 3037: { 0x01, 0xe4, 0xc4 },
 3037: { 0x01, 0xe5, 0xc5 },
 3037: { 0x01, 0xe6, 0xc6 },
 3037: { 0x01, 0xe7, 0xc7 },
 3037: { 0x01, 0xe8, 0xc8 },
 3037: { 0x01, 0xe9, 0xc9 },
 3037: { 0x01, 0xea, 0xca },
 3037: { 0x01, 0xeb, 0xcb },
 3037: { 0x01, 0xec, 0xcc },
 3037: { 0x01, 0xed, 0xcd },
 3037: { 0x01, 0xee, 0xce },
 3037: { 0x01, 0xef, 0xcf },
 3037: { 0x01, 0xf0, 0xd0 },
 3037: { 0x01, 0xf1, 0xd1 },
 3037: { 0x01, 0xf2, 0xd2 },
 3037: { 0x01, 0xf3, 0xd3 },
 3037: { 0x01, 0xf4, 0xd4 },
 3037: { 0x01, 0xf5, 0xd5 },
 3037: { 0x01, 0xf6, 0xd6 },
 3037: { 0x01, 0xf7, 0xd7 },
 3037: { 0x01, 0xf8, 0xd8 },
 3037: { 0x01, 0xf9, 0xd9 },
 3037: { 0x01, 0xfa, 0xda },
 3037: { 0x01, 0xfb, 0xdb },
 3037: { 0x01, 0xfc, 0xdc },
 3037: { 0x01, 0xfd, 0xdd },
 3037: { 0x01, 0xfe, 0xde },
 3037: { 0x00, 0xdf, 0xdf },
 3037: { 0x00, 0xe0, 0xc0 },
 3037: { 0x00, 0xe1, 0xc1 },
 3037: { 0x00, 0xe2, 0xc2 },
 3037: { 0x00, 0xe3, 0xc3 },
 3037: { 0x00, 0xe4, 0xc4 },
 3037: { 0x00, 0xe5, 0xc5 },
 3037: { 0x00, 0xe6, 0xc6 },
 3037: { 0x00, 0xe7, 0xc7 },
 3037: { 0x00, 0xe8, 0xc8 },
 3037: { 0x00, 0xe9, 0xc9 },
 3037: { 0x00, 0xea, 0xca },
 3037: { 0x00, 0xeb, 0xcb },
 3037: { 0x00, 0xec, 0xcc },
 3037: { 0x00, 0xed, 0xcd },
 3037: { 0x00, 0xee, 0xce },
 3037: { 0x00, 0xef, 0xcf },
 3037: { 0x00, 0xf0, 0xd0 },
 3037: { 0x00, 0xf1, 0xd1 },
 3037: { 0x00, 0xf2, 0xd2 },
 3037: { 0x00, 0xf3, 0xd3 },
 3037: { 0x00, 0xf4, 0xd4 },
 3037: { 0x00, 0xf5, 0xd5 },
 3037: { 0x00, 0xf6, 0xd6 },
 3037: { 0x00, 0xf7, 0xd7 },
 3037: { 0x00, 0xf8, 0xd8 },
 3037: { 0x00, 0xf9, 0xd9 },
 3037: { 0x00, 0xfa, 0xda },
 3037: { 0x00, 0xfb, 0xdb },
 3037: { 0x00, 0xfc, 0xdc },
 3037: { 0x00, 0xfd, 0xdd },
 3037: { 0x00, 0xfe, 0xde },
21326: { 0x00, 0xff, 0xff }
 3037: };
 3037: 
43385: static struct cs_info iso15_tbl[] = {
 3037: { 0x00, 0x00, 0x00 },
 3037: { 0x00, 0x01, 0x01 },
 3037: { 0x00, 0x02, 0x02 },
 3037: { 0x00, 0x03, 0x03 },
 3037: { 0x00, 0x04, 0x04 },
 3037: { 0x00, 0x05, 0x05 },
 3037: { 0x00, 0x06, 0x06 },
 3037: { 0x00, 0x07, 0x07 },
 3037: { 0x00, 0x08, 0x08 },
 3037: { 0x00, 0x09, 0x09 },
 3037: { 0x00, 0x0a, 0x0a },
 3037: { 0x00, 0x0b, 0x0b },
 3037: { 0x00, 0x0c, 0x0c },
 3037: { 0x00, 0x0d, 0x0d },
 3037: { 0x00, 0x0e, 0x0e },
 3037: { 0x00, 0x0f, 0x0f },
 3037: { 0x00, 0x10, 0x10 },
 3037: { 0x00, 0x11, 0x11 },
 3037: { 0x00, 0x12, 0x12 },
 3037: { 0x00, 0x13, 0x13 },
 3037: { 0x00, 0x14, 0x14 },
 3037: { 0x00, 0x15, 0x15 },
 3037: { 0x00, 0x16, 0x16 },
 3037: { 0x00, 0x17, 0x17 },
 3037: { 0x00, 0x18, 0x18 },
 3037: { 0x00, 0x19, 0x19 },
 3037: { 0x00, 0x1a, 0x1a },
 3037: { 0x00, 0x1b, 0x1b },
 3037: { 0x00, 0x1c, 0x1c },
 3037: { 0x00, 0x1d, 0x1d },
 3037: { 0x00, 0x1e, 0x1e },
 3037: { 0x00, 0x1f, 0x1f },
 3037: { 0x00, 0x20, 0x20 },
 3037: { 0x00, 0x21, 0x21 },
 3037: { 0x00, 0x22, 0x22 },
 3037: { 0x00, 0x23, 0x23 },
 3037: { 0x00, 0x24, 0x24 },
 3037: { 0x00, 0x25, 0x25 },
 3037: { 0x00, 0x26, 0x26 },
 3037: { 0x00, 0x27, 0x27 },
 3037: { 0x00, 0x28, 0x28 },
 3037: { 0x00, 0x29, 0x29 },
 3037: { 0x00, 0x2a, 0x2a },
 3037: { 0x00, 0x2b, 0x2b },
 3037: { 0x00, 0x2c, 0x2c },
 3037: { 0x00, 0x2d, 0x2d },
 3037: { 0x00, 0x2e, 0x2e },
 3037: { 0x00, 0x2f, 0x2f },
 3037: { 0x00, 0x30, 0x30 },
 3037: { 0x00, 0x31, 0x31 },
 3037: { 0x00, 0x32, 0x32 },
 3037: { 0x00, 0x33, 0x33 },
 3037: { 0x00, 0x34, 0x34 },
 3037: { 0x00, 0x35, 0x35 },
 3037: { 0x00, 0x36, 0x36 },
 3037: { 0x00, 0x37, 0x37 },
 3037: { 0x00, 0x38, 0x38 },
 3037: { 0x00, 0x39, 0x39 },
 3037: { 0x00, 0x3a, 0x3a },
 3037: { 0x00, 0x3b, 0x3b },
 3037: { 0x00, 0x3c, 0x3c },
 3037: { 0x00, 0x3d, 0x3d },
 3037: { 0x00, 0x3e, 0x3e },
 3037: { 0x00, 0x3f, 0x3f },
 3037: { 0x00, 0x40, 0x40 },
 3037: { 0x01, 0x61, 0x41 },
 3037: { 0x01, 0x62, 0x42 },
 3037: { 0x01, 0x63, 0x43 },
 3037: { 0x01, 0x64, 0x44 },
 3037: { 0x01, 0x65, 0x45 },
 3037: { 0x01, 0x66, 0x46 },
 3037: { 0x01, 0x67, 0x47 },
 3037: { 0x01, 0x68, 0x48 },
 3037: { 0x01, 0x69, 0x49 },
 3037: { 0x01, 0x6a, 0x4a },
 3037: { 0x01, 0x6b, 0x4b },
 3037: { 0x01, 0x6c, 0x4c },
 3037: { 0x01, 0x6d, 0x4d },
 3037: { 0x01, 0x6e, 0x4e },
 3037: { 0x01, 0x6f, 0x4f },
 3037: { 0x01, 0x70, 0x50 },
 3037: { 0x01, 0x71, 0x51 },
 3037: { 0x01, 0x72, 0x52 },
 3037: { 0x01, 0x73, 0x53 },
 3037: { 0x01, 0x74, 0x54 },
 3037: { 0x01, 0x75, 0x55 },
 3037: { 0x01, 0x76, 0x56 },
 3037: { 0x01, 0x77, 0x57 },
 3037: { 0x01, 0x78, 0x58 },
 3037: { 0x01, 0x79, 0x59 },
 3037: { 0x01, 0x7a, 0x5a },
 3037: { 0x00, 0x5b, 0x5b },
 3037: { 0x00, 0x5c, 0x5c },
 3037: { 0x00, 0x5d, 0x5d },
 3037: { 0x00, 0x5e, 0x5e },
 3037: { 0x00, 0x5f, 0x5f },
 3037: { 0x00, 0x60, 0x60 },
 3037: { 0x00, 0x61, 0x41 },
 3037: { 0x00, 0x62, 0x42 },
 3037: { 0x00, 0x63, 0x43 },
 3037: { 0x00, 0x64, 0x44 },
 3037: { 0x00, 0x65, 0x45 },
 3037: { 0x00, 0x66, 0x46 },
 3037: { 0x00, 0x67, 0x47 },
 3037: { 0x00, 0x68, 0x48 },
 3037: { 0x00, 0x69, 0x49 },
 3037: { 0x00, 0x6a, 0x4a },
 3037: { 0x00, 0x6b, 0x4b },
 3037: { 0x00, 0x6c, 0x4c },
 3037: { 0x00, 0x6d, 0x4d },
 3037: { 0x00, 0x6e, 0x4e },
 3037: { 0x00, 0x6f, 0x4f },
 3037: { 0x00, 0x70, 0x50 },
 3037: { 0x00, 0x71, 0x51 },
 3037: { 0x00, 0x72, 0x52 },
 3037: { 0x00, 0x73, 0x53 },
 3037: { 0x00, 0x74, 0x54 },
 3037: { 0x00, 0x75, 0x55 },
 3037: { 0x00, 0x76, 0x56 },
 3037: { 0x00, 0x77, 0x57 },
 3037: { 0x00, 0x78, 0x58 },
 3037: { 0x00, 0x79, 0x59 },
 3037: { 0x00, 0x7a, 0x5a },
 3037: { 0x00, 0x7b, 0x7b },
 3037: { 0x00, 0x7c, 0x7c },
 3037: { 0x00, 0x7d, 0x7d },
 3037: { 0x00, 0x7e, 0x7e },
 3037: { 0x00, 0x7f, 0x7f },
 3037: { 0x00, 0x80, 0x80 },
 3037: { 0x00, 0x81, 0x81 },
 3037: { 0x00, 0x82, 0x82 },
 3037: { 0x00, 0x83, 0x83 },
 3037: { 0x00, 0x84, 0x84 },
 3037: { 0x00, 0x85, 0x85 },
 3037: { 0x00, 0x86, 0x86 },
 3037: { 0x00, 0x87, 0x87 },
 3037: { 0x00, 0x88, 0x88 },
 3037: { 0x00, 0x89, 0x89 },
 3037: { 0x00, 0x8a, 0x8a },
 3037: { 0x00, 0x8b, 0x8b },
 3037: { 0x00, 0x8c, 0x8c },
 3037: { 0x00, 0x8d, 0x8d },
 3037: { 0x00, 0x8e, 0x8e },
 3037: { 0x00, 0x8f, 0x8f },
 3037: { 0x00, 0x90, 0x90 },
 3037: { 0x00, 0x91, 0x91 },
 3037: { 0x00, 0x92, 0x92 },
 3037: { 0x00, 0x93, 0x93 },
 3037: { 0x00, 0x94, 0x94 },
 3037: { 0x00, 0x95, 0x95 },
 3037: { 0x00, 0x96, 0x96 },
 3037: { 0x00, 0x97, 0x97 },
 3037: { 0x00, 0x98, 0x98 },
 3037: { 0x00, 0x99, 0x99 },
 3037: { 0x00, 0x9a, 0x9a },
 3037: { 0x00, 0x9b, 0x9b },
 3037: { 0x00, 0x9c, 0x9c },
 3037: { 0x00, 0x9d, 0x9d },
 3037: { 0x00, 0x9e, 0x9e },
 3037: { 0x00, 0x9f, 0x9f },
 3037: { 0x00, 0xa0, 0xa0 },
 3037: { 0x00, 0xa1, 0xa1 },
 3037: { 0x00, 0xa2, 0xa2 },
 3037: { 0x00, 0xa3, 0xa3 },
 3037: { 0x00, 0xa4, 0xa4 },
 3037: { 0x00, 0xa5, 0xa5 },
 3037: { 0x01, 0xa8, 0xa6 },
 3037: { 0x00, 0xa7, 0xa7 },
 3037: { 0x00, 0xa8, 0xa6 },
 3037: { 0x00, 0xa9, 0xa9 },
 3037: { 0x00, 0xaa, 0xaa },
 3037: { 0x00, 0xab, 0xab },
 3037: { 0x00, 0xac, 0xac },
 3037: { 0x00, 0xad, 0xad },
 3037: { 0x00, 0xae, 0xae },
 3037: { 0x00, 0xaf, 0xaf },
 3037: { 0x00, 0xb0, 0xb0 },
 3037: { 0x00, 0xb1, 0xb1 },
 3037: { 0x00, 0xb2, 0xb2 },
 3037: { 0x00, 0xb3, 0xb3 },
 3037: { 0x01, 0xb8, 0xb4 },
 3037: { 0x00, 0xb5, 0xb5 },
 3037: { 0x00, 0xb6, 0xb6 },
 3037: { 0x00, 0xb7, 0xb7 },
 3037: { 0x00, 0xb8, 0xb4 },
 3037: { 0x00, 0xb9, 0xb9 },
 3037: { 0x00, 0xba, 0xba },
 3037: { 0x00, 0xbb, 0xbb },
 3037: { 0x01, 0xbd, 0xbc },
 3037: { 0x00, 0xbd, 0xbc },
 3037: { 0x01, 0xff, 0xbe },
 3037: { 0x00, 0xbf, 0xbf },
 3037: { 0x01, 0xe0, 0xc0 },
 3037: { 0x01, 0xe1, 0xc1 },
 3037: { 0x01, 0xe2, 0xc2 },
 3037: { 0x01, 0xe3, 0xc3 },
 3037: { 0x01, 0xe4, 0xc4 },
 3037: { 0x01, 0xe5, 0xc5 },
 3037: { 0x01, 0xe6, 0xc6 },
 3037: { 0x01, 0xe7, 0xc7 },
 3037: { 0x01, 0xe8, 0xc8 },
 3037: { 0x01, 0xe9, 0xc9 },
 3037: { 0x01, 0xea, 0xca },
 3037: { 0x01, 0xeb, 0xcb },
 3037: { 0x01, 0xec, 0xcc },
 3037: { 0x01, 0xed, 0xcd },
 3037: { 0x01, 0xee, 0xce },
 3037: { 0x01, 0xef, 0xcf },
 3037: { 0x01, 0xf0, 0xd0 },
 3037: { 0x01, 0xf1, 0xd1 },
 3037: { 0x01, 0xf2, 0xd2 },
 3037: { 0x01, 0xf3, 0xd3 },
 3037: { 0x01, 0xf4, 0xd4 },
 3037: { 0x01, 0xf5, 0xd5 },
 3037: { 0x01, 0xf6, 0xd6 },
 3037: { 0x00, 0xd7, 0xd7 },
 3037: { 0x01, 0xf8, 0xd8 },
 3037: { 0x01, 0xf9, 0xd9 },
 3037: { 0x01, 0xfa, 0xda },
 3037: { 0x01, 0xfb, 0xdb },
 3037: { 0x01, 0xfc, 0xdc },
 3037: { 0x01, 0xfd, 0xdd },
 3037: { 0x01, 0xfe, 0xde },
 3037: { 0x00, 0xdf, 0xdf },
 3037: { 0x00, 0xe0, 0xc0 },
 3037: { 0x00, 0xe1, 0xc1 },
 3037: { 0x00, 0xe2, 0xc2 },
 3037: { 0x00, 0xe3, 0xc3 },
 3037: { 0x00, 0xe4, 0xc4 },
 3037: { 0x00, 0xe5, 0xc5 },
 3037: { 0x00, 0xe6, 0xc6 },
 3037: { 0x00, 0xe7, 0xc7 },
 3037: { 0x00, 0xe8, 0xc8 },
 3037: { 0x00, 0xe9, 0xc9 },
 3037: { 0x00, 0xea, 0xca },
 3037: { 0x00, 0xeb, 0xcb },
 3037: { 0x00, 0xec, 0xcc },
 3037: { 0x00, 0xed, 0xcd },
 3037: { 0x00, 0xee, 0xce },
 3037: { 0x00, 0xef, 0xcf },
 3037: { 0x00, 0xf0, 0xd0 },
 3037: { 0x00, 0xf1, 0xd1 },
 3037: { 0x00, 0xf2, 0xd2 },
 3037: { 0x00, 0xf3, 0xd3 },
 3037: { 0x00, 0xf4, 0xd4 },
 3037: { 0x00, 0xf5, 0xd5 },
 3037: { 0x00, 0xf6, 0xd6 },
 3037: { 0x00, 0xf7, 0xf7 },
 3037: { 0x00, 0xf8, 0xd8 },
 3037: { 0x00, 0xf9, 0xd9 },
 3037: { 0x00, 0xfa, 0xda },
 3037: { 0x00, 0xfb, 0xdb },
 3037: { 0x00, 0xfc, 0xdc },
 3037: { 0x00, 0xfd, 0xdd },
 3037: { 0x00, 0xfe, 0xde },
21326: { 0x00, 0xff, 0xbe }
 3037: };
 3037: 
43385: static struct cs_info iscii_devanagari_tbl[] = {
 3037: { 0x00, 0x00, 0x00 },
 3037: { 0x00, 0x01, 0x01 },
 3037: { 0x00, 0x02, 0x02 },
 3037: { 0x00, 0x03, 0x03 },
 3037: { 0x00, 0x04, 0x04 },
 3037: { 0x00, 0x05, 0x05 },
 3037: { 0x00, 0x06, 0x06 },
 3037: { 0x00, 0x07, 0x07 },
 3037: { 0x00, 0x08, 0x08 },
 3037: { 0x00, 0x09, 0x09 },
 3037: { 0x00, 0x0a, 0x0a },
 3037: { 0x00, 0x0b, 0x0b },
 3037: { 0x00, 0x0c, 0x0c },
 3037: { 0x00, 0x0d, 0x0d },
 3037: { 0x00, 0x0e, 0x0e },
 3037: { 0x00, 0x0f, 0x0f },
 3037: { 0x00, 0x10, 0x10 },
 3037: { 0x00, 0x11, 0x11 },
 3037: { 0x00, 0x12, 0x12 },
 3037: { 0x00, 0x13, 0x13 },
 3037: { 0x00, 0x14, 0x14 },
 3037: { 0x00, 0x15, 0x15 },
 3037: { 0x00, 0x16, 0x16 },
 3037: { 0x00, 0x17, 0x17 },
 3037: { 0x00, 0x18, 0x18 },
 3037: { 0x00, 0x19, 0x19 },
 3037: { 0x00, 0x1a, 0x1a },
 3037: { 0x00, 0x1b, 0x1b },
 3037: { 0x00, 0x1c, 0x1c },
 3037: { 0x00, 0x1d, 0x1d },
 3037: { 0x00, 0x1e, 0x1e },
 3037: { 0x00, 0x1f, 0x1f },
 3037: { 0x00, 0x20, 0x20 },
 3037: { 0x00, 0x21, 0x21 },
 3037: { 0x00, 0x22, 0x22 },
 3037: { 0x00, 0x23, 0x23 },
 3037: { 0x00, 0x24, 0x24 },
 3037: { 0x00, 0x25, 0x25 },
 3037: { 0x00, 0x26, 0x26 },
 3037: { 0x00, 0x27, 0x27 },
 3037: { 0x00, 0x28, 0x28 },
 3037: { 0x00, 0x29, 0x29 },
 3037: { 0x00, 0x2a, 0x2a },
 3037: { 0x00, 0x2b, 0x2b },
 3037: { 0x00, 0x2c, 0x2c },
 3037: { 0x00, 0x2d, 0x2d },
 3037: { 0x00, 0x2e, 0x2e },
 3037: { 0x00, 0x2f, 0x2f },
 3037: { 0x00, 0x30, 0x30 },
 3037: { 0x00, 0x31, 0x31 },
 3037: { 0x00, 0x32, 0x32 },
 3037: { 0x00, 0x33, 0x33 },
 3037: { 0x00, 0x34, 0x34 },
 3037: { 0x00, 0x35, 0x35 },
 3037: { 0x00, 0x36, 0x36 },
 3037: { 0x00, 0x37, 0x37 },
 3037: { 0x00, 0x38, 0x38 },
 3037: { 0x00, 0x39, 0x39 },
 3037: { 0x00, 0x3a, 0x3a },
 3037: { 0x00, 0x3b, 0x3b },
 3037: { 0x00, 0x3c, 0x3c },
 3037: { 0x00, 0x3d, 0x3d },
 3037: { 0x00, 0x3e, 0x3e },
 3037: { 0x00, 0x3f, 0x3f },
 3037: { 0x00, 0x40, 0x40 },
 3037: { 0x01, 0x61, 0x41 },
 3037: { 0x01, 0x62, 0x42 },
 3037: { 0x01, 0x63, 0x43 },
 3037: { 0x01, 0x64, 0x44 },
 3037: { 0x01, 0x65, 0x45 },
 3037: { 0x01, 0x66, 0x46 },
 3037: { 0x01, 0x67, 0x47 },
 3037: { 0x01, 0x68, 0x48 },
 3037: { 0x01, 0x69, 0x49 },
 3037: { 0x01, 0x6a, 0x4a },
 3037: { 0x01, 0x6b, 0x4b },
 3037: { 0x01, 0x6c, 0x4c },
 3037: { 0x01, 0x6d, 0x4d },
 3037: { 0x01, 0x6e, 0x4e },
 3037: { 0x01, 0x6f, 0x4f },
 3037: { 0x01, 0x70, 0x50 },
 3037: { 0x01, 0x71, 0x51 },
 3037: { 0x01, 0x72, 0x52 },
 3037: { 0x01, 0x73, 0x53 },
 3037: { 0x01, 0x74, 0x54 },
 3037: { 0x01, 0x75, 0x55 },
 3037: { 0x01, 0x76, 0x56 },
 3037: { 0x01, 0x77, 0x57 },
 3037: { 0x01, 0x78, 0x58 },
 3037: { 0x01, 0x79, 0x59 },
 3037: { 0x01, 0x7a, 0x5a },
 3037: { 0x00, 0x5b, 0x5b },
 3037: { 0x00, 0x5c, 0x5c },
 3037: { 0x00, 0x5d, 0x5d },
 3037: { 0x00, 0x5e, 0x5e },
 3037: { 0x00, 0x5f, 0x5f },
 3037: { 0x00, 0x60, 0x60 },
 3037: { 0x00, 0x61, 0x41 },
 3037: { 0x00, 0x62, 0x42 },
 3037: { 0x00, 0x63, 0x43 },
 3037: { 0x00, 0x64, 0x44 },
 3037: { 0x00, 0x65, 0x45 },
 3037: { 0x00, 0x66, 0x46 },
 3037: { 0x00, 0x67, 0x47 },
 3037: { 0x00, 0x68, 0x48 },
 3037: { 0x00, 0x69, 0x49 },
 3037: { 0x00, 0x6a, 0x4a },
 3037: { 0x00, 0x6b, 0x4b },
 3037: { 0x00, 0x6c, 0x4c },
 3037: { 0x00, 0x6d, 0x4d },
 3037: { 0x00, 0x6e, 0x4e },
 3037: { 0x00, 0x6f, 0x4f },
 3037: { 0x00, 0x70, 0x50 },
 3037: { 0x00, 0x71, 0x51 },
 3037: { 0x00, 0x72, 0x52 },
 3037: { 0x00, 0x73, 0x53 },
 3037: { 0x00, 0x74, 0x54 },
 3037: { 0x00, 0x75, 0x55 },
 3037: { 0x00, 0x76, 0x56 },
 3037: { 0x00, 0x77, 0x57 },
 3037: { 0x00, 0x78, 0x58 },
 3037: { 0x00, 0x79, 0x59 },
 3037: { 0x00, 0x7a, 0x5a },
 3037: { 0x00, 0x7b, 0x7b },
 3037: { 0x00, 0x7c, 0x7c },
 3037: { 0x00, 0x7d, 0x7d },
 3037: { 0x00, 0x7e, 0x7e },
 3037: { 0x00, 0x7f, 0x7f },
 3037: { 0x00, 0x80, 0x80 },
 3037: { 0x00, 0x81, 0x81 },
 3037: { 0x00, 0x82, 0x82 },
 3037: { 0x00, 0x83, 0x83 },
 3037: { 0x00, 0x84, 0x84 },
 3037: { 0x00, 0x85, 0x85 },
 3037: { 0x00, 0x86, 0x86 },
 3037: { 0x00, 0x87, 0x87 },
 3037: { 0x00, 0x88, 0x88 },
 3037: { 0x00, 0x89, 0x89 },
 3037: { 0x00, 0x8a, 0x8a },
 3037: { 0x00, 0x8b, 0x8b },
 3037: { 0x00, 0x8c, 0x8c },
 3037: { 0x00, 0x8d, 0x8d },
 3037: { 0x00, 0x8e, 0x8e },
 3037: { 0x00, 0x8f, 0x8f },
 3037: { 0x00, 0x90, 0x90 },
 3037: { 0x00, 0x91, 0x91 },
 3037: { 0x00, 0x92, 0x92 },
 3037: { 0x00, 0x93, 0x93 },
 3037: { 0x00, 0x94, 0x94 },
 3037: { 0x00, 0x95, 0x95 },
 3037: { 0x00, 0x96, 0x96 },
 3037: { 0x00, 0x97, 0x97 },
 3037: { 0x00, 0x98, 0x98 },
 3037: { 0x00, 0x99, 0x99 },
 3037: { 0x00, 0x9a, 0x9a },
 3037: { 0x00, 0x9b, 0x9b },
 3037: { 0x00, 0x9c, 0x9c },
 3037: { 0x00, 0x9d, 0x9d },
 3037: { 0x00, 0x9e, 0x9e },
 3037: { 0x00, 0x9f, 0x9f },
 3037: { 0x00, 0xa0, 0xa0 },
 3037: { 0x00, 0xa1, 0xa1 },
 3037: { 0x00, 0xa2, 0xa2 },
 3037: { 0x00, 0xa3, 0xa3 },
 3037: { 0x00, 0xa4, 0xa4 },
 3037: { 0x00, 0xa5, 0xa5 },
 3037: { 0x00, 0xa6, 0xa6 },
 3037: { 0x00, 0xa7, 0xa7 },
 3037: { 0x00, 0xa8, 0xa8 },
 3037: { 0x00, 0xa9, 0xa9 },
 3037: { 0x00, 0xaa, 0xaa },
 3037: { 0x00, 0xab, 0xab },
 3037: { 0x00, 0xac, 0xac },
 3037: { 0x00, 0xad, 0xad },
 3037: { 0x00, 0xae, 0xae },
 3037: { 0x00, 0xaf, 0xaf },
 3037: { 0x00, 0xb0, 0xb0 },
 3037: { 0x00, 0xb1, 0xb1 },
 3037: { 0x00, 0xb2, 0xb2 },
 3037: { 0x00, 0xb3, 0xb3 },
 3037: { 0x00, 0xb4, 0xb4 },
 3037: { 0x00, 0xb5, 0xb5 },
 3037: { 0x00, 0xb6, 0xb6 },
 3037: { 0x00, 0xb7, 0xb7 },
 3037: { 0x00, 0xb8, 0xb8 },
 3037: { 0x00, 0xb9, 0xb9 },
 3037: { 0x00, 0xba, 0xba },
 3037: { 0x00, 0xbb, 0xbb },
 3037: { 0x00, 0xbc, 0xbc },
 3037: { 0x00, 0xbd, 0xbd },
 3037: { 0x00, 0xbe, 0xbe },
 3037: { 0x00, 0xbf, 0xbf },
 3037: { 0x00, 0xc0, 0xc0 },
 3037: { 0x00, 0xc1, 0xc1 },
 3037: { 0x00, 0xc2, 0xc2 },
 3037: { 0x00, 0xc3, 0xc3 },
 3037: { 0x00, 0xc4, 0xc4 },
 3037: { 0x00, 0xc5, 0xc5 },
 3037: { 0x00, 0xc6, 0xc6 },
 3037: { 0x00, 0xc7, 0xc7 },
 3037: { 0x00, 0xc8, 0xc8 },
 3037: { 0x00, 0xc9, 0xc9 },
 3037: { 0x00, 0xca, 0xca },
 3037: { 0x00, 0xcb, 0xcb },
 3037: { 0x00, 0xcc, 0xcc },
 3037: { 0x00, 0xcd, 0xcd },
 3037: { 0x00, 0xce, 0xce },
 3037: { 0x00, 0xcf, 0xcf },
 3037: { 0x00, 0xd0, 0xd0 },
 3037: { 0x00, 0xd1, 0xd1 },
 3037: { 0x00, 0xd2, 0xd2 },
 3037: { 0x00, 0xd3, 0xd3 },
 3037: { 0x00, 0xd4, 0xd4 },
 3037: { 0x00, 0xd5, 0xd5 },
 3037: { 0x00, 0xd6, 0xd6 },
 3037: { 0x00, 0xd7, 0xd7 },
 3037: { 0x00, 0xd8, 0xd8 },
 3037: { 0x00, 0xd9, 0xd9 },
 3037: { 0x00, 0xda, 0xda },
 3037: { 0x00, 0xdb, 0xdb },
 3037: { 0x00, 0xdc, 0xdc },
 3037: { 0x00, 0xdd, 0xdd },
 3037: { 0x00, 0xde, 0xde },
 3037: { 0x00, 0xdf, 0xdf },
 3037: { 0x00, 0xe0, 0xe0 },
 3037: { 0x00, 0xe1, 0xe1 },
 3037: { 0x00, 0xe2, 0xe2 },
 3037: { 0x00, 0xe3, 0xe3 },
 3037: { 0x00, 0xe4, 0xe4 },
 3037: { 0x00, 0xe5, 0xe5 },
 3037: { 0x00, 0xe6, 0xe6 },
 3037: { 0x00, 0xe7, 0xe7 },
 3037: { 0x00, 0xe8, 0xe8 },
 3037: { 0x00, 0xe9, 0xe9 },
 3037: { 0x00, 0xea, 0xea },
 3037: { 0x00, 0xeb, 0xeb },
 3037: { 0x00, 0xec, 0xec },
 3037: { 0x00, 0xed, 0xed },
 3037: { 0x00, 0xee, 0xee },
 3037: { 0x00, 0xef, 0xef },
 3037: { 0x00, 0xf0, 0xf0 },
 3037: { 0x00, 0xf1, 0xf1 },
 3037: { 0x00, 0xf2, 0xf2 },
 3037: { 0x00, 0xf3, 0xf3 },
 3037: { 0x00, 0xf4, 0xf4 },
 3037: { 0x00, 0xf5, 0xf5 },
 3037: { 0x00, 0xf6, 0xf6 },
 3037: { 0x00, 0xf7, 0xf7 },
 3037: { 0x00, 0xf8, 0xf8 },
 3037: { 0x00, 0xf9, 0xf9 },
 3037: { 0x00, 0xfa, 0xfa },
 3037: { 0x00, 0xfb, 0xfb },
 3037: { 0x00, 0xfc, 0xfc },
 3037: { 0x00, 0xfd, 0xfd },
 3037: { 0x00, 0xfe, 0xfe },
21326: { 0x00, 0xff, 0xff }
 3037: };
 3037: 
63910: static struct cs_info tis620_tbl[] = {
63910: { 0x00, 0x00, 0x00 },
63910: { 0x00, 0x01, 0x01 },
63910: { 0x00, 0x02, 0x02 },
63910: { 0x00, 0x03, 0x03 },
63910: { 0x00, 0x04, 0x04 },
63910: { 0x00, 0x05, 0x05 },
63910: { 0x00, 0x06, 0x06 },
63910: { 0x00, 0x07, 0x07 },
63910: { 0x00, 0x08, 0x08 },
63910: { 0x00, 0x09, 0x09 },
63910: { 0x00, 0x0a, 0x0a },
63910: { 0x00, 0x0b, 0x0b },
63910: { 0x00, 0x0c, 0x0c },
63910: { 0x00, 0x0d, 0x0d },
63910: { 0x00, 0x0e, 0x0e },
63910: { 0x00, 0x0f, 0x0f },
63910: { 0x00, 0x10, 0x10 },
63910: { 0x00, 0x11, 0x11 },
63910: { 0x00, 0x12, 0x12 },
63910: { 0x00, 0x13, 0x13 },
63910: { 0x00, 0x14, 0x14 },
63910: { 0x00, 0x15, 0x15 },
63910: { 0x00, 0x16, 0x16 },
63910: { 0x00, 0x17, 0x17 },
63910: { 0x00, 0x18, 0x18 },
63910: { 0x00, 0x19, 0x19 },
63910: { 0x00, 0x1a, 0x1a },
63910: { 0x00, 0x1b, 0x1b },
63910: { 0x00, 0x1c, 0x1c },
63910: { 0x00, 0x1d, 0x1d },
63910: { 0x00, 0x1e, 0x1e },
63910: { 0x00, 0x1f, 0x1f },
63910: { 0x00, 0x20, 0x20 },
63910: { 0x00, 0x21, 0x21 },
63910: { 0x00, 0x22, 0x22 },
63910: { 0x00, 0x23, 0x23 },
63910: { 0x00, 0x24, 0x24 },
63910: { 0x00, 0x25, 0x25 },
63910: { 0x00, 0x26, 0x26 },
63910: { 0x00, 0x27, 0x27 },
63910: { 0x00, 0x28, 0x28 },
63910: { 0x00, 0x29, 0x29 },
63910: { 0x00, 0x2a, 0x2a },
63910: { 0x00, 0x2b, 0x2b },
63910: { 0x00, 0x2c, 0x2c },
63910: { 0x00, 0x2d, 0x2d },
63910: { 0x00, 0x2e, 0x2e },
63910: { 0x00, 0x2f, 0x2f },
63910: { 0x00, 0x30, 0x30 },
63910: { 0x00, 0x31, 0x31 },
63910: { 0x00, 0x32, 0x32 },
63910: { 0x00, 0x33, 0x33 },
63910: { 0x00, 0x34, 0x34 },
63910: { 0x00, 0x35, 0x35 },
63910: { 0x00, 0x36, 0x36 },
63910: { 0x00, 0x37, 0x37 },
63910: { 0x00, 0x38, 0x38 },
63910: { 0x00, 0x39, 0x39 },
63910: { 0x00, 0x3a, 0x3a },
63910: { 0x00, 0x3b, 0x3b },
63910: { 0x00, 0x3c, 0x3c },
63910: { 0x00, 0x3d, 0x3d },
63910: { 0x00, 0x3e, 0x3e },
63910: { 0x00, 0x3f, 0x3f },
63910: { 0x00, 0x40, 0x40 },
63910: { 0x01, 0x61, 0x41 },
63910: { 0x01, 0x62, 0x42 },
63910: { 0x01, 0x63, 0x43 },
63910: { 0x01, 0x64, 0x44 },
63910: { 0x01, 0x65, 0x45 },
63910: { 0x01, 0x66, 0x46 },
63910: { 0x01, 0x67, 0x47 },
63910: { 0x01, 0x68, 0x48 },
63910: { 0x01, 0x69, 0x49 },
63910: { 0x01, 0x6a, 0x4a },
63910: { 0x01, 0x6b, 0x4b },
63910: { 0x01, 0x6c, 0x4c },
63910: { 0x01, 0x6d, 0x4d },
63910: { 0x01, 0x6e, 0x4e },
63910: { 0x01, 0x6f, 0x4f },
63910: { 0x01, 0x70, 0x50 },
63910: { 0x01, 0x71, 0x51 },
63910: { 0x01, 0x72, 0x52 },
63910: { 0x01, 0x73, 0x53 },
63910: { 0x01, 0x74, 0x54 },
63910: { 0x01, 0x75, 0x55 },
63910: { 0x01, 0x76, 0x56 },
63910: { 0x01, 0x77, 0x57 },
63910: { 0x01, 0x78, 0x58 },
63910: { 0x01, 0x79, 0x59 },
63910: { 0x01, 0x7a, 0x5a },
63910: { 0x00, 0x5b, 0x5b },
63910: { 0x00, 0x5c, 0x5c },
63910: { 0x00, 0x5d, 0x5d },
63910: { 0x00, 0x5e, 0x5e },
63910: { 0x00, 0x5f, 0x5f },
63910: { 0x00, 0x60, 0x60 },
63910: { 0x00, 0x61, 0x41 },
63910: { 0x00, 0x62, 0x42 },
63910: { 0x00, 0x63, 0x43 },
63910: { 0x00, 0x64, 0x44 },
63910: { 0x00, 0x65, 0x45 },
63910: { 0x00, 0x66, 0x46 },
63910: { 0x00, 0x67, 0x47 },
63910: { 0x00, 0x68, 0x48 },
63910: { 0x00, 0x69, 0x49 },
63910: { 0x00, 0x6a, 0x4a },
63910: { 0x00, 0x6b, 0x4b },
63910: { 0x00, 0x6c, 0x4c },
63910: { 0x00, 0x6d, 0x4d },
63910: { 0x00, 0x6e, 0x4e },
63910: { 0x00, 0x6f, 0x4f },
63910: { 0x00, 0x70, 0x50 },
63910: { 0x00, 0x71, 0x51 },
63910: { 0x00, 0x72, 0x52 },
63910: { 0x00, 0x73, 0x53 },
63910: { 0x00, 0x74, 0x54 },
63910: { 0x00, 0x75, 0x55 },
63910: { 0x00, 0x76, 0x56 },
63910: { 0x00, 0x77, 0x57 },
63910: { 0x00, 0x78, 0x58 },
63910: { 0x00, 0x79, 0x59 },
63910: { 0x00, 0x7a, 0x5a },
63910: { 0x00, 0x7b, 0x7b },
63910: { 0x00, 0x7c, 0x7c },
63910: { 0x00, 0x7d, 0x7d },
63910: { 0x00, 0x7e, 0x7e },
63910: { 0x00, 0x7f, 0x7f },
63910: { 0x00, 0x80, 0x80 },
63910: { 0x00, 0x81, 0x81 },
63910: { 0x00, 0x82, 0x82 },
63910: { 0x00, 0x83, 0x83 },
63910: { 0x00, 0x84, 0x84 },
63910: { 0x00, 0x85, 0x85 },
63910: { 0x00, 0x86, 0x86 },
63910: { 0x00, 0x87, 0x87 },
63910: { 0x00, 0x88, 0x88 },
63910: { 0x00, 0x89, 0x89 },
63910: { 0x00, 0x8a, 0x8a },
63910: { 0x00, 0x8b, 0x8b },
63910: { 0x00, 0x8c, 0x8c },
63910: { 0x00, 0x8d, 0x8d },
63910: { 0x00, 0x8e, 0x8e },
63910: { 0x00, 0x8f, 0x8f },
63910: { 0x00, 0x90, 0x90 },
63910: { 0x00, 0x91, 0x91 },
63910: { 0x00, 0x92, 0x92 },
63910: { 0x00, 0x93, 0x93 },
63910: { 0x00, 0x94, 0x94 },
63910: { 0x00, 0x95, 0x95 },
63910: { 0x00, 0x96, 0x96 },
63910: { 0x00, 0x97, 0x97 },
63910: { 0x00, 0x98, 0x98 },
63910: { 0x00, 0x99, 0x99 },
63910: { 0x00, 0x9a, 0x9a },
63910: { 0x00, 0x9b, 0x9b },
63910: { 0x00, 0x9c, 0x9c },
63910: { 0x00, 0x9d, 0x9d },
63910: { 0x00, 0x9e, 0x9e },
63910: { 0x00, 0x9f, 0x9f },
63910: { 0x00, 0xa0, 0xa0 },
63910: { 0x00, 0xa1, 0xa1 },
63910: { 0x00, 0xa2, 0xa2 },
63910: { 0x00, 0xa3, 0xa3 },
63910: { 0x00, 0xa4, 0xa4 },
63910: { 0x00, 0xa5, 0xa5 },
63910: { 0x00, 0xa6, 0xa6 },
63910: { 0x00, 0xa7, 0xa7 },
63910: { 0x00, 0xa8, 0xa8 },
63910: { 0x00, 0xa9, 0xa9 },
63910: { 0x00, 0xaa, 0xaa },
63910: { 0x00, 0xab, 0xab },
63910: { 0x00, 0xac, 0xac },
63910: { 0x00, 0xad, 0xad },
63910: { 0x00, 0xae, 0xae },
63910: { 0x00, 0xaf, 0xaf },
63910: { 0x00, 0xb0, 0xb0 },
63910: { 0x00, 0xb1, 0xb1 },
63910: { 0x00, 0xb2, 0xb2 },
63910: { 0x00, 0xb3, 0xb3 },
63910: { 0x00, 0xb4, 0xb4 },
63910: { 0x00, 0xb5, 0xb5 },
63910: { 0x00, 0xb6, 0xb6 },
63910: { 0x00, 0xb7, 0xb7 },
63910: { 0x00, 0xb8, 0xb8 },
63910: { 0x00, 0xb9, 0xb9 },
63910: { 0x00, 0xba, 0xba },
63910: { 0x00, 0xbb, 0xbb },
63910: { 0x00, 0xbc, 0xbc },
63910: { 0x00, 0xbd, 0xbd },
63910: { 0x00, 0xbe, 0xbe },
63910: { 0x00, 0xbf, 0xbf },
63910: { 0x00, 0xc0, 0xc0 },
63910: { 0x00, 0xc1, 0xc1 },
63910: { 0x00, 0xc2, 0xc2 },
63910: { 0x00, 0xc3, 0xc3 },
63910: { 0x00, 0xc4, 0xc4 },
63910: { 0x00, 0xc5, 0xc5 },
63910: { 0x00, 0xc6, 0xc6 },
63910: { 0x00, 0xc7, 0xc7 },
63910: { 0x00, 0xc8, 0xc8 },
63910: { 0x00, 0xc9, 0xc9 },
63910: { 0x00, 0xca, 0xca },
63910: { 0x00, 0xcb, 0xcb },
63910: { 0x00, 0xcc, 0xcc },
63910: { 0x00, 0xcd, 0xcd },
63910: { 0x00, 0xce, 0xce },
63910: { 0x00, 0xcf, 0xcf },
63910: { 0x00, 0xd0, 0xd0 },
63910: { 0x00, 0xd1, 0xd1 },
63910: { 0x00, 0xd2, 0xd2 },
63910: { 0x00, 0xd3, 0xd3 },
63910: { 0x00, 0xd4, 0xd4 },
63910: { 0x00, 0xd5, 0xd5 },
63910: { 0x00, 0xd6, 0xd6 },
63910: { 0x00, 0xd7, 0xd7 },
63910: { 0x00, 0xd8, 0xd8 },
63910: { 0x00, 0xd9, 0xd9 },
63910: { 0x00, 0xda, 0xda },
63910: { 0x00, 0xdb, 0xdb },
63910: { 0x00, 0xdc, 0xdc },
63910: { 0x00, 0xdd, 0xdd },
63910: { 0x00, 0xde, 0xde },
63910: { 0x00, 0xdf, 0xdf },
63910: { 0x00, 0xe0, 0xe0 },
63910: { 0x00, 0xe1, 0xe1 },
63910: { 0x00, 0xe2, 0xe2 },
63910: { 0x00, 0xe3, 0xe3 },
63910: { 0x00, 0xe4, 0xe4 },
63910: { 0x00, 0xe5, 0xe5 },
63910: { 0x00, 0xe6, 0xe6 },
63910: { 0x00, 0xe7, 0xe7 },
63910: { 0x00, 0xe8, 0xe8 },
63910: { 0x00, 0xe9, 0xe9 },
63910: { 0x00, 0xea, 0xea },
63910: { 0x00, 0xeb, 0xeb },
63910: { 0x00, 0xec, 0xec },
63910: { 0x00, 0xed, 0xed },
63910: { 0x00, 0xee, 0xee },
63910: { 0x00, 0xef, 0xef },
63910: { 0x00, 0xf0, 0xf0 },
63910: { 0x00, 0xf1, 0xf1 },
63910: { 0x00, 0xf2, 0xf2 },
63910: { 0x00, 0xf3, 0xf3 },
63910: { 0x00, 0xf4, 0xf4 },
63910: { 0x00, 0xf5, 0xf5 },
63910: { 0x00, 0xf6, 0xf6 },
63910: { 0x00, 0xf7, 0xf7 },
63910: { 0x00, 0xf8, 0xf8 },
63910: { 0x00, 0xf9, 0xf9 },
63910: { 0x00, 0xfa, 0xfa },
63910: { 0x00, 0xfb, 0xfb },
63910: { 0x00, 0xfc, 0xfc },
63910: { 0x00, 0xfd, 0xfd },
63910: { 0x00, 0xfe, 0xfe },
63910: { 0x00, 0xff, 0xff }
 3037: };
 3037: 
63910: struct enc_entry {
63910:   const char * enc_name;
63910:   struct cs_info * cs_table;
63910: };
63910: 
63910: static struct enc_entry encds[] = {
63910:   {"iso88591",iso1_tbl},                     //ISO-8859-1
63910:   {"iso88592",iso2_tbl},                     //ISO-8859-2
63910:   {"iso88593",iso3_tbl},                     //ISO-8859-3
63910:   {"iso88594",iso4_tbl},                     //ISO-8859-4
63910:   {"iso88595",iso5_tbl},                     //ISO-8859-5
63910:   {"iso88596",iso6_tbl},                     //ISO-8859-6
63910:   {"iso88597",iso7_tbl},                     //ISO-8859-7
63910:   {"iso88598",iso8_tbl},                     //ISO-8859-8
63910:   {"iso88599",iso9_tbl},                     //ISO-8859-9
63910:   {"iso885910",iso10_tbl},                   //ISO-8859-10
63910:   {"tis620",tis620_tbl},                     //TIS-620/ISO-8859-11
63910:   {"tis6202533",tis620_tbl},                 //TIS-620/ISO-8859-11
63910:   {"iso885911",tis620_tbl},                  //TIS-620/ISO-8859-11
63910:   {"iso885913", iso13_tbl},                  //ISO-8859-13
63910:   {"iso885914", iso14_tbl},                  //ISO-8859-14
63910:   {"iso885915", iso15_tbl},                  //ISO-8859-15
63910:   {"koi8r",koi8r_tbl},                       //KOI8-R
63910:   {"koi8u",koi8u_tbl},                       //KOI8-U
63910:   {"cp1251",cp1251_tbl},                     //CP-1251
63910:   {"microsoftcp1251",cp1251_tbl},            //microsoft-cp1251
63910:   {"xisciias", iscii_devanagari_tbl},        //x-iscii-as
63910:   {"isciidevanagari", iscii_devanagari_tbl}  //ISCII-DEVANAGARI
63910: };
63910: 
63910: /* map to lower case and remove non alphanumeric chars */
63910: static void toAsciiLowerAndRemoveNonAlphanumeric( const char* pName, char* pBuf )
63910: {
63910:     while ( *pName )
63910:     {
63910:         /* A-Z */
63910:         if ( (*pName >= 0x41) && (*pName <= 0x5A) )
63910:         {
63910:             *pBuf = (*pName)+0x20;  /* toAsciiLower */
63910:             pBuf++;
63910:         }
63910:         /* a-z, 0-9 */
63910:         else if ( ((*pName >= 0x61) && (*pName <= 0x7A)) ||
63910:                   ((*pName >= 0x30) && (*pName <= 0x39)) )
63910:         {
63910:             *pBuf = *pName;
63910:             pBuf++;
63910:         }
63910: 
63910:         pName++;
63910:     }
63910: 
63910:     *pBuf = '\0';
63910: }
63910: 
 3037: struct cs_info * get_current_cs(const char * es) {
63910:   char *normalized_encoding = new char[strlen(es)+1];
63910:   toAsciiLowerAndRemoveNonAlphanumeric(es, normalized_encoding);
63910: 
63910:   struct cs_info * ccs = NULL;
 3037:   int n = sizeof(encds) / sizeof(encds[0]);
 3037:   for (int i = 0; i < n; i++) {
63910:     if (strcmp(normalized_encoding,encds[i].enc_name) == 0) {
 3037:       ccs = encds[i].cs_table;
21326:       break;
 3037:     }
 3037:   }
63910: 
63910:   delete[] normalized_encoding;
63910: 
63910:   if (!ccs) {
63910:     HUNSPELL_WARNING(stderr, "error: unknown encoding %s: using %s as fallback\n", es, encds[0].enc_name);
63910:     ccs = encds[0].cs_table;
63910:   }
63910: 
 3037:   return ccs;
 3037: }
 3037: #else
 3037: // XXX This function was rewritten for mozilla. Instead of storing the
 3037: // conversion tables static in this file, create them when needed
 3037: // with help the mozilla backend.
 3037: struct cs_info * get_current_cs(const char * es) {
85240:   struct cs_info *ccs = new cs_info[256];
85240:   // Initialze the array with dummy data so that we wouldn't need
85240:   // to return null in case of failures.
85240:   for (int i = 0; i <= 0xff; ++i) {
85240:     ccs[i].ccase = false;
85240:     ccs[i].clower = i;
85240:     ccs[i].cupper = i;
85240:   }
 3037: 
 3037:   nsCOMPtr<nsIUnicodeEncoder> encoder; 
 3037:   nsCOMPtr<nsIUnicodeDecoder> decoder; 
 3037: 
 3037:   nsresult rv;
 3037:   nsCOMPtr<nsICharsetConverterManager> ccm = do_GetService(kCharsetConverterManagerCID, &rv);
 3037:   if (NS_FAILED(rv))
85240:     return ccs;
 3037: 
 3037:   rv = ccm->GetUnicodeEncoder(es, getter_AddRefs(encoder));
 3037:   if (NS_FAILED(rv))
85240:     return ccs;
35181:   encoder->SetOutputErrorBehavior(encoder->kOnError_Signal, nsnull, '?');
 3037:   rv = ccm->GetUnicodeDecoder(es, getter_AddRefs(decoder));
35181:   if (NS_FAILED(rv))
85240:     return ccs;
35181:   decoder->SetInputErrorBehavior(decoder->kOnError_Signal);
 3037: 
63910:   if (NS_FAILED(rv))
85240:     return ccs;
 3037: 
35181:   for (unsigned int i = 0; i <= 0xff; ++i) {
79445:     bool success = false;
35181:     // We want to find the upper/lowercase equivalents of each byte
35181:     // in this 1-byte character encoding.  Call our encoding/decoding
35181:     // APIs separately for each byte since they may reject some of the
35181:     // bytes, and we want to handle errors separately for each byte.
35181:     char lower, upper;
35181:     do {
35181:       if (i == 0)
35181:         break;
35181:       const char source = char(i);
35181:       PRUnichar uni, uniCased;
35181:       PRInt32 charLength = 1, uniLength = 1;
 3037: 
35181:       rv = decoder->Convert(&source, &charLength, &uni, &uniLength);
35181:       // Explicitly check NS_OK because we don't want to allow
35181:       // NS_OK_UDEC_MOREOUTPUT or NS_OK_UDEC_MOREINPUT.
35181:       if (rv != NS_OK || charLength != 1 || uniLength != 1)
35181:         break;
48377:       uniCased = ToLowerCase(uni);
35181:       rv = encoder->Convert(&uniCased, &uniLength, &lower, &charLength);
35181:       // Explicitly check NS_OK because we don't want to allow
35181:       // NS_OK_UDEC_MOREOUTPUT or NS_OK_UDEC_MOREINPUT.
35181:       if (rv != NS_OK || charLength != 1 || uniLength != 1)
35181:         break;
35181: 
48377:       uniCased = ToUpperCase(uni);
35181:       rv = encoder->Convert(&uniCased, &uniLength, &upper, &charLength);
35181:       // Explicitly check NS_OK because we don't want to allow
35181:       // NS_OK_UDEC_MOREOUTPUT or NS_OK_UDEC_MOREINPUT.
35181:       if (rv != NS_OK || charLength != 1 || uniLength != 1)
35181:         break;
35181: 
80486:       success = true;
35181:     } while (0);
35181: 
35181:     if (success) {
35181:       ccs[i].cupper = upper;
35181:       ccs[i].clower = lower;
35181:     } else {
35181:       ccs[i].cupper = i;
35181:       ccs[i].clower = i;
 3037:     }
 3037: 
 3037:     if (ccs[i].clower != (unsigned char)i)
 3037:       ccs[i].ccase = true;
 3037:     else
 3037:       ccs[i].ccase = false;
 3037:   }
 3037: 
 3037:   return ccs;
 3037: }
 3037: #endif
 3037: 
 3037: // primitive isalpha() replacement for tokenization
 3037: char * get_casechars(const char * enc) {
 3037:     struct cs_info * csconv = get_current_cs(enc);
 3037:     char expw[MAXLNLEN];
 3037:     char * p =  expw;
 3037:     for (int i = 0; i <= 255; i++) {
 3037:         if ((csconv[i].cupper != csconv[i].clower)) {
 3037:     	    *p = (char) i;
 3037:     	    p++;
 3037:         }
 3037:     }
 3037:     *p = '\0';
 3037: #ifdef MOZILLA_CLIENT
43385:     delete [] csconv;
 3037: #endif
 3037:     return mystrdup(expw);
 3037: }
 3037: 
63910: // language to encoding default map
 3037: 
63910: struct lang_map {
63910:   const char * lang;
63910:   int num;
63910: };
 3037: 
43385: static struct lang_map lang2enc[] = {
63910: {"ar", LANG_ar},
63910: {"az", LANG_az},
63910: {"az_AZ", LANG_az}, // for back-compatibility
63910: {"bg", LANG_bg},
63910: {"ca", LANG_ca},
63910: {"cs", LANG_cs},
63910: {"da", LANG_da},
63910: {"de", LANG_de},
63910: {"el", LANG_el},
63910: {"en", LANG_en},
63910: {"es", LANG_es},
63910: {"eu", LANG_eu},
63910: {"gl", LANG_gl},
63910: {"fr", LANG_fr},
63910: {"hr", LANG_hr},
63910: {"hu", LANG_hu},
63910: {"hu_HU", LANG_hu}, // for back-compatibility
63910: {"it", LANG_it},
63910: {"la", LANG_la},
63910: {"lv", LANG_lv},
63910: {"nl", LANG_nl},
63910: {"pl", LANG_pl},
63910: {"pt", LANG_pt},
63910: {"sv", LANG_sv},
63910: {"tr", LANG_tr},
63910: {"tr_TR", LANG_tr}, // for back-compatibility
63910: {"ru", LANG_ru},
63910: {"uk", LANG_uk}
 3037: };
 3037: 
 3037: 
 3037: int get_lang_num(const char * lang) {
 3037:   int n = sizeof(lang2enc) / sizeof(lang2enc[0]);
 3037:   for (int i = 0; i < n; i++) {
63910:     if (strcmp(lang, lang2enc[i].lang) == 0) {
 3037:       return lang2enc[i].num;
 3037:     }
 3037:   }
 3037:   return LANG_xx;
 3037: }
 3037: 
 3037: #ifndef OPENOFFICEORG
 3037: #ifndef MOZILLA_CLIENT
 3037: int initialize_utf_tbl() {
 3037:   utf_tbl_count++;
 3037:   if (utf_tbl) return 0;
 3037:   utf_tbl = (unicode_info2 *) malloc(CONTSIZE * sizeof(unicode_info2));
 3037:   if (utf_tbl) {
43385:     size_t j;
 3037:     for (j = 0; j < CONTSIZE; j++) {
 3037:       utf_tbl[j].cletter = 0;
 3037:       utf_tbl[j].clower = (unsigned short) j;
 3037:       utf_tbl[j].cupper = (unsigned short) j;
 3037:     }
 3037:     for (j = 0; j < UTF_LST_LEN; j++) {
 3037:       utf_tbl[utf_lst[j].c].cletter = 1;
 3037:       utf_tbl[utf_lst[j].c].clower = utf_lst[j].clower;
 3037:       utf_tbl[utf_lst[j].c].cupper = utf_lst[j].cupper;
 3037:     }
 3037:   } else return 1;
 3037:   return 0;
 3037: }
 3037: #endif
 3037: #endif
 3037: 
 3037: void free_utf_tbl() {
 3648:   if (utf_tbl_count > 0) utf_tbl_count--;
 3037:   if (utf_tbl && (utf_tbl_count == 0)) {
 3037:     free(utf_tbl);
 3037:     utf_tbl = NULL;
 3037:   }
 3037: }
 3037: 
 3037: unsigned short unicodetoupper(unsigned short c, int langnum)
 3037: {
 3037:   // In Azeri and Turkish, I and i dictinct letters:
 3037:   // There are a dotless lower case i pair of upper `I',
 3037:   // and an upper I with dot pair of lower `i'. 
 3037:   if (c == 0x0069 && ((langnum == LANG_az) || (langnum == LANG_tr)))
 3037:     return 0x0130;
 3037: #ifdef OPENOFFICEORG
 3037:   return u_toupper(c);
 3037: #else
 3037: #ifdef MOZILLA_CLIENT
48377:   return ToUpperCase((PRUnichar) c);
 3037: #else
 3037:   return (utf_tbl) ? utf_tbl[c].cupper : c;
 3037: #endif
 3037: #endif
 3037: }
 3037: 
 3037: unsigned short unicodetolower(unsigned short c, int langnum)
 3037: {
 3037:   // In Azeri and Turkish, I and i dictinct letters:
 3037:   // There are a dotless lower case i pair of upper `I',
 3037:   // and an upper I with dot pair of lower `i'. 
 3037:   if (c == 0x0049 && ((langnum == LANG_az) || (langnum == LANG_tr)))
 3037:     return 0x0131;
 3037: #ifdef OPENOFFICEORG
 3037:   return u_tolower(c);
 3037: #else
 3037: #ifdef MOZILLA_CLIENT
48377:   return ToLowerCase((PRUnichar) c);
 3037: #else
 3037:   return (utf_tbl) ? utf_tbl[c].clower : c;
 3037: #endif
 3037: #endif
 3037: }
 3037: 
 3037: int unicodeisalpha(unsigned short c)
 3037: {
 3037: #ifdef OPENOFFICEORG
 3037:   return u_isalpha(c);
 3037: #else
 3037:   return (utf_tbl) ? utf_tbl[c].cletter : 0;
 3037: #endif
 3037: }
 3037: 
 3037: /* get type of capitalization */
 3037: int get_captype(char * word, int nl, cs_info * csconv) {
 3037:    // now determine the capitalization type of the first nl letters
 3037:    int ncap = 0;
 3037:    int nneutral = 0;
 3037:    int firstcap = 0;
21326:    if (csconv == NULL) return NOCAP;
 3037:    for (char * q = word; *q != '\0'; q++) {
 3037:       if (csconv[*((unsigned char *)q)].ccase) ncap++;
 3037:       if (csconv[*((unsigned char *)q)].cupper == csconv[*((unsigned char *)q)].clower) nneutral++;
 3037:    }
 3037:    if (ncap) {
 3037:      firstcap = csconv[*((unsigned char *) word)].ccase;
 3037:    }
 3037: 
 3037:    // now finally set the captype
 3037:    if (ncap == 0) {
 3037:         return NOCAP;
 3037:    } else if ((ncap == 1) && firstcap) {
 3037:         return INITCAP;
 3037:    } else if ((ncap == nl) || ((ncap + nneutral) == nl)) {
 3037:         return ALLCAP;
 3037:    } else if ((ncap > 1) && firstcap) {
 3037:         return HUHINITCAP;
 3037:    }
 3037:    return HUHCAP;
 3037: }
 3037: 
 5768: int get_captype_utf8(w_char * word, int nl, int langnum) {
 3037:    // now determine the capitalization type of the first nl letters
 3037:    int ncap = 0;
 3037:    int nneutral = 0;
 3037:    int firstcap = 0;
 3037:    unsigned short idx;
 3037:    // don't check too long words
 3037:    if (nl >= MAXWORDLEN) return 0;
 3037:    // big Unicode character (non BMP area)
 3037:    if (nl == -1) return NOCAP;
 3037:    for (int i = 0; i < nl; i++) {
 5768:      idx = (word[i].h << 8) + word[i].l;
 3037:      if (idx != unicodetolower(idx, langnum)) ncap++;
 3037:      if (unicodetoupper(idx, langnum) == unicodetolower(idx, langnum)) nneutral++;
 3037:    }
 3037:    if (ncap) {
 5768:       idx = (word[0].h << 8) + word[0].l;
 3037:       firstcap = (idx != unicodetolower(idx, langnum));
 3037:   }
 3037: 
 3037:    // now finally set the captype
 3037:    if (ncap == 0) {
 3037:         return NOCAP;
 3037:    } else if ((ncap == 1) && firstcap) {
 3037:         return INITCAP;
 3037:    } else if ((ncap == nl) || ((ncap + nneutral) == nl)) {
 3037:         return ALLCAP;
 3037:    } else if ((ncap > 1) && firstcap) {
 3037:         return HUHINITCAP;
 3037:    }
 3037:    return HUHCAP;
 3037: }
 3037: 
 3037: 
 3037: // strip all ignored characters in the string
 3037: void remove_ignored_chars_utf(char * word, unsigned short ignored_chars[], int ignored_len)
 3037: {
 3037:    w_char w[MAXWORDLEN];
 3037:    w_char w2[MAXWORDLEN];
 3037:    int i;
 3037:    int j;
 3037:    int len = u8_u16(w, MAXWORDLEN, word);
 3037:    for (i = 0, j = 0; i < len; i++) {
 3037:       if (!flag_bsearch(ignored_chars, ((unsigned short *) w)[i], ignored_len)) {
 3037:          w2[j] = w[i];
 3037:          j++;
 3037:       }
 3037:    }
 3037:    if (j < i) u16_u8(word, MAXWORDUTF8LEN, w2, j);
 3037: }
 3037: 
 3037: // strip all ignored characters in the string
 3037: void remove_ignored_chars(char * word, char * ignored_chars)
 3037: {
 3037:    for (char * p = word; *p != '\0'; p++) {
 3037:       if (!strchr(ignored_chars, *p)) {
 3037:         *word = *p;
 3037:         word++;
 3037:       }
 3037:    }
 3037:    *word = '\0';
 3037: }
 3037: 
21326: int parse_string(char * line, char ** out, int ln)
 3037: {
 3037:    char * tp = line;
 3037:    char * piece;
 3037:    int i = 0;
 3037:    int np = 0;
 3037:    if (*out) {
21326:       HUNSPELL_WARNING(stderr, "error: line %d: multiple definitions\n", ln);
 3037:       return 1;
 3037:    }
 3037:    piece = mystrsep(&tp, 0);
 3037:    while (piece) {
 3037:       if (*piece != '\0') {
 3037:           switch(i) {
 3037:               case 0: { np++; break; }
 3037:               case 1: { 
 3037:                 *out = mystrdup(piece);
21326:                 if (!*out) return 1;
 3037:                 np++;
 3037:                 break;
 3037:               }
 3037:               default: break;
 3037:           }
 3037:           i++;
 3037:       }
21326:       // free(piece);
 3037:       piece = mystrsep(&tp, 0);
 3037:    }
 3037:    if (np != 2) {
21326:       HUNSPELL_WARNING(stderr, "error: line %d: missing data\n", ln);
 3037:       return 1;
 3037:    } 
 3037:    return 0;
 3037: }
 3037: 
21326: int parse_array(char * line, char ** out, unsigned short ** out_utf16,
21326:        int * out_utf16_len, int utf8, int ln) {
21326:    if (parse_string(line, out, ln)) return 1;
 3037:    if (utf8) {
 3037:         w_char w[MAXWORDLEN];
 3037:         int n = u8_u16(w, MAXWORDLEN, *out);
 3037:         if (n > 0) {
 3037:             flag_qsort((unsigned short *) w, 0, n);
 3037:             *out_utf16 = (unsigned short *) malloc(n * sizeof(unsigned short));
 3037:             if (!*out_utf16) return 1;
 3037:             memcpy(*out_utf16, w, n * sizeof(unsigned short));
 3037:         }
 3037:         *out_utf16_len = n;
 3037:    }
 3037:    return 0;
 3037: }

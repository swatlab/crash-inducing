    1: /* -*- Mode: C; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 4 -*-
    1:  * vim: set sw=4 ts=8 et tw=80 ft=c:
    1:  *
    1:  * ***** BEGIN LICENSE BLOCK *****
    1:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
    1:  *
    1:  * The contents of this file are subject to the Mozilla Public License Version
    1:  * 1.1 (the "License"); you may not use this file except in compliance with
    1:  * the License. You may obtain a copy of the License at
    1:  * http://www.mozilla.org/MPL/
    1:  *
    1:  * Software distributed under the License is distributed on an "AS IS" basis,
    1:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
    1:  * for the specific language governing rights and limitations under the
    1:  * License.
    1:  *
    1:  * The Original Code is SpiderMonkey 1.7 work in progress, released
    1:  * February 14, 2006.
    1:  *
    1:  * The Initial Developer of the Original Code is
    1:  * Brendan Eich <brendan@mozilla.org>
    1:  *
    1:  * Contributor(s):
    1:  *
    1:  * Alternatively, the contents of this file may be used under the terms of
    1:  * either of the GNU General Public License Version 2 or later (the "GPL"),
    1:  * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
    1:  * in which case the provisions of the GPL or the LGPL are applicable instead
    1:  * of those above. If you wish to allow use of your version of this file only
    1:  * under the terms of either the GPL or the LGPL, and not to allow others to
    1:  * use your version of this file under the terms of the MPL, indicate your
    1:  * decision by deleting the provisions above and replace them with the notice
    1:  * and other provisions required by the GPL or the LGPL. If you do not delete
    1:  * the provisions above, a recipient may use your version of this file under
    1:  * the terms of any one of the MPL, the GPL or the LGPL.
    1:  *
    1:  * ***** END LICENSE BLOCK ***** */
    1: 
18863: #include "jsversion.h"
    1: 
    1: #if JS_HAS_XML_SUPPORT
    1: # define XML_INIT                       js_InitXMLClass
    1: # define NAMESPACE_INIT                 js_InitNamespaceClass
    1: # define QNAME_INIT                     js_InitQNameClass
11672: # define XMLFILTER_INIT                 js_InitXMLFilterClass
    1: #else
    1: # define XML_INIT                       js_InitNullClass
    1: # define NAMESPACE_INIT                 js_InitNullClass
    1: # define QNAME_INIT                     js_InitNullClass
11672: # define XMLFILTER_INIT                 js_InitNullClass
    1: #endif
    1: 
    1: #if JS_HAS_GENERATORS
    1: # define GENERATOR_INIT                 js_InitIteratorClasses
    1: #else
    1: # define GENERATOR_INIT                 js_InitNullClass
    1: #endif
    1: 
    1: /*
    1:  * Enumerator codes in the second column must not change -- they are part of
 3164:  * the JS XDR API.  Client modules including jsproto.tbl should consider
 3164:  * wrapping the inclusion with JS_BEGIN_EXTERN_C and JS_END_EXTERN_C.
    1:  */
    1: JS_PROTO(Null,                   0,     js_InitNullClass)
    1: JS_PROTO(Object,                 1,     js_InitFunctionAndObjectClasses)
    1: JS_PROTO(Function,               2,     js_InitFunctionAndObjectClasses)
    1: JS_PROTO(Array,                  3,     js_InitArrayClass)
    1: JS_PROTO(Boolean,                4,     js_InitBooleanClass)
27539: JS_PROTO(JSON,                   5,     js_InitJSONClass)
    1: JS_PROTO(Date,                   6,     js_InitDateClass)
    1: JS_PROTO(Math,                   7,     js_InitMathClass)
    1: JS_PROTO(Number,                 8,     js_InitNumberClass)
    1: JS_PROTO(String,                 9,     js_InitStringClass)
    1: JS_PROTO(RegExp,                10,     js_InitRegExpClass)
39926: JS_PROTO(XML,                   11,     XML_INIT)
39926: JS_PROTO(Namespace,             12,     NAMESPACE_INIT)
39926: JS_PROTO(QName,                 13,     QNAME_INIT)
60566: JS_PROTO(Reflect,               14,     js_InitReflectClass)
60566: JS_PROTO(ASTNode,               15,     js_InitReflectClass)
39926: JS_PROTO(Error,                 16,     js_InitExceptionClasses)
39926: JS_PROTO(InternalError,         17,     js_InitExceptionClasses)
39926: JS_PROTO(EvalError,             18,     js_InitExceptionClasses)
39926: JS_PROTO(RangeError,            19,     js_InitExceptionClasses)
39926: JS_PROTO(ReferenceError,        20,     js_InitExceptionClasses)
39926: JS_PROTO(SyntaxError,           21,     js_InitExceptionClasses)
39926: JS_PROTO(TypeError,             22,     js_InitExceptionClasses)
39926: JS_PROTO(URIError,              23,     js_InitExceptionClasses)
39926: JS_PROTO(Generator,             24,     GENERATOR_INIT)
39926: JS_PROTO(Iterator,              25,     js_InitIteratorClasses)
39926: JS_PROTO(StopIteration,         26,     js_InitIteratorClasses)
39926: JS_PROTO(ArrayBuffer,           27,     js_InitTypedArrayClasses)
39926: JS_PROTO(Int8Array,             28,     js_InitTypedArrayClasses)
39926: JS_PROTO(Uint8Array,            29,     js_InitTypedArrayClasses)
39926: JS_PROTO(Int16Array,            30,     js_InitTypedArrayClasses)
39926: JS_PROTO(Uint16Array,           31,     js_InitTypedArrayClasses)
39926: JS_PROTO(Int32Array,            32,     js_InitTypedArrayClasses)
39926: JS_PROTO(Uint32Array,           33,     js_InitTypedArrayClasses)
39926: JS_PROTO(Float32Array,          34,     js_InitTypedArrayClasses)
39926: JS_PROTO(Float64Array,          35,     js_InitTypedArrayClasses)
39926: JS_PROTO(Uint8ClampedArray,     36,     js_InitTypedArrayClasses)
43236: JS_PROTO(Proxy,                 37,     js_InitProxyClass)
    1: 
    1: #undef XML_INIT
    1: #undef NAMESPACE_INIT
    1: #undef QNAME_INIT
    1: #undef GENERATOR_INIT

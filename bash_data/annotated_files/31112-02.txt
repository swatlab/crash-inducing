30147: // In each list of tests below, test file types that are not supported should
30147: // be ignored. To make sure tests respect that, we include a file of type
30147: // "bogus/duh" in each list.
30147: 
30147: // These are small test files, good for just seeing if something loads.
30146: var gSmallTests = [
30146:   { name:"r11025_s16_c1.wav", type:"audio/x-wav", duration:1.0 },
30146:   { name:"320x240.ogv", type:"video/ogg", width:320, height:240 },
31109:   { name: "bug499519.ogv", type:"video/ogg", duration:0.24 },
31112:   { name: "bug506094.ogv", type:"video/ogg", duration:0 },
30146:   { name:"bogus.duh", type:"bogus/duh" }
30146: ];
30147: 
30147: // These are files that we just want to make sure we can play through.
30147: // We can also check metadata.
30147: // Put files of the same type together in this list so if something crashes
30147: // we have some idea of which backend is responsible.
30147: var gPlayTests = [
30149:   // 8-bit samples
30149:   { name:"r11025_u8_c1.wav", type:"audio/x-wav", duration:1.0 },
30149:   // 8-bit samples, file is truncated
30147:   { name:"r11025_u8_c1_trunc.wav", type:"audio/x-wav", duration:1.8 },
30147:   // file has trailing non-PCM data
30147:   { name:"r11025_s16_c1_trailing.wav", type:"audio/x-wav", duration:1.0 },
30147:   // file with list chunk
30147:   { name:"r16000_u8_c1_list.wav", type:"audio/x-wav", duration:4.2 },
30147:   // Ogg stream with eof marker
30147:   { name:"bug461281.ogg", type:"application/ogg" },
30147:   // oggz-chop stream
30147:   { name:"bug482461.ogv", type:"video/ogg", duration:4.24 },
31111:   // With first frame a "duplicate" (empty) frame.
31111:   { name:"bug500311.ogv", type:"video/ogg", duration:1.96 },
31108:   // Small audio file
31108:   { name:"small-shot.ogg", type:"video/ogg" },
31108: 
30147:   { name:"bogus.duh", type:"bogus/duh" }
30147: ];
30147: 
30147: // These are files that should refuse to play and report an error,
30147: // without crashing of course.
30147: // Put files of the same type together in this list so if something crashes
30147: // we have some idea of which backend is responsible.
30147: var gErrorTests = [
31110:   { name: "bug498855-1.ogv", type:"video/ogg", duration:0.2 },
31110:   { name: "bug498855-2.ogv", type:"video/ogg", duration:0.2 },
31110:   { name: "bug498855-3.ogv", type:"video/ogg", duration:0.2 },
31112:   { name: "bug501279.ogg", type:"audio/ogg", duration:0 },
31112:   { name: "bug504644.ogv", type:"video/ogg", duration:1.56 },
30147:   { name:"bogus.wav", type:"audio/x-wav" },
30147:   { name:"bogus.ogv", type:"video/ogg" },
31105:   { name:"448636.ogv", type:"video/ogg" },
30147:   { name:"bogus.duh", type:"bogus/duh" }
30147: ];
30147: 
30148: // These are files that have nontrivial duration and are useful for seeking within.
30148: var gSeekTests = [
30148:   { name:"r11025_s16_c1.wav", type:"audio/x-wav", duration:1.0 },
30148:   { name:"seek.ogv", type:"video/ogg", duration:3.966 },
30148:   { name:"bogus.duh", type:"bogus/duh", duration:123 }
30148: ];
30148: 
30150: // These are files suitable for using with a "new Audio" constructor.
30150: var gAudioTests = [
30150:   { name:"r11025_s16_c1.wav", type:"audio/x-wav", duration:1.0 },
30150:   { name:"sound.ogg", type:"audio/ogg" },
30150:   { name:"bogus.duh", type:"bogus/duh", duration:123 }
30150: ];
30150: 
30147: function checkMetadata(msg, e, test) {
30147:   if (test.width) {
30147:     is(e.videoWidth, test.width, msg + " video width");
30147:   }
30147:   if (test.height) {
30147:     is(e.videoHeight, test.height, msg + " video height");
30147:   }
30147:   if (test.duration) {
30147:     ok(Math.abs(e.duration - test.duration) < 0.1,
30147:        msg + " duration should be around " + test.duration);
30147:   }
30147: }

 99778: /* This Source Code Form is subject to the terms of the Mozilla Public
 99778:  * License, v. 2.0. If a copy of the MPL was not distributed with this
 99778:  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
     1: 
     1: #include "prerror.h"
     1: #include "prprf.h"
     1: 
     1: #include "nsCRLInfo.h"
     1: #include "nsIDateTimeFormat.h"
     1: #include "nsDateTimeFormatCID.h"
     1: #include "nsCOMPtr.h"
     1: #include "nsComponentManagerUtils.h"
     1: #include "nsReadableUtils.h"
     1: #include "nsNSSShutDown.h"
     1: 
     1: #include "nspr.h"
119832: extern "C" {
     1: #include "pk11func.h"
     1: #include "certdb.h"
     1: #include "cert.h"
     1: #include "secerr.h"
     1: #include "nssb64.h"
     1: #include "secasn1.h"
     1: #include "secder.h"
119832: }
     1: 
     1: NS_IMPL_ISUPPORTS1(nsCRLInfo, nsICRLInfo)
     1: 
     1: nsCRLInfo::nsCRLInfo()
     1: {
     1:   /* member initializers and constructor code */
     1: }
     1: 
     1: nsCRLInfo::nsCRLInfo(CERTSignedCrl *signedCrl)
     1: {
     1:   nsNSSShutDownPreventionLock locker;
     1:   CERTCrl *crl = &(signedCrl->crl);
     1:   nsAutoString org;
     1:   nsAutoString orgUnit;
     1:   nsAutoString nameInDb;
     1:   nsAutoString nextUpdateLocale;
     1:   nsAutoString lastUpdateLocale;
110974:   nsAutoCString lastFetchURL;
     1:   PRTime lastUpdate = 0;
     1:   PRTime nextUpdate = 0;
     1:   SECStatus sec_rv;
     1:   
     1:   // Get the information we need here //
     1:   char * o = CERT_GetOrgName(&(crl->name));
     1:   if (o) {
     1:     org = NS_ConvertASCIItoUTF16(o);
     1:     PORT_Free(o);
     1:   }
     1: 
     1:   char * ou = CERT_GetOrgUnitName(&(crl->name));
     1:   if (ou) {
     1:     orgUnit = NS_ConvertASCIItoUTF16(ou);
     1:     //At present, the ou is being used as the unique key - but this
     1:     //would change, one support for delta crls come in.
     1:     nameInDb =  orgUnit;
     1:     PORT_Free(ou);
     1:   }
     1:   
     1:   nsCOMPtr<nsIDateTimeFormat> dateFormatter = do_CreateInstance(NS_DATETIMEFORMAT_CONTRACTID);
     1:   
     1:   // Last Update time
     1:   if (crl->lastUpdate.len) {
     1:     sec_rv = DER_UTCTimeToTime(&lastUpdate, &(crl->lastUpdate));
     1:     if (sec_rv == SECSuccess && dateFormatter) {
106838:       dateFormatter->FormatPRTime(nullptr, kDateFormatShort, kTimeFormatNone,
     1:                             lastUpdate, lastUpdateLocale);
     1:     }
     1:   }
     1: 
     1:   if (crl->nextUpdate.len) {
     1:     // Next update time
     1:     sec_rv = DER_UTCTimeToTime(&nextUpdate, &(crl->nextUpdate));
     1:     if (sec_rv == SECSuccess && dateFormatter) {
106838:       dateFormatter->FormatPRTime(nullptr, kDateFormatShort, kTimeFormatNone,
     1:                             nextUpdate, nextUpdateLocale);
     1:     }
     1:   }
     1: 
     1:   char * url = signedCrl->url;
     1:   if(url) {
     1:     lastFetchURL =  url;
     1:   }
     1: 
     1:   mOrg.Assign(org.get());
     1:   mOrgUnit.Assign(orgUnit.get());
     1:   mLastUpdateLocale.Assign(lastUpdateLocale.get());
     1:   mNextUpdateLocale.Assign(nextUpdateLocale.get());
     1:   mLastUpdate = lastUpdate;
     1:   mNextUpdate = nextUpdate;
     1:   mNameInDb.Assign(nameInDb.get());
     1:   mLastFetchURL = lastFetchURL;
     1: }
     1: 
     1: nsCRLInfo::~nsCRLInfo()
     1: {
     1:   /* destructor code */
     1: }
     1: 
     1: /* readonly attribute */
     1: NS_IMETHODIMP nsCRLInfo::GetOrganization(nsAString & aOrg)
     1: {
     1:   aOrg = mOrg;
     1:   return NS_OK;
     1: }
     1: 
     1: /* readonly attribute */
     1: NS_IMETHODIMP nsCRLInfo::GetOrganizationalUnit(nsAString & aOrgUnit)
     1: {
     1:   aOrgUnit = mOrgUnit;
     1:   return NS_OK;
     1: }
     1: 
     1: NS_IMETHODIMP nsCRLInfo::GetLastUpdateLocale(nsAString & aLastUpdateLocale)
     1: {
     1:   aLastUpdateLocale = mLastUpdateLocale;
     1:   return NS_OK;
     1: }
     1: 
     1: NS_IMETHODIMP nsCRLInfo::GetNextUpdateLocale(nsAString & aNextUpdateLocale)
     1: {
     1:   aNextUpdateLocale = mNextUpdateLocale;
     1:   return NS_OK;
     1: }
     1: 
     1: NS_IMETHODIMP nsCRLInfo::GetLastUpdate(PRTime* aLastUpdate)
     1: {
     1:   NS_ENSURE_ARG(aLastUpdate);
     1:   *aLastUpdate = mLastUpdate;
     1:   return NS_OK;
     1: }
     1: 
     1: NS_IMETHODIMP nsCRLInfo::GetNextUpdate(PRTime* aNextUpdate)
     1: {
     1:   NS_ENSURE_ARG(aNextUpdate);
     1:   *aNextUpdate = mNextUpdate;
     1:   return NS_OK;
     1: }
     1: 
     1: NS_IMETHODIMP nsCRLInfo::GetNameInDb(nsAString & aNameInDb)
     1: {
     1:   aNameInDb = mNameInDb;
     1:   return NS_OK;
     1: }
     1: 
     1: NS_IMETHODIMP nsCRLInfo::GetLastFetchURL(nsACString & aLastFetchURL)
     1: {
     1:   aLastFetchURL = mLastFetchURL;
     1:   return NS_OK;
     1: }

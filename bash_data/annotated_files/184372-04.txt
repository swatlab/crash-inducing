132278: /* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
132278: /* This Source Code Form is subject to the terms of the Mozilla Public
132278:  * License, v. 2.0. If a copy of the MPL was not distributed with this
132278:  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
132278: 
132278: #pragma once
132278: 
132278: #include "MetroWidget.h"
159826: #include "MetroInput.h"
132278: #include "gfxWindowsPlatform.h"
132278: #include "nsDataHashtable.h"
132278: 
132278: #include "mozwrlbase.h"
132278: 
132278: #include <windows.system.h>
132278: #include <Windows.ApplicationModel.core.h>
132278: #include <Windows.ApplicationModel.h>
132278: #include <Windows.Applicationmodel.Activation.h>
132278: #include <Windows.ApplicationModel.search.h>
132278: #include <windows.ui.core.h>
132278: #include <windows.ui.viewmanagement.h>
132278: #include <windows.ui.applicationsettings.h>
132278: #include <windows.ui.popups.h>
132278: #include <windows.graphics.printing.h>
132278: #include <windows.graphics.display.h>
132278: #include <windows.media.playto.h>
132278: #include <d2d1_1.h>
132278: 
132278: namespace mozilla {
132278: namespace widget {
132278: namespace winrt {
132278: 
132278: class MetroApp;
132278: 
132278: class FrameworkView : public Microsoft::WRL::RuntimeClass<ABI::Windows::ApplicationModel::Core::IFrameworkView>
132278: {
132278:   InspectableClass(L"FrameworkView", TrustLevel::BaseTrust)
132278: 
132278:   typedef mozilla::layers::LayerManager LayerManager;
132278: 
132278:   typedef ABI::Windows::Foundation::Rect Rect;
132278:   typedef ABI::Windows::UI::Core::IWindowSizeChangedEventArgs IWindowSizeChangedEventArgs;
132278:   typedef ABI::Windows::UI::Core::ICoreWindowEventArgs ICoreWindowEventArgs;
132278:   typedef ABI::Windows::UI::Core::IWindowActivatedEventArgs IWindowActivatedEventArgs;
132278:   typedef ABI::Windows::UI::Core::IAutomationProviderRequestedEventArgs IAutomationProviderRequestedEventArgs;
132278:   typedef ABI::Windows::UI::Core::ICoreWindow ICoreWindow;
132278:   typedef ABI::Windows::UI::Core::ICoreDispatcher ICoreDispatcher;
132278:   typedef ABI::Windows::UI::Core::IVisibilityChangedEventArgs IVisibilityChangedEventArgs;
132278:   typedef ABI::Windows::UI::ViewManagement::IInputPaneVisibilityEventArgs IInputPaneVisibilityEventArgs;
132278:   typedef ABI::Windows::UI::ViewManagement::IInputPane IInputPane;
132278:   typedef ABI::Windows::UI::ViewManagement::ApplicationViewState ApplicationViewState;
132278:   typedef ABI::Windows::UI::ApplicationSettings::ISettingsPane ISettingsPane;
132278:   typedef ABI::Windows::UI::ApplicationSettings::ISettingsPaneCommandsRequestedEventArgs ISettingsPaneCommandsRequestedEventArgs;
132278:   typedef ABI::Windows::UI::Popups::IUICommand IUICommand;
132278:   typedef ABI::Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs ILaunchActivatedEventArgs;
132278:   typedef ABI::Windows::ApplicationModel::Activation::IActivatedEventArgs IActivatedEventArgs;
132278:   typedef ABI::Windows::ApplicationModel::Activation::ISearchActivatedEventArgs ISearchActivatedEventArgs;
132278:   typedef ABI::Windows::ApplicationModel::Activation::IFileActivatedEventArgs IFileActivatedEventArgs;
132278:   typedef ABI::Windows::ApplicationModel::Core::ICoreApplicationView ICoreApplicationView;
132278:   typedef ABI::Windows::ApplicationModel::DataTransfer::IDataTransferManager IDataTransferManager;
132278:   typedef ABI::Windows::ApplicationModel::DataTransfer::IDataRequestedEventArgs IDataRequestedEventArgs;
132278:   typedef ABI::Windows::ApplicationModel::Search::ISearchPane ISearchPane;
132278:   typedef ABI::Windows::ApplicationModel::Search::ISearchPaneQuerySubmittedEventArgs ISearchPaneQuerySubmittedEventArgs;
132278:   typedef ABI::Windows::Media::PlayTo::IPlayToManager IPlayToManager;
132278:   typedef ABI::Windows::Media::PlayTo::IPlayToSourceRequestedEventArgs IPlayToSourceRequestedEventArgs;
132278:   typedef ABI::Windows::Graphics::Printing::IPrintManager IPrintManager;
132278:   typedef ABI::Windows::Graphics::Printing::IPrintTaskRequestedEventArgs IPrintTaskRequestedEventArgs;
132278:   typedef ABI::Windows::Graphics::Printing::IPrintTaskSourceRequestedArgs IPrintTaskSourceRequestedArgs;
132278: 
132278: public:
132278:   FrameworkView(MetroApp* aMetroApp);
132278: 
132278:   // IFrameworkView Methods
132278:   STDMETHODIMP Initialize(ICoreApplicationView* aAppView);
132278:   STDMETHODIMP SetWindow(ICoreWindow* aWindow);
132278:   STDMETHODIMP Load(HSTRING aEntryPoint);
132278:   STDMETHODIMP Run();
132278:   STDMETHODIMP Uninitialize();
132278: 
159736:   HRESULT ActivateView();
159736: 
132278:   // Public apis for MetroWidget
175576:   int GetPreviousExecutionState();
132278:   float GetDPI() { return mDPI; }
132278:   ICoreWindow* GetCoreWindow() { return mWindow.Get(); }
132278:   void SetWidget(MetroWidget* aWidget);
132278:   MetroWidget* GetWidget() { return mWidget.Get(); }
132278:   void GetBounds(nsIntRect &aRect);
136178:   void GetActivationURI(nsAString &aActivationURI) { aActivationURI = mActivationURI; }
132278:   void SetCursor(ABI::Windows::UI::Core::CoreCursorType aCursorType, DWORD aCustomId = 0);
132278:   void ClearCursor();
132278:   bool IsEnabled() const;
132278:   bool IsVisible() const;
132278: 
132278:   // Soft keyboard info for nsIWinMetroUtils
132278:   static bool IsKeyboardVisible() { return sKeyboardIsVisible; }
132278:   static ABI::Windows::Foundation::Rect KeyboardVisibleRect() { return sKeyboardRect; }
132278: 
132278:   // MetroApp apis
132278:   void SetupContracts();
176094:   void Shutdown();
132278: 
132278:   // MetroContracts settings panel enumerator entry
132278:   void AddSetting(ISettingsPaneCommandsRequestedEventArgs* aArgs, uint32_t aId,
132278:                   Microsoft::WRL::Wrappers::HString& aSettingName);
132278: protected:
132278:   // Event Handlers
132278:   HRESULT OnActivated(ICoreApplicationView* aApplicationView,
132278:                       IActivatedEventArgs* aArgs);
132278:   HRESULT OnWindowVisibilityChanged(ICoreWindow* aCoreWindow,
132278:                                     IVisibilityChangedEventArgs* aArgs);
132278: 
132278:   HRESULT OnWindowSizeChanged(ICoreWindow* aSender,
132278:                               IWindowSizeChangedEventArgs* aArgs);
132278:   HRESULT OnWindowActivated(ICoreWindow* aSender,
132278:                             IWindowActivatedEventArgs* aArgs);
132278:   HRESULT OnLogicalDpiChanged(IInspectable* aSender);
132278: 
132278:   HRESULT OnAutomationProviderRequested(ICoreWindow* aSender,
132278:                                         IAutomationProviderRequestedEventArgs* aArgs);
132278: 
132278:   HRESULT OnSoftkeyboardHidden(IInputPane* aSender,
132278:                                IInputPaneVisibilityEventArgs* aArgs);
132278:   HRESULT OnSoftkeyboardShown(IInputPane* aSender,
132278:                               IInputPaneVisibilityEventArgs* aArgs);
132278: 
132278:   HRESULT OnDataShareRequested(IDataTransferManager*, IDataRequestedEventArgs* aArgs);
132278:   HRESULT OnSearchQuerySubmitted(ISearchPane* aPane, ISearchPaneQuerySubmittedEventArgs* aArgs);
132278:   HRESULT OnSettingsCommandsRequested(ISettingsPane* aPane, ISettingsPaneCommandsRequestedEventArgs* aArgs);
132278:   HRESULT OnPlayToSourceRequested(IPlayToManager* aPane, IPlayToSourceRequestedEventArgs* aArgs);
132278:   HRESULT OnSettingsCommandInvoked(IUICommand* aCommand);
132278:   HRESULT OnPrintTaskRequested(IPrintManager* aMgr, IPrintTaskRequestedEventArgs* aArgs);
132278:   HRESULT OnPrintTaskSourceRequested(IPrintTaskSourceRequestedArgs* aArgs);
132278: 
132278: protected:
132278:   void SetDpi(float aDpi);
134914:   void UpdateWidgetSizeAndPosition();
136178:   void PerformURILoad(Microsoft::WRL::Wrappers::HString& aString);
132278:   void PerformSearch(Microsoft::WRL::Wrappers::HString& aQuery);
132278:   void PerformURILoadOrSearch(Microsoft::WRL::Wrappers::HString& aString);
132278:   bool EnsureAutomationProviderCreated();
136178:   void SearchActivated(Microsoft::WRL::ComPtr<ISearchActivatedEventArgs>& aArgs, bool aStartup);
136178:   void FileActivated(Microsoft::WRL::ComPtr<IFileActivatedEventArgs>& aArgs, bool aStartup);
136178:   void LaunchActivated(Microsoft::WRL::ComPtr<ILaunchActivatedEventArgs>& aArgs, bool aStartup);
136178:   void ProcessActivationArgs(IActivatedEventArgs* aArgs, bool aStartup);
132278:   void UpdateForWindowSizeChange();
132278:   void SendActivationEvent();
132278:   void UpdateLogicalDPI();
132278:   void FireViewStateObservers();
136178:   void ProcessLaunchArguments();
169373:   void UpdateBounds();
132278: 
132278:   // Printing and preview
132278:   void CreatePrintControl(IPrintDocumentPackageTarget* aDocPackageTarget, 
132278:                           D2D1_PRINT_CONTROL_PROPERTIES* aPrintControlProperties);
132278:   HRESULT ClosePrintControl();
132278:   void PrintPage(uint32_t aPageNumber, D2D1_RECT_F aImageableArea,
132278:                  D2D1_SIZE_F aPageSize, IStream* aPagePrintTicketStream);
132278:   void AddEventHandlers();
132278: 
132278: private:
132278:   EventRegistrationToken mActivated;
132278:   EventRegistrationToken mWindowActivated;
132278:   EventRegistrationToken mWindowVisibilityChanged;
132278:   EventRegistrationToken mWindowClosed;
132278:   EventRegistrationToken mWindowSizeChanged;
132278:   EventRegistrationToken mSoftKeyboardHidden;
132278:   EventRegistrationToken mSoftKeyboardShown;
132278:   EventRegistrationToken mDisplayPropertiesChanged;
132278:   EventRegistrationToken mAutomationProviderRequested;
132278:   EventRegistrationToken mDataTransferRequested;
132278:   EventRegistrationToken mSearchQuerySubmitted;
132278:   EventRegistrationToken mPlayToRequested;
132278:   EventRegistrationToken mSettingsPane;
132278:   EventRegistrationToken mPrintManager;
132278: 
132278: private:
175576:   ABI::Windows::ApplicationModel::Activation::ApplicationExecutionState mPreviousExecutionState;
136007:   nsIntRect mWindowBounds; // in device-pixel coordinates
132278:   float mDPI;
132278:   bool mShuttingDown;
136178:   nsAutoString mActivationURI;
136178:   nsAutoString mActivationCommandLine;
132278:   Microsoft::WRL::ComPtr<IInspectable> mAutomationProvider;
132278:   //Microsoft::WRL::ComPtr<ID2D1PrintControl> mD2DPrintControl;
132278:   // Private critical section protects D2D device context for on-screen
132278:   // rendering from that for print/preview in the different thread.
132278:   //Microsoft::WRL::ComPtr<IWICImagingFactory2> mWicFactory;
132278:   Microsoft::WRL::ComPtr<MetroApp> mMetroApp;
132278:   Microsoft::WRL::ComPtr<ICoreWindow> mWindow;
132278:   Microsoft::WRL::ComPtr<MetroWidget> mWidget;
132278:   Microsoft::WRL::ComPtr<MetroInput> mMetroInput;
132278:   static bool sKeyboardIsVisible;
132278:   static Rect sKeyboardRect;
132278:   bool mWinVisible;
132278:   bool mWinActiveState;
132278: };
132278: 
132278: } } }

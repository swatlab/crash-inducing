140767: /* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 4 -*-
140767:  * vim: set ts=8 sts=4 et sw=4 tw=99:
 98983:  * This Source Code Form is subject to the terms of the Mozilla Public
 98983:  * License, v. 2.0. If a copy of the MPL was not distributed with this
 98983:  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
     1: 
     1: #ifndef _LIBMATH_H
     1: #define _LIBMATH_H
     1: 
 95341: #include "mozilla/FloatingPoint.h"
 95341: 
     1: #include <math.h>
 52657: #include "jsnum.h"
     1: 
     1: /*
     1:  * Use system provided math routines.
     1:  */
     1: 
     1: /* The right copysign function is not always named the same thing. */
127030: #ifdef __GNUC__
 20767: #define js_copysign __builtin_copysign
     1: #elif defined _WIN32
 20767: #define js_copysign _copysign
     1: #else
 20767: #define js_copysign copysign
     1: #endif
     1: 
 30268: /* Consistency wrapper for platform deviations in fmod() */
 30268: static inline double
 30268: js_fmod(double d, double d2)
 30268: {
 30268: #ifdef XP_WIN
 30268:     /*
 30268:      * Workaround MS fmod bug where 42 % (1/0) => NaN, not 42.
 30268:      * Workaround MS fmod bug where -0 % -N => 0, not -0.
 30268:      */
143167:     if ((mozilla::IsFinite(d) && mozilla::IsInfinite(d2)) ||
143167:         (d == 0 && mozilla::IsFinite(d2))) {
 30268:         return d;
 30268:     }
 30268: #endif
 30268:     return fmod(d, d2);
 30268: }
 30268: 
 78283: namespace js {
 78283: 
 78283: inline double
 95341: NumberDiv(double a, double b)
 95341: {
 78283:     if (b == 0) {
143167:         if (a == 0 || mozilla::IsNaN(a)
 78283: #ifdef XP_WIN
143167:             || mozilla::IsNaN(b) /* XXX MSVC miscompiles such that (NaN == 0) */
 78283: #endif
 78283:         )
 78283:             return js_NaN;
 78617: 
143167:         if (mozilla::IsNegative(a) != mozilla::IsNegative(b))
 78283:             return js_NegativeInfinity;
 78283:         return js_PositiveInfinity;
 78283:     }
 78283: 
 78283:     return a / b;
 78283: }
 78283: 
112345: inline double
112345: NumberMod(double a, double b) {
112345:     if (b == 0) 
112345:         return js_NaN;
112345:     return js_fmod(a, b);
112345: }
112345: 
 78283: }
 78283: 
     1: #endif /* _LIBMATH_H */
     1: 

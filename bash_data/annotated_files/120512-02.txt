     1: /* -*- Mode: C++; tab-width: 20; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 98983:  * This Source Code Form is subject to the terms of the Mozilla Public
 98983:  * License, v. 2.0. If a copy of the MPL was not distributed with this
 98983:  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
     1: 
     1: #ifndef GFX_XLIBSURFACE_H
     1: #define GFX_XLIBSURFACE_H
     1: 
     1: #include "gfxASurface.h"
     1: 
     1: #include <X11/extensions/Xrender.h>
     1: #include <X11/Xlib.h>
     1: 
118564: #if !defined(MOZ_PLATFORM_MAEMO)
 74902: #include "GLXLibrary.h"
 74909: #endif
 74902: 
     1: class THEBES_API gfxXlibSurface : public gfxASurface {
     1: public:
 47113:     // construct a wrapper around the specified drawable with dpy/visual.
     1:     // Will use XGetGeometry to query the window/pixmap size.
     1:     gfxXlibSurface(Display *dpy, Drawable drawable, Visual *visual);
     1: 
 47113:     // construct a wrapper around the specified drawable with dpy/visual,
 47113:     // and known width/height.
     1:     gfxXlibSurface(Display *dpy, Drawable drawable, Visual *visual, const gfxIntSize& size);
     1: 
 47113:     // construct a wrapper around the specified drawable with dpy/format,
 47113:     // and known width/height.
 47113:     gfxXlibSurface(Screen *screen, Drawable drawable, XRenderPictFormat *format,
     1:                    const gfxIntSize& size);
     1: 
     1:     gfxXlibSurface(cairo_surface_t *csurf);
     1: 
 47113:     // create a new Pixmap and wrapper surface.
 47113:     // |relatedDrawable| provides a hint to the server for determining whether
 47113:     // the pixmap should be in video or system memory.  It must be on
 47113:     // |screen| (if specified).
 47113:     static already_AddRefed<gfxXlibSurface>
 47113:     Create(Screen *screen, Visual *visual, const gfxIntSize& size,
 47113:            Drawable relatedDrawable = None);
 47113:     static already_AddRefed<gfxXlibSurface>
 47113:     Create(Screen* screen, XRenderPictFormat *format, const gfxIntSize& size,
 47113:            Drawable relatedDrawable = None);
 47113: 
     1:     virtual ~gfxXlibSurface();
     1: 
 47760:     virtual already_AddRefed<gfxASurface>
 47760:     CreateSimilarSurface(gfxContentType aType, const gfxIntSize& aSize);
120512:     virtual void Finish() MOZ_OVERRIDE;
 47760: 
 52185:     virtual const gfxIntSize GetSize() const { return mSize; }
     1: 
     1:     Display* XDisplay() { return mDisplay; }
 54106:     Screen* XScreen();
     1:     Drawable XDrawable() { return mDrawable; }
 52190:     XRenderPictFormat* XRenderFormat();
     1: 
 47113:     static int DepthOfVisual(const Screen* screen, const Visual* visual);
 48108:     static Visual* FindVisual(Screen* screen, gfxImageFormat format);
     1:     static XRenderPictFormat *FindRenderFormat(Display *dpy, gfxImageFormat format);
     1: 
     1:     // take ownership of a passed-in Pixmap, calling XFreePixmap on it
     1:     // when the gfxXlibSurface is destroyed.
 74887:     void TakePixmap();
     1: 
 54107:     // Release ownership of this surface's Pixmap.  This is only valid
 54107:     // on gfxXlibSurfaces for which the user called TakePixmap(), or
 54107:     // on those created by a Create() factory method.
 74887:     Drawable ReleasePixmap();
 54107: 
 47116:     // Find a visual and colormap pair suitable for rendering to this surface.
 79445:     bool GetColormapAndVisual(Colormap* colormap, Visual **visual);
 47116: 
 74887:     // This surface is a wrapper around X pixmaps, which are stored in the X
 74887:     // server, not the main application.
 74887:     virtual gfxASurface::MemoryLocation GetMemoryLocation() const;
 74887: 
118564: #if !defined(MOZ_PLATFORM_MAEMO)
 74902:     GLXPixmap GetGLXPixmap();
 74909: #endif
 74902: 
108603:     // Return true if cairo will take its slow path when this surface is used
108603:     // in a pattern with EXTEND_PAD.  As a workaround for XRender's RepeatPad
108603:     // not being implemented correctly on old X servers, cairo avoids XRender
108603:     // and instead reads back to perform EXTEND_PAD with pixman.  Cairo does
108603:     // this for servers older than xorg-server 1.7.
108603:     bool IsPadSlow() {
108603:         // The test here matches that for buggy_pad_reflect in
108603:         // _cairo_xlib_device_create.
108603:         return VendorRelease(mDisplay) >= 60700000 ||
108603:             VendorRelease(mDisplay) < 10699000;
108603:     }
108603: 
     1: protected:
 46300:     // if TakePixmap() has been called on this
 79445:     bool mPixmapTaken;
     1:     
     1:     Display *mDisplay;
     1:     Drawable mDrawable;
     1: 
     1:     void DoSizeQuery();
     1: 
     1:     gfxIntSize mSize;
 74902: 
118564: #if !defined(MOZ_PLATFORM_MAEMO)
 74902:     GLXPixmap mGLXPixmap;
 74909: #endif
     1: };
     1: 
     1: #endif /* GFX_XLIBSURFACE_H */

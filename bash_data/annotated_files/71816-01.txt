69041: <!DOCTYPE HTML>
69041: <html>
69041: <!--
69041: https://bugzilla.mozilla.org/show_bug.cgi?id=642338
69041: -->
69041: <head>
69041:   <title>Test for Bug 642338</title>
69041:   <script type="text/javascript" src="/MochiKit/packed.js"></script>
69041:   <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
69041:   <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
69041: </head>
69041: <body>
69041: <a target="_blank" href="https://bugzilla.mozilla.org/show_bug.cgi?id=642338">Mozilla Bug 642338</a>
69041: <p id="display"></p>
69041: <div id="content" style="display: none">
69041:   
69041: </div>
69041: <pre id="test">
69041: <script class="testbody" type="text/javascript">
69041: 
69041: /* Test that the following window properties work:
69041: 
69041:      menubar
69041:      toolbar
69041:      locationbar
69041:      personalbar
69041:      statusbar
69041:      scrollbars
69041: 
69041: */
69041: 
69041: var numWindows = 0;
69041: 
69041: /* Called when our popup loads. */
69041: function testWindow(w)
69041: {
71816: 
71816:   // If dom.disable_window_open_feature.X is true, then we can't disable
71816:   // feature X when we call window.open from content.  So to check that our popup
71816:   // has the right bars shown, we need to check that it obeys first the pref
71816:   // and then the arguments to window.open, if applicable.
71816: 
71816:   function checkFeature(feature, prefname) {
71816:     if (prefname === undefined)
71816:       prefname = feature;
71816:     
71816:     if (SpecialPowers.getBoolPref('dom.disable_window_open_feature.' + prefname)) {
71816:       is(w[feature].visible, true, feature + ' should always be true.');
71816:     }
71816:     else {
69041:       // w.location.search == '?true' if we expect the bars to be on, and
69041:       // '?false' otherwise.
71816:       var enabled = w.location.search == '?true';
71816:       is(w[feature].visible, enabled, feature + ' should follow window.open settings.');
71816:     }
71816:   }
69041: 
71816:   checkFeature('menubar');
71816:   checkFeature('toolbar');
71816:   checkFeature('personalbar');
71816:   checkFeature('scrollbars');
71816:   checkFeature('statusbar', 'status');
71816:   checkFeature('locationbar', 'location');
69041: 
69041:   w.close();
69041: 
69041:   numWindows++;
69041:   if (numWindows == 2) {
69041:     // We're done!
69041:     SimpleTest.finish();
69041:   }
69041: 
69041: }
69041: 
69041: SimpleTest.waitForExplicitFinish();
69041: 
69041: // These will call back into testWindow when they open.
69041: 
69041: var allBarsWindow =
69041:   window.open('file_window_bar.html?true', 'all-bars',
69041:               'menubar=yes,toolbar=yes,location=yes,' +
69041:               'personalbar=yes,status=yes,scrollbars=yes',
69041:               true);
69041: 
69041: var noBarsWindow = 
69041:   window.open('file_window_bar.html?false', 'no-bars',
69041:               'menubar=no,toolbar=no,location=no,' +
69041:               'personalbar=no,status=no,scrollbars=no',
69041:               false);
69041: 
69041: </script>
69041: </pre>
69041: </body>
69041: </html>

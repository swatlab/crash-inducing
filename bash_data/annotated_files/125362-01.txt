124609: function test () {
124609:   waitForExplicitFinish();
125214: 
125214:   var isHTTPS = false;
125214: 
124609:   gBrowser.selectedTab = gBrowser.addTab();
124609:   gBrowser.selectedBrowser.addEventListener("load", function () {
125214:     if (isHTTPS) {
124609:       gBrowser.selectedBrowser.removeEventListener("load", arguments.callee, true);
125214:     }
124609:     let doc = gBrowser.contentDocument;
124609: 
124609: 
124609:     function testLocation(link, url, next) {
124609:       var tabOpenListener = new TabOpenListener(url, function () {
124609:           gBrowser.removeTab(this.tab);
124609:       }, function () {
124609:         next();
124609:       });
124609: 
124609:       doc.getElementById(link).click();
124609:     }
124609: 
124609:     function testLink(link, name, next) {
124609:         addWindowListener("chrome://mozapps/content/downloads/unknownContentType.xul", function (win) {
124609:             is(win.document.getElementById("location").value, name, "file name should match");
124609:             win.close();
124609:             next();
124609:         });
124609: 
124609:         doc.getElementById(link).click();
124609:     }
124609: 
124609:     testLink("link1", "test.txt",
124609:       testLink.bind(null, "link2", "video.ogg",
124609:         testLink.bind(null, "link3", "just some video",
124609:           testLink.bind(null, "link4", "with-target.txt",
124609:             testLink.bind(null, "link5", "javascript.txt",
124609:               testLink.bind(null, "link6", "test.blob",
124609:                 testLocation.bind(null, "link7", "http://example.com/",
124609:                   function () {
125214:                     if (isHTTPS) {
124609:                       gBrowser.removeCurrentTab();
124609:                       finish();
125214:                     } else {
125214:                       // same test again with https:
125214:                       isHTTPS = true;
125214:                       content.location = "https://example.com:443/browser/browser/base/content/test/download_page.html";
125214:                     }
124609:                   })))))));
124609: 
124609:   }, true);
124609: 
124609:   content.location = "http://mochi.test:8888/browser/browser/base/content/test/download_page.html";
124609: }
124609: 
124609: 
124609: function addWindowListener(aURL, aCallback) {
124609:   Services.wm.addListener({
124609:     onOpenWindow: function(aXULWindow) {
124609:       info("window opened, waiting for focus");
124609:       Services.wm.removeListener(this);
124609: 
124609:       var domwindow = aXULWindow.QueryInterface(Ci.nsIInterfaceRequestor)
124609:                                 .getInterface(Ci.nsIDOMWindow);
124609:       waitForFocus(function() {
124609:         is(domwindow.document.location.href, aURL, "should have seen the right window open");
124609:         aCallback(domwindow);
124609:       }, domwindow);
124609:     },
124609:     onCloseWindow: function(aXULWindow) { },
124609:     onWindowTitleChange: function(aXULWindow, aNewTitle) { }
124609:   });
124609: }
124609: 
124609: // This listens for the next opened tab and checks it is of the right url.
124609: // opencallback is called when the new tab is fully loaded
124609: // closecallback is called when the tab is closed
124609: function TabOpenListener(url, opencallback, closecallback) {
124609:   this.url = url;
124609:   this.opencallback = opencallback;
124609:   this.closecallback = closecallback;
124609: 
124609:   gBrowser.tabContainer.addEventListener("TabOpen", this, false);
124609: }
124609: 
124609: TabOpenListener.prototype = {
124609:   url: null,
124609:   opencallback: null,
124609:   closecallback: null,
124609:   tab: null,
124609:   browser: null,
124609: 
124609:   handleEvent: function(event) {
124609:     if (event.type == "TabOpen") {
124609:       gBrowser.tabContainer.removeEventListener("TabOpen", this, false);
124609:       this.tab = event.originalTarget;
124609:       this.browser = this.tab.linkedBrowser;
124609:       gBrowser.addEventListener("pageshow", this, false);
124609:     } else if (event.type == "pageshow") {
124609:       if (event.target.location.href != this.url)
124609:         return;
124609:       gBrowser.removeEventListener("pageshow", this, false);
124609:       this.tab.addEventListener("TabClose", this, false);
124609:       var url = this.browser.contentDocument.location.href;
124609:       is(url, this.url, "Should have opened the correct tab");
124609:       this.opencallback(this.tab, this.browser.contentWindow);
124609:     } else if (event.type == "TabClose") {
124609:       if (event.originalTarget != this.tab)
124609:         return;
124609:       this.tab.removeEventListener("TabClose", this, false);
124609:       this.opencallback = null;
124609:       this.tab = null;
124609:       this.browser = null;
124609:       // Let the window close complete
124609:       executeSoon(this.closecallback);
124609:       this.closecallback = null;
124609:     }
124609:   }
125362: };

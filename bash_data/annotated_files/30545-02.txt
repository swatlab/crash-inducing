    1: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
    1:  *
    1:  * ***** BEGIN LICENSE BLOCK *****
    1:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
    1:  *
    1:  * The contents of this file are subject to the Mozilla Public License Version
    1:  * 1.1 (the "License"); you may not use this file except in compliance with
    1:  * the License. You may obtain a copy of the License at
    1:  * http://www.mozilla.org/MPL/
    1:  *
    1:  * Software distributed under the License is distributed on an "AS IS" basis,
    1:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
    1:  * for the specific language governing rights and limitations under the
    1:  * License.
    1:  *
    1:  * The Original Code is mozilla.org code.
    1:  *
    1:  * The Initial Developer of the Original Code is
    1:  * Netscape Communications Corporation.
    1:  * Portions created by the Initial Developer are Copyright (C) 2001
    1:  * the Initial Developer. All Rights Reserved.
    1:  *
    1:  * Contributor(s):
    1:  *   Chris Saari <saari@netscape.com>
    1:  *
    1:  * Alternatively, the contents of this file may be used under the terms of
    1:  * either the GNU General Public License Version 2 or later (the "GPL"), or
    1:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
    1:  * in which case the provisions of the GPL or the LGPL are applicable instead
    1:  * of those above. If you wish to allow use of your version of this file only
    1:  * under the terms of either the GPL or the LGPL, and not to allow others to
    1:  * use your version of this file under the terms of the MPL, indicate your
    1:  * decision by deleting the provisions above and replace them with the notice
    1:  * and other provisions required by the GPL or the LGPL. If you do not delete
    1:  * the provisions above, a recipient may use your version of this file under
    1:  * the terms of any one of the MPL, the GPL or the LGPL.
    1:  *
    1:  * ***** END LICENSE BLOCK ***** */
    1: 
    1: #ifndef _nsGIFDecoder2_h
    1: #define _nsGIFDecoder2_h
    1: 
    1: #include "nsCOMPtr.h"
    1: #include "imgIDecoder.h"
    1: #include "imgIContainer.h"
    1: #include "imgIDecoderObserver.h"
    1: 
    1: #include "GIF2.h"
    1: 
    1: #define NS_GIFDECODER2_CID \
    1: { /* 797bec5a-1dd2-11b2-a7f8-ca397e0179c4 */         \
    1:      0x797bec5a,                                     \
    1:      0x1dd2,                                         \
    1:      0x11b2,                                         \
    1:     {0xa7, 0xf8, 0xca, 0x39, 0x7e, 0x01, 0x79, 0xc4} \
    1: }
    1: 
    1: //////////////////////////////////////////////////////////////////////
    1: // nsGIFDecoder2 Definition
    1: 
    1: class nsGIFDecoder2 : public imgIDecoder   
    1: {
    1: public:
    1:   NS_DECL_ISUPPORTS
    1:   NS_DECL_IMGIDECODER
    1: 
    1:   nsGIFDecoder2();
    1:   ~nsGIFDecoder2();
    1:   
13737:   nsresult ProcessData(unsigned char *data, PRUint32 count, PRUint32 *_retval);
    1: 
 2759: private:
 2759:   /* These functions will be called when the decoder has a decoded row,
 2759:    * frame size information, etc. */
    1: 
 2759:   void      BeginGIF();
 2759:   void      EndGIF();
 7671:   void      BeginImageFrame(gfx_depth aDepth);
 2759:   void      EndImageFrame();
19117:   nsresult  FlushImageData();
19117:   nsresult  FlushImageData(PRUint32 fromRow, PRUint32 rows);
    1: 
 2759:   nsresult  GifWrite(const PRUint8 * buf, PRUint32 numbytes);
 2759:   PRUint32  OutputRow();
 2759:   PRBool    DoLzw(const PRUint8 *q);
    1: 
 2759:   inline int ClearCode() const { return 1 << mGIFStruct.datasize; }
 2759: 
    1:   nsCOMPtr<imgIContainer> mImageContainer;
    1:   nsCOMPtr<imgIDecoderObserver> mObserver; // this is just qi'd from mRequest for speed
    1:   PRInt32 mCurrentRow;
    1:   PRInt32 mLastFlushedRow;
    1: 
 7671:   PRUint8 *mImageData;       // Pointer to image data in either Cairo or 8bit format
 5296:   PRUint32 *mColormap;       // Current colormap to be used in Cairo format
30479:   PRUint32 mColormapSize;
 5296:   PRUint32 mOldColor;        // The old value of the transparent pixel
30545: 
30545:   // The frame number of the currently-decoding frame when we're in the middle
30545:   // of decoding it, and -1 otherwise.
30545:   PRInt32 mCurrentFrame;
30545: 
    1:   PRUint8 mCurrentPass;
    1:   PRUint8 mLastFlushedPass;
    1:   PRPackedBool mGIFOpen;
 8368:   PRPackedBool mSawTransparency;
 2759: 
 2759:   gif_struct mGIFStruct;
    1: };
    1: 
    1: #endif

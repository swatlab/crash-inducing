    1: /* -*- Mode: C; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
    1: /* ***** BEGIN LICENSE BLOCK *****
    1:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
    1:  *
    1:  * The contents of this file are subject to the Mozilla Public License Version
    1:  * 1.1 (the "License"); you may not use this file except in compliance with
    1:  * the License. You may obtain a copy of the License at
    1:  * http://www.mozilla.org/MPL/
    1:  *
    1:  * Software distributed under the License is distributed on an "AS IS" basis,
    1:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
    1:  * for the specific language governing rights and limitations under the
    1:  * License.
    1:  *
    1:  * The Original Code is Mozilla Communicator client code, released
    1:  * March 31, 1998.
    1:  *
    1:  * The Initial Developer of the Original Code is
    1:  * Netscape Communications Corporation.
    1:  * Portions created by the Initial Developer are Copyright (C) 1998-1999
    1:  * the Initial Developer. All Rights Reserved.
    1:  *
    1:  * Contributor(s):
    1:  *   Daniel Veditz <dveditz@netscape.com>
    1:  *   Jeroen Dobbelaere <jeroen.dobbelaere@acunia.com>
    1:  *
    1:  * Alternatively, the contents of this file may be used under the terms of
    1:  * either the GNU General Public License Version 2 or later (the "GPL"), or
    1:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
    1:  * in which case the provisions of the GPL or the LGPL are applicable instead
    1:  * of those above. If you wish to allow use of your version of this file only
    1:  * under the terms of either the GPL or the LGPL, and not to allow others to
    1:  * use your version of this file under the terms of the MPL, indicate your
    1:  * decision by deleting the provisions above and replace them with the notice
    1:  * and other provisions required by the GPL or the LGPL. If you do not delete
    1:  * the provisions above, a recipient may use your version of this file under
    1:  * the terms of any one of the MPL, the GPL or the LGPL.
    1:  *
    1:  * ***** END LICENSE BLOCK ***** */
    1: 
    1: #ifndef _zipstruct_h
    1: #define _zipstruct_h
    1: 
    1: 
    1: /*
    1:  *  Certain constants and structures for
    1:  *  the Phil Katz ZIP archive format.
    1:  *
    1:  */
    1: 
    1: typedef struct ZipLocal_
    1:   {
    1:   unsigned char signature [4];
    1:   unsigned char word [2];
    1:   unsigned char bitflag [2];
    1:   unsigned char method [2];
    1:   unsigned char time [2];
    1:   unsigned char date [2];
    1:   unsigned char crc32 [4];
    1:   unsigned char size [4];
    1:   unsigned char orglen [4];
    1:   unsigned char filename_len [2];
    1:   unsigned char extrafield_len [2];
    1: } ZipLocal;
    1: 
    1: /*
    1:  * 'sizeof(struct XXX)' includes padding on ARM (see bug 87965)
    1:  * As the internals of a jar/zip file must not depend on the target
    1:  * architecture (i386, ppc, ARM, ...), use a fixed value instead.
    1:  */ 
    1: #define ZIPLOCAL_SIZE (4+2+2+2+2+2+4+4+4+2+2)
    1: 
    1: typedef struct ZipCentral_
    1:   {
    1:   unsigned char signature [4];
    1:   unsigned char version_made_by [2];
    1:   unsigned char version [2];
    1:   unsigned char bitflag [2];
    1:   unsigned char method [2];
    1:   unsigned char time [2];
    1:   unsigned char date [2];
    1:   unsigned char crc32 [4];
    1:   unsigned char size [4];
    1:   unsigned char orglen [4];
    1:   unsigned char filename_len [2];
    1:   unsigned char extrafield_len [2];
    1:   unsigned char commentfield_len [2];
    1:   unsigned char diskstart_number [2];
    1:   unsigned char internal_attributes [2];
    1:   unsigned char external_attributes [4];
    1:   unsigned char localhdr_offset [4];
    1: } ZipCentral;
    1: 
    1: /*
    1:  * 'sizeof(struct XXX)' includes padding on ARM (see bug 87965)
    1:  * As the internals of a jar/zip file must not depend on the target
    1:  * architecture (i386, ppc, ARM, ...), use a fixed value instead.
    1:  */ 
    1: #define ZIPCENTRAL_SIZE (4+2+2+2+2+2+2+4+4+4+2+2+2+2+2+4+4)
    1: 
    1: typedef struct ZipEnd_
    1:   {
    1:   unsigned char signature [4];
    1:   unsigned char disk_nr [2];
    1:   unsigned char start_central_dir [2];
    1:   unsigned char total_entries_disk [2];
    1:   unsigned char total_entries_archive [2];
    1:   unsigned char central_dir_size [4];
    1:   unsigned char offset_central_dir [4];
    1:   unsigned char commentfield_len [2];
    1: } ZipEnd;
    1: 
    1: /*
    1:  * 'sizeof(struct XXX)' includes padding on ARM (see bug 87965)
    1:  * As the internals of a jar/zip file must not depend on the target
    1:  * architecture (i386, ppc, ARM, ...), use a fixed value instead.
    1:  */ 
    1: #define ZIPEND_SIZE (4+2+2+2+2+4+4+2)
    1: 
    1: /* signatures */
    1: #define LOCALSIG    0x04034B50l
    1: #define CENTRALSIG  0x02014B50l
    1: #define ENDSIG      0x06054B50l
    1: 
    1: /* compression methods */
    1: #define STORED            0
    1: #define SHRUNK            1
    1: #define REDUCED1          2
    1: #define REDUCED2          3
    1: #define REDUCED3          4
    1: #define REDUCED4          5
    1: #define IMPLODED          6
    1: #define TOKENIZED         7
    1: #define DEFLATED          8
13296: #define UNSUPPORTED       0xFF
    1: 
    1: 
    1: #endif /* _zipstruct_h */

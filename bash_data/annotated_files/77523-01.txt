72690: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
72690: /* ***** BEGIN LICENSE BLOCK *****
72690:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
72690:  *
72690:  * The contents of this file are subject to the Mozilla Public License Version
72690:  * 1.1 (the "License"); you may not use this file except in compliance with
72690:  * the License. You may obtain a copy of the License at
72690:  * http://www.mozilla.org/MPL/
72690:  *
72690:  * Software distributed under the License is distributed on an "AS IS" basis,
72690:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
72690:  * for the specific language governing rights and limitations under the
72690:  * License.
72690:  *
72690:  * The Original Code is Mozilla code.
72690:  *
72690:  * The Initial Developer of the Original Code is Mozilla Foundation
72690:  * Portions created by the Initial Developer are Copyright (C) 2011
72690:  * the Initial Developer. All Rights Reserved.
72690:  *
72690:  * Contributor(s):
72690:  *   Mounir Lamouri <mounir.lamouri@mozilla.com> (original author)
72690:  *
72690:  * Alternatively, the contents of this file may be used under the terms of
72690:  * either of the GNU General Public License Version 2 or later (the "GPL"),
72690:  * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
72690:  * in which case the provisions of the GPL or the LGPL are applicable instead
72690:  * of those above. If you wish to allow use of your version of this file only
72690:  * under the terms of either the GPL or the LGPL, and not to allow others to
72690:  * use your version of this file under the terms of the MPL, indicate your
72690:  * decision by deleting the provisions above and replace them with the notice
72690:  * and other provisions required by the GPL or the LGPL. If you do not delete
72690:  * the provisions above, a recipient may use your version of this file under
72690:  * the terms of any one of the MPL, the GPL or the LGPL.
72690:  *
72690:  * ***** END LICENSE BLOCK ***** */
72690: 
72690: #include "nsDOMMemoryReporter.h"
72692: #include "nsGlobalWindow.h"
72690: 
72690: 
72690: nsDOMMemoryReporter::nsDOMMemoryReporter()
72690: {
72690: }
72690: 
72690: NS_IMPL_ISUPPORTS1(nsDOMMemoryReporter, nsIMemoryReporter)
72690: 
72690: /* static */
72690: void
72690: nsDOMMemoryReporter::Init()
72690: {
72690:   // The memory reporter manager is going to own this object.
72690:   NS_RegisterMemoryReporter(new nsDOMMemoryReporter());
72690: }
72690: 
72690: NS_IMETHODIMP
73566: nsDOMMemoryReporter::GetProcess(nsACString &aProcess)
72690: {
72690:   // "" means the main process.
73566:   aProcess.Truncate();
72690:   return NS_OK;
72690: }
72690: 
72690: NS_IMETHODIMP
73566: nsDOMMemoryReporter::GetPath(nsACString &aMemoryPath)
72690: {
73566:   aMemoryPath.AssignLiteral("explicit/dom");
72690:   return NS_OK;
72690: }
72690: 
72690: NS_IMETHODIMP
73566: nsDOMMemoryReporter::GetKind(PRInt32* aKind)
72690: {
72695:   *aKind = KIND_HEAP;
72690:   return NS_OK;
72690: }
72690: 
72690: NS_IMETHODIMP
73566: nsDOMMemoryReporter::GetDescription(nsACString &aDescription)
72690: {
73566:   aDescription.AssignLiteral("Memory used by the DOM.");
72690:   return NS_OK;
72690: }
72692: 
72695: NS_IMETHODIMP
72695: nsDOMMemoryReporter::GetUnits(PRInt32* aUnits)
72695: {
72695:   *aUnits = UNITS_BYTES;
72695:   return NS_OK;
72695: }
72695: 
72692: static
72692: PLDHashOperator
72692: GetWindowsMemoryUsage(const PRUint64& aId, nsGlobalWindow*& aWindow,
72692:                       void* aClosure)
72692: {
72692:   *(PRInt64*)aClosure += aWindow->SizeOf();
72692:   return PL_DHASH_NEXT;
72692: }
72692: 
72690: NS_IMETHODIMP
72695: nsDOMMemoryReporter::GetAmount(PRInt64* aAmount) {
72695:   *aAmount = 0;
72692: 
72692:   nsGlobalWindow::WindowByIdTable* windows = nsGlobalWindow::GetWindowsTable();
77523:   NS_ENSURE_TRUE(windows, NS_OK);
77523: 
72695:   windows->Enumerate(GetWindowsMemoryUsage, aAmount);
72692: 
72690:   return NS_OK;
72690: }
72690: 

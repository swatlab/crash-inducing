 3940: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 3940: /* ***** BEGIN LICENSE BLOCK *****
 3940:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 3940:  *
 3940:  * The contents of this file are subject to the Mozilla Public License Version
 3940:  * 1.1 (the "License"); you may not use this file except in compliance with
 3940:  * the License. You may obtain a copy of the License at
 3940:  * http://www.mozilla.org/MPL/
 3940:  *
 3940:  * Software distributed under the License is distributed on an "AS IS" basis,
 3940:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 3940:  * for the specific language governing rights and limitations under the
 3940:  * License.
 3940:  *
 3940:  * The Original Code is mozila.org code.
 3940:  *
 3940:  * The Initial Developer of the Original Code is
 3940:  * Mozilla Corporation
 3940:  * Portions created by the Initial Developer are Copyright (C) 2007
 3940:  * the Initial Developer. All Rights Reserved.
 3940:  *
 3940:  * Contributor(s):
 3940:  *   Dave Camp <dcamp@mozilla.com>
 3940:  *
 3940:  * Alternatively, the contents of this file may be used under the terms of
 3940:  * either the GNU General Public License Version 2 or later (the "GPL"), or
 3940:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 3940:  * in which case the provisions of the GPL or the LGPL are applicable instead
 3940:  * of those above. If you wish to allow use of your version of this file only
 3940:  * under the terms of either the GPL or the LGPL, and not to allow others to
 3940:  * use your version of this file under the terms of the MPL, indicate your
 3940:  * decision by deleting the provisions above and replace them with the notice
 3940:  * and other provisions required by the GPL or the LGPL. If you do not delete
 3940:  * the provisions above, a recipient may use your version of this file under
 3940:  * the terms of any one of the MPL, the GPL or the LGPL.
 3940:  *
 3940:  * ***** END LICENSE BLOCK ***** */
 3940: 
 3940: #ifndef nsDOMFile_h__
 3940: #define nsDOMFile_h__
 3940: 
 3940: #include "nsICharsetDetectionObserver.h"
 3940: #include "nsIDOMFile.h"
 3940: #include "nsIDOMFileList.h"
33620: #include "nsIDOMFileError.h"
 3940: #include "nsIInputStream.h"
 3940: #include "nsCOMArray.h"
 3940: #include "nsCOMPtr.h"
52042: #include "mozilla/AutoRestore.h"
 3940: #include "nsString.h"
52042: #include "nsIXMLHttpRequest.h"
55459: #include "prmem.h"
55459: #include "nsAutoPtr.h"
 3940: 
 3940: class nsIFile;
 3940: class nsIInputStream;
55459: class nsIClassInfo;
 3940: 
 3940: class nsDOMFile : public nsIDOMFile,
52042:                   public nsIXHRSendable,
 3940:                   public nsICharsetDetectionObserver
 3940: {
 3940: public:
 3940:   NS_DECL_ISUPPORTS
55459:   NS_DECL_NSIDOMBLOB
 3940:   NS_DECL_NSIDOMFILE
52042:   NS_DECL_NSIXHRSENDABLE
52042: 
54295:   nsDOMFile(nsIFile *aFile, const nsAString& aContentType)
52042:     : mFile(aFile),
55459:       mContentType(aContentType),
55459:       mIsFullFile(true)
52042:   {}
 3940: 
54295:   nsDOMFile(nsIFile *aFile)
55459:     : mFile(aFile),
55459:       mIsFullFile(true)
 3940:   {}
52042: 
55459:   nsDOMFile(const nsDOMFile* aOther, PRUint64 aStart, PRUint64 aLength,
55459:             const nsAString& aContentType)
55459:     : mFile(aOther->mFile),
55459:       mStart(aOther->mIsFullFile ? aStart :
55459:                                    (aOther->mStart + aStart)),
55459:       mLength(aLength),
55459:       mContentType(aContentType),
55459:       mIsFullFile(false)
55459:   {
55459:     NS_ASSERTION(mFile, "must have file");
55459:     // Ensure non-null mContentType
55459:     mContentType.SetIsVoid(PR_FALSE);
55459:   }
55459: 
54294:   virtual ~nsDOMFile() {}
 3940: 
 3940:   // from nsICharsetDetectionObserver
 3940:   NS_IMETHOD Notify(const char *aCharset, nsDetectionConfident aConf);
 3940: 
55459: protected:
 3940:   nsCOMPtr<nsIFile> mFile;
55459: 
55459:   // start and length in 
55459:   PRUint64 mStart;
55459:   PRUint64 mLength;
55459: 
 3940:   nsString mContentType;
55459:   
55459:   bool mIsFullFile;
55459: 
55459:   // Used during charset detection
 3940:   nsCString mCharset;
 3940:   nsresult GuessCharset(nsIInputStream *aStream,
 3940:                         nsACString &aCharset);
 3940:   nsresult ConvertStream(nsIInputStream *aStream, const char *aCharset,
 3940:                          nsAString &aResult);
 3940: };
 3940: 
52042: class nsDOMMemoryFile : public nsDOMFile
52042: {
52042: public:
52042:   nsDOMMemoryFile(void *aMemoryBuffer,
52042:                   PRUint64 aLength,
54294:                   const nsAString& aName,
54295:                   const nsAString& aContentType)
54295:     : nsDOMFile(nsnull, aContentType),
55459:       mDataOwner(new DataOwner(aMemoryBuffer)),
55459:       mName(aName)
55459:   {
55459:     mStart = 0;
55459:     mLength = aLength;
55459:   }
52042: 
55459:   nsDOMMemoryFile(const nsDOMMemoryFile* aOther, PRUint64 aStart,
55459:                   PRUint64 aLength, const nsAString& aContentType)
55459:     : nsDOMFile(nsnull, aContentType),
55459:       mDataOwner(aOther->mDataOwner)
55459:   {
55459:     NS_ASSERTION(mDataOwner && mDataOwner->mData, "must have data");
55459: 
55459:     mIsFullFile = false;
55459:     mStart = aOther->mStart + aStart;
55459:     mLength = aLength;
55459: 
55459:     // Ensure non-null mContentType
55459:     mContentType.SetIsVoid(PR_FALSE);
55459:   }
52042: 
52042:   NS_IMETHOD GetName(nsAString&);
52042:   NS_IMETHOD GetSize(PRUint64*);
52042:   NS_IMETHOD GetInternalStream(nsIInputStream**);
52042:   NS_IMETHOD GetMozFullPathInternal(nsAString&);
55459:   NS_IMETHOD Slice(PRUint64 aStart, PRUint64 aLength,
55459:                    const nsAString& aContentType, nsIDOMBlob **aBlob);
52042: 
52042: protected:
63226:   friend class DataOwnerAdapter; // Needs to see DataOwner
55459:   class DataOwner {
55459:   public:
55459:     NS_INLINE_DECL_REFCOUNTING(DataOwner)
55459:     DataOwner(void* aMemoryBuffer)
55459:       : mData(aMemoryBuffer)
55459:     {
55459:     }
55459:     ~DataOwner() {
55459:       PR_Free(mData);
55459:     }
55459:     void* mData;
55459:   };
55459: 
55459:   // Used when backed by a memory store
55459:   nsRefPtr<DataOwner> mDataOwner;
55459: 
54294:   nsString mName;
52042: };
52042: 
 3940: class nsDOMFileList : public nsIDOMFileList
 3940: {
 3940: public:
 3940:   NS_DECL_ISUPPORTS
 3940:   NS_DECL_NSIDOMFILELIST
 3940: 
 3940:   PRBool Append(nsIDOMFile *aFile) { return mFiles.AppendObject(aFile); }
 3940: 
 3940:   PRBool Remove(PRUint32 aIndex) { return mFiles.RemoveObjectAt(aIndex); }
 3940:   void Clear() { return mFiles.Clear(); }
 3940: 
20752:   nsIDOMFile* GetItemAt(PRUint32 aIndex)
20752:   {
20752:     return mFiles.SafeObjectAt(aIndex);
20752:   }
20752: 
20752:   static nsDOMFileList* FromSupports(nsISupports* aSupports)
20752:   {
20752: #ifdef DEBUG
20752:     {
20752:       nsCOMPtr<nsIDOMFileList> list_qi = do_QueryInterface(aSupports);
20752: 
20752:       // If this assertion fires the QI implementation for the object in
20752:       // question doesn't use the nsIDOMFileList pointer as the nsISupports
20752:       // pointer. That must be fixed, or we'll crash...
20752:       NS_ASSERTION(list_qi == static_cast<nsIDOMFileList*>(aSupports),
20752:                    "Uh, fix QI!");
20752:     }
20752: #endif
20752: 
20752:     return static_cast<nsDOMFileList*>(aSupports);
20752:   }
20752: 
 3940: private:
 3940:   nsCOMArray<nsIDOMFile> mFiles;
 3940: };
 3940: 
33620: class nsDOMFileError : public nsIDOMFileError
33620: {
33620: public:
33620:   NS_DECL_ISUPPORTS
33620:   NS_DECL_NSIDOMFILEERROR
33620: 
33620:   nsDOMFileError(PRUint16 aErrorCode) : mCode(aErrorCode) {}
33620: 
33620: private:
33620:   PRUint16 mCode;
33620: };
33620: 
52042: class NS_STACK_CLASS nsDOMFileInternalUrlHolder {
52042: public:
55459:   nsDOMFileInternalUrlHolder(nsIDOMBlob* aFile, nsIPrincipal* aPrincipal
54295:                              MOZILLA_GUARD_OBJECT_NOTIFIER_PARAM);
52042:   ~nsDOMFileInternalUrlHolder();
52042:   nsAutoString mUrl;
52042: private:
52042:   MOZILLA_DECL_USE_GUARD_OBJECT_NOTIFIER
52042: };
52042: 
 3940: #endif

 13289: /* Copyright (c) 2006, Google Inc.
 13289:  * All rights reserved.
 13289:  *
 13289:  * Redistribution and use in source and binary forms, with or without
 13289:  * modification, are permitted provided that the following conditions are
 13289:  * met:
 13289:  *
 13289:  *     * Redistributions of source code must retain the above copyright
 13289:  * notice, this list of conditions and the following disclaimer.
 13289:  *     * Redistributions in binary form must reproduce the above
 13289:  * copyright notice, this list of conditions and the following disclaimer
 13289:  * in the documentation and/or other materials provided with the
 13289:  * distribution.
 13289:  *     * Neither the name of Google Inc. nor the names of its
 13289:  * contributors may be used to endorse or promote products derived from
 13289:  * this software without specific prior written permission.
 13289:  *
 13289:  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 13289:  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 13289:  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 13289:  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 13289:  * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 13289:  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 13289:  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 13289:  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 13289:  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 13289:  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 13289:  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */
 13289: 
 13289: /* minidump_exception_mac.h: A definition of exception codes for Mac
 13289:  * OS X
 13289:  *
 13289:  * (This is C99 source, please don't corrupt it with C++.)
 13289:  *
 13289:  * Author: Mark Mentovai
 13289:  * Split into its own file: Neal Sidhwaney */
 13289:  
 13289: 
 13289: #ifndef GOOGLE_BREAKPAD_COMMON_MINIDUMP_EXCEPTION_MAC_H__
 13289: #define GOOGLE_BREAKPAD_COMMON_MINIDUMP_EXCEPTION_MAC_H__
 13289: 
 13289: #include <stddef.h>
 13289: 
 13289: #include "google_breakpad/common/breakpad_types.h"
 13289: 
 13289: /* For (MDException).exception_code.  Breakpad minidump extension for Mac OS X
 13289:  * support.  Based on Darwin/Mac OS X' mach/exception_types.h.  This is
 13289:  * what Mac OS X calls an "exception", not a "code". */
 13289: typedef enum {
 13289:   /* Exception code.  The high 16 bits of exception_code contains one of
 13289:    * these values. */
 13289:   MD_EXCEPTION_MAC_BAD_ACCESS      = 1,  /* code can be a kern_return_t */
 13289:       /* EXC_BAD_ACCESS */
 13289:   MD_EXCEPTION_MAC_BAD_INSTRUCTION = 2,  /* code is CPU-specific */
 13289:       /* EXC_BAD_INSTRUCTION */
 13289:   MD_EXCEPTION_MAC_ARITHMETIC      = 3,  /* code is CPU-specific */
 13289:       /* EXC_ARITHMETIC */
 13289:   MD_EXCEPTION_MAC_EMULATION       = 4,  /* code is CPU-specific */
 13289:       /* EXC_EMULATION */
 13289:   MD_EXCEPTION_MAC_SOFTWARE        = 5,
 13289:       /* EXC_SOFTWARE */
 13289:   MD_EXCEPTION_MAC_BREAKPOINT      = 6,  /* code is CPU-specific */
 13289:       /* EXC_BREAKPOINT */
 13289:   MD_EXCEPTION_MAC_SYSCALL         = 7,
 13289:       /* EXC_SYSCALL */
 13289:   MD_EXCEPTION_MAC_MACH_SYSCALL    = 8,
 13289:       /* EXC_MACH_SYSCALL */
 13289:   MD_EXCEPTION_MAC_RPC_ALERT       = 9
 13289:       /* EXC_RPC_ALERT */
 13289: } MDExceptionMac;
 13289: 
 13289: /* For (MDException).exception_flags.  Breakpad minidump extension for Mac OS X
 13289:  * support.  Based on Darwin/Mac OS X' mach/ppc/exception.h and
 13289:  * mach/i386/exception.h.  This is what Mac OS X calls a "code". */
 13289: typedef enum {
 13289:   /* With MD_EXCEPTION_BAD_ACCESS.  These are relevant kern_return_t values
 13289:    * from mach/kern_return.h. */
 13289:   MD_EXCEPTION_CODE_MAC_INVALID_ADDRESS    =  1,
 13289:       /* KERN_INVALID_ADDRESS */
 13289:   MD_EXCEPTION_CODE_MAC_PROTECTION_FAILURE =  2,
 13289:       /* KERN_PROTECTION_FAILURE */
 13289:   MD_EXCEPTION_CODE_MAC_NO_ACCESS          =  8,
 13289:       /* KERN_NO_ACCESS */
 13289:   MD_EXCEPTION_CODE_MAC_MEMORY_FAILURE     =  9,
 13289:       /* KERN_MEMORY_FAILURE */
 13289:   MD_EXCEPTION_CODE_MAC_MEMORY_ERROR       = 10,
 13289:       /* KERN_MEMORY_ERROR */
 13289: 
 13289:   /* With MD_EXCEPTION_SOFTWARE */
 13289:   MD_EXCEPTION_CODE_MAC_BAD_SYSCALL  = 0x00010000,  /* Mach SIGSYS */
 13289:   MD_EXCEPTION_CODE_MAC_BAD_PIPE     = 0x00010001,  /* Mach SIGPIPE */
 13289:   MD_EXCEPTION_CODE_MAC_ABORT        = 0x00010002,  /* Mach SIGABRT */
114869:   /* Custom values */
114869:   MD_EXCEPTION_CODE_MAC_NS_EXCEPTION = 0xDEADC0DE,  /* uncaught NSException */
 13289: 
118328:   /* With MD_EXCEPTION_MAC_BAD_ACCESS on arm */
118328:   MD_EXCEPTION_CODE_MAC_ARM_DA_ALIGN = 0x0101,  /* EXC_ARM_DA_ALIGN */
118328:   MD_EXCEPTION_CODE_MAC_ARM_DA_DEBUG = 0x0102,  /* EXC_ARM_DA_DEBUG */
118328: 
118328:   /* With MD_EXCEPTION_MAC_BAD_INSTRUCTION on arm */
118328:   MD_EXCEPTION_CODE_MAC_ARM_UNDEFINED = 1,  /* EXC_ARM_UNDEFINED */
118328: 
118328:   /* With MD_EXCEPTION_MAC_BREAKPOINT on arm */
118328:   MD_EXCEPTION_CODE_MAC_ARM_BREAKPOINT = 1, /* EXC_ARM_BREAKPOINT */
118328: 
 13289:   /* With MD_EXCEPTION_MAC_BAD_ACCESS on ppc */
 13289:   MD_EXCEPTION_CODE_MAC_PPC_VM_PROT_READ = 0x0101,
 13289:       /* EXC_PPC_VM_PROT_READ */
 13289:   MD_EXCEPTION_CODE_MAC_PPC_BADSPACE     = 0x0102,
 13289:       /* EXC_PPC_BADSPACE */
 13289:   MD_EXCEPTION_CODE_MAC_PPC_UNALIGNED    = 0x0103,
 13289:       /* EXC_PPC_UNALIGNED */
 13289: 
 13289:   /* With MD_EXCEPTION_MAC_BAD_INSTRUCTION on ppc */
 13289:   MD_EXCEPTION_CODE_MAC_PPC_INVALID_SYSCALL           = 1,
 13289:       /* EXC_PPC_INVALID_SYSCALL */
 13289:   MD_EXCEPTION_CODE_MAC_PPC_UNIMPLEMENTED_INSTRUCTION = 2,
 13289:       /* EXC_PPC_UNIPL_INST */
 13289:   MD_EXCEPTION_CODE_MAC_PPC_PRIVILEGED_INSTRUCTION    = 3,
 13289:       /* EXC_PPC_PRIVINST */
 13289:   MD_EXCEPTION_CODE_MAC_PPC_PRIVILEGED_REGISTER       = 4,
 13289:       /* EXC_PPC_PRIVREG */
 13289:   MD_EXCEPTION_CODE_MAC_PPC_TRACE                     = 5,
 13289:       /* EXC_PPC_TRACE */
 13289:   MD_EXCEPTION_CODE_MAC_PPC_PERFORMANCE_MONITOR       = 6,
 13289:       /* EXC_PPC_PERFMON */
 13289: 
 13289:   /* With MD_EXCEPTION_MAC_ARITHMETIC on ppc */
 13289:   MD_EXCEPTION_CODE_MAC_PPC_OVERFLOW           = 1,
 13289:       /* EXC_PPC_OVERFLOW */
 13289:   MD_EXCEPTION_CODE_MAC_PPC_ZERO_DIVIDE        = 2,
 13289:       /* EXC_PPC_ZERO_DIVIDE */
 13289:   MD_EXCEPTION_CODE_MAC_PPC_FLOAT_INEXACT      = 3,
 13289:       /* EXC_FLT_INEXACT */
 13289:   MD_EXCEPTION_CODE_MAC_PPC_FLOAT_ZERO_DIVIDE  = 4,
 13289:       /* EXC_PPC_FLT_ZERO_DIVIDE */
 13289:   MD_EXCEPTION_CODE_MAC_PPC_FLOAT_UNDERFLOW    = 5,
 13289:       /* EXC_PPC_FLT_UNDERFLOW */
 13289:   MD_EXCEPTION_CODE_MAC_PPC_FLOAT_OVERFLOW     = 6,
 13289:       /* EXC_PPC_FLT_OVERFLOW */
 13289:   MD_EXCEPTION_CODE_MAC_PPC_FLOAT_NOT_A_NUMBER = 7,
 13289:       /* EXC_PPC_FLT_NOT_A_NUMBER */
 13289: 
 13289:   /* With MD_EXCEPTION_MAC_EMULATION on ppc */
 13289:   MD_EXCEPTION_CODE_MAC_PPC_NO_EMULATION   = 8,
 13289:       /* EXC_PPC_NOEMULATION */
 13289:   MD_EXCEPTION_CODE_MAC_PPC_ALTIVEC_ASSIST = 9,
 13289:       /* EXC_PPC_ALTIVECASSIST */
 13289: 
 13289:   /* With MD_EXCEPTION_MAC_SOFTWARE on ppc */
 13289:   MD_EXCEPTION_CODE_MAC_PPC_TRAP    = 0x00000001,  /* EXC_PPC_TRAP */
 13289:   MD_EXCEPTION_CODE_MAC_PPC_MIGRATE = 0x00010100,  /* EXC_PPC_MIGRATE */
 13289: 
 13289:   /* With MD_EXCEPTION_MAC_BREAKPOINT on ppc */
 13289:   MD_EXCEPTION_CODE_MAC_PPC_BREAKPOINT = 1,  /* EXC_PPC_BREAKPOINT */
 13289: 
 13289:   /* With MD_EXCEPTION_MAC_BAD_INSTRUCTION on x86, see also x86 interrupt
 13289:    * values below. */
 13289:   MD_EXCEPTION_CODE_MAC_X86_INVALID_OPERATION = 1,  /* EXC_I386_INVOP */
 13289: 
 13289:   /* With MD_EXCEPTION_MAC_ARITHMETIC on x86 */
 13289:   MD_EXCEPTION_CODE_MAC_X86_DIV       = 1,  /* EXC_I386_DIV */
 13289:   MD_EXCEPTION_CODE_MAC_X86_INTO      = 2,  /* EXC_I386_INTO */
 13289:   MD_EXCEPTION_CODE_MAC_X86_NOEXT     = 3,  /* EXC_I386_NOEXT */
 13289:   MD_EXCEPTION_CODE_MAC_X86_EXTOVR    = 4,  /* EXC_I386_EXTOVR */
 13289:   MD_EXCEPTION_CODE_MAC_X86_EXTERR    = 5,  /* EXC_I386_EXTERR */
 13289:   MD_EXCEPTION_CODE_MAC_X86_EMERR     = 6,  /* EXC_I386_EMERR */
 13289:   MD_EXCEPTION_CODE_MAC_X86_BOUND     = 7,  /* EXC_I386_BOUND */
 13289:   MD_EXCEPTION_CODE_MAC_X86_SSEEXTERR = 8,  /* EXC_I386_SSEEXTERR */
 13289: 
 13289:   /* With MD_EXCEPTION_MAC_BREAKPOINT on x86 */
 13289:   MD_EXCEPTION_CODE_MAC_X86_SGL = 1,  /* EXC_I386_SGL */
 13289:   MD_EXCEPTION_CODE_MAC_X86_BPT = 2,  /* EXC_I386_BPT */
 13289: 
 13289:   /* With MD_EXCEPTION_MAC_BAD_INSTRUCTION on x86.  These are the raw
 13289:    * x86 interrupt codes.  Most of these are mapped to other Mach
 13289:    * exceptions and codes, are handled, or should not occur in user space.
 13289:    * A few of these will do occur with MD_EXCEPTION_MAC_BAD_INSTRUCTION. */
 13289:   /* EXC_I386_DIVERR    =  0: mapped to EXC_ARITHMETIC/EXC_I386_DIV */
 13289:   /* EXC_I386_SGLSTP    =  1: mapped to EXC_BREAKPOINT/EXC_I386_SGL */
 13289:   /* EXC_I386_NMIFLT    =  2: should not occur in user space */
 13289:   /* EXC_I386_BPTFLT    =  3: mapped to EXC_BREAKPOINT/EXC_I386_BPT */
 13289:   /* EXC_I386_INTOFLT   =  4: mapped to EXC_ARITHMETIC/EXC_I386_INTO */
 13289:   /* EXC_I386_BOUNDFLT  =  5: mapped to EXC_ARITHMETIC/EXC_I386_BOUND */
 13289:   /* EXC_I386_INVOPFLT  =  6: mapped to EXC_BAD_INSTRUCTION/EXC_I386_INVOP */
 13289:   /* EXC_I386_NOEXTFLT  =  7: should be handled by the kernel */
 13289:   /* EXC_I386_DBLFLT    =  8: should be handled (if possible) by the kernel */
 13289:   /* EXC_I386_EXTOVRFLT =  9: mapped to EXC_BAD_ACCESS/(PROT_READ|PROT_EXEC) */
 13289:   MD_EXCEPTION_CODE_MAC_X86_INVALID_TASK_STATE_SEGMENT = 10,
 13289:       /* EXC_INVTSSFLT */
 13289:   MD_EXCEPTION_CODE_MAC_X86_SEGMENT_NOT_PRESENT        = 11,
 13289:       /* EXC_SEGNPFLT */
 13289:   MD_EXCEPTION_CODE_MAC_X86_STACK_FAULT                = 12,
 13289:       /* EXC_STKFLT */
 13289:   MD_EXCEPTION_CODE_MAC_X86_GENERAL_PROTECTION_FAULT   = 13,
 13289:       /* EXC_GPFLT */
 13289:   /* EXC_I386_PGFLT     = 14: should not occur in user space */
 13289:   /* EXC_I386_EXTERRFLT = 16: mapped to EXC_ARITHMETIC/EXC_I386_EXTERR */
 13289:   MD_EXCEPTION_CODE_MAC_X86_ALIGNMENT_FAULT            = 17
 13289:       /* EXC_ALIGNFLT (for vector operations) */
 13289:   /* EXC_I386_ENOEXTFLT = 32: should be handled by the kernel */
 13289:   /* EXC_I386_ENDPERR   = 33: should not occur */
 13289: } MDExceptionCodeMac;
 13289: 
 13289: #endif  /* GOOGLE_BREAKPAD_COMMON_MINIDUMP_EXCEPTION_MAC_OSX_H__ */

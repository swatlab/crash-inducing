 79597: This is the ANGLE project, from http://code.google.com/p/angleproject/
 47653: 
111427: Current revision: r1267
 47653: 
 70456: == Applied local patches ==
 47653: 
 70456: In this order:
106447: 
106447:   angle-renaming-debug.patch
106447:     rename debug.h to compilerdebug.h to avoid conflict in our makefiles
106447: 
106447:   angle-renaming-preprocessor-diagonostics.patch
106447:     rename one of the two Diagnostics.cpp to avoid conflict in our makefiles
106447: 
106447:   angle-renaming-preprocessor-directivehandler.patch
106447:     rename one of the two DirectiveHandler.cpp to avoid conflict in our makefiles
106447: 
106447:   angle-enforce-readpixels-spec.patch
106447:     see bug 724476
106447: 
106447:   angle-impl-read-bgra.patch
106447:     see bug 724476
106447: 
106447:   gfx/angle/angle-long-identifier-hash-spooky.patch
106447:     see bug 676071
106447: 
106447:   angle-abort-on-oom-in-preprocessor.patch
106447:     see bug 680840. Probably not useful anymore now that we're on the new
106447:     preprocessor, but it doesn't hurt to keep it around a bit longer.
 71571: 
114015:   angle-faceforward-emu.patch
114015:     See bug 771406. Adds emulation for faceforward(float,float,float),
114015:     which is needed to prevent crashing on Mac+Intel.
114015: 
119937:   angle-r1278.patch
119937:     Imports ANGLE r1278, which fixes ANGLE bug 350, a crasher.
119937: 
119848: In addition to these patches, the Makefile.in files are ours, they're not present in
119848: upsteam ANGLE. Therefore, changes made to the Makefile.in files should not be stored
119848: in the local .patch files.
 47713: 
 70456: == How to update this ANGLE copy ==
 59691: 
 70456: 1. Unapply patches
119848: 
119848: Unapply them in reverse order, so iterate over the above list of applied patch
119848: starting from the bottom. You most likely want to record these patch-unapply
119848: operations as individual patches themselves, in order to re-apply patches later.
119848: 
119848: $ cd /path/to/mozilla-central
119848: 
119848: $ patch -p1 -R < gfx/angle/angle-some-bug-fix.patch
119848: $ hg qnew unapply-angle-some-bug-fix.patch
119848: 
 70456: 2. Apply diff with new ANGLE version
119848: 
119848: Check at the top of this file what ANGLE revision we currently have. Let's say it's
119848: r123. Check at the ANGLE Web site what recent revisions look like to figure what
119848: revision seems safe. Let's say we want r456.
119848: 
119848: $ cd
119848: $ svn checkout http://angleproject.googlecode.com/svn/trunk/ angleproject
119848: $ cd angleproject
119848: $ svn diff -r 123:456 > ~/angle-diff-from-123-to-456
119848: $ cd /path/to/mozilla-central
119848: $ cd gfx/angle
119848: $ patch -p0 < ~/angle-diff-from-123-to-456
119848: $ cd ../..
119848: $ hg status
119848: # hg add any new ANGLE files under gfx/angle
119848: $ hg qnew angle-diff-from-123-to-456
119848: 
119848: 3. Reapply patches
119848: 
119848: You may have to skip reapplying certain patches there, for example if they have
119848: been integrated into ANGLE since our last update. The short patch descriptions above
119848: in this file should help you make that decision.
119848: 
119848: If you have recorded the individual patch unapply operations in step 1 as separate
119848: Mercurial patches, this will be easy, just apply the inverse patches now, in reverse
119848: order:
119848: 
119848: $ patch -p1 -R < .hg/patches/unapply-angle-some-bug-fix.patch
119848: $ hg status
119848: # hg add any new ANGLE files under gfx/angle
119848: $ hg qnew angle-some-bug-fix.patch
119848: 
119848: Note that here you need to proceed in the reverse order of what you did in step 1.
119848: 
119848: 4. Update our Makefiles
119848: 
119848: Open your ANGLE diff file (~/angle-diff-from-123-to-456), search for GYP files
119848: (e.g. build_angle.gyp), it's easy-to-read JSON. It may list additions of new files,
119848: or removal of old files. You have to reflect this in our Makefiles:
119848: 
119848: gfx/angle/Makefile.in
119848: gfx/angle/src/libEGL/Makefile.in
119848: gfx/angle/src/libGLESv2/Makefile.in
119848: 
119848: The first one is our main Makefile. It has basically the ANGLE shader compiler.
119848: Changes there will typically have to be applied also to the two other Makefiles.
119848: These two other Makefiles are Windows-only and build the ANGLE GLES2-on-top-of-D3D
119848: implementation.
119848: 
119848: 5. Update patch files
119848: 
119848: Something like:
119848: 
119848: $ cp .hg/patches/angle-some-bug-fix.patch gfx/angle
119848: 
119848: For each patch that you reapplied.
119848: 
119848: If a patch was removed (not reapplied), remove the corresponding patch file.
119848: 
119848: 6. Update this README.mozilla
119848: 
119848: You'll have to update at least the ANGLE revision number and probably the patch
119848: list as well.
119848: 
119848: 7. Push to Try
119848: 
119848: Make sure to test both Windows and non-Windows, and enable mochitest-1 in your
119848: Try options. You may want reftest as well, as we have WebGL reftests.
119848: 
119848: 8. Get reviews.
119848: 
119848: Typically, you would get review on your Makefiles patch, and any
119848: new patches that you need to add to get this update to work.
119848: 
119848: You do not need a review for the ANGLE diff itself and for trivial updates of
119848: existing patches.
 61660: 
 55267: == Visual Studio Solution Files ==
 48454: 
 71571: Ignore these. We don't use them anymore. We use custom Makefiles.
 55267: 
 70456: == Generated parser code==
 55267: 
 70456: Don't bother about that anymore. The parser is now generated and included in the ANGLE svn repo.

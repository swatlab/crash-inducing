93267: <!DOCTYPE html>
93267: <html>
93267: <head>
93267:   <title>HTML img map accessible tree update tests</title>
93267:   <link rel="stylesheet" type="text/css"
93267:         href="chrome://mochikit/content/tests/SimpleTest/test.css" />
93267: 
93267:   <script type="application/javascript"
93267:           src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"></script>
93267:   <script type="application/javascript"
93267:           src="chrome://mochikit/content/tests/SimpleTest/EventUtils.js"></script>
93267: 
93267:   <script type="application/javascript"
93267:           src="../common.js"></script>
93267:   <script type="application/javascript"
93267:           src="../role.js"></script>
93267:   <script type="application/javascript"
93267:           src="../events.js"></script>
93267: 
93267:   <script type="application/javascript">
93267:     function insertArea(aImageMapID, aMapID)
93267:     {
93267:       this.imageMap = getAccessible(aImageMapID);
93267:       this.mapNode = getNode(aMapID);
93267: 
93267:       function getInsertedArea(aThisObj)
93267:       {
93267:         return aThisObj.imageMap.firstChild;
93267:       }
93267: 
93267:       this.eventSeq = [
93267:         new invokerChecker(EVENT_SHOW, getInsertedArea, this),
93267:         new invokerChecker(EVENT_REORDER, this.imageMap)
93267:       ];
93267: 
93267:       this.invoke = function insertArea_invoke()
93267:       {
93267:         var areaElm = document.createElement("area");
93267:         areaElm.setAttribute("href",
93267:                              "http://www.bbc.co.uk/radio4/atoz/index.shtml#a");
93267:         areaElm.setAttribute("coords", "0,0,13,14");
93267:         areaElm.setAttribute("alt", "a");
93267:         areaElm.setAttribute("shape", "rect");
93267: 
93267:         this.mapNode.insertBefore(areaElm, this.mapNode.firstChild);
93267:       }
93267: 
93267:       this.finalCheck = function insertArea_finalCheck()
93267:       {
93267:         var accTree =
93267:           { IMAGE_MAP: [
93267:             {
93267:               role: ROLE_LINK,
93267:               name: "a",
93267:               children: [ ]
93267:             },
93267:             {
93267:               role: ROLE_LINK,
93267:               name: "b",
93267:               children: [ ]
93267:             },
93267:           ] };
93267:         testAccessibleTree(this.imageMap, accTree);
93267:       }
93267: 
93267:       this.getID = function insertArea_getID()
93267:       {
93267:         return "insert area element";
93267:       }
93267:     }
93267: 
93267:     function appendArea(aImageMapID, aMapID)
93267:     {
93267:       this.imageMap = getAccessible(aImageMapID);
93267:       this.mapNode = getNode(aMapID);
93267: 
93267:       function getAppendedArea(aThisObj)
93267:       {
93267:         return aThisObj.imageMap.lastChild;
93267:       }
93267: 
93267:       this.eventSeq = [
93267:         new invokerChecker(EVENT_SHOW, getAppendedArea, this),
93267:         new invokerChecker(EVENT_REORDER, this.imageMap)
93267:       ];
93267: 
93267:       this.invoke = function appendArea_invoke()
93267:       {
93267:         var areaElm = document.createElement("area");
93267:         areaElm.setAttribute("href",
93267:                              "http://www.bbc.co.uk/radio4/atoz/index.shtml#c");
93267:         areaElm.setAttribute("coords", "34,0,47,14");
93267:         areaElm.setAttribute("alt", "c");
93267:         areaElm.setAttribute("shape", "rect");
93267: 
93267:         this.mapNode.appendChild(areaElm);
93267:       }
93267: 
93267:       this.finalCheck = function appendArea_finalCheck()
93267:       {
93267:         var accTree =
93267:           { IMAGE_MAP: [
93267:             {
93267:               role: ROLE_LINK,
93267:               name: "a",
93267:               children: [ ]
93267:             },
93267:             {
93267:               role: ROLE_LINK,
93267:               name: "b",
93267:               children: [ ]
93267:             },
93267:             {
93267:               role: ROLE_LINK,
93267:               name: "c",
93267:               children: [ ]
93267:             }
93267:           ] };
93267:         testAccessibleTree(this.imageMap, accTree);
93267:       }
93267: 
93267:       this.getID = function appendArea_getID()
93267:       {
93267:         return "append area element";
93267:       }
93267:     }
93267: 
93267:     function removeArea(aImageMapID, aMapID)
93267:     {
93267:       this.imageMap = getAccessible(aImageMapID);
93267:       this.area = null;
93267:       this.mapNode = getNode(aMapID);
93267: 
93267:       function getRemovedArea(aThisObj)
93267:       {
93267:         return aThisObj.area;
93267:       }
93267: 
93267:       this.eventSeq = [
93267:         new invokerChecker(EVENT_HIDE, getRemovedArea, this),
93267:         new invokerChecker(EVENT_REORDER, this.imageMap)
93267:       ];
93267: 
93267:       this.invoke = function removeArea_invoke()
93267:       {
93267:         this.area = this.imageMap.firstChild;
93267:         this.mapNode.removeChild(this.mapNode.firstElementChild);
93267:       }
93267: 
93267:       this.finalCheck = function removeArea_finalCheck()
93267:       {
93267:         var accTree =
93267:           { IMAGE_MAP: [
93267:             {
93267:               role: ROLE_LINK,
93267:               name: "b",
93267:               children: [ ]
93267:             },
93267:             {
93267:               role: ROLE_LINK,
93267:               name: "c",
93267:               children: [ ]
93267:             }
93267:           ] };
93267:         testAccessibleTree(this.imageMap, accTree);
93267:       }
93267: 
93267:       this.getID = function removeArea_getID()
93267:       {
93267:         return "remove area element";
93267:       }
93267:     }
93267: 
93267:     function removeNameOnMap(aImageMapContainerID, aImageMapID, aMapID)
93267:     {
93267:       this.container = getAccessible(aImageMapContainerID);
93267:       this.containerNode = this.container.DOMNode;
93267:       this.imageMap = getAccessible(aImageMapID);
93267:       this.imgNode = this.imageMap.DOMNode;
93267:       this.mapNode = getNode(aMapID);
93267: 
93267:       this.eventSeq = [
93267:         new invokerChecker(EVENT_HIDE, this.imageMap),
93267:         new invokerChecker(EVENT_SHOW, this.imgNode),
93267:         new invokerChecker(EVENT_REORDER, this.container)
93267:       ];
93267: 
93267:       this.invoke = function removeNameOnMap_invoke()
93267:       {
93267:         this.mapNode.removeAttribute("name");
93267:       }
93267: 
93267:       this.finalCheck = function removeNameOnMap_finalCheck()
93267:       {
93267:         var accTree =
93267:           { SECTION: [
93267:             { GRAPHIC: [ ] }
93267:           ] };
93267:         testAccessibleTree(this.container, accTree);
93267:       }
93267: 
93267:       this.getID = function removeNameOnMap_getID()
93267:       {
93267:         return "remove @name on map element";
93267:       }
93267:     }
93267: 
93267:     function restoreNameOnMap(aImageMapContainerID, aImageMapID, aMapID)
93267:     {
93267:       this.container = getAccessible(aImageMapContainerID);
93267:       this.containerNode = this.container.DOMNode;
93267:       this.imageMap = null;
93267:       this.imgNode = getNode(aImageMapID);
93267:       this.mapNode = getNode(aMapID);
93267: 
93267:       function getImageMap(aThisObj)
93267:       {
93267:         return aThisObj.imageMap;
93267:       }
93267: 
93267:       this.eventSeq = [
93267:         new invokerChecker(EVENT_HIDE, getImageMap, this),
93267:         new invokerChecker(EVENT_SHOW, this.imgNode),
93267:         new invokerChecker(EVENT_REORDER, this.container)
93267:       ];
93267: 
93267:       this.invoke = function restoreNameOnMap_invoke()
93267:       {
93267:         this.imageMap = getAccessible(aImageMapID);
93267:         this.mapNode.setAttribute("name", "atoz_map");
93267:       }
93267: 
93267:       this.finalCheck = function removeNameOnMap_finalCheck()
93267:       {
93267:         var accTree =
93267:           { SECTION: [
93267:             { IMAGE_MAP: [
93267:               { LINK: [ ] },
93267:               { LINK: [ ] }
93267:             ] }
93267:           ] };
93267:         testAccessibleTree(this.container, accTree);
93267:       }
93267: 
93267:       this.getID = function removeNameOnMap_getID()
93267:       {
93267:         return "restore @name on map element";
93267:       }
93267:     }
93267: 
93267:     function removeMap(aImageMapContainerID, aImageMapID, aMapID)
93267:     {
93267:       this.container = getAccessible(aImageMapContainerID);
93267:       this.containerNode = this.container.DOMNode;
93267:       this.imageMap = null;
93267:       this.imgNode = getNode(aImageMapID);
93267:       this.mapNode = getNode(aMapID);
93267: 
93267:       function getImageMap(aThisObj)
93267:       {
93267:         return aThisObj.imageMap;
93267:       }
93267: 
93267:       this.eventSeq = [
93267:         new invokerChecker(EVENT_HIDE, getImageMap, this),
93267:         new invokerChecker(EVENT_SHOW, this.imgNode),
93267:         new invokerChecker(EVENT_REORDER, this.container)
93267:       ];
93267: 
93267:       this.invoke = function removeMap_invoke()
93267:       {
93267:         this.imageMap = getAccessible(aImageMapID);
93267:         this.mapNode.parentNode.removeChild(this.mapNode);
93267:       }
93267: 
93267:       this.finalCheck = function removeMap_finalCheck()
93267:       {
93267:         var accTree =
93267:           { SECTION: [
93267:             { GRAPHIC: [ ] }
93267:           ] };
93267:         testAccessibleTree(this.container, accTree);
93267:       }
93267: 
93267:       this.getID = function removeMap_getID()
93267:       {
93267:         return "remove map element";
93267:       }
93267:     }
93267: 
93267:     function insertMap(aImageMapContainerID, aImageID)
93267:     {
93267:       this.container = getAccessible(aImageMapContainerID);
93267:       this.containerNode = this.container.DOMNode;
93267:       this.image = null;
93267:       this.imgMapNode = getNode(aImageID);
93267: 
93267:       function getImage(aThisObj)
93267:       {
93267:         return aThisObj.image;
93267:       }
93267: 
93267:       this.eventSeq = [
93267:         new invokerChecker(EVENT_HIDE, getImage, this),
93267:         new invokerChecker(EVENT_SHOW, this.imgMapNode),
93267:         new invokerChecker(EVENT_REORDER, this.container)
93267:       ];
93267: 
93267:       this.invoke = function insertMap_invoke()
93267:       {
93267:         this.image = getAccessible(aImageID);
93267: 
93267:         var map = document.createElement("map");
93267:         map.setAttribute("name", "atoz_map");
93267:         map.setAttribute("id", "map");
93267: 
93267:         var area = document.createElement("area")
93267:         area.setAttribute("href",
93267:                           "http://www.bbc.co.uk/radio4/atoz/index.shtml#b");
93267:         area.setAttribute("coords", "17,0,30,14");
93267:         area.setAttribute("alt", "b");
93267:         area.setAttribute("shape", "rect");
93267: 
93267:         map.appendChild(area);
93267: 
93267:         this.containerNode.appendChild(map);
93267: 
93267:         ensureImageMapTree(aImageID);
93267:       }
93267: 
93267:       this.finalCheck = function insertMap_finalCheck()
93267:       {
93267:         var accTree =
93267:           { SECTION: [
93267:             { IMAGE_MAP: [
93267:               { LINK: [ ] }
93267:             ] }
93267:           ] };
93267:         testAccessibleTree(this.container, accTree);
93267:       }
93267: 
93267:       this.getID = function insertMap_getID()
93267:       {
93267:         return "insert map element";
93267:       }
93267:     }
93267: 
93850:     function hideImageMap(aContainerID, aImageID)
93850:     {
93850:       this.container = getAccessible(aContainerID);
93850:       this.imageMap = null;
93850:       this.imageMapNode = getNode(aImageID);
93850: 
93850:       function getImageMap(aThisObj)
93850:       {
93850:         return aThisObj.imageMap;
93850:       }
93850: 
93850:       this.eventSeq = [
93850:         new invokerChecker(EVENT_HIDE, getImageMap, this),
93850:         new invokerChecker(EVENT_REORDER, aContainerID)
93850:       ];
93850: 
93850:       this.invoke = function hideImageMap_invoke()
93850:       {
93850:         this.imageMap = getAccessible(this.imageMapNode);
93850:         this.imageMapNode.style.display = "none";
93850:       }
93850: 
93850:       this.finalCheck = function hideImageMap_finalCheck()
93850:       {
93850:         var accTree =
93850:           { SECTION: [ ] };
93850:         testAccessibleTree(this.container, accTree);
93850:       }
93850: 
93850:       this.getID = function hideImageMap_getID()
93850:       {
93850:         return "display:none image";
93850:       }
93850:     }
93850: 
93267:     //gA11yEventDumpToConsole = true;
93267: 
93267:     var gQueue = null;
93267:     function doTest()
93267:     {
93267:       gQueue = new eventQueue();
93267: 
93267:       gQueue.push(new insertArea("imgmap", "map"));
93267:       gQueue.push(new appendArea("imgmap", "map"));
93267:       gQueue.push(new removeArea("imgmap", "map"));
93267:       gQueue.push(new removeNameOnMap("container", "imgmap", "map"));
93267:       gQueue.push(new restoreNameOnMap("container", "imgmap", "map"));
93267:       gQueue.push(new removeMap("container", "imgmap", "map"));
93267:       gQueue.push(new insertMap("container", "imgmap"));
93850:       gQueue.push(new hideImageMap("container", "imgmap"));
93267: 
93267:       gQueue.invoke(); // Will call SimpleTest.finish();
93267:     }
93267: 
93267:     SimpleTest.waitForExplicitFinish();
93267:     addA11yLoadEvent(doTest);
93267:   </script>
93267: </head>
93267: <body>
93267: 
93267:   <a target="_blank"
93267:      title="Image map accessible tree is not updated when image map is changed"
93267:      href="https://bugzilla.mozilla.org/show_bug.cgi?id=732389">
93267:     Mozilla Bug 732389
93267:   </a>
93267:   <p id="display"></p>
93267:   <div id="content" style="display: none"></div>
93267:   <pre id="test">
93267:   </pre>
93267: 
93267:   <map name="atoz_map" id="map">
93267:     <area href="http://www.bbc.co.uk/radio4/atoz/index.shtml#b"
93267:           coords="17,0,30,14" alt="b" shape="rect">
93267:   </map>
93267: 
93267:   <div id="container">
93267:     <img id="imgmap" width="447" height="15"
93267:          usemap="#atoz_map"
93267:          src="../letters.gif">
93267:   </div>
93267: 
93267: </body>
93267: </html>

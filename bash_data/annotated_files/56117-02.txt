54814: /* -*- Mode: C++; tab-width: 20; indent-tabs-mode: nil; c-basic-offset: 4 -*-
54814:  * ***** BEGIN LICENSE BLOCK *****
54814:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
54814:  *
54814:  * The contents of this file are subject to the Mozilla Public License Version
54814:  * 1.1 (the "License"); you may not use this file except in compliance with
54814:  * the License. You may obtain a copy of the License at
54814:  * http://www.mozilla.org/MPL/
54814:  *
54814:  * Software distributed under the License is distributed on an "AS IS" basis,
54814:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
54814:  * for the specific language governing rights and limitations under the
54814:  * License.
54814:  *
54814:  * The Original Code is Mozilla Corporation code.
54814:  *
54814:  * The Initial Developer of the Original Code is Mozilla Foundation.
54814:  * Portions created by the Initial Developer are Copyright (C) 2009
54814:  * the Initial Developer. All Rights Reserved.
54814:  *
54814:  * Contributor(s):
54814:  *   Bas Schouten <bschouten@mozilla.org>
54814:  *
54814:  * Alternatively, the contents of this file may be used under the terms of
54814:  * either the GNU General Public License Version 2 or later (the "GPL"), or
54814:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
54814:  * in which case the provisions of the GPL or the LGPL are applicable instead
54814:  * of those above. If you wish to allow use of your version of this file only
54814:  * under the terms of either the GPL or the LGPL, and not to allow others to
54814:  * use your version of this file under the terms of the MPL, indicate your
54814:  * decision by deleting the provisions above and replace them with the notice
54814:  * and other provisions required by the GPL or the LGPL. If you do not delete
54814:  * the provisions above, a recipient may use your version of this file under
54814:  * the terms of any one of the MPL, the GPL or the LGPL.
54814:  *
54814:  * ***** END LICENSE BLOCK ***** */
54814: 
54814: #ifndef GFX_IMAGELAYERD3D10_H
54814: #define GFX_IMAGELAYERD3D10_H
54814: 
54814: #include "LayerManagerD3D10.h"
54814: #include "ImageLayers.h"
54814: #include "yuv_convert.h"
54814: #include "mozilla/Mutex.h"
54814: 
54814: namespace mozilla {
54814: namespace layers {
54814: 
54814: class THEBES_API ImageContainerD3D10 : public ImageContainer
54814: {
54814: public:
54814:   ImageContainerD3D10(LayerManagerD3D10 *aManager);
54814:   virtual ~ImageContainerD3D10() {}
54814: 
54814:   virtual already_AddRefed<Image> CreateImage(const Image::Format* aFormats,
54814:                                               PRUint32 aNumFormats);
54814: 
54814:   virtual void SetCurrentImage(Image* aImage);
54814: 
54814:   virtual already_AddRefed<Image> GetCurrentImage();
54814: 
54814:   virtual already_AddRefed<gfxASurface> GetCurrentAsSurface(gfxIntSize* aSize);
54814: 
54814:   virtual gfxIntSize GetCurrentSize();
54814: 
54814:   virtual PRBool SetLayerManager(LayerManager *aManager);
54814: 
54814: private:
54814:   typedef mozilla::Mutex Mutex;
54814: 
54814:   nsRefPtr<Image> mActiveImage;
54814: 
54814:   Mutex mActiveImageLock;
54814: };
54814: 
54814: class THEBES_API ImageLayerD3D10 : public ImageLayer,
54814:                                    public LayerD3D10
54814: {
54814: public:
54814:   ImageLayerD3D10(LayerManagerD3D10 *aManager)
54814:     : ImageLayer(aManager, NULL)
54814:     , LayerD3D10(aManager)
54814:   {
54814:     mImplData = static_cast<LayerD3D10*>(this);
54814:   }
54814: 
54814:   // LayerD3D10 Implementation
54814:   virtual Layer* GetLayer();
54814: 
54814:   virtual void RenderLayer(float aOpacity, const gfx3DMatrix &aTransform);
54814: };
54814: 
54814: class THEBES_API ImageD3D10
54814: {
54814: public:
54814:   virtual already_AddRefed<gfxASurface> GetAsSurface() = 0;
54814: };
54814: 
54814: class THEBES_API PlanarYCbCrImageD3D10 : public PlanarYCbCrImage,
54814:                                          public ImageD3D10
54814: {
54814: public:
54814:   PlanarYCbCrImageD3D10(LayerManagerD3D10 *aManager);
54814:   ~PlanarYCbCrImageD3D10() {}
54814: 
54814:   virtual void SetData(const Data &aData);
54814: 
54814:   /*
54814:    * Upload the data from out mData into our textures. For now we use this to
54814:    * make sure the textures are created and filled on the main thread.
54814:    */
54814:   void AllocateTextures();
54814: 
54814:   PRBool HasData() { return mHasData; }
54814: 
54814:   virtual already_AddRefed<gfxASurface> GetAsSurface();
54814: 
54814:   nsAutoArrayPtr<PRUint8> mBuffer;
56117:   nsRefPtr<ID3D10Device1> mDevice;
54814:   Data mData;
54814:   gfxIntSize mSize;
54814:   nsRefPtr<ID3D10Texture2D> mYTexture;
54814:   nsRefPtr<ID3D10Texture2D> mCrTexture;
54814:   nsRefPtr<ID3D10Texture2D> mCbTexture;
54814:   nsRefPtr<ID3D10ShaderResourceView> mYView;
54814:   nsRefPtr<ID3D10ShaderResourceView> mCbView;
54814:   nsRefPtr<ID3D10ShaderResourceView> mCrView;
54814:   PRPackedBool mHasData;
54814:   gfx::YUVType mType; 
54814: };
54814: 
54814: 
54814: class THEBES_API CairoImageD3D10 : public CairoImage,
54814:                                    public ImageD3D10
54814: {
54814: public:
54814:   CairoImageD3D10(LayerManagerD3D10 *aManager)
54814:     : CairoImage(static_cast<ImageD3D10*>(this))
54814:     , mManager(aManager)
54814:   { }
54814:   ~CairoImageD3D10();
54814: 
54814:   virtual void SetData(const Data &aData);
54814: 
54814:   virtual already_AddRefed<gfxASurface> GetAsSurface();
54814: 
54814:   nsRefPtr<ID3D10Texture2D> mTexture;
54814:   nsRefPtr<ID3D10ShaderResourceView> mSRView;
54814:   gfxIntSize mSize;
54814:   LayerManagerD3D10 *mManager;
54814: };
54814: 
54814: } /* layers */
54814: } /* mozilla */
54814: #endif /* GFX_IMAGELAYERD3D10_H */

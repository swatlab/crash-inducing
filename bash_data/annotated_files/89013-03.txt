    1: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
    1: /* ***** BEGIN LICENSE BLOCK *****
    1:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
    1:  *
    1:  * The contents of this file are subject to the Mozilla Public License Version
    1:  * 1.1 (the "License"); you may not use this file except in compliance with
    1:  * the License. You may obtain a copy of the License at
    1:  * http://www.mozilla.org/MPL/
    1:  *
    1:  * Software distributed under the License is distributed on an "AS IS" basis,
    1:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
    1:  * for the specific language governing rights and limitations under the
    1:  * License.
    1:  *
    1:  * The Original Code is mozilla.org code.
    1:  *
    1:  * The Initial Developer of the Original Code is
    1:  * Netscape Communications Corporation.
    1:  * Portions created by the Initial Developer are Copyright (C) 1998
    1:  * the Initial Developer. All Rights Reserved.
    1:  *
    1:  * Contributor(s):
    1:  *   John Gaunt (jgaunt@netscape.com)
    1:  *
    1:  * Alternatively, the contents of this file may be used under the terms of
    1:  * either of the GNU General Public License Version 2 or later (the "GPL"),
    1:  * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
    1:  * in which case the provisions of the GPL or the LGPL are applicable instead
    1:  * of those above. If you wish to allow use of your version of this file only
    1:  * under the terms of either the GPL or the LGPL, and not to allow others to
    1:  * use your version of this file under the terms of the MPL, indicate your
    1:  * decision by deleting the provisions above and replace them with the notice
    1:  * and other provisions required by the GPL or the LGPL. If you do not delete
    1:  * the provisions above, a recipient may use your version of this file under
    1:  * the terms of any one of the MPL, the GPL or the LGPL.
    1:  *
    1:  * ***** END LICENSE BLOCK ***** */
    1: 
    1: #ifndef _nsBaseWidgetAccessible_H_
    1: #define _nsBaseWidgetAccessible_H_
    1: 
    1: #include "nsAccessibleWrap.h"
  966: #include "nsHyperTextAccessibleWrap.h"
    1: #include "nsIContent.h"
    1: 
    1: /**
    1:   * This file contains a number of classes that are used as base
    1:   *  classes for the different accessibility implementations of
    1:   *  the HTML and XUL widget sets.  --jgaunt
    1:   */
    1: 
    1: /** 
    1:   * Leaf version of DOM Accessible -- has no children
    1:   */
    1: class nsLeafAccessible : public nsAccessibleWrap
    1: {
    1: public:
50861: 
43504:   nsLeafAccessible(nsIContent *aContent, nsIWeakReference *aShell);
28197: 
28197:   // nsISupports
    1:   NS_DECL_ISUPPORTS_INHERITED
28197: 
28197:   // nsAccessible
72477:   virtual nsAccessible* ChildAtPoint(PRInt32 aX, PRInt32 aY,
64131:                                      EWhichChildAtPoint aWhichChild);
34240: 
34240: protected:
34240: 
34240:   // nsAccessible
34240:   virtual void CacheChildren();
    1: };
    1: 
    1: /**
34199:  * Used for text or image accessible nodes contained by link accessibles or
34199:  * accessibles for nodes with registered click event handler. It knows how to
34199:  * report the state of the host link (traveled or not) and can activate (click)
34199:  * the host accessible programmatically.
    1:  */
34199: class nsLinkableAccessible : public nsAccessibleWrap
    1: {
    1: public:
    1:   enum { eAction_Jump = 0 };
    1: 
43504:   nsLinkableAccessible(nsIContent *aContent, nsIWeakReference *aShell);
13223: 
    1:   NS_DECL_ISUPPORTS_INHERITED
13223: 
13223:   // nsIAccessible
    1:   NS_IMETHOD GetActionName(PRUint8 aIndex, nsAString& aName);
    1:   NS_IMETHOD DoAction(PRUint8 index);
    1:   NS_IMETHOD GetValue(nsAString& _retval);
    1:   NS_IMETHOD TakeFocus();
13223: 
21169:   // nsAccessNode
43538:   virtual void Shutdown();
    1: 
21256:   // nsAccessible
67790:   virtual PRUint64 NativeState();
21256: 
74014:   // ActionAccessible
74781:   virtual PRUint8 ActionCount();
74014:   virtual KeyBinding AccessKey() const;
74014: 
51810:   // HyperLinkAccessible
72483:   virtual already_AddRefed<nsIURI> AnchorURIAt(PRUint32 aAnchorIndex);
51810: 
    1: protected:
57414:   // nsAccessible
57414:   virtual void BindToParent(nsAccessible* aParent, PRUint32 aIndexInParent);
89013:   virtual void UnbindFromParent();
57414: 
13223:   /**
70183:    * Parent accessible that provides an action for this linkable accessible.
13223:    */
70183:   nsAccessible* mActionAcc;
79445:   bool mIsLink;
79445:   bool mIsOnclick;
    1: };
    1: 
    1: /**
    1:  * A simple accessible that gets its enumerated role passed into constructor.
    1:  */ 
    1: class nsEnumRoleAccessible : public nsAccessibleWrap
    1: {
    1: public:
43504:   nsEnumRoleAccessible(nsIContent *aContent, nsIWeakReference *aShell,
87094:                        mozilla::a11y::role aRole);
    1:   virtual ~nsEnumRoleAccessible() { }
25822: 
    1:   NS_DECL_ISUPPORTS_INHERITED
25822: 
25822:   // nsAccessible
87094:   virtual mozilla::a11y::role NativeRole();
    1: 
    1: protected:
87094:   mozilla::a11y::role mRole;
    1: };
    1: 
    1: #endif  

62472: /* -*- Mode: C++; tab-width: 20; indent-tabs-mode: nil; c-basic-offset: 2 -*-
62472:  * ***** BEGIN LICENSE BLOCK *****
62472:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
62472:  *
62472:  * The contents of this file are subject to the Mozilla Public License Version
62472:  * 1.1 (the "License"); you may not use this file except in compliance with
62472:  * the License. You may obtain a copy of the License at
62472:  * http://www.mozilla.org/MPL/
62472:  *
62472:  * Software distributed under the License is distributed on an "AS IS" basis,
62472:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
62472:  * for the specific language governing rights and limitations under the
62472:  * License.
62472:  *
62472:  * The Original Code is Mozilla Corporation code.
62472:  *
62472:  * The Initial Developer of the Original Code is Mozilla Foundation.
62472:  * Portions created by the Initial Developer are Copyright (C) 2009
62472:  * the Initial Developer. All Rights Reserved.
62472:  *
62472:  * Contributor(s):
62472:  *   Matt Woodrow <mwoodrow@mozilla.com>
62472:  *
62472:  * Alternatively, the contents of this file may be used under the terms of
62472:  * either the GNU General Public License Version 2 or later (the "GPL"), or
62472:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
62472:  * in which case the provisions of the GPL or the LGPL are applicable instead
62472:  * of those above. If you wish to allow use of your version of this file only
62472:  * under the terms of either the GPL or the LGPL, and not to allow others to
62472:  * use your version of this file under the terms of the MPL, indicate your
62472:  * decision by deleting the provisions above and replace them with the notice
62472:  * and other provisions required by the GPL or the LGPL. If you do not delete
62472:  * the provisions above, a recipient may use your version of this file under
62472:  * the terms of any one of the MPL, the GPL or the LGPL.
62472:  *
62472:  * ***** END LICENSE BLOCK ***** */
62472: 
62472: #include "ImageLayerOGL.h"
62472: #include "MacIOSurfaceImageOGL.h"
62472: #include <AppKit/NSOpenGL.h>
62472: #include "OpenGL/OpenGL.h"
62472: 
62472: using namespace mozilla::gl;
62472: 
62472: namespace mozilla {
62472: namespace layers {
62472: 
62472: MacIOSurfaceImageOGL::MacIOSurfaceImageOGL(LayerManagerOGL *aManager)
68239:   : MacIOSurfaceImage(nsnull), mSize(0, 0), mPluginInstanceOwner(nsnull),
68239:     mUpdateCallback(nsnull), mDestroyCallback(nsnull)
62472: {
62472:   NS_ASSERTION(NS_IsMainThread(), "Should be on main thread to create a cairo image");
62472: 
62472:   if (aManager) {
62472:     // Allocate texture now to grab a reference to the GLContext
62472:     GLContext *gl = aManager->glForResources();
62472:     mTexture.Allocate(gl);
62472:     gl->fBindTexture(LOCAL_GL_TEXTURE_RECTANGLE_ARB, mTexture.GetTextureID());
62472:     gl->fTexParameteri(LOCAL_GL_TEXTURE_RECTANGLE_ARB, 
62472:                        LOCAL_GL_TEXTURE_MIN_FILTER, 
62472:                        LOCAL_GL_NEAREST);
62472:     gl->fTexParameteri(LOCAL_GL_TEXTURE_RECTANGLE_ARB, 
62472:                        LOCAL_GL_TEXTURE_MAG_FILTER, 
62472:                        LOCAL_GL_NEAREST);
62472:     gl->fBindTexture(LOCAL_GL_TEXTURE_RECTANGLE_ARB, 0);
62472:   }
62472: }
62472: 
68239: MacIOSurfaceImageOGL::~MacIOSurfaceImageOGL()
68239: {
68239:   if (mDestroyCallback) {
68239:     mDestroyCallback(mPluginInstanceOwner);
68239:   }
68239: }
68239: 
62472: void
62472: MacIOSurfaceImageOGL::SetData(const MacIOSurfaceImage::Data &aData)
62472: {
62472:   mIOSurface = nsIOSurface::LookupSurface(aData.mIOSurface->GetIOSurfaceID());
62472:   mSize = gfxIntSize(mIOSurface->GetWidth(), mIOSurface->GetHeight());
62472:   
62472:   GLContext *gl = mTexture.GetGLContext();
62472:   gl->MakeCurrent();
62472:     
62472:   gl->fActiveTexture(LOCAL_GL_TEXTURE0);
62472:   gl->fBindTexture(LOCAL_GL_TEXTURE_RECTANGLE_ARB, mTexture.GetTextureID());
62472: 
62472:   void *nativeCtx = gl->GetNativeData(GLContext::NativeGLContext);
62472:   NSOpenGLContext* nsCtx = (NSOpenGLContext*)nativeCtx;
62472: 
62472:   mIOSurface->CGLTexImageIOSurface2D((CGLContextObj)[nsCtx CGLContextObj],
62472:                                      LOCAL_GL_RGBA, LOCAL_GL_BGRA,
62472:                                      LOCAL_GL_UNSIGNED_INT_8_8_8_8_REV, 0);
62472:   
62472:   gl->fBindTexture(LOCAL_GL_TEXTURE_RECTANGLE_ARB, 0);
62472: }
62472: 
62724: void
68239: MacIOSurfaceImageOGL::SetUpdateCallback(UpdateSurfaceCallback aCallback, void* aPluginInstanceOwner)
62724: {
68239:   mUpdateCallback = aCallback;
68239:   mPluginInstanceOwner = aPluginInstanceOwner;
68239: }
68239: 
68239: void
68239: MacIOSurfaceImageOGL::SetDestroyCallback(DestroyCallback aCallback)
68239: {
68239:   mDestroyCallback = aCallback;
62724: }
62724: 
62724: void 
62724: MacIOSurfaceImageOGL::Update(ImageContainer* aContainer)
62724: {
68239:   if (mUpdateCallback) {
68239:     mUpdateCallback(aContainer, mPluginInstanceOwner);
62724:   }
62724: }
62724: 
62472: } /* layers */
68239: } /* mozilla */

 87427: /* Any copyright is dedicated to the Public Domain.
 87427:    http://creativecommons.org/publicdomain/zero/1.0/ */
 87427: "use strict";
 87427: 
100193: let tiltOpened = false;
100193: 
 87427: function test() {
 87427:   if (!isTiltEnabled()) {
 87427:     info("Skipping destruction test because Tilt isn't enabled.");
 87427:     return;
 87427:   }
 87427:   if (!isWebGLSupported()) {
 87427:     info("Skipping destruction test because WebGL isn't supported.");
 87427:     return;
 87427:   }
 87427: 
 87427:   waitForExplicitFinish();
 87427: 
 87427:   createTab(function() {
 87427:     createTilt({
 87427:       onTiltOpen: function()
 87427:       {
100193:         tiltOpened = true;
100193: 
100193:         Services.obs.addObserver(finalize, DESTROYED, false);
 87427:         window.content.location = "about:mozilla";
 87427:       }
100193:     }, false, function suddenDeath()
100193:     {
100193:       info("Tilt could not be initialized properly.");
100193:       cleanup();
 87427:     });
 87427:   });
 87427: }
 87427: 
100193: function finalize() {
 87427:   let id = TiltUtils.getWindowId(gBrowser.selectedBrowser.contentWindow);
 87427: 
 87427:   is(Tilt.visualizers[id], null,
 87427:     "The current instance of the visualizer wasn't destroyed properly.");
 87427: 
100193:   cleanup();
100193: }
100193: 
100193: function cleanup() {
100193:   if (tiltOpened) { Services.obs.removeObserver(finalize, DESTROYED); }
 87427:   gBrowser.removeCurrentTab();
 87427:   finish();
 87427: }

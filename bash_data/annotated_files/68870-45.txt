20793: /* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
20793: /* ***** BEGIN LICENSE BLOCK *****
20793:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
20793:  *
20793:  * The contents of this file are subject to the Mozilla Public License Version
20793:  * 1.1 (the "License"); you may not use this file except in compliance with
20793:  * the License. You may obtain a copy of the License at
20793:  * http://www.mozilla.org/MPL/
20793:  *
20793:  * Software distributed under the License is distributed on an "AS IS" basis,
20793:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
20793:  * for the specific language governing rights and limitations under the
20793:  * License.
20793:  *
20793:  * The Original Code is mozilla.org code.
20793:  *
20793:  * The Initial Developer of the Original Code is
20793:  * Thomas K. Dyas <tdyas@zecador.org>.
20793:  * Portions created by the Initial Developer are Copyright (C) 2008
20793:  * the Initial Developer. All Rights Reserved.
20793:  *
20793:  * Contributor(s):
20793:  *
20793:  * Alternatively, the contents of this file may be used under the terms of
20793:  * either the GNU General Public License Version 2 or later (the "GPL"), or
20793:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
20793:  * in which case the provisions of the GPL or the LGPL are applicable instead
20793:  * of those above. If you wish to allow use of your version of this file only
20793:  * under the terms of either the GPL or the LGPL, and not to allow others to
20793:  * use your version of this file under the terms of the MPL, indicate your
20793:  * decision by deleting the provisions above and replace them with the notice
20793:  * and other provisions required by the GPL or the LGPL. If you do not delete
20793:  * the provisions above, a recipient may use your version of this file under
20793:  * the terms of any one of the MPL, the GPL or the LGPL.
20793:  *
20793:  * ***** END LICENSE BLOCK ***** */
20793: 
20793: 
25058: #include "nsIDOMMouseEvent.idl"
20793: 
20793: /**
20793:  * The nsIDOMSimpleGestureEvent interface is the datatype for all
25058:  * Mozilla-specific simple gesture events in the Document Object Model.
20793:  *
20793:  * The following events are generated:
20793:  *
26874:  * MozSwipeGesture - Generated when the user completes a swipe across
20793:  * across the input device.
20793:  *
20793:  * MozMagnifyGestureStart - Generated when the user begins the magnify
20793:  * ("pinch") gesture.  The "delta" value represents the initial
20793:  * movement.
20793:  *
20793:  * MozMagnifyGestureUpdate - Generated periodically while the user is
20793:  * continuing the magnify ("pinch") gesture.  The "delta" value
20793:  * represents the movement since the last MozMagnifyGestureStart or
20793:  * MozMagnifyGestureUpdate event.
20793:  *
20793:  * MozMagnifyGesture - Generated when the user has completed the
20793:  * magnify ("pinch") gesture.  If you only want to receive a single
20793:  * event when the magnify gesture is complete, you only need to hook
20793:  * this event and can safely ignore the MozMagnifyGestureStart and the
20793:  * MozMagnifyGestureUpdate events. The "delta" value is the cumulative
20793:  * amount represented by the user's gesture.
20793:  *
20793:  * MozRotateGestureStart - Generated when the user begins the rotation
20793:  * gesture.  The "delta" value represents the initial rotation.
20793:  *
20793:  * MozRotateGestureUpdate - Generated periodically while the user is
20793:  * continuing the rotation gesture.  The "delta" value represents the
20793:  * rotation since the last MozRotateGestureStart or
20793:  * MozRotateGestureUpdate event.
20793:  *
20793:  * MozRotateGesture - Generated when the user has completed the
20793:  * rotation gesture.  If you only want to receive a single event when
20793:  * the rotation gesture is complete, you only need to hook this event
20793:  * and can safely ignore the MozRotateGestureStart and the
20793:  * MozRotateGestureUpdate events.  The "delta" value is the cumulative
20793:  * amount of rotation represented by the user's gesture.
26874:  *
26874:  * MozTapGesture - Generated when the user executes a two finger
26874:  * tap gesture on the input device. Client coordinates contain the
26874:  * center point of the tap.
26874:  * (XXX Not implemented on Mac)
26874:  *
26874:  * MozPressTapGesture - Generated when the user executes a press
26874:  * and tap two finger gesture (first finger down, second finger down,
26874:  * second finger up, first finger up) on the input device.
26874:  * Client coordinates contain the center pivot point of the action.
26874:  * (XXX Not implemented on Mac)
26874:  *
26874:  * Default behavior:
26874:  *
26874:  * Some operating systems support default behaviors for gesture events
26874:  * when they are not handled by the application. Consumers should
26874:  * use event.preventDefault() to prevent default behavior when
26874:  * consuming events.
20793:  */
20793: 
68870: [scriptable, uuid(cb68e879-f710-415d-a871-9a550860df01)]
25058: interface nsIDOMSimpleGestureEvent : nsIDOMMouseEvent
20793: {
26874:   /* Swipe direction constants */
20793:   const unsigned long DIRECTION_UP = 1;
20793:   const unsigned long DIRECTION_DOWN = 2;
20793:   const unsigned long DIRECTION_LEFT = 4;
20793:   const unsigned long DIRECTION_RIGHT = 8;
20793:   
26874:   /* Rotational direction constants */
26874:   const unsigned long ROTATION_COUNTERCLOCKWISE = 1;
26874:   const unsigned long ROTATION_CLOCKWISE = 2;
26874: 
20793:   /* Direction of a gesture. Diagonals are indicated by OR'ing the
20793:    * applicable constants together.
20793:    *
20793:    * Swipes gestures may occur in any direction.
20793:    *
20793:    * Magnify gestures do not have a direction.
20793:    *
26874:    * Rotation gestures will be either ROTATION_COUNTERCLOCKWISE or
26874:    * ROTATION_CLOCKWISE.
20793:    */
20793:   readonly attribute unsigned long direction;
20793: 
20793:   /* Delta value for magnify and rotate gestures.
20793:    * 
20793:    * For rotation, the value is in degrees and is positive for
20793:    * clockwise rotation and negative for counterclockwise
26874:    * rotation.
20793:    *
20793:    * For magnification, the value will be positive for a "zoom in"
20793:    * (i.e, increased magnification) and negative for a "zoom out"
20793:    * (i.e., decreased magnification).  The particular units
20793:    * represented by the "delta" are currently implementation specific.
20793:    *
20793:    * XXX - The units for measuring magnification are currently
20793:    * unspecified because the units used by Mac OS X are currently
20793:    * undocumented.  The values are typically in the range of 0.0 to
20793:    * 100.0, but it is only safe currently to rely on the delta being
20793:    * positive or negative.
26874:    *
26874:    * Units on Windows represent the difference between the initial
26874:    * and current/final width between the two touch points on the input
26874:    * device and are measured in pixels.
20793:    */
20793:   readonly attribute double delta;
20793: 
20793:   void initSimpleGestureEvent(in DOMString typeArg,
20793:                               in boolean canBubbleArg,
20793:                               in boolean cancelableArg,
68870:                               in nsIDOMAbstractView viewArg,
20793:                               in long detailArg,
25058:                               in long screenXArg,
25058:                               in long screenYArg,
25058:                               in long clientXArg,
25058:                               in long clientYArg,
25058:                               in boolean ctrlKeyArg,
25058:                               in boolean altKeyArg,
25058:                               in boolean shiftKeyArg,
25058:                               in boolean metaKeyArg,
25058:                               in unsigned short buttonArg,
25058:                               in nsIDOMEventTarget relatedTargetArg,
20793:                               in unsigned long directionArg,
25058:                               in double deltaArg);
20793: };

    1: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
    1: /* ***** BEGIN LICENSE BLOCK *****
    1:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
    1:  *
    1:  * The contents of this file are subject to the Mozilla Public License Version
    1:  * 1.1 (the "License"); you may not use this file except in compliance with
    1:  * the License. You may obtain a copy of the License at
    1:  * http://www.mozilla.org/MPL/
    1:  *
    1:  * Software distributed under the License is distributed on an "AS IS" basis,
    1:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
    1:  * for the specific language governing rights and limitations under the
    1:  * License.
    1:  *
    1:  * The Original Code is Mozilla Communicator client code.
    1:  *
    1:  * The Initial Developer of the Original Code is
    1:  * Netscape Communications Corporation.
    1:  * Portions created by the Initial Developer are Copyright (C) 1998
    1:  * the Initial Developer. All Rights Reserved.
    1:  *
    1:  * Contributor(s):
    1:  *   Pierre Phaneuf <pp@ludusdesign.com>
    1:  *
    1:  * Alternatively, the contents of this file may be used under the terms of
    1:  * either of the GNU General Public License Version 2 or later (the "GPL"),
    1:  * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
    1:  * in which case the provisions of the GPL or the LGPL are applicable instead
    1:  * of those above. If you wish to allow use of your version of this file only
    1:  * under the terms of either the GPL or the LGPL, and not to allow others to
    1:  * use your version of this file under the terms of the MPL, indicate your
    1:  * decision by deleting the provisions above and replace them with the notice
    1:  * and other provisions required by the GPL or the LGPL. If you do not delete
    1:  * the provisions above, a recipient may use your version of this file under
    1:  * the terms of any one of the MPL, the GPL or the LGPL.
    1:  *
    1:  * ***** END LICENSE BLOCK ***** */
    1: 
46852: #ifdef MOZ_IPC
46852: #include "base/basictypes.h"
46852: #endif
46852: 
41899: #include "xpcmodule.h"
46997: #include "mozilla/ModuleUtils.h"
    1: #include "nsLayoutStatics.h"
    1: #include "nsContentCID.h"
    1: #include "nsContentDLF.h"
    1: #include "nsContentPolicyUtils.h"
    1: #include "nsDataDocumentContentPolicy.h"
    1: #include "nsNoDataProtocolContentPolicy.h"
    1: #include "nsDOMCID.h"
    1: #include "nsHTMLContentSerializer.h"
    1: #include "nsHTMLParts.h"
    1: #include "nsGenericHTMLElement.h"
    1: #include "nsIComponentManager.h"
    1: #include "nsIContentIterator.h"
    1: #include "nsIContentSerializer.h"
    1: #include "nsIController.h"
    1: #include "nsIControllers.h"
    1: #include "nsIDOMDOMImplementation.h"
    1: #include "nsIDOMEventGroup.h"
    1: #include "nsIDOMRange.h"
    1: #include "nsIDocument.h"
    1: #include "nsIDocumentEncoder.h"
    1: #include "nsIDocumentViewer.h"
    1: #include "nsIEventListenerManager.h"
    1: #include "nsIFactory.h"
    1: #include "nsFrameSelection.h"
    1: #include "nsIFrameUtil.h"
    1: #include "nsIFragmentContentSink.h"
    1: #include "nsHTMLStyleSheet.h"
    1: #include "nsIHTMLToTextSink.h"
    1: #include "nsILayoutDebugger.h"
    1: #include "nsINameSpaceManager.h"
    1: #include "nsINodeInfo.h"
    1: #include "nsIObserver.h"
    1: #include "nsIObserverService.h"
    1: #include "nsIPresShell.h"
    1: #include "nsIRangeUtils.h"
    1: #include "nsIScriptNameSpaceManager.h"
    1: #include "nsISelection.h"
    1: #include "nsIXBLService.h"
15969: #include "nsCaret.h"
    1: #include "nsPlainTextSerializer.h"
    1: #include "mozSanitizingSerializer.h"
    1: #include "nsXMLContentSerializer.h"
27852: #include "nsXHTMLContentSerializer.h"
    1: #include "nsRuleNode.h"
    1: #include "nsContentAreaDragDrop.h"
    1: #include "nsContentList.h"
    1: #include "nsSyncLoadService.h"
    1: #include "nsBox.h"
    1: #include "nsIFrameTraversal.h"
    1: #include "nsLayoutCID.h"
    1: #include "nsILanguageAtomService.h"
    1: #include "nsStyleSheetService.h"
 8408: #include "nsXULPopupManager.h"
29018: #include "nsFocusManager.h"
41486: #include "nsIContentUtils.h"
56094: #include "ThirdPartyUtil.h"
41540: #include "mozilla/Services.h"
    1: 
33903: #include "nsIEventListenerService.h"
43461: #include "nsIFrameMessageManager.h"
43461: 
    1: // Transformiix stuff
    1: #include "nsXPathEvaluator.h"
    1: #include "txMozillaXSLTProcessor.h"
    1: #include "txNodeSetAdaptor.h"
    1: #include "nsXPath1Scheme.h"
    1: 
    1: #include "nsDOMParser.h"
    1: #include "nsDOMSerializer.h"
    1: #include "nsXMLHttpRequest.h"
40658: #include "nsChannelPolicy.h"
43833: #include "nsWebSocket.h"
57827: #include "nsDOMWorker.h"
    1: 
    1: // view stuff
    1: #include "nsViewsCID.h"
    1: #include "nsViewManager.h"
    1: #include "nsContentCreatorFunctions.h"
    1: 
    1: // DOM includes
    1: #include "nsDOMException.h"
34695: #include "nsDOMFileReader.h"
38679: #include "nsFormData.h"
38871: #include "nsFileDataProtocolHandler.h"
    1: #include "nsGlobalWindowCommands.h"
    1: #include "nsIControllerCommandTable.h"
    1: #include "nsJSProtocolHandler.h"
    1: #include "nsScriptNameSpaceManager.h"
    1: #include "nsIControllerContext.h"
    1: #include "nsDOMScriptObjectFactory.h"
    1: #include "nsDOMStorage.h"
 9695: #include "nsJSON.h"
52412: #include "mozilla/dom/indexedDB/IndexedDatabaseManager.h"
52412: 
52412: using mozilla::dom::indexedDB::IndexedDatabaseManager;
    1: 
    1: // Editor stuff
    1: #include "nsEditorCID.h"
    1: #include "nsEditor.h"
    1: #include "nsPlaintextEditor.h"
    1: #include "nsEditorController.h" //CID
    1: #include "nsIController.h"
    1: #include "nsIControllerContext.h"
    1: #include "nsIControllerCommandTable.h"
    1: 
    1: #ifndef MOZILLA_PLAINTEXT_EDITOR_ONLY
    1: #include "nsHTMLEditor.h"
    1: #include "nsTextServicesDocument.h"
    1: #include "nsTextServicesCID.h"
    1: #endif
    1: 
41899: #include "nsScriptSecurityManager.h"
41899: #include "nsPrincipal.h"
41899: #include "nsSystemPrincipal.h"
41899: #include "nsNullPrincipal.h"
41899: #include "nsNetCID.h"
48124: #include "nsINodeInfo.h"
58004: #if defined(ANDROID) || defined(MOZ_PLATFORM_MAEMO)
57998: #include "nsHapticFeedback.h"
57998: #endif
41899: 
    1: #define NS_EDITORCOMMANDTABLE_CID \
    1: { 0x4f5e62b8, 0xd659, 0x4156, { 0x84, 0xfc, 0x2f, 0x60, 0x99, 0x40, 0x03, 0x69 }}
    1: 
57998: #define NS_HAPTICFEEDBACK_CID \
57998: { 0x1f15dbc8, 0xbfaa, 0x45de, \
57998: { 0x8a, 0x46, 0x08, 0xe2, 0xe2, 0x63, 0x26, 0xb0 } }
57998: 
    1: static NS_DEFINE_CID(kEditorCommandTableCID, NS_EDITORCOMMANDTABLE_CID);
    1: 
    1: NS_GENERIC_FACTORY_CONSTRUCTOR(nsPlaintextEditor)
    1: 
    1: // Constructor of a controller which is set up to use, internally, a
    1: // singleton command-table pre-filled with editor commands.
46997: static nsresult
    1: nsEditorControllerConstructor(nsISupports *aOuter, REFNSIID aIID,
    1:                                             void **aResult)
    1: {
    1:   nsresult rv;
    1:   nsCOMPtr<nsIController> controller = do_CreateInstance("@mozilla.org/embedcomp/base-command-controller;1", &rv);
    1:   if (NS_FAILED(rv)) return rv;
    1: 
    1:   nsCOMPtr<nsIControllerCommandTable> editorCommandTable = do_GetService(kEditorCommandTableCID, &rv);
    1:   if (NS_FAILED(rv)) return rv;
    1:   
    1:   // this guy is a singleton, so make it immutable
    1:   editorCommandTable->MakeImmutable();
    1:   
    1:   nsCOMPtr<nsIControllerContext> controllerContext = do_QueryInterface(controller, &rv);
    1:   if (NS_FAILED(rv)) return rv;
    1:   
    1:   rv = controllerContext->Init(editorCommandTable);
    1:   if (NS_FAILED(rv)) return rv;
    1:   
    1:   return controller->QueryInterface(aIID, aResult);
    1: }
    1: 
    1: 
    1: // Constructor for a command-table pref-filled with editor commands
46997: static nsresult
    1: nsEditorCommandTableConstructor(nsISupports *aOuter, REFNSIID aIID,
    1:                                             void **aResult)
    1: {
    1:   nsresult rv;
    1:   nsCOMPtr<nsIControllerCommandTable> commandTable =
    1:       do_CreateInstance(NS_CONTROLLERCOMMANDTABLE_CONTRACTID, &rv);
    1:   if (NS_FAILED(rv)) return rv;
    1:   
    1:   rv = nsEditorController::RegisterEditorCommands(commandTable);
    1:   if (NS_FAILED(rv)) return rv;
    1:   
    1:   // we don't know here whether we're being created as an instance,
    1:   // or a service, so we can't become immutable
    1: 
    1:   return commandTable->QueryInterface(aIID, aResult);
    1: }
    1: 
    1: 
    1: #ifndef MOZILLA_PLAINTEXT_EDITOR_ONLY
    1: NS_GENERIC_FACTORY_CONSTRUCTOR(nsTextServicesDocument)
    1: #ifdef ENABLE_EDITOR_API_LOG
    1: #include "nsHTMLEditorLog.h"
    1: NS_GENERIC_FACTORY_CONSTRUCTOR(nsHTMLEditorLog)
    1: #else
    1: NS_GENERIC_FACTORY_CONSTRUCTOR(nsHTMLEditor)
    1: #endif
    1: #endif
    1: 
    1: #include "nsHTMLCanvasFrame.h"
    1: 
    1: #include "nsIDOMCanvasRenderingContext2D.h"
57635: #include "nsIDOMWebGLRenderingContext.h"
    1: 
    1: class nsIDocumentLoaderFactory;
    1: 
    1: #define PRODUCT_NAME "Gecko"
    1: 
    1: #define NS_HTMLIMGELEMENT_CONTRACTID \
    1:   "@mozilla.org/content/element/html;1?name=img"
    1: 
    1: #define NS_HTMLOPTIONELEMENT_CONTRACTID \
    1:   "@mozilla.org/content/element/html;1?name=option"
    1: 
28568: #ifdef MOZ_MEDIA
28568: #define NS_HTMLAUDIOELEMENT_CONTRACTID \
28568:   "@mozilla.org/content/element/html;1?name=audio"
28568: #endif
28568: 
    1: /* 0ddf4df8-4dbb-4133-8b79-9afb966514f5 */
    1: #define NS_PLUGINDOCLOADERFACTORY_CID \
    1: { 0x0ddf4df8, 0x4dbb, 0x4133, { 0x8b, 0x79, 0x9a, 0xfb, 0x96, 0x65, 0x14, 0xf5 } }
    1: 
    1: #define NS_WINDOWCOMMANDTABLE_CID \
    1:  { /* 0DE2FBFA-6B7F-11D7-BBBA-0003938A9D96 */        \
    1:   0x0DE2FBFA, 0x6B7F, 0x11D7, {0xBB, 0xBA, 0x00, 0x03, 0x93, 0x8A, 0x9D, 0x96} }
    1: 
    1: static NS_DEFINE_CID(kWindowCommandTableCID, NS_WINDOWCOMMANDTABLE_CID);
    1: 
    1: #include "nsIBoxObject.h"
    1: 
 3604: #ifdef MOZ_XUL
    1: #include "inDOMView.h"
 3604: #endif /* MOZ_XUL */
 3604: 
    1: #include "inDeepTreeWalker.h"
    1: #include "inFlasher.h"
    1: #include "inCSSValueSearch.h"
    1: #include "inDOMUtils.h"
 3604: 
 3604: #ifdef MOZ_XUL
 3604: #include "nsIXULDocument.h"
 3604: #include "nsIXULPrototypeCache.h"
 3604: #include "nsIXULSortService.h"
    1: 
46997: nsresult
    1: NS_NewXULContentBuilder(nsISupports* aOuter, REFNSIID aIID, void** aResult);
    1: 
46997: nsresult
    1: NS_NewXULTreeBuilder(nsISupports* aOuter, REFNSIID aIID, void** aResult);
    1: #endif
    1: 
48378: nsresult
48378: NS_NewDOMImplementation(nsIDOMDOMImplementation**);
48378: 
    1: static void Shutdown();
    1: 
    1: #ifdef MOZ_XTF
    1: #include "nsIXTFService.h"
    1: #include "nsIXMLContentBuilder.h"
    1: #endif
    1: 
15958: #include "nsGeolocation.h"
46218: #if defined(XP_UNIX)    || \
46218:     defined(_WINDOWS)   || \
46218:     defined(machintosh) || \
46218:     defined(android)
46218: #include "nsAccelerometerSystem.h"
46218: #endif
37418: #include "nsCSPService.h"
15958: 
    1: // Transformiix
    1: /* {0C351177-0159-4500-86B0-A219DFDE4258} */
    1: #define TRANSFORMIIX_XPATH1_SCHEME_CID \
    1: { 0xc351177, 0x159, 0x4500, { 0x86, 0xb0, 0xa2, 0x19, 0xdf, 0xde, 0x42, 0x58 } }
    1: 
    1: /* 5d5d92cd-6bf8-11d9-bf4a-000a95dc234c */
    1: #define TRANSFORMIIX_NODESET_CID \
    1: { 0x5d5d92cd, 0x6bf8, 0x11d9, { 0xbf, 0x4a, 0x0, 0x0a, 0x95, 0xdc, 0x23, 0x4c } }
    1: 
    1: #define TRANSFORMIIX_NODESET_CONTRACTID \
    1: "@mozilla.org/transformiix-nodeset;1"
    1: 
    1: NS_GENERIC_FACTORY_CONSTRUCTOR(nsXPath1SchemeProcessor)
    1: 
    1: // Factory Constructor
    1: NS_GENERIC_FACTORY_CONSTRUCTOR(txMozillaXSLTProcessor)
    1: NS_GENERIC_AGGREGATED_CONSTRUCTOR_INIT(nsXPathEvaluator, Init)
    1: NS_GENERIC_FACTORY_CONSTRUCTOR_INIT(txNodeSetAdaptor, Init)
    1: NS_GENERIC_FACTORY_CONSTRUCTOR(nsDOMSerializer)
 8947: NS_GENERIC_FACTORY_CONSTRUCTOR_INIT(nsXMLHttpRequest, Init)
43833: NS_GENERIC_FACTORY_CONSTRUCTOR(nsWebSocket)
43833: NS_GENERIC_FACTORY_CONSTRUCTOR(nsWSProtocolHandler)
43833: NS_GENERIC_FACTORY_CONSTRUCTOR(nsWSSProtocolHandler)
34695: NS_GENERIC_FACTORY_CONSTRUCTOR_INIT(nsDOMFileReader, Init)
38679: NS_GENERIC_FACTORY_CONSTRUCTOR(nsFormData)
38871: NS_GENERIC_FACTORY_CONSTRUCTOR(nsFileDataProtocolHandler)
    1: NS_GENERIC_FACTORY_CONSTRUCTOR(nsDOMParser)
 6643: NS_GENERIC_FACTORY_SINGLETON_CONSTRUCTOR(nsDOMStorageManager,
 6643:                                          nsDOMStorageManager::GetInstance)
40658: NS_GENERIC_FACTORY_CONSTRUCTOR(nsChannelPolicy)
52412: NS_GENERIC_FACTORY_SINGLETON_CONSTRUCTOR(IndexedDatabaseManager,
56107:                                          IndexedDatabaseManager::FactoryCreate)
46218: #if defined(XP_UNIX)    || \
46218:     defined(_WINDOWS)   || \
46218:     defined(machintosh) || \
46218:     defined(android)
46218: NS_GENERIC_FACTORY_CONSTRUCTOR(nsAccelerometerSystem)
46218: #endif
56094: NS_GENERIC_FACTORY_CONSTRUCTOR_INIT(ThirdPartyUtil, Init)
57827: NS_GENERIC_FACTORY_CONSTRUCTOR(nsWorkerFactory)
58004: #if defined(ANDROID) || defined(MOZ_PLATFORM_MAEMO)
57998: NS_GENERIC_FACTORY_CONSTRUCTOR(nsHapticFeedback)
57998: #endif
    1: 
    1: //-----------------------------------------------------------------------------
    1: 
    1: // Per bug 209804, it is necessary to observe the "xpcom-shutdown" event and
    1: // perform shutdown of the layout modules at that time instead of waiting for
    1: // our module destructor to run.  If we do not do this, then we risk holding
    1: // references to objects in other component libraries that have already been
    1: // shutdown (and possibly unloaded if 60709 is ever fixed).
    1: 
    1: class LayoutShutdownObserver : public nsIObserver
    1: {
    1: public:
    1:   NS_DECL_ISUPPORTS
    1:   NS_DECL_NSIOBSERVER
    1: };
    1: 
    1: NS_IMPL_ISUPPORTS1(LayoutShutdownObserver, nsIObserver)
    1: 
    1: NS_IMETHODIMP
    1: LayoutShutdownObserver::Observe(nsISupports *aSubject,
    1:                                 const char *aTopic,
    1:                                 const PRUnichar *someData)
    1: {
    1:   if (!strcmp(aTopic, NS_XPCOM_SHUTDOWN_OBSERVER_ID))
    1:     Shutdown();
    1:   return NS_OK;
    1: }
    1: 
    1: //-----------------------------------------------------------------------------
    1: 
    1: static PRBool gInitialized = PR_FALSE;
    1: 
    1: // Perform our one-time intialization for this module
    1: 
    1: // static
20261: nsresult
46997: Initialize()
    1: {
    1:   if (gInitialized) {
62415:     NS_RUNTIMEABORT("Recursive layout module initialization");
46997:     return NS_ERROR_FAILURE;
    1:   }
    1: 
    1:   NS_ASSERTION(sizeof(PtrBits) == sizeof(void *),
    1:                "Eeek! You'll need to adjust the size of PtrBits to the size "
    1:                "of a pointer on your platform.");
    1: 
    1:   gInitialized = PR_TRUE;
    1: 
46997:   nsresult rv;
46997:   rv = xpcModuleCtor();
46997:   if (NS_FAILED(rv))
46997:     return rv;
46997: 
46997:   rv = nsLayoutStatics::Initialize();
    1:   if (NS_FAILED(rv)) {
    1:     Shutdown();
    1:     return rv;
    1:   }
    1: 
    1:   // Add our shutdown observer.
    1:   nsCOMPtr<nsIObserverService> observerService =
41540:     mozilla::services::GetObserverService();
    1: 
    1:   if (observerService) {
    1:     LayoutShutdownObserver* observer = new LayoutShutdownObserver();
    1: 
    1:     if (!observer) {
    1:       Shutdown();
    1: 
    1:       return NS_ERROR_OUT_OF_MEMORY;
    1:     }
    1: 
    1:     observerService->AddObserver(observer, NS_XPCOM_SHUTDOWN_OBSERVER_ID, PR_FALSE);
    1:   } else {
    1:     NS_WARNING("Could not get an observer service.  We will leak on shutdown.");
    1:   }
    1: 
    1:   return NS_OK;
    1: }
    1: 
    1: // Shutdown this module, releasing all of the module resources
    1: 
    1: // static
    1: void
    1: Shutdown()
    1: {
    1:   NS_PRECONDITION(gInitialized, "module not initialized");
    1:   if (!gInitialized)
    1:     return;
    1: 
    1:   gInitialized = PR_FALSE;
    1: 
    1:   nsLayoutStatics::Release();
    1: }
    1: 
    1: #ifdef NS_DEBUG
    1: nsresult NS_NewFrameUtil(nsIFrameUtil** aResult);
    1: nsresult NS_NewLayoutDebugger(nsILayoutDebugger** aResult);
    1: #endif
    1: 
10311: nsresult NS_NewBoxObject(nsIBoxObject** aResult);
10311: 
    1: #ifdef MOZ_XUL
    1: nsresult NS_NewListBoxObject(nsIBoxObject** aResult);
    1: nsresult NS_NewScrollBoxObject(nsIBoxObject** aResult);
    1: nsresult NS_NewMenuBoxObject(nsIBoxObject** aResult);
    1: nsresult NS_NewPopupBoxObject(nsIBoxObject** aResult);
    1: nsresult NS_NewContainerBoxObject(nsIBoxObject** aResult);
    1: nsresult NS_NewTreeBoxObject(nsIBoxObject** aResult);
    1: #endif
    1: 
    1: nsresult NS_NewCanvasRenderingContext2D(nsIDOMCanvasRenderingContext2D** aResult);
57635: nsresult NS_NewCanvasRenderingContextWebGL(nsIDOMWebGLRenderingContext** aResult);
    1: 
    1: nsresult NS_CreateFrameTraversal(nsIFrameTraversal** aResult);
    1: 
    1: nsresult NS_NewSelection(nsFrameSelection** aResult);
    1: nsresult NS_NewDomSelection(nsISelection** aResult);
    1: nsresult NS_NewDocumentViewer(nsIDocumentViewer** aResult);
    1: nsresult NS_NewRange(nsIDOMRange** aResult);
    1: nsresult NS_NewRangeUtils(nsIRangeUtils** aResult);
    1: nsresult NS_NewContentIterator(nsIContentIterator** aResult);
    1: nsresult NS_NewPreContentIterator(nsIContentIterator** aResult);
    1: nsresult NS_NewGenRegularIterator(nsIContentIterator** aResult);
    1: nsresult NS_NewContentSubtreeIterator(nsIContentIterator** aResult);
    1: nsresult NS_NewGenSubtreeIterator(nsIContentIterator** aInstancePtrResult);
    1: nsresult NS_NewContentDocumentLoaderFactory(nsIDocumentLoaderFactory** aResult);
    1: nsresult NS_NewHTMLCopyTextEncoder(nsIDocumentEncoder** aResult);
    1: nsresult NS_NewTextEncoder(nsIDocumentEncoder** aResult);
    1: nsresult NS_NewXBLService(nsIXBLService** aResult);
    1: nsresult NS_NewContentPolicy(nsIContentPolicy** aResult);
    1: nsresult NS_NewDOMEventGroup(nsIDOMEventGroup** aResult);
    1: 
33903: nsresult NS_NewEventListenerService(nsIEventListenerService** aResult);
43461: nsresult NS_NewGlobalMessageManager(nsIChromeFrameMessageManager** aResult);
51811: nsresult NS_NewParentProcessMessageManager(nsIFrameMessageManager** aResult);
51811: nsresult NS_NewChildProcessMessageManager(nsISyncMessageSender** aResult);
33903: 
46997: nsresult NS_NewXULControllers(nsISupports* aOuter, REFNSIID aIID, void** aResult);
    1: 
    1: #define MAKE_CTOR(ctor_, iface_, func_)                   \
46997: static nsresult                                           \
    1: ctor_(nsISupports* aOuter, REFNSIID aIID, void** aResult) \
    1: {                                                         \
    1:   *aResult = nsnull;                                      \
    1:   if (aOuter)                                             \
    1:     return NS_ERROR_NO_AGGREGATION;                       \
    1:   iface_* inst;                                           \
    1:   nsresult rv = func_(&inst);                             \
    1:   if (NS_SUCCEEDED(rv)) {                                 \
    1:     rv = inst->QueryInterface(aIID, aResult);             \
    1:     NS_RELEASE(inst);                                     \
    1:   }                                                       \
    1:   return rv;                                              \
    1: }
    1: 
    1: #ifdef DEBUG
    1: MAKE_CTOR(CreateNewFrameUtil,             nsIFrameUtil,                NS_NewFrameUtil)
    1: MAKE_CTOR(CreateNewLayoutDebugger,        nsILayoutDebugger,           NS_NewLayoutDebugger)
    1: #endif
    1: 
    1: MAKE_CTOR(CreateNewFrameTraversal,      nsIFrameTraversal,      NS_CreateFrameTraversal)
    1: MAKE_CTOR(CreateNewPresShell,           nsIPresShell,           NS_NewPresShell)
10311: MAKE_CTOR(CreateNewBoxObject,           nsIBoxObject,           NS_NewBoxObject)
10311: 
    1: #ifdef MOZ_XUL
    1: MAKE_CTOR(CreateNewListBoxObject,       nsIBoxObject,           NS_NewListBoxObject)
    1: MAKE_CTOR(CreateNewMenuBoxObject,       nsIBoxObject,           NS_NewMenuBoxObject)
    1: MAKE_CTOR(CreateNewPopupBoxObject,      nsIBoxObject,           NS_NewPopupBoxObject)
    1: MAKE_CTOR(CreateNewScrollBoxObject,     nsIBoxObject,           NS_NewScrollBoxObject)
    1: MAKE_CTOR(CreateNewTreeBoxObject,       nsIBoxObject,           NS_NewTreeBoxObject)
    1: MAKE_CTOR(CreateNewContainerBoxObject,  nsIBoxObject,           NS_NewContainerBoxObject)
    1: #endif // MOZ_XUL
    1: 
 3603: #ifdef MOZ_XUL
    1: NS_GENERIC_FACTORY_CONSTRUCTOR(inDOMView)
 3603: #endif
    1: NS_GENERIC_FACTORY_CONSTRUCTOR(inDeepTreeWalker)
    1: NS_GENERIC_FACTORY_CONSTRUCTOR(inFlasher)
    1: NS_GENERIC_FACTORY_CONSTRUCTOR(inCSSValueSearch)
    1: NS_GENERIC_FACTORY_CONSTRUCTOR(inDOMUtils)
    1: 
    1: MAKE_CTOR(CreateNameSpaceManager,         nsINameSpaceManager,         NS_GetNameSpaceManager)
    1: MAKE_CTOR(CreateEventListenerManager,     nsIEventListenerManager,     NS_NewEventListenerManager)
    1: MAKE_CTOR(CreateDOMEventGroup,            nsIDOMEventGroup,            NS_NewDOMEventGroup)
    1: MAKE_CTOR(CreateDocumentViewer,           nsIDocumentViewer,           NS_NewDocumentViewer)
    1: MAKE_CTOR(CreateHTMLDocument,             nsIDocument,                 NS_NewHTMLDocument)
    1: MAKE_CTOR(CreateDOMImplementation,        nsIDOMDOMImplementation,     NS_NewDOMImplementation)
    1: MAKE_CTOR(CreateXMLDocument,              nsIDocument,                 NS_NewXMLDocument)
    1: #ifdef MOZ_SVG
    1: MAKE_CTOR(CreateSVGDocument,              nsIDocument,                 NS_NewSVGDocument)
    1: #endif
    1: MAKE_CTOR(CreateImageDocument,            nsIDocument,                 NS_NewImageDocument)
    1: MAKE_CTOR(CreateDOMSelection,             nsISelection,                NS_NewDomSelection)
    1: MAKE_CTOR(CreateSelection,                nsFrameSelection,            NS_NewSelection)
    1: MAKE_CTOR(CreateRange,                    nsIDOMRange,                 NS_NewRange)
    1: MAKE_CTOR(CreateRangeUtils,               nsIRangeUtils,               NS_NewRangeUtils)
    1: MAKE_CTOR(CreateContentIterator,          nsIContentIterator,          NS_NewContentIterator)
    1: MAKE_CTOR(CreatePreContentIterator,       nsIContentIterator,          NS_NewPreContentIterator)
    1: MAKE_CTOR(CreateSubtreeIterator,          nsIContentIterator,          NS_NewContentSubtreeIterator)
    1: // CreateHTMLImgElement, see below
    1: // CreateHTMLOptionElement, see below
28568: // CreateHTMLAudioElement, see below
    1: MAKE_CTOR(CreateTextEncoder,              nsIDocumentEncoder,          NS_NewTextEncoder)
    1: MAKE_CTOR(CreateHTMLCopyTextEncoder,      nsIDocumentEncoder,          NS_NewHTMLCopyTextEncoder)
    1: MAKE_CTOR(CreateXMLContentSerializer,     nsIContentSerializer,        NS_NewXMLContentSerializer)
    1: MAKE_CTOR(CreateHTMLContentSerializer,    nsIContentSerializer,        NS_NewHTMLContentSerializer)
27852: MAKE_CTOR(CreateXHTMLContentSerializer,   nsIContentSerializer,        NS_NewXHTMLContentSerializer)
    1: MAKE_CTOR(CreatePlainTextSerializer,      nsIContentSerializer,        NS_NewPlainTextSerializer)
    1: MAKE_CTOR(CreateHTMLFragmentSink,         nsIFragmentContentSink,      NS_NewHTMLFragmentContentSink)
    1: MAKE_CTOR(CreateHTMLFragmentSink2,        nsIFragmentContentSink,      NS_NewHTMLFragmentContentSink2)
    1: MAKE_CTOR(CreateHTMLParanoidFragmentSink, nsIFragmentContentSink,      NS_NewHTMLParanoidFragmentSink)
43608: MAKE_CTOR(CreateHTMLParanoidFragmentSink2,nsIFragmentContentSink,      NS_NewHTMLParanoidFragmentSink2)
    1: MAKE_CTOR(CreateXMLFragmentSink,          nsIFragmentContentSink,      NS_NewXMLFragmentContentSink)
    1: MAKE_CTOR(CreateXMLFragmentSink2,         nsIFragmentContentSink,      NS_NewXMLFragmentContentSink2)
    1: MAKE_CTOR(CreateXHTMLParanoidFragmentSink,nsIFragmentContentSink,      NS_NewXHTMLParanoidFragmentSink)
43608: MAKE_CTOR(CreateXHTMLParanoidFragmentSink2,nsIFragmentContentSink,     NS_NewXHTMLParanoidFragmentSink2)
    1: MAKE_CTOR(CreateSanitizingHTMLSerializer, nsIContentSerializer,        NS_NewSanitizingHTMLSerializer)
    1: MAKE_CTOR(CreateXBLService,               nsIXBLService,               NS_NewXBLService)
    1: MAKE_CTOR(CreateContentPolicy,            nsIContentPolicy,            NS_NewContentPolicy)
    1: #ifdef MOZ_XUL
    1: MAKE_CTOR(CreateXULSortService,           nsIXULSortService,           NS_NewXULSortService)
    1: // NS_NewXULContentBuilder
    1: // NS_NewXULTreeBuilder
    1: MAKE_CTOR(CreateXULDocument,              nsIXULDocument,              NS_NewXULDocument)
    1: // NS_NewXULControllers
    1: // NS_NewXULPrototypeCache
 8408: MAKE_CTOR(CreateXULPopupManager,      nsISupports,      NS_NewXULPopupManager)
    1: #endif
    1: #ifdef MOZ_XTF
    1: MAKE_CTOR(CreateXTFService,               nsIXTFService,               NS_NewXTFService)
    1: MAKE_CTOR(CreateXMLContentBuilder,        nsIXMLContentBuilder,        NS_NewXMLContentBuilder)
    1: #endif
    1: MAKE_CTOR(CreateContentDLF,               nsIDocumentLoaderFactory,    NS_NewContentDocumentLoaderFactory)
33903: MAKE_CTOR(CreateEventListenerService,     nsIEventListenerService,     NS_NewEventListenerService)
43461: MAKE_CTOR(CreateGlobalMessageManager,     nsIChromeFrameMessageManager,NS_NewGlobalMessageManager)
51811: MAKE_CTOR(CreateParentMessageManager,     nsIFrameMessageManager,NS_NewParentProcessMessageManager)
51811: MAKE_CTOR(CreateChildMessageManager,     nsISyncMessageSender,NS_NewChildProcessMessageManager)
    1: NS_GENERIC_FACTORY_CONSTRUCTOR(nsDataDocumentContentPolicy)
    1: NS_GENERIC_FACTORY_CONSTRUCTOR(nsNoDataProtocolContentPolicy)
    1: NS_GENERIC_FACTORY_CONSTRUCTOR(nsSyncLoadService)
    1: MAKE_CTOR(CreatePluginDocument,           nsIDocument,                 NS_NewPluginDocument)
21079: #ifdef MOZ_MEDIA
21079: MAKE_CTOR(CreateVideoDocument,            nsIDocument,                 NS_NewVideoDocument)
21079: #endif
29018: MAKE_CTOR(CreateFocusManager,             nsIFocusManager,      NS_NewFocusManager)
    1: 
41486: NS_GENERIC_FACTORY_CONSTRUCTOR(nsIContentUtils)
57651: NS_GENERIC_FACTORY_CONSTRUCTOR(nsIContentUtils2)
61940: #ifndef MOZ_ENABLE_LIBXUL
61940: NS_GENERIC_FACTORY_CONSTRUCTOR(nsIContentUtils_MOZILLA_2_0_BRANCH)
61940: #endif
41486: 
    1: MAKE_CTOR(CreateCanvasRenderingContext2D, nsIDOMCanvasRenderingContext2D, NS_NewCanvasRenderingContext2D)
57635: MAKE_CTOR(CreateCanvasRenderingContextWebGL, nsIDOMWebGLRenderingContext, NS_NewCanvasRenderingContextWebGL)
    1: 
    1: NS_GENERIC_FACTORY_CONSTRUCTOR_INIT(nsStyleSheetService, Init)
    1: 
21811: NS_GENERIC_FACTORY_CONSTRUCTOR(nsJSURI)
21811: 
    1: // views are not refcounted, so this is the same as
    1: // NS_GENERIC_FACTORY_CONSTRUCTOR without the NS_ADDREF/NS_RELEASE
    1: #define NS_GENERIC_FACTORY_CONSTRUCTOR_NOREFS(_InstanceClass)                 \
46997: static nsresult                                                               \
    1: _InstanceClass##Constructor(nsISupports *aOuter, REFNSIID aIID,               \
    1:                             void **aResult)                                   \
    1: {                                                                             \
    1:     nsresult rv;                                                              \
    1:                                                                               \
    1:     *aResult = NULL;                                                          \
    1:     if (NULL != aOuter) {                                                     \
    1:         rv = NS_ERROR_NO_AGGREGATION;                                         \
    1:         return rv;                                                            \
    1:     }                                                                         \
    1:                                                                               \
47223:     _InstanceClass * inst = new _InstanceClass();                             \
    1:     if (NULL == inst) {                                                       \
    1:         rv = NS_ERROR_OUT_OF_MEMORY;                                          \
    1:         return rv;                                                            \
    1:     }                                                                         \
    1:     rv = inst->QueryInterface(aIID, aResult);                                 \
    1:                                                                               \
    1:     return rv;                                                                \
    1: }                                                                             \
    1: 
    1: NS_GENERIC_FACTORY_CONSTRUCTOR(nsViewManager)
    1: 
46997: static nsresult
    1: CreateHTMLImgElement(nsISupports* aOuter, REFNSIID aIID, void** aResult)
    1: {
    1:   *aResult = nsnull;
    1:   if (aOuter)
    1:     return NS_ERROR_NO_AGGREGATION;
    1:   // Note! NS_NewHTMLImageElement is special cased to handle a null nodeinfo
48124:   nsCOMPtr<nsINodeInfo> ni;
48124:   nsIContent* inst = NS_NewHTMLImageElement(ni.forget());
    1:   nsresult rv = NS_ERROR_OUT_OF_MEMORY;
    1:   if (inst) {
    1:     NS_ADDREF(inst);
    1:     rv = inst->QueryInterface(aIID, aResult);
    1:     NS_RELEASE(inst);
    1:   }
    1:   return rv;
    1: }
    1: 
46997: static nsresult
    1: CreateHTMLOptionElement(nsISupports* aOuter, REFNSIID aIID, void** aResult)
    1: {
    1:   *aResult = nsnull;
    1:   if (aOuter)
    1:     return NS_ERROR_NO_AGGREGATION;
    1:   // Note! NS_NewHTMLOptionElement is special cased to handle a null nodeinfo
48124:   nsCOMPtr<nsINodeInfo> ni;
48124:   nsIContent* inst = NS_NewHTMLOptionElement(ni.forget());
    1:   nsresult rv = NS_ERROR_OUT_OF_MEMORY;
    1:   if (inst) {
    1:     NS_ADDREF(inst);
    1:     rv = inst->QueryInterface(aIID, aResult);
    1:     NS_RELEASE(inst);
    1:   }
    1:   return rv;
    1: }
    1: 
28568: #ifdef MOZ_MEDIA
46997: static nsresult
28568: CreateHTMLAudioElement(nsISupports* aOuter, REFNSIID aIID, void** aResult)
28568: {
28568:   *aResult = nsnull;
28568:   if (aOuter)
28568:     return NS_ERROR_NO_AGGREGATION;
28568:   // Note! NS_NewHTMLAudioElement is special cased to handle a null nodeinfo
48124:   nsCOMPtr<nsINodeInfo> ni;
48124:   nsCOMPtr<nsIContent> inst(NS_NewHTMLAudioElement(ni.forget()));
28568:   return inst ? inst->QueryInterface(aIID, aResult) : NS_ERROR_OUT_OF_MEMORY;
28568: }
28568: #endif
28568: 
46997: static nsresult
    1: CreateWindowCommandTableConstructor(nsISupports *aOuter,
    1:                                     REFNSIID aIID, void **aResult)
    1: {
    1:   nsresult rv;
    1:   nsCOMPtr<nsIControllerCommandTable> commandTable =
    1:       do_CreateInstance(NS_CONTROLLERCOMMANDTABLE_CONTRACTID, &rv);
    1:   if (NS_FAILED(rv)) return rv;
    1: 
    1:   rv = nsWindowCommandRegistration::RegisterWindowCommands(commandTable);
    1:   if (NS_FAILED(rv)) return rv;
    1: 
    1:   return commandTable->QueryInterface(aIID, aResult);
    1: }
    1: 
46997: static nsresult
    1: CreateWindowControllerWithSingletonCommandTable(nsISupports *aOuter,
    1:                                       REFNSIID aIID, void **aResult)
    1: {
    1:   nsresult rv;
    1:   nsCOMPtr<nsIController> controller =
    1:        do_CreateInstance("@mozilla.org/embedcomp/base-command-controller;1", &rv);
    1: 
    1:  if (NS_FAILED(rv)) return rv;
    1: 
    1:   nsCOMPtr<nsIControllerCommandTable> windowCommandTable = do_GetService(kWindowCommandTableCID, &rv);
    1:   if (NS_FAILED(rv)) return rv;
    1: 
    1:   // this is a singleton; make it immutable
    1:   windowCommandTable->MakeImmutable();
    1: 
    1:   nsCOMPtr<nsIControllerContext> controllerContext = do_QueryInterface(controller, &rv);
    1:   if (NS_FAILED(rv)) return rv;
    1: 
    1:   controllerContext->Init(windowCommandTable);
    1:   if (NS_FAILED(rv)) return rv;
    1: 
    1:   return controller->QueryInterface(aIID, aResult);
    1: }
    1: 
    1: NS_GENERIC_FACTORY_CONSTRUCTOR(nsDOMScriptObjectFactory)
    1: NS_GENERIC_FACTORY_CONSTRUCTOR(nsBaseDOMException)
    1: 
34794: #define NS_GEOLOCATION_CID \
34794:   { 0x1E1C3FF, 0x94A, 0xD048, { 0x44, 0xB4, 0x62, 0xD2, 0x9C, 0x7B, 0x4F, 0x39 } }
34794: 
34794: NS_GENERIC_FACTORY_CONSTRUCTOR_INIT(nsGeolocation, Init)
34794: 
15958: #define NS_GEOLOCATION_SERVICE_CID \
15958:   { 0x404d02a, 0x1CA, 0xAAAB, { 0x47, 0x62, 0x94, 0x4b, 0x1b, 0xf2, 0xf7, 0xb5 } }
15958: 
16677: NS_GENERIC_FACTORY_SINGLETON_CONSTRUCTOR(nsGeolocationService, nsGeolocationService::GetGeolocationService)
15958: 
37418: NS_GENERIC_FACTORY_CONSTRUCTOR(CSPService)
37418: 
41899: NS_GENERIC_FACTORY_CONSTRUCTOR(nsPrincipal)
41899: NS_GENERIC_FACTORY_CONSTRUCTOR(nsSecurityNameSet)
41899: NS_GENERIC_FACTORY_SINGLETON_CONSTRUCTOR(nsSystemPrincipal,
41899:     nsScriptSecurityManager::SystemPrincipalSingletonConstructor)
41899: NS_GENERIC_FACTORY_CONSTRUCTOR_INIT(nsNullPrincipal, Init)
41899: 
46997: static nsresult
41899: Construct_nsIScriptSecurityManager(nsISupports *aOuter, REFNSIID aIID, 
41899:                                    void **aResult)
41899: {
41899:     if (!aResult)
41899:         return NS_ERROR_NULL_POINTER;
41899:     *aResult = nsnull;
41899:     if (aOuter)
41899:         return NS_ERROR_NO_AGGREGATION;
41899:     nsScriptSecurityManager *obj = nsScriptSecurityManager::GetScriptSecurityManager();
41899:     if (!obj) 
41899:         return NS_ERROR_OUT_OF_MEMORY;
41899:     if (NS_FAILED(obj->QueryInterface(aIID, aResult)))
41899:         return NS_ERROR_FAILURE;
41899:     return NS_OK;
41899: }
41899: 
    1: #ifdef DEBUG
46997: NS_DEFINE_NAMED_CID(NS_FRAME_UTIL_CID);
46997: NS_DEFINE_NAMED_CID(NS_LAYOUT_DEBUGGER_CID);
    1: #endif
46997: NS_DEFINE_NAMED_CID(NS_FRAMETRAVERSAL_CID);
46997: NS_DEFINE_NAMED_CID(NS_PRESSHELL_CID);
46997: NS_DEFINE_NAMED_CID(NS_BOXOBJECT_CID);
10311: #ifdef MOZ_XUL
46997: NS_DEFINE_NAMED_CID(NS_LISTBOXOBJECT_CID);
46997: NS_DEFINE_NAMED_CID(NS_MENUBOXOBJECT_CID);
46997: NS_DEFINE_NAMED_CID(NS_POPUPBOXOBJECT_CID);
46997: NS_DEFINE_NAMED_CID(NS_CONTAINERBOXOBJECT_CID);
46997: NS_DEFINE_NAMED_CID(NS_SCROLLBOXOBJECT_CID);
46997: NS_DEFINE_NAMED_CID(NS_TREEBOXOBJECT_CID);
    1: #endif // MOZ_XUL
 3603: #ifdef MOZ_XUL
46997: NS_DEFINE_NAMED_CID(IN_DOMVIEW_CID);
 3603: #endif
46997: NS_DEFINE_NAMED_CID(IN_DEEPTREEWALKER_CID);
46997: NS_DEFINE_NAMED_CID(IN_FLASHER_CID);
46997: NS_DEFINE_NAMED_CID(IN_CSSVALUESEARCH_CID);
46997: NS_DEFINE_NAMED_CID(IN_DOMUTILS_CID);
46997: NS_DEFINE_NAMED_CID(NS_NAMESPACEMANAGER_CID);
46997: NS_DEFINE_NAMED_CID(NS_EVENTLISTENERMANAGER_CID);
46997: NS_DEFINE_NAMED_CID(NS_DOMEVENTGROUP_CID);
46997: NS_DEFINE_NAMED_CID(NS_DOCUMENT_VIEWER_CID);
46997: NS_DEFINE_NAMED_CID(NS_HTMLDOCUMENT_CID);
46997: NS_DEFINE_NAMED_CID(NS_DOM_IMPLEMENTATION_CID);
46997: NS_DEFINE_NAMED_CID(NS_XMLDOCUMENT_CID);
    1: #ifdef MOZ_SVG
46997: NS_DEFINE_NAMED_CID(NS_SVGDOCUMENT_CID);
    1: #endif
46997: NS_DEFINE_NAMED_CID(NS_IMAGEDOCUMENT_CID);
46997: NS_DEFINE_NAMED_CID(NS_DOMSELECTION_CID);
46997: NS_DEFINE_NAMED_CID(NS_FRAMESELECTION_CID);
46997: NS_DEFINE_NAMED_CID(NS_RANGE_CID);
46997: NS_DEFINE_NAMED_CID(NS_RANGEUTILS_CID);
46997: NS_DEFINE_NAMED_CID(NS_CONTENTITERATOR_CID);
46997: NS_DEFINE_NAMED_CID(NS_PRECONTENTITERATOR_CID);
46997: NS_DEFINE_NAMED_CID(NS_SUBTREEITERATOR_CID);
46997: NS_DEFINE_NAMED_CID(NS_HTMLIMAGEELEMENT_CID);
46997: NS_DEFINE_NAMED_CID(NS_HTMLOPTIONELEMENT_CID);
28568: #ifdef MOZ_MEDIA
46997: NS_DEFINE_NAMED_CID(NS_HTMLAUDIOELEMENT_CID);
28568: #endif
46997: NS_DEFINE_NAMED_CID(NS_CANVASRENDERINGCONTEXT2D_CID);
46997: NS_DEFINE_NAMED_CID(NS_CANVASRENDERINGCONTEXTWEBGL_CID);
46997: NS_DEFINE_NAMED_CID(NS_TEXT_ENCODER_CID);
46997: NS_DEFINE_NAMED_CID(NS_HTMLCOPY_TEXT_ENCODER_CID);
46997: NS_DEFINE_NAMED_CID(NS_XMLCONTENTSERIALIZER_CID);
46997: NS_DEFINE_NAMED_CID(NS_XHTMLCONTENTSERIALIZER_CID);
46997: NS_DEFINE_NAMED_CID(NS_HTMLCONTENTSERIALIZER_CID);
46997: NS_DEFINE_NAMED_CID(NS_PLAINTEXTSERIALIZER_CID);
46997: NS_DEFINE_NAMED_CID(NS_HTMLFRAGMENTSINK_CID);
46997: NS_DEFINE_NAMED_CID(NS_HTMLFRAGMENTSINK2_CID);
46997: NS_DEFINE_NAMED_CID(NS_HTMLPARANOIDFRAGMENTSINK_CID);
47018: NS_DEFINE_NAMED_CID(NS_HTMLPARANOIDFRAGMENTSINK2_CID);
46997: NS_DEFINE_NAMED_CID(MOZ_SANITIZINGHTMLSERIALIZER_CID);
46997: NS_DEFINE_NAMED_CID(NS_XMLFRAGMENTSINK_CID);
46997: NS_DEFINE_NAMED_CID(NS_XMLFRAGMENTSINK2_CID);
46997: NS_DEFINE_NAMED_CID(NS_XHTMLPARANOIDFRAGMENTSINK_CID);
47018: NS_DEFINE_NAMED_CID(NS_XHTMLPARANOIDFRAGMENTSINK2_CID);
46997: NS_DEFINE_NAMED_CID(NS_XBLSERVICE_CID);
46997: NS_DEFINE_NAMED_CID(NS_CONTENTPOLICY_CID);
46997: NS_DEFINE_NAMED_CID(NS_DATADOCUMENTCONTENTPOLICY_CID);
46997: NS_DEFINE_NAMED_CID(NS_NODATAPROTOCOLCONTENTPOLICY_CID);
46997: NS_DEFINE_NAMED_CID(NS_XULCONTROLLERS_CID);
46997: #ifdef MOZ_XUL
46997: NS_DEFINE_NAMED_CID(NS_XULSORTSERVICE_CID);
46997: NS_DEFINE_NAMED_CID(NS_XULTEMPLATEBUILDER_CID);
46997: NS_DEFINE_NAMED_CID(NS_XULTREEBUILDER_CID);
46997: NS_DEFINE_NAMED_CID(NS_XULPOPUPMANAGER_CID);
46997: NS_DEFINE_NAMED_CID(NS_XULDOCUMENT_CID);
46997: NS_DEFINE_NAMED_CID(NS_XULPROTOTYPECACHE_CID);
    1: #endif
46997: #ifdef MOZ_XTF
46997: NS_DEFINE_NAMED_CID(NS_XTFSERVICE_CID);
46997: NS_DEFINE_NAMED_CID(NS_XMLCONTENTBUILDER_CID);
    1: #endif
46997: NS_DEFINE_NAMED_CID(NS_CONTENT_DOCUMENT_LOADER_FACTORY_CID);
46997: NS_DEFINE_NAMED_CID(NS_SYNCLOADDOMSERVICE_CID);
46997: NS_DEFINE_NAMED_CID(NS_DOM_SCRIPT_OBJECT_FACTORY_CID);
46997: NS_DEFINE_NAMED_CID(NS_BASE_DOM_EXCEPTION_CID);
46997: NS_DEFINE_NAMED_CID(NS_JSPROTOCOLHANDLER_CID);
46997: NS_DEFINE_NAMED_CID(NS_JSURI_CID);
46997: NS_DEFINE_NAMED_CID(NS_WINDOWCOMMANDTABLE_CID);
46997: NS_DEFINE_NAMED_CID(NS_WINDOWCONTROLLER_CID);
46997: NS_DEFINE_NAMED_CID(NS_VIEW_MANAGER_CID);
46997: NS_DEFINE_NAMED_CID(NS_PLUGINDOCLOADERFACTORY_CID);
46997: NS_DEFINE_NAMED_CID(NS_PLUGINDOCUMENT_CID);
46997: #ifdef MOZ_MEDIA
46997: NS_DEFINE_NAMED_CID(NS_VIDEODOCUMENT_CID);
    1: #endif
46997: NS_DEFINE_NAMED_CID(NS_STYLESHEETSERVICE_CID);
46997: NS_DEFINE_NAMED_CID(TRANSFORMIIX_XSLT_PROCESSOR_CID);
46997: NS_DEFINE_NAMED_CID(TRANSFORMIIX_XPATH_EVALUATOR_CID);
46997: NS_DEFINE_NAMED_CID(TRANSFORMIIX_XPATH1_SCHEME_CID);
46997: NS_DEFINE_NAMED_CID(TRANSFORMIIX_NODESET_CID);
46997: NS_DEFINE_NAMED_CID(NS_XMLSERIALIZER_CID);
46997: NS_DEFINE_NAMED_CID(NS_FILEREADER_CID);
46997: NS_DEFINE_NAMED_CID(NS_FORMDATA_CID);
46997: NS_DEFINE_NAMED_CID(NS_FILEDATAPROTOCOLHANDLER_CID);
46997: NS_DEFINE_NAMED_CID(NS_XMLHTTPREQUEST_CID);
47008: NS_DEFINE_NAMED_CID(NS_WEBSOCKET_CID);
47008: NS_DEFINE_NAMED_CID(NS_WSPROTOCOLHANDLER_CID);
47008: NS_DEFINE_NAMED_CID(NS_WSSPROTOCOLHANDLER_CID);
46997: NS_DEFINE_NAMED_CID(NS_DOMPARSER_CID);
46997: NS_DEFINE_NAMED_CID(NS_DOMSTORAGE_CID);
46997: NS_DEFINE_NAMED_CID(NS_DOMSTORAGE2_CID);
46997: NS_DEFINE_NAMED_CID(NS_DOMSTORAGEMANAGER_CID);
46997: NS_DEFINE_NAMED_CID(NS_DOMJSON_CID);
46997: NS_DEFINE_NAMED_CID(NS_TEXTEDITOR_CID);
52412: NS_DEFINE_NAMED_CID(INDEXEDDB_MANAGER_CID );
    1: #ifndef MOZILLA_PLAINTEXT_EDITOR_ONLY
    1: #ifdef ENABLE_EDITOR_API_LOG
46997: NS_DEFINE_NAMED_CID(NS_HTMLEDITOR_CID);
    1: #else
46997: NS_DEFINE_NAMED_CID(NS_HTMLEDITOR_CID);
    1: #endif
    1: #endif
46997: NS_DEFINE_NAMED_CID(NS_EDITORCONTROLLER_CID);
46997: NS_DEFINE_NAMED_CID(NS_EDITORCOMMANDTABLE_CID);
    1: #ifndef MOZILLA_PLAINTEXT_EDITOR_ONLY
46997: NS_DEFINE_NAMED_CID(NS_TEXTSERVICESDOCUMENT_CID);
    1: #endif
46997: NS_DEFINE_NAMED_CID(NS_GEOLOCATION_SERVICE_CID);
46997: NS_DEFINE_NAMED_CID(NS_GEOLOCATION_CID);
46997: NS_DEFINE_NAMED_CID(NS_FOCUSMANAGER_CID);
46997: NS_DEFINE_NAMED_CID(NS_ICONTENTUTILS_CID);
57651: NS_DEFINE_NAMED_CID(NS_ICONTENTUTILS2_CID);
61940: #ifndef MOZ_ENABLE_LIBXUL
61940: NS_DEFINE_NAMED_CID(NS_ICONTENTUTILS_MOZILLA_2_0_BRANCH_CID);
61940: #endif
46997: NS_DEFINE_NAMED_CID(CSPSERVICE_CID);
46997: NS_DEFINE_NAMED_CID(NS_EVENTLISTENERSERVICE_CID);
47018: NS_DEFINE_NAMED_CID(NS_GLOBALMESSAGEMANAGER_CID);
51811: NS_DEFINE_NAMED_CID(NS_PARENTPROCESSMESSAGEMANAGER_CID);
51811: NS_DEFINE_NAMED_CID(NS_CHILDPROCESSMESSAGEMANAGER_CID);
46997: NS_DEFINE_NAMED_CID(NSCHANNELPOLICY_CID);
46997: NS_DEFINE_NAMED_CID(NS_SCRIPTSECURITYMANAGER_CID);
46997: NS_DEFINE_NAMED_CID(NS_PRINCIPAL_CID);
46997: NS_DEFINE_NAMED_CID(NS_SYSTEMPRINCIPAL_CID);
46997: NS_DEFINE_NAMED_CID(NS_NULLPRINCIPAL_CID);
46997: NS_DEFINE_NAMED_CID(NS_SECURITYNAMESET_CID);
56094: NS_DEFINE_NAMED_CID(THIRDPARTYUTIL_CID);
57827: NS_DEFINE_NAMED_CID(NS_WORKERFACTORY_CID);
40658: 
46218: #if defined(XP_UNIX)    || \
46218:     defined(_WINDOWS)   || \
46218:     defined(machintosh) || \
46218:     defined(android)
47063: NS_DEFINE_NAMED_CID(NS_ACCELEROMETER_CID);
46218: #endif
58004: #if defined(ANDROID) || defined(MOZ_PLATFORM_MAEMO)
57998: NS_DEFINE_NAMED_CID(NS_HAPTICFEEDBACK_CID);
57998: #endif
46218: 
46997: static const mozilla::Module::CIDEntry kLayoutCIDs[] = {
46997:   XPCONNECT_CIDENTRIES
46997: #ifdef DEBUG
46997:   { &kNS_FRAME_UTIL_CID, false, NULL, CreateNewFrameUtil },
46997:   { &kNS_LAYOUT_DEBUGGER_CID, false, NULL, CreateNewLayoutDebugger },
46997: #endif
46997:   { &kNS_FRAMETRAVERSAL_CID, false, NULL, CreateNewFrameTraversal },
46997:   { &kNS_PRESSHELL_CID, false, NULL, CreateNewPresShell },
46997:   { &kNS_BOXOBJECT_CID, false, NULL, CreateNewBoxObject },
46997: #ifdef MOZ_XUL
46997:   { &kNS_LISTBOXOBJECT_CID, false, NULL, CreateNewListBoxObject },
46997:   { &kNS_MENUBOXOBJECT_CID, false, NULL, CreateNewMenuBoxObject },
46997:   { &kNS_POPUPBOXOBJECT_CID, false, NULL, CreateNewPopupBoxObject },
46997:   { &kNS_CONTAINERBOXOBJECT_CID, false, NULL, CreateNewContainerBoxObject },
46997:   { &kNS_SCROLLBOXOBJECT_CID, false, NULL, CreateNewScrollBoxObject },
46997:   { &kNS_TREEBOXOBJECT_CID, false, NULL, CreateNewTreeBoxObject },
46997: #endif // MOZ_XUL
46997: #ifdef MOZ_XUL
46997:   { &kIN_DOMVIEW_CID, false, NULL, inDOMViewConstructor },
46997: #endif
46997:   { &kIN_DEEPTREEWALKER_CID, false, NULL, inDeepTreeWalkerConstructor },
46997:   { &kIN_FLASHER_CID, false, NULL, inFlasherConstructor },
46997:   { &kIN_CSSVALUESEARCH_CID, false, NULL, inCSSValueSearchConstructor },
46997:   { &kIN_DOMUTILS_CID, false, NULL, inDOMUtilsConstructor },
46997:   { &kNS_NAMESPACEMANAGER_CID, false, NULL, CreateNameSpaceManager },
46997:   { &kNS_EVENTLISTENERMANAGER_CID, false, NULL, CreateEventListenerManager },
46997:   { &kNS_DOMEVENTGROUP_CID, false, NULL, CreateDOMEventGroup },
46997:   { &kNS_DOCUMENT_VIEWER_CID, false, NULL, CreateDocumentViewer },
46997:   { &kNS_HTMLDOCUMENT_CID, false, NULL, CreateHTMLDocument },
46997:   { &kNS_DOM_IMPLEMENTATION_CID, false, NULL, CreateDOMImplementation },
46997:   { &kNS_XMLDOCUMENT_CID, false, NULL, CreateXMLDocument },
46997: #ifdef MOZ_SVG
46997:   { &kNS_SVGDOCUMENT_CID, false, NULL, CreateSVGDocument },
46997: #endif
46997:   { &kNS_IMAGEDOCUMENT_CID, false, NULL, CreateImageDocument },
46997:   { &kNS_DOMSELECTION_CID, false, NULL, CreateDOMSelection },
46997:   { &kNS_FRAMESELECTION_CID, false, NULL, CreateSelection },
46997:   { &kNS_RANGE_CID, false, NULL, CreateRange },
46997:   { &kNS_RANGEUTILS_CID, false, NULL, CreateRangeUtils },
46997:   { &kNS_CONTENTITERATOR_CID, false, NULL, CreateContentIterator },
46997:   { &kNS_PRECONTENTITERATOR_CID, false, NULL, CreatePreContentIterator },
46997:   { &kNS_SUBTREEITERATOR_CID, false, NULL, CreateSubtreeIterator },
46997:   { &kNS_HTMLIMAGEELEMENT_CID, false, NULL, CreateHTMLImgElement },
46997:   { &kNS_HTMLOPTIONELEMENT_CID, false, NULL, CreateHTMLOptionElement },
46997: #ifdef MOZ_MEDIA
46997:   { &kNS_HTMLAUDIOELEMENT_CID, false, NULL, CreateHTMLAudioElement },
46997: #endif
46997:   { &kNS_CANVASRENDERINGCONTEXT2D_CID, false, NULL, CreateCanvasRenderingContext2D },
46997:   { &kNS_CANVASRENDERINGCONTEXTWEBGL_CID, false, NULL, CreateCanvasRenderingContextWebGL },
46997:   { &kNS_TEXT_ENCODER_CID, false, NULL, CreateTextEncoder },
46997:   { &kNS_HTMLCOPY_TEXT_ENCODER_CID, false, NULL, CreateHTMLCopyTextEncoder },
46997:   { &kNS_XMLCONTENTSERIALIZER_CID, false, NULL, CreateXMLContentSerializer },
46997:   { &kNS_HTMLCONTENTSERIALIZER_CID, false, NULL, CreateHTMLContentSerializer },
46997:   { &kNS_XHTMLCONTENTSERIALIZER_CID, false, NULL, CreateXHTMLContentSerializer },
46997:   { &kNS_PLAINTEXTSERIALIZER_CID, false, NULL, CreatePlainTextSerializer },
46997:   { &kNS_HTMLFRAGMENTSINK_CID, false, NULL, CreateHTMLFragmentSink },
46997:   { &kNS_HTMLFRAGMENTSINK2_CID, false, NULL, CreateHTMLFragmentSink2 },
46997:   { &kNS_HTMLPARANOIDFRAGMENTSINK_CID, false, NULL, CreateHTMLParanoidFragmentSink },
47018:   { &kNS_HTMLPARANOIDFRAGMENTSINK2_CID, false, NULL, CreateHTMLParanoidFragmentSink2 },
46997:   { &kMOZ_SANITIZINGHTMLSERIALIZER_CID, false, NULL, CreateSanitizingHTMLSerializer },
46997:   { &kNS_XMLFRAGMENTSINK_CID, false, NULL, CreateXMLFragmentSink },
46997:   { &kNS_XMLFRAGMENTSINK2_CID, false, NULL, CreateXMLFragmentSink2 },
46997:   { &kNS_XHTMLPARANOIDFRAGMENTSINK_CID, false, NULL, CreateXHTMLParanoidFragmentSink },
47018:   { &kNS_XHTMLPARANOIDFRAGMENTSINK2_CID, false, NULL, CreateXHTMLParanoidFragmentSink2 },
46997:   { &kNS_XBLSERVICE_CID, false, NULL, CreateXBLService },
46997:   { &kNS_CONTENTPOLICY_CID, false, NULL, CreateContentPolicy },
46997:   { &kNS_DATADOCUMENTCONTENTPOLICY_CID, false, NULL, nsDataDocumentContentPolicyConstructor },
46997:   { &kNS_NODATAPROTOCOLCONTENTPOLICY_CID, false, NULL, nsNoDataProtocolContentPolicyConstructor },
46997:   { &kNS_XULCONTROLLERS_CID, false, NULL, NS_NewXULControllers },
46997: #ifdef MOZ_XUL
46997:   { &kNS_XULSORTSERVICE_CID, false, NULL, CreateXULSortService },
46997:   { &kNS_XULTEMPLATEBUILDER_CID, false, NULL, NS_NewXULContentBuilder },
46997:   { &kNS_XULTREEBUILDER_CID, false, NULL, NS_NewXULTreeBuilder },
46997:   { &kNS_XULPOPUPMANAGER_CID, false, NULL, CreateXULPopupManager },
46997:   { &kNS_XULDOCUMENT_CID, false, NULL, CreateXULDocument },
46997:   { &kNS_XULPROTOTYPECACHE_CID, false, NULL, NS_NewXULPrototypeCache },
46997: #endif
46997: #ifdef MOZ_XTF
46997:   { &kNS_XTFSERVICE_CID, false, NULL, CreateXTFService },
46997:   { &kNS_XMLCONTENTBUILDER_CID, false, NULL, CreateXMLContentBuilder },
46997: #endif
47018:   { &kNS_CONTENT_DOCUMENT_LOADER_FACTORY_CID, false, NULL, CreateContentDLF },
46997:   { &kNS_SYNCLOADDOMSERVICE_CID, false, NULL, nsSyncLoadServiceConstructor },
46997:   { &kNS_DOM_SCRIPT_OBJECT_FACTORY_CID, false, NULL, nsDOMScriptObjectFactoryConstructor },
46997:   { &kNS_BASE_DOM_EXCEPTION_CID, false, NULL, nsBaseDOMExceptionConstructor },
46997:   { &kNS_JSPROTOCOLHANDLER_CID, false, NULL, nsJSProtocolHandler::Create },
46997:   { &kNS_JSURI_CID, false, NULL, nsJSURIConstructor },
46997:   { &kNS_WINDOWCOMMANDTABLE_CID, false, NULL, CreateWindowCommandTableConstructor },
46997:   { &kNS_WINDOWCONTROLLER_CID, false, NULL, CreateWindowControllerWithSingletonCommandTable },
46997:   { &kNS_VIEW_MANAGER_CID, false, NULL, nsViewManagerConstructor },
46997:   { &kNS_PLUGINDOCLOADERFACTORY_CID, false, NULL, CreateContentDLF },
46997:   { &kNS_PLUGINDOCUMENT_CID, false, NULL, CreatePluginDocument },
46997: #ifdef MOZ_MEDIA
46997:   { &kNS_VIDEODOCUMENT_CID, false, NULL, CreateVideoDocument },
46997: #endif
46997:   { &kNS_STYLESHEETSERVICE_CID, false, NULL, nsStyleSheetServiceConstructor },
46997:   { &kTRANSFORMIIX_XSLT_PROCESSOR_CID, false, NULL, txMozillaXSLTProcessorConstructor },
46997:   { &kTRANSFORMIIX_XPATH_EVALUATOR_CID, false, NULL, nsXPathEvaluatorConstructor },
46997:   { &kTRANSFORMIIX_XPATH1_SCHEME_CID, false, NULL, nsXPath1SchemeProcessorConstructor },
46997:   { &kTRANSFORMIIX_NODESET_CID, false, NULL, txNodeSetAdaptorConstructor },
46997:   { &kNS_XMLSERIALIZER_CID, false, NULL, nsDOMSerializerConstructor },
46997:   { &kNS_FILEREADER_CID, false, NULL, nsDOMFileReaderConstructor },
46997:   { &kNS_FORMDATA_CID, false, NULL, nsFormDataConstructor },
46997:   { &kNS_FILEDATAPROTOCOLHANDLER_CID, false, NULL, nsFileDataProtocolHandlerConstructor },
46997:   { &kNS_XMLHTTPREQUEST_CID, false, NULL, nsXMLHttpRequestConstructor },
47008:   { &kNS_WEBSOCKET_CID, false, NULL, nsWebSocketConstructor },
47008:   { &kNS_WSPROTOCOLHANDLER_CID, false, NULL, nsWSProtocolHandlerConstructor },
47008:   { &kNS_WSSPROTOCOLHANDLER_CID, false, NULL, nsWSSProtocolHandlerConstructor },
46997:   { &kNS_DOMPARSER_CID, false, NULL, nsDOMParserConstructor },
46997:   { &kNS_DOMSTORAGE_CID, false, NULL, NS_NewDOMStorage },
46997:   { &kNS_DOMSTORAGE2_CID, false, NULL, NS_NewDOMStorage2 },
46997:   { &kNS_DOMSTORAGEMANAGER_CID, false, NULL, nsDOMStorageManagerConstructor },
46997:   { &kNS_DOMJSON_CID, false, NULL, NS_NewJSON },
46997:   { &kNS_TEXTEDITOR_CID, false, NULL, nsPlaintextEditorConstructor },
52412:   { &kINDEXEDDB_MANAGER_CID, false, NULL, IndexedDatabaseManagerConstructor },
43833: #ifndef MOZILLA_PLAINTEXT_EDITOR_ONLY
46997: #ifdef ENABLE_EDITOR_API_LOG
46997:   { &kNS_HTMLEDITOR_CID, false, NULL, nsHTMLEditorLogConstructor },
46997: #else
46997:   { &kNS_HTMLEDITOR_CID, false, NULL, nsHTMLEditorConstructor },
43833: #endif
46997: #endif
46997:   { &kNS_EDITORCONTROLLER_CID, false, NULL, nsEditorControllerConstructor },
46997:   { &kNS_EDITORCOMMANDTABLE_CID, false, NULL, nsEditorCommandTableConstructor },
46997: #ifndef MOZILLA_PLAINTEXT_EDITOR_ONLY
46997:   { &kNS_TEXTSERVICESDOCUMENT_CID, false, NULL, nsTextServicesDocumentConstructor },
46997: #endif
46997:   { &kNS_GEOLOCATION_SERVICE_CID, false, NULL, nsGeolocationServiceConstructor },
46997:   { &kNS_GEOLOCATION_CID, false, NULL, nsGeolocationConstructor },
46997:   { &kNS_FOCUSMANAGER_CID, false, NULL, CreateFocusManager },
46997:   { &kNS_ICONTENTUTILS_CID, false, NULL, nsIContentUtilsConstructor },
57651:   { &kNS_ICONTENTUTILS2_CID, false, NULL, nsIContentUtils2Constructor },
61940: #ifndef MOZ_ENABLE_LIBXUL
61940:   { &kNS_ICONTENTUTILS_MOZILLA_2_0_BRANCH_CID, false, NULL, nsIContentUtils_MOZILLA_2_0_BRANCHConstructor },
61940: #endif
46997:   { &kCSPSERVICE_CID, false, NULL, CSPServiceConstructor },
46997:   { &kNS_EVENTLISTENERSERVICE_CID, false, NULL, CreateEventListenerService },
47018:   { &kNS_GLOBALMESSAGEMANAGER_CID, false, NULL, CreateGlobalMessageManager },
51811:   { &kNS_PARENTPROCESSMESSAGEMANAGER_CID, false, NULL, CreateParentMessageManager },
51811:   { &kNS_CHILDPROCESSMESSAGEMANAGER_CID, false, NULL, CreateChildMessageManager },
46997:   { &kNSCHANNELPOLICY_CID, false, NULL, nsChannelPolicyConstructor },
46997:   { &kNS_SCRIPTSECURITYMANAGER_CID, false, NULL, Construct_nsIScriptSecurityManager },
46997:   { &kNS_PRINCIPAL_CID, false, NULL, nsPrincipalConstructor },
46997:   { &kNS_SYSTEMPRINCIPAL_CID, false, NULL, nsSystemPrincipalConstructor },
46997:   { &kNS_NULLPRINCIPAL_CID, false, NULL, nsNullPrincipalConstructor },
46997:   { &kNS_SECURITYNAMESET_CID, false, NULL, nsSecurityNameSetConstructor },
47063: #if defined(XP_UNIX)    || \
47063:     defined(_WINDOWS)   || \
47063:     defined(machintosh) || \
47063:     defined(android)
47063:   { &kNS_ACCELEROMETER_CID, false, NULL, nsAccelerometerSystemConstructor },
47063: #endif
58004: #if defined(ANDROID) || defined(MOZ_PLATFORM_MAEMO)
57998:   { &kNS_HAPTICFEEDBACK_CID, false, NULL, nsHapticFeedbackConstructor },
57998: #endif
56094:   { &kTHIRDPARTYUTIL_CID, false, NULL, ThirdPartyUtilConstructor },
57827:   { &kNS_WORKERFACTORY_CID, false, NULL, nsWorkerFactoryConstructor },
46997:   { NULL }
    1: };
    1: 
46997: static const mozilla::Module::ContractIDEntry kLayoutContracts[] = {
46997:   XPCONNECT_CONTRACTS
46997:   { "@mozilla.org/layout/xul-boxobject;1", &kNS_BOXOBJECT_CID },
46997: #ifdef MOZ_XUL
46997:   { "@mozilla.org/layout/xul-boxobject-listbox;1", &kNS_LISTBOXOBJECT_CID },
46997:   { "@mozilla.org/layout/xul-boxobject-menu;1", &kNS_MENUBOXOBJECT_CID },
46997:   { "@mozilla.org/layout/xul-boxobject-popup;1", &kNS_POPUPBOXOBJECT_CID },
46997:   { "@mozilla.org/layout/xul-boxobject-container;1", &kNS_CONTAINERBOXOBJECT_CID },
46997:   { "@mozilla.org/layout/xul-boxobject-scrollbox;1", &kNS_SCROLLBOXOBJECT_CID },
46997:   { "@mozilla.org/layout/xul-boxobject-tree;1", &kNS_TREEBOXOBJECT_CID },
46997: #endif // MOZ_XUL
46997: #ifdef MOZ_XUL
46997:   { "@mozilla.org/inspector/dom-view;1", &kIN_DOMVIEW_CID },
46997: #endif
46997:   { "@mozilla.org/inspector/deep-tree-walker;1", &kIN_DEEPTREEWALKER_CID },
46997:   { "@mozilla.org/inspector/flasher;1", &kIN_FLASHER_CID },
46997:   { "@mozilla.org/inspector/search;1?type=cssvalue", &kIN_CSSVALUESEARCH_CID },
46997:   { "@mozilla.org/inspector/dom-utils;1", &kIN_DOMUTILS_CID },
46997:   { NS_NAMESPACEMANAGER_CONTRACTID, &kNS_NAMESPACEMANAGER_CID },
46997:   { "@mozilla.org/xml/xml-document;1", &kNS_XMLDOCUMENT_CID },
46997: #ifdef MOZ_SVG
46997:   { "@mozilla.org/svg/svg-document;1", &kNS_SVGDOCUMENT_CID },
46997: #endif
46997:   { "@mozilla.org/content/dom-selection;1", &kNS_DOMSELECTION_CID },
46997:   { "@mozilla.org/content/range;1", &kNS_RANGE_CID },
46997:   { "@mozilla.org/content/range-utils;1", &kNS_RANGEUTILS_CID },
46997:   { "@mozilla.org/content/post-content-iterator;1", &kNS_CONTENTITERATOR_CID },
46997:   { "@mozilla.org/content/pre-content-iterator;1", &kNS_PRECONTENTITERATOR_CID },
46997:   { "@mozilla.org/content/subtree-content-iterator;1", &kNS_SUBTREEITERATOR_CID },
46997:   { NS_HTMLIMGELEMENT_CONTRACTID, &kNS_HTMLIMAGEELEMENT_CID },
46997:   { NS_HTMLOPTIONELEMENT_CONTRACTID, &kNS_HTMLOPTIONELEMENT_CID },
46997: #ifdef MOZ_MEDIA
46997:   { NS_HTMLAUDIOELEMENT_CONTRACTID, &kNS_HTMLAUDIOELEMENT_CID },
46997: #endif
46997:   { "@mozilla.org/content/canvas-rendering-context;1?id=2d", &kNS_CANVASRENDERINGCONTEXT2D_CID },
46997:   { "@mozilla.org/content/canvas-rendering-context;1?id=moz-webgl", &kNS_CANVASRENDERINGCONTEXTWEBGL_CID },
46997:   { "@mozilla.org/content/canvas-rendering-context;1?id=experimental-webgl", &kNS_CANVASRENDERINGCONTEXTWEBGL_CID },
46997:   { NS_DOC_ENCODER_CONTRACTID_BASE "text/xml", &kNS_TEXT_ENCODER_CID },
46997:   { NS_DOC_ENCODER_CONTRACTID_BASE "application/xml", &kNS_TEXT_ENCODER_CID },
46997:   { NS_DOC_ENCODER_CONTRACTID_BASE "application/xhtml+xml", &kNS_TEXT_ENCODER_CID },
46997: #ifdef MOZ_SVG
46997:   { NS_DOC_ENCODER_CONTRACTID_BASE "image/svg+xml", &kNS_TEXT_ENCODER_CID },
46997: #endif
46997:   { NS_DOC_ENCODER_CONTRACTID_BASE "text/html", &kNS_TEXT_ENCODER_CID },
46997:   { NS_DOC_ENCODER_CONTRACTID_BASE "text/plain", &kNS_TEXT_ENCODER_CID },
46997:   { NS_HTMLCOPY_ENCODER_CONTRACTID, &kNS_HTMLCOPY_TEXT_ENCODER_CID },
46997:   { NS_CONTENTSERIALIZER_CONTRACTID_PREFIX "text/xml", &kNS_XMLCONTENTSERIALIZER_CID },
46997:   { NS_CONTENTSERIALIZER_CONTRACTID_PREFIX "application/xml", &kNS_XMLCONTENTSERIALIZER_CID },
46997:   { NS_CONTENTSERIALIZER_CONTRACTID_PREFIX "application/xhtml+xml", &kNS_XHTMLCONTENTSERIALIZER_CID },
46997: #ifdef MOZ_SVG
46997:   { NS_CONTENTSERIALIZER_CONTRACTID_PREFIX "image/svg+xml", &kNS_XMLCONTENTSERIALIZER_CID },
46997: #endif
46997:   { NS_CONTENTSERIALIZER_CONTRACTID_PREFIX "text/html", &kNS_HTMLCONTENTSERIALIZER_CID },
46997:   { NS_CONTENTSERIALIZER_CONTRACTID_PREFIX "application/vnd.mozilla.xul+xml", &kNS_XMLCONTENTSERIALIZER_CID },
46997:   { NS_CONTENTSERIALIZER_CONTRACTID_PREFIX "text/plain", &kNS_PLAINTEXTSERIALIZER_CID },
46997:   { NS_PLAINTEXTSINK_CONTRACTID, &kNS_PLAINTEXTSERIALIZER_CID },
46997:   { NS_HTMLFRAGMENTSINK_CONTRACTID, &kNS_HTMLFRAGMENTSINK_CID },
46997:   { NS_HTMLFRAGMENTSINK2_CONTRACTID, &kNS_HTMLFRAGMENTSINK2_CID },
46997:   { NS_HTMLPARANOIDFRAGMENTSINK_CONTRACTID, &kNS_HTMLPARANOIDFRAGMENTSINK_CID },
47018:   { NS_HTMLPARANOIDFRAGMENTSINK2_CONTRACTID, &kNS_HTMLPARANOIDFRAGMENTSINK2_CID },
46997:   { MOZ_SANITIZINGHTMLSERIALIZER_CONTRACTID, &kMOZ_SANITIZINGHTMLSERIALIZER_CID },
46997:   { NS_XMLFRAGMENTSINK_CONTRACTID, &kNS_XMLFRAGMENTSINK_CID },
46997:   { NS_XMLFRAGMENTSINK2_CONTRACTID, &kNS_XMLFRAGMENTSINK2_CID },
46997:   { NS_XHTMLPARANOIDFRAGMENTSINK_CONTRACTID, &kNS_XHTMLPARANOIDFRAGMENTSINK_CID },
47018:   { NS_XHTMLPARANOIDFRAGMENTSINK2_CONTRACTID, &kNS_XHTMLPARANOIDFRAGMENTSINK2_CID },
46997:   { "@mozilla.org/xbl;1", &kNS_XBLSERVICE_CID },
46997:   { NS_CONTENTPOLICY_CONTRACTID, &kNS_CONTENTPOLICY_CID },
46997:   { NS_DATADOCUMENTCONTENTPOLICY_CONTRACTID, &kNS_DATADOCUMENTCONTENTPOLICY_CID },
46997:   { NS_NODATAPROTOCOLCONTENTPOLICY_CONTRACTID, &kNS_NODATAPROTOCOLCONTENTPOLICY_CID },
46997:   { "@mozilla.org/xul/xul-controllers;1", &kNS_XULCONTROLLERS_CID },
46997: #ifdef MOZ_XUL
46997:   { "@mozilla.org/xul/xul-sort-service;1", &kNS_XULSORTSERVICE_CID },
46997:   { "@mozilla.org/xul/xul-template-builder;1", &kNS_XULTEMPLATEBUILDER_CID },
46997:   { "@mozilla.org/xul/xul-tree-builder;1", &kNS_XULTREEBUILDER_CID },
46997:   { "@mozilla.org/xul/xul-popup-manager;1", &kNS_XULPOPUPMANAGER_CID },
46997:   { "@mozilla.org/xul/xul-document;1", &kNS_XULDOCUMENT_CID },
46997:   { "@mozilla.org/xul/xul-prototype-cache;1", &kNS_XULPROTOTYPECACHE_CID },
46997: #endif
46997: #ifdef MOZ_XTF
46997:   { NS_XTFSERVICE_CONTRACTID, &kNS_XTFSERVICE_CID },
46997:   { NS_XMLCONTENTBUILDER_CONTRACTID, &kNS_XMLCONTENTBUILDER_CID },
46997: #endif
46997:   { CONTENT_DLF_CONTRACTID, &kNS_CONTENT_DOCUMENT_LOADER_FACTORY_CID },
46997:   { NS_SYNCLOADDOMSERVICE_CONTRACTID, &kNS_SYNCLOADDOMSERVICE_CID },
46997:   { NS_JSPROTOCOLHANDLER_CONTRACTID, &kNS_JSPROTOCOLHANDLER_CID },
46997:   { NS_WINDOWCONTROLLER_CONTRACTID, &kNS_WINDOWCONTROLLER_CID },
46997:   { "@mozilla.org/view-manager;1", &kNS_VIEW_MANAGER_CID },
46997:   { PLUGIN_DLF_CONTRACTID, &kNS_PLUGINDOCLOADERFACTORY_CID },
46997:   { NS_STYLESHEETSERVICE_CONTRACTID, &kNS_STYLESHEETSERVICE_CID },
46997:   { TRANSFORMIIX_XSLT_PROCESSOR_CONTRACTID, &kTRANSFORMIIX_XSLT_PROCESSOR_CID },
46997:   { NS_XPATH_EVALUATOR_CONTRACTID, &kTRANSFORMIIX_XPATH_EVALUATOR_CID },
46997:   { NS_XPOINTER_SCHEME_PROCESSOR_BASE "xpath1", &kTRANSFORMIIX_XPATH1_SCHEME_CID },
46997:   { TRANSFORMIIX_NODESET_CONTRACTID, &kTRANSFORMIIX_NODESET_CID },
46997:   { NS_XMLSERIALIZER_CONTRACTID, &kNS_XMLSERIALIZER_CID },
46997:   { NS_FILEREADER_CONTRACTID, &kNS_FILEREADER_CID },
46997:   { NS_FORMDATA_CONTRACTID, &kNS_FORMDATA_CID },
46997:   { NS_NETWORK_PROTOCOL_CONTRACTID_PREFIX FILEDATA_SCHEME, &kNS_FILEDATAPROTOCOLHANDLER_CID },
46997:   { NS_XMLHTTPREQUEST_CONTRACTID, &kNS_XMLHTTPREQUEST_CID },
47008:   { NS_WEBSOCKET_CONTRACTID, &kNS_WEBSOCKET_CID },
47008:   { NS_WSPROTOCOLHANDLER_CONTRACTID, &kNS_WSPROTOCOLHANDLER_CID },
47008:   { NS_WSSPROTOCOLHANDLER_CONTRACTID, &kNS_WSSPROTOCOLHANDLER_CID },
46997:   { NS_DOMPARSER_CONTRACTID, &kNS_DOMPARSER_CID },
46997:   { "@mozilla.org/dom/storage;1", &kNS_DOMSTORAGE_CID },
46997:   { "@mozilla.org/dom/storage;2", &kNS_DOMSTORAGE2_CID },
46997:   { "@mozilla.org/dom/storagemanager;1", &kNS_DOMSTORAGEMANAGER_CID },
46997:   { "@mozilla.org/dom/json;1", &kNS_DOMJSON_CID },
46997:   { "@mozilla.org/editor/texteditor;1", &kNS_TEXTEDITOR_CID },
52412:   { INDEXEDDB_MANAGER_CONTRACTID, &kINDEXEDDB_MANAGER_CID },
46997: #ifndef MOZILLA_PLAINTEXT_EDITOR_ONLY
46997: #ifdef ENABLE_EDITOR_API_LOG
46997:   { "@mozilla.org/editor/htmleditor;1", &kNS_HTMLEDITOR_CID },
46997: #else
46997:   { "@mozilla.org/editor/htmleditor;1", &kNS_HTMLEDITOR_CID },
46997: #endif
46997: #endif
46997:   { "@mozilla.org/editor/editorcontroller;1", &kNS_EDITORCONTROLLER_CID },
46997:   { "", &kNS_EDITORCOMMANDTABLE_CID },
46997: #ifndef MOZILLA_PLAINTEXT_EDITOR_ONLY
46997:   { "@mozilla.org/textservices/textservicesdocument;1", &kNS_TEXTSERVICESDOCUMENT_CID },
46997: #endif
46997:   { "@mozilla.org/geolocation/service;1", &kNS_GEOLOCATION_SERVICE_CID },
46997:   { "@mozilla.org/geolocation;1", &kNS_GEOLOCATION_CID },
46997:   { "@mozilla.org/focus-manager;1", &kNS_FOCUSMANAGER_CID },
46997:   { "@mozilla.org/content/contentutils;1", &kNS_ICONTENTUTILS_CID },
57651:   { "@mozilla.org/content/contentutils2;1", &kNS_ICONTENTUTILS2_CID },
61940: #ifndef MOZ_ENABLE_LIBXUL
61940:   { "@mozilla.org/content/contentutils-moz2.0;1", &kNS_ICONTENTUTILS_MOZILLA_2_0_BRANCH_CID },
61940: #endif
46997:   { CSPSERVICE_CONTRACTID, &kCSPSERVICE_CID },
46997:   { NS_EVENTLISTENERSERVICE_CONTRACTID, &kNS_EVENTLISTENERSERVICE_CID },
47018:   { NS_GLOBALMESSAGEMANAGER_CONTRACTID, &kNS_GLOBALMESSAGEMANAGER_CID },
51811:   { NS_PARENTPROCESSMESSAGEMANAGER_CONTRACTID, &kNS_PARENTPROCESSMESSAGEMANAGER_CID },
51811:   { NS_CHILDPROCESSMESSAGEMANAGER_CONTRACTID, &kNS_CHILDPROCESSMESSAGEMANAGER_CID },
46997:   { NSCHANNELPOLICY_CONTRACTID, &kNSCHANNELPOLICY_CID },
46997:   { NS_SCRIPTSECURITYMANAGER_CONTRACTID, &kNS_SCRIPTSECURITYMANAGER_CID },
46997:   { NS_GLOBAL_CHANNELEVENTSINK_CONTRACTID, &kNS_SCRIPTSECURITYMANAGER_CID },
46997:   { NS_PRINCIPAL_CONTRACTID, &kNS_PRINCIPAL_CID },
46997:   { NS_SYSTEMPRINCIPAL_CONTRACTID, &kNS_SYSTEMPRINCIPAL_CID },
46997:   { NS_NULLPRINCIPAL_CONTRACTID, &kNS_NULLPRINCIPAL_CID },
46997:   { NS_SECURITYNAMESET_CONTRACTID, &kNS_SECURITYNAMESET_CID },
47063: #if defined(XP_UNIX)    || \
47063:     defined(_WINDOWS)   || \
47063:     defined(machintosh) || \
47063:     defined(android)
47063:   { NS_ACCELEROMETER_CONTRACTID, &kNS_ACCELEROMETER_CID },
47063: #endif
58004: #if defined(ANDROID) || defined(MOZ_PLATFORM_MAEMO)
57998:   { "@mozilla.org/widget/hapticfeedback;1", &kNS_HAPTICFEEDBACK_CID },
57998: #endif
56094:   { THIRDPARTYUTIL_CONTRACTID, &kTHIRDPARTYUTIL_CID },
57827:   { NS_WORKERFACTORY_CONTRACTID, &kNS_WORKERFACTORY_CID },
46997:   { NULL }
41899: };
41899: 
46997: static const mozilla::Module::CategoryEntry kLayoutCategories[] = {
46997:   XPCONNECT_CATEGORIES
46997:   { JAVASCRIPT_GLOBAL_CONSTRUCTOR_CATEGORY, "Image", NS_HTMLIMGELEMENT_CONTRACTID },
46997:   { JAVASCRIPT_GLOBAL_CONSTRUCTOR_PROTO_ALIAS_CATEGORY, "Image", "HTMLImageElement" },
46997:   { JAVASCRIPT_GLOBAL_CONSTRUCTOR_CATEGORY, "Option", NS_HTMLOPTIONELEMENT_CONTRACTID },
46997:   { JAVASCRIPT_GLOBAL_CONSTRUCTOR_PROTO_ALIAS_CATEGORY, "Option", "HTMLOptionElement" },
46997: #ifdef MOZ_MEDIA
46997:   { JAVASCRIPT_GLOBAL_CONSTRUCTOR_CATEGORY, "Audio", NS_HTMLAUDIOELEMENT_CONTRACTID },
46997:   { JAVASCRIPT_GLOBAL_CONSTRUCTOR_PROTO_ALIAS_CATEGORY, "Audio", "HTMLAudioElement" },
46997: #endif
46997:   { "content-policy", NS_DATADOCUMENTCONTENTPOLICY_CONTRACTID, NS_DATADOCUMENTCONTENTPOLICY_CONTRACTID },
46997:   { "content-policy", NS_NODATAPROTOCOLCONTENTPOLICY_CONTRACTID, NS_NODATAPROTOCOLCONTENTPOLICY_CONTRACTID },
46997:   { "content-policy", "CSPService", CSPSERVICE_CONTRACTID },
46997:   { "net-channel-event-sinks", "CSPService", CSPSERVICE_CONTRACTID },
46997:   { JAVASCRIPT_GLOBAL_STATIC_NAMESET_CATEGORY, "PrivilegeManager", NS_SECURITYNAMESET_CONTRACTID },
46997:   { "app-startup", "Script Security Manager", "service," NS_SCRIPTSECURITYMANAGER_CONTRACTID },
46997:   CONTENTDLF_CATEGORIES
46997:   { NULL }
41899: };
41899: 
46997: static void
46997: LayoutModuleDtor()
41899: {
46997:   xpcModuleDtor();
41899: 
41899:   nsScriptSecurityManager::Shutdown();
41899: }
41899: 
46997: static const mozilla::Module kLayoutModule = {
46997:   mozilla::Module::kVersion,
46997:   kLayoutCIDs,
46997:   kLayoutContracts,
46997:   kLayoutCategories,
46997:   NULL,
46997:   Initialize,
46997:   LayoutModuleDtor
41899: };
41899:   
46997: NSMODULE_DEFN(nsLayoutModule) = &kLayoutModule;

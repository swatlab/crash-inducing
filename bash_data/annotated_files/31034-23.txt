16295: /********************************************************************
16295:  *                                                                  *
16295:  * THIS FILE IS PART OF THE OggVorbis SOFTWARE CODEC SOURCE CODE.   *
16295:  * USE, DISTRIBUTION AND REPRODUCTION OF THIS LIBRARY SOURCE IS     *
16295:  * GOVERNED BY A BSD-STYLE SOURCE LICENSE INCLUDED WITH THIS SOURCE *
16295:  * IN 'COPYING'. PLEASE READ THESE TERMS BEFORE DISTRIBUTING.       *
16295:  *                                                                  *
16295:  * THE OggVorbis SOURCE CODE IS (C) COPYRIGHT 1994-2007             *
16295:  * by the Xiph.Org Foundation http://www.xiph.org/                  *
16295:  *                                                                  *
16295:  ********************************************************************
16295: 
16295:  function: single-block PCM analysis mode dispatch
31034:  last mod: $Id: analysis.c 16226 2009-07-08 06:43:49Z xiphmont $
16295: 
16295:  ********************************************************************/
16295: 
16295: #include <stdio.h>
16295: #include <string.h>
16295: #include <math.h>
16295: #include <ogg/ogg.h>
16295: #include "vorbis/codec.h"
16295: #include "codec_internal.h"
16295: #include "registry.h"
16295: #include "scales.h"
16295: #include "os.h"
16295: #include "misc.h"
16295: 
16295: /* decides between modes, dispatches to the appropriate mapping. */
16295: int vorbis_analysis(vorbis_block *vb, ogg_packet *op){
16295:   int ret,i;
16295:   vorbis_block_internal *vbi=vb->internal;
16295: 
16295:   vb->glue_bits=0;
16295:   vb->time_bits=0;
16295:   vb->floor_bits=0;
16295:   vb->res_bits=0;
16295: 
16295:   /* first things first.  Make sure encode is ready */
16295:   for(i=0;i<PACKETBLOBS;i++)
16295:     oggpack_reset(vbi->packetblob[i]);
16295: 
16295:   /* we only have one mapping type (0), and we let the mapping code
16295:      itself figure out what soft mode to use.  This allows easier
16295:      bitrate management */
16295: 
16295:   if((ret=_mapping_P[0]->forward(vb)))
16295:     return(ret);
16295: 
16295:   if(op){
16295:     if(vorbis_bitrate_managed(vb))
16295:       /* The app is using a bitmanaged mode... but not using the
16295:          bitrate management interface. */
16295:       return(OV_EINVAL);
16295: 
16295:     op->packet=oggpack_get_buffer(&vb->opb);
16295:     op->bytes=oggpack_bytes(&vb->opb);
16295:     op->b_o_s=0;
16295:     op->e_o_s=vb->eofflag;
16295:     op->granulepos=vb->granulepos;
16295:     op->packetno=vb->sequence; /* for sake of completeness */
16295:   }
16295:   return(0);
16295: }
16295: 
31034: #ifdef ANALYSIS
31034: int analysis_noisy=1;
31034: 
16295: /* there was no great place to put this.... */
16295: void _analysis_output_always(char *base,int i,float *v,int n,int bark,int dB,ogg_int64_t off){
16295:   int j;
16295:   FILE *of;
16295:   char buffer[80];
16295: 
16295:   sprintf(buffer,"%s_%d.m",base,i);
16295:   of=fopen(buffer,"w");
16295: 
16295:   if(!of)perror("failed to open data dump file");
16295: 
16295:   for(j=0;j<n;j++){
16295:     if(bark){
16295:       float b=toBARK((4000.f*j/n)+.25);
16295:       fprintf(of,"%f ",b);
16295:     }else
16295:       if(off!=0)
16295:         fprintf(of,"%f ",(double)(j+off)/8000.);
16295:       else
16295:         fprintf(of,"%f ",(double)j);
16295: 
16295:     if(dB){
16295:       float val;
16295:       if(v[j]==0.)
16295:         val=-140.;
16295:       else
16295:         val=todB(v+j);
16295:       fprintf(of,"%f\n",val);
16295:     }else{
16295:       fprintf(of,"%f\n",v[j]);
16295:     }
16295:   }
16295:   fclose(of);
16295: }
16295: 
16295: void _analysis_output(char *base,int i,float *v,int n,int bark,int dB,
16295:                       ogg_int64_t off){
16295:   if(analysis_noisy)_analysis_output_always(base,i,v,n,bark,dB,off);
16295: }
16295: 
31034: #endif
16295: 
16295: 
16295: 
16295: 
16295: 
16295: 
16295: 
16295: 
16295: 
16295: 
16295: 

59370: /* Any copyright is dedicated to the Public Domain.
59370:    http://creativecommons.org/publicdomain/zero/1.0/ */
59370: 
59370: const Ci = Components.interfaces;
59370: const Cc = Components.classes;
59370: const Cr = Components.results;
59370: const Cu = Components.utils;
59370: 
59370: Cu.import("resource://gre/modules/Services.jsm");
59370: 
59370: // Import common head.
59370: let (commonFile = do_get_file("../head_common.js", false)) {
59370:   let uri = Services.io.newFileURI(commonFile);
59370:   Services.scriptloader.loadSubScript(uri.spec, this);
59370: }
59370: 
59370: // Put any other stuff relative to this test folder below.
59370: 
59370: const kDBName = "places.sqlite";
59370: 
59370: /**
59370:  * Sets the database to use for the given test.  This should be the very first
59370:  * thing we do otherwise, this database will not be used!
59370:  *
59370:  * @param aFileName
59370:  *        The filename of the database to use.  This database must exist in
59370:  *        toolkit/components/places/tests/migration!
59370:  */
59370: function setPlacesDatabase(aFileName)
59370: {
59370:   let file = do_get_file(aFileName);
59370: 
59370:   // Ensure that our database doesn't already exist.
59370:   let (dbFile = gProfD.clone()) {
59370:     dbFile.append(kDBName);
59370:     do_check_false(dbFile.exists());
59370:   }
59370: 
81717:   file.copyToFollowingLinks(gProfD, kDBName);
59370: }

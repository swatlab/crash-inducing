 84764: /* Any copyright is dedicated to the Public Domain.
 84764:    http://creativecommons.org/publicdomain/zero/1.0/ */
 84764: "use strict";
 84764: 
100193: let tiltOpened = false;
100193: 
 84764: function test() {
 84764:   if (!isTiltEnabled()) {
 84764:     info("Skipping destruction test because Tilt isn't enabled.");
 84764:     return;
 84764:   }
 84764:   if (!isWebGLSupported()) {
 84764:     info("Skipping destruction test because WebGL isn't supported.");
 84764:     return;
 84764:   }
 84764: 
 84764:   waitForExplicitFinish();
 84764: 
 84764:   createTab(function() {
 84764:     createTilt({
 84764:       onTiltOpen: function()
 84764:       {
100193:         tiltOpened = true;
100193: 
100193:         Services.obs.addObserver(finalize, DESTROYED, false);
 84764:         InspectorUI.closeInspectorUI();
 84764:       }
100193:     }, false, function suddenDeath()
100193:     {
100193:       info("Tilt could not be initialized properly.");
100193:       cleanup();
 84764:     });
 84764:   });
 84764: }
 84764: 
100193: function finalize() {
 84764:   let id = TiltUtils.getWindowId(gBrowser.selectedBrowser.contentWindow);
 84764: 
 84764:   is(Tilt.visualizers[id], null,
 84764:     "The current instance of the visualizer wasn't destroyed properly.");
 84764: 
100193:   cleanup();
100193: }
100193: 
100193: function cleanup() {
100193:   if (tiltOpened) { Services.obs.removeObserver(finalize, DESTROYED); }
 84764:   gBrowser.removeCurrentTab();
 84764:   finish();
 84764: }

    1: /* -*- Mode: Java; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
    1: /* ***** BEGIN LICENSE BLOCK *****
    1:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
    1:  *
    1:  * The contents of this file are subject to the Mozilla Public License Version
    1:  * 1.1 (the "License"); you may not use this file except in compliance with
    1:  * the License. You may obtain a copy of the License at
    1:  * http://www.mozilla.org/MPL/
    1:  *
    1:  * Software distributed under the License is distributed on an "AS IS" basis,
    1:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
    1:  * for the specific language governing rights and limitations under the
    1:  * License.
    1:  *
    1:  * The Original Code is mozilla.org code.
    1:  *
    1:  * The Initial Developer of the Original Code is
    1:  * Netscape Communications Corporation.
    1:  * Portions created by the Initial Developer are Copyright (C) 1998
    1:  * the Initial Developer. All Rights Reserved.
    1:  *
    1:  * Contributor(s):
    1:  *   Benjamin Smedberg <bsmedberg@covad.net>
    1:  *
    1:  * Alternatively, the contents of this file may be used under the terms of
    1:  * either the GNU General Public License Version 2 or later (the "GPL"), or
    1:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
    1:  * in which case the provisions of the GPL or the LGPL are applicable instead
    1:  * of those above. If you wish to allow use of your version of this file only
    1:  * under the terms of either the GPL or the LGPL, and not to allow others to
    1:  * use your version of this file under the terms of the MPL, indicate your
    1:  * decision by deleting the provisions above and replace them with the notice
    1:  * and other provisions required by the GPL or the LGPL. If you do not delete
    1:  * the provisions above, a recipient may use your version of this file under
    1:  * the terms of any one of the MPL, the GPL or the LGPL.
    1:  *
    1:  * ***** END LICENSE BLOCK ***** */
    1: 
    1: /* The prefs in this file are shipped with the GRE and should apply to all
    1:  * embedding situations. Application-specific preferences belong somewhere else,
    1:  * for example xpfe/bootstrap/browser-prefs.js
    1:  *
    1:  * Platform-specific #ifdefs at the end of this file override the generic
    1:  * entries at the top.
    1:  */
    1: 
    1: // SYNTAX HINTS:  dashes are delimiters.  Use underscores instead.
    1: //  The first character after a period must be alphabetic.
    1: 
    1: pref("keyword.URL", "http://www.google.com/search?ie=UTF-8&oe=utf-8&q=");
    1: pref("keyword.enabled", false);
 9675: pref("general.useragent.locale", "chrome://global/locale/intl.properties");
51553: pref("general.useragent.compatMode.firefox", false);
    1: 
    1: pref("general.config.obscure_value", 13); // for MCD .cfg files
    1: 
    1: pref("general.warnOnAboutConfig", true);
    1: 
    1: // maximum number of dated backups to keep at any time
    1: pref("browser.bookmarks.max_backups",       5);
    1: 
    1: pref("browser.cache.disk.enable",           true);
53961: // Is this the first-time smartsizing has been introduced?
53961: pref("browser.cache.disk.smart_size.first_run", true);
53961: // Does the user want smart-sizing?
53961: pref("browser.cache.disk.smart_size.enabled", true);
78231: // Size (in KB) explicitly set by the user. Used when smart_size.enabled == false
50382: pref("browser.cache.disk.capacity",         256000);
78231: // Max-size (in KB) for entries in disk cache. Set to -1 for no limit.
78231: // (Note: entries bigger than 1/8 of disk-cache are never cached)
78231: pref("browser.cache.disk.max_entry_size",    51200);  // 50 MB
    1: pref("browser.cache.memory.enable",         true);
72584: // -1 = determine dynamically, 0 = none, n = memory capacity in kilobytes
    1: //pref("browser.cache.memory.capacity",     -1);
78231: // Max-size (in KB) for entries in memory cache. Set to -1 for no limit.  
78231: // (Note: entries bigger than than 90% of the mem-cache are never cached)
72584: pref("browser.cache.memory.max_entry_size",  5120);
38137: pref("browser.cache.disk_cache_ssl",        true);
    1: // 0 = once-per-session, 1 = each-time, 2 = never, 3 = when-appropriate/automatically
    1: pref("browser.cache.check_doc_frequency",   3);
    1: 
    1: pref("browser.cache.offline.enable",           true);
71448: 
    1: // offline cache capacity in kilobytes
14026: pref("browser.cache.offline.capacity",         512000);
    1: 
10561: // offline apps should be limited to this much data in global storage
10561: // (in kilobytes)
10561: pref("offline-apps.quota.max",        204800);
10561: 
10561: // the user should be warned if offline app disk usage exceeds this amount
10561: // (in kilobytes)
10561: pref("offline-apps.quota.warn",        51200);
10561: 
52336: // Whether or not indexedDB is enabled.
52336: pref("dom.indexedDB.enabled", true);
52336: // Space to allow indexedDB databases before prompting (in MB).
52336: pref("dom.indexedDB.warningQuota", 50);
52336: 
74337: // Whether or not Web Workers are enabled.
74337: pref("dom.workers.enabled", true);
74337: // The number of workers per domain allowed to run concurrently.
74337: pref("dom.workers.maxPerDomain", 20);
74337: 
72298: // Whether window.performance is enabled
72298: pref("dom.enable_performance", true);
72298: 
    1: // Fastback caching - if this pref is negative, then we calculate the number
    1: // of content viewers to cache based on the amount of available memory.
    1: pref("browser.sessionhistory.max_total_viewers", -1);
    1: 
80574: pref("browser.sessionhistory.optimize_eviction", true);
80574: 
24830: pref("ui.use_native_colors", true);
43674: pref("ui.click_hold_context_menus", false);
    1: pref("browser.display.use_document_fonts",  1);  // 0 = never, 1 = quick, 2 = always
    1: pref("browser.display.use_document_colors", true);
    1: pref("browser.display.use_system_colors",   false);
    1: pref("browser.display.foreground_color",    "#000000");
    1: pref("browser.display.background_color",    "#FFFFFF");
    1: pref("browser.display.force_inline_alttext", false); // true = force ALT text for missing images to be layed out inline
    1: // 0 = no external leading, 
    1: // 1 = use external leading only when font provides, 
    1: // 2 = add extra leading both internal leading and external leading are zero
    1: pref("browser.display.normal_lineheight_calc_control", 2);
    1: pref("browser.display.show_image_placeholders", true); // true = show image placeholders while image is loaded and when image is broken
 4032: // min font device pixel size at which to turn on high quality
 9002: pref("browser.display.auto_quality_min_font_size", 20);
    1: pref("browser.anchor_color",                "#0000EE");
    1: pref("browser.active_color",                "#EE0000");
    1: pref("browser.visited_color",               "#551A8B");
    1: pref("browser.underline_anchors",           true);
    1: pref("browser.blink_allowed",               true);
    1: pref("browser.enable_automatic_image_resizing", false);
30811: pref("browser.enable_click_image_resizing", true);
    1: 
42460: // See http://dev.w3.org/html5/spec/forms.html#attr-fe-autofocus
42460: pref("browser.autofocus", true);
42460: 
    1: // See http://whatwg.org/specs/web-apps/current-work/#ping
    1: pref("browser.send_pings", false);
    1: pref("browser.send_pings.max_per_link", 1);           // limit the number of pings that are sent per link click
    1: pref("browser.send_pings.require_same_host", false);  // only send pings to the same host if this is true
    1: 
    1: pref("browser.display.use_focus_colors",    false);
    1: pref("browser.display.focus_background_color", "#117722");
    1: pref("browser.display.focus_text_color",     "#ffffff");
    1: pref("browser.display.focus_ring_width",     1);
    1: pref("browser.display.focus_ring_on_anything", false);
20177: // focus ring border style.
20177: // 0 = solid border, 1 = dotted border
20177: pref("browser.display.focus_ring_style", 1);
    1: 
    1: pref("browser.helperApps.alwaysAsk.force",  false);
    1: pref("browser.helperApps.neverAsk.saveToDisk", "");
    1: pref("browser.helperApps.neverAsk.openFile", "");
    1: 
    1: // xxxbsmedberg: where should prefs for the toolkit go?
    1: pref("browser.chrome.toolbar_tips",         true);
    1: // 0 = Pictures Only, 1 = Text Only, 2 = Pictures and Text
    1: pref("browser.chrome.toolbar_style",        2);
    1: // max image size for which it is placed in the tab icon for tabbrowser.
    1: // if 0, no images are used for tab icons for image documents.
    1: pref("browser.chrome.image_icons.max_size", 1024);
    1: 
    1: pref("browser.triple_click_selects_paragraph", true);
    1: 
24155: // When loading <video> or <audio>, check for Access-Control-Allow-Origin
24155: // header, and disallow the connection if not present or permitted.
24155: pref("media.enforce_same_site_origin", false);
24155: 
26836: // Media cache size in kilobytes
43702: pref("media.cache_size", 512000);
26836: 
70033: // Master HTML5 media volume scale.
70033: pref("media.volume_scale", "1.0");
70033: 
48220: #ifdef MOZ_RAW
48220: pref("media.raw.enabled", true);
48220: #endif
22724: #ifdef MOZ_OGG
22724: pref("media.ogg.enabled", true);
22724: #endif
22724: #ifdef MOZ_WAVE
22724: pref("media.wave.enabled", true);
22724: #endif
43339: #ifdef MOZ_WEBM
43339: pref("media.webm.enabled", true);
43339: #endif
22724: 
25272: // Whether to autostart a media element with an |autoplay| attribute
25272: pref("media.autoplay.enabled", true);
25272: 
18393: // 0 = Off, 1 = Full, 2 = Tagged Images Only. 
46446: // See eCMSMode in gfx/thebes/gfxPlatform.h
19174: pref("gfx.color_management.mode", 2);
 3787: pref("gfx.color_management.display_profile", "");
16152: pref("gfx.color_management.rendering_intent", 0);
74468: pref("gfx.color_management.enablev4", false);
 3787: 
19962: pref("gfx.downloadable_fonts.enabled", true);
62296: pref("gfx.downloadable_fonts.fallback_delay", 3000);
55084: pref("gfx.downloadable_fonts.sanitize", true);
19962: 
67838: // see gfx/thebes/gfxUnicodeProperties.h for definitions of script bits
67838: #ifdef XP_MACOSX
74351: // use harfbuzz for default (0x01) + arabic (0x02) + hebrew (0x04) + thai (0x40)
74351: pref("gfx.font_rendering.harfbuzz.scripts", 71);
67838: #else
79864: #ifdef ANDROID
79864: pref("gfx.font_rendering.harfbuzz.scripts", 71);
79864: #else
67838: // use harfbuzz for default (0x01) + arabic (0x02)
67838: pref("gfx.font_rendering.harfbuzz.scripts", 3);
67838: #endif
79864: #endif
43527: 
38727: #ifdef XP_WIN
38727: pref("gfx.font_rendering.directwrite.enabled", false);
61083: pref("gfx.font_rendering.directwrite.use_gdi_table_loading", true);
38727: #endif
38727: 
72433: #ifdef XP_WIN
72433: pref("gfx.canvas.azure.enabled", true);
72433: #endif
72433: 
    1: pref("accessibility.browsewithcaret", false);
    1: pref("accessibility.warn_on_browsewithcaret", true);
    1: 
24976: pref("accessibility.browsewithcaret_shortcut.enabled", true);
24893: 
    1: #ifndef XP_MACOSX
    1: // Tab focus model bit field:
    1: // 1 focuses text controls, 2 focuses other form elements, 4 adds links.
    1: // Most users will want 1, 3, or 7.
    1: // On OS X, we use Full Keyboard Access system preference,
    1: // unless accessibility.tabfocus is set by the user.
    1: pref("accessibility.tabfocus", 7);
    1: pref("accessibility.tabfocus_applies_to_xul", false);
  479: 
39169: // Forcibly disable a11y on win32, even if something attempts
39169: // to enable it.
39169: pref("accessibility.win32.force_disabled", false);
39169: 
  479: // On OS X, we follow the "Click in the scrollbar to:" system preference
  479: // unless this preference was set manually
  479: pref("ui.scrollToClick", 0);
  479: 
    1: #else
    1: // Only on mac tabfocus is expected to handle UI widgets as well as web content
    1: pref("accessibility.tabfocus_applies_to_xul", true);
    1: #endif
    1: 
    1: pref("accessibility.usetexttospeech", "");
    1: pref("accessibility.usebrailledisplay", "");
    1: pref("accessibility.accesskeycausesactivation", true);
49216: pref("accessibility.mouse_focuses_formcontrol", false);
    1: 
    1: // Type Ahead Find
    1: pref("accessibility.typeaheadfind", true);
    1: pref("accessibility.typeaheadfind.autostart", true);
    1: // casesensitive: controls the find bar's case-sensitivity
    1: //     0 - "never"  (case-insensitive)
    1: //     1 - "always" (case-sensitive)
    1: // other - "auto"   (case-sensitive for mixed-case input, insensitive otherwise)
    1: pref("accessibility.typeaheadfind.casesensitive", 0);
    1: pref("accessibility.typeaheadfind.linksonly", true);
    1: pref("accessibility.typeaheadfind.startlinksonly", false);
    1: pref("accessibility.typeaheadfind.timeout", 4000);
    1: pref("accessibility.typeaheadfind.enabletimeout", true);
    1: pref("accessibility.typeaheadfind.soundURL", "beep");
71716: pref("accessibility.typeaheadfind.enablesound", true);
    1: pref("accessibility.typeaheadfind.prefillwithselection", true);
    1: 
14836: // use Mac OS X Appearance panel text smoothing setting when rendering text, disabled by default
14836: pref("gfx.use_text_smoothing_setting", false);
14836: 
    1: // loading and rendering of framesets and iframes
    1: pref("browser.frames.enabled", true);
    1: 
13392: // Number of characters to consider emphasizing for rich autocomplete results
13392: pref("toolkit.autocomplete.richBoundaryCutoff", 200);
13392: 
 4663: pref("toolkit.scrollbox.smoothScroll", true);
    1: pref("toolkit.scrollbox.scrollIncrement", 20);
    1: pref("toolkit.scrollbox.clickToScroll.scrollDelay", 150);
    1: 
69766: // Telemetry
69766: pref("toolkit.telemetry.enabled", false);
72210: pref("toolkit.telemetry.server", "https://data.mozilla.com");
72409: // Telemetry server owner. Please change if you set toolkit.telemetry.server to a different server
72409: pref("toolkit.telemetry.server_owner", "Mozilla");
72409: // Information page about telemetry (temporary ; will be about:telemetry in the end)
72409: pref("toolkit.telemetry.infoURL", "http://www.mozilla.com/legal/privacy/firefox.html#telemetry");
69766: 
    1: // view source
    1: pref("view_source.syntax_highlight", true);
    1: pref("view_source.wrap_long_lines", false);
19007: pref("view_source.editor.external", false);
19007: pref("view_source.editor.path", "");
19007: // allows to add further arguments to the editor; use the %LINE% placeholder
19007: // for jumping to a specific line (e.g. "/line:%LINE%" or "--goto %LINE%")
19007: pref("view_source.editor.args", "");
    1: 
    1: // dispatch left clicks only to content in browser (still allows clicks to chrome/xul)
    1: pref("nglayout.events.dispatchLeftClickOnly", true);
    1: 
 1528: // whether or not to draw images while dragging
 1528: pref("nglayout.enable_drag_images", true);
 1528: 
    1: // scrollbar snapping region
    1: // 0 - off
    1: // 1 and higher - slider thickness multiple
    1: pref("slider.snapMultiplier", 0);
    1: 
    1: // option to choose plug-in finder
    1: pref("application.use_ns_plugin_finder", false);
    1: 
    1: // URI fixup prefs
    1: pref("browser.fixup.alternate.enabled", true);
    1: pref("browser.fixup.alternate.prefix", "www.");
    1: pref("browser.fixup.alternate.suffix", ".com");
    1: pref("browser.fixup.hide_user_pass", true);
    1: 
23992: // Location Bar AutoComplete
23992: pref("browser.urlbar.autocomplete.enabled", true);
23992: 
    1: // Print header customization
    1: // Use the following codes:
    1: // &T - Title
    1: // &U - Document URL
    1: // &D - Date/Time
    1: // &P - Page Number
    1: // &PT - Page Number "of" Page total
    1: // Set each header to a string containing zero or one of these codes
    1: // and the code will be replaced in that string by the corresponding data
    1: pref("print.print_headerleft", "&T");
    1: pref("print.print_headercenter", "");
    1: pref("print.print_headerright", "&U");
    1: pref("print.print_footerleft", "&PT");
    1: pref("print.print_footercenter", "");
    1: pref("print.print_footerright", "&D");
    1: pref("print.show_print_progress", true);
    1: 
    1: // xxxbsmedberg: more toolkit prefs
    1: 
    1: // When this is set to false each window has its own PrintSettings
    1: // and a change in one window does not affect the others
    1: pref("print.use_global_printsettings", true);
    1: 
    1: // Save the Printings after each print job
    1: pref("print.save_print_settings", true);
    1: 
    1: pref("print.whileInPrintPreview", true);
    1: 
    1: // Cache old Presentation when going into Print Preview
    1: pref("print.always_cache_old_pres", false);
    1: 
13309: // Enables you to specify the amount of the paper that is to be treated
13309: // as unwriteable.  The print_edge_XXX and print_margin_XXX preferences
13309: // are treated as offsets that are added to this pref.
13309: // Default is "-1", which means "use the system default".  (If there is
13309: // no system default, then the -1 is treated as if it were 0.)
13309: // This is used by both Printing and Print Preview.
13309: // Units are in 1/100ths of an inch.
13309: pref("print.print_unwriteable_margin_top",    -1);
13309: pref("print.print_unwriteable_margin_left",   -1);
13309: pref("print.print_unwriteable_margin_right",  -1);
13309: pref("print.print_unwriteable_margin_bottom", -1);
13309: 
13309: // Enables you to specify the gap from the edge of the paper's 
13309: // unwriteable area to the margin.
13309: // This is used by both Printing and Print Preview
13309: // Units are in 1/100ths of an inch.
13309: pref("print.print_edge_top", 0);
13309: pref("print.print_edge_left", 0);
13309: pref("print.print_edge_right", 0);
13309: pref("print.print_edge_bottom", 0);
    1: 
    1: // Pref used by the spellchecker extension to control the 
    1: // maximum number of misspelled words that will be underlined
    1: // in a document.
    1: pref("extensions.spellcheck.inline.max-misspellings", 500);
    1: 
    1: // Prefs used by libeditor. Prefs specific to seamonkey composer
18735: // belong in comm-central/editor/ui/composer.js
    1: 
    1: pref("editor.use_custom_colors", false);
40114: pref("editor.singleLine.pasteNewlines",      2);
    1: pref("editor.quotesPreformatted",            false);
    1: pref("editor.use_css",                       true);
    1: pref("editor.css.default_length_unit",       "px");
    1: pref("editor.resizing.preserve_ratio",       true);
    1: pref("editor.positioning.offset",            0);
    1: 
    1: 
    1: // Default Capability Preferences: Security-Critical! 
    1: // Editing these may create a security risk - be sure you know what you're doing
    1: //pref("capability.policy.default.barprop.visible.set", "UniversalBrowserWrite");
    1: 
    1: pref("capability.policy.default_policynames", "mailnews");
    1: 
    1: pref("capability.policy.default.DOMException.code", "allAccess");
    1: pref("capability.policy.default.DOMException.message", "allAccess");
    1: pref("capability.policy.default.DOMException.name", "allAccess");
    1: pref("capability.policy.default.DOMException.result", "allAccess");
    1: pref("capability.policy.default.DOMException.toString.get", "allAccess");
    1: 
    1: pref("capability.policy.default.History.back.get", "allAccess");
    1: pref("capability.policy.default.History.current", "UniversalBrowserRead");
    1: pref("capability.policy.default.History.forward.get", "allAccess");
    1: pref("capability.policy.default.History.go.get", "allAccess");
    1: pref("capability.policy.default.History.item", "UniversalBrowserRead");
    1: pref("capability.policy.default.History.next", "UniversalBrowserRead");
    1: pref("capability.policy.default.History.previous", "UniversalBrowserRead");
    1: pref("capability.policy.default.History.toString", "UniversalBrowserRead");
    1: 
    1: pref("capability.policy.default.Location.hash.set", "allAccess");
    1: pref("capability.policy.default.Location.href.set", "allAccess");
    1: pref("capability.policy.default.Location.replace.get", "allAccess");
    1: 
    1: pref("capability.policy.default.Navigator.preference", "allAccess");
    1: pref("capability.policy.default.Navigator.preferenceinternal.get", "UniversalPreferencesRead");
    1: pref("capability.policy.default.Navigator.preferenceinternal.set", "UniversalPreferencesWrite");
    1: 
    1: pref("capability.policy.default.Window.blur.get", "allAccess");
    1: pref("capability.policy.default.Window.close.get", "allAccess");
    1: pref("capability.policy.default.Window.closed.get", "allAccess");
    1: pref("capability.policy.default.Window.focus.get", "allAccess");
    1: pref("capability.policy.default.Window.frames.get", "allAccess");
    1: pref("capability.policy.default.Window.history.get", "allAccess");
    1: pref("capability.policy.default.Window.length.get", "allAccess");
    1: pref("capability.policy.default.Window.location", "allAccess");
    1: pref("capability.policy.default.Window.opener.get", "allAccess");
    1: pref("capability.policy.default.Window.parent.get", "allAccess");
10976: pref("capability.policy.default.Window.postMessage.get", "allAccess");
    1: pref("capability.policy.default.Window.self.get", "allAccess");
    1: pref("capability.policy.default.Window.top.get", "allAccess");
    1: pref("capability.policy.default.Window.window.get", "allAccess");
    1: 
    1: pref("capability.policy.default.Selection.addSelectionListener", "UniversalXPConnect");
    1: pref("capability.policy.default.Selection.removeSelectionListener", "UniversalXPConnect");
    1: 
    1: // Restrictions on the DOM for mail/news - see bugs 66938 and 84545
    1: pref("capability.policy.mailnews.sites", "mailbox: imap: news:");
    1: 
    1: pref("capability.policy.mailnews.*.attributes.get", "noAccess");
    1: pref("capability.policy.mailnews.*.baseURI.get", "noAccess");
    1: pref("capability.policy.mailnews.*.data.get", "noAccess");
    1: pref("capability.policy.mailnews.*.getAttribute", "noAccess");
    1: pref("capability.policy.mailnews.HTMLDivElement.getAttribute", "sameOrigin");
    1: pref("capability.policy.mailnews.*.getAttributeNS", "noAccess");
20347: pref("capability.policy.mailnews.*.getAttributeNode", "noAccess");
20347: pref("capability.policy.mailnews.*.getAttributeNodeNS", "noAccess");
    1: pref("capability.policy.mailnews.*.getNamedItem", "noAccess");
    1: pref("capability.policy.mailnews.*.getNamedItemNS", "noAccess");
    1: pref("capability.policy.mailnews.*.host.get", "noAccess");
    1: pref("capability.policy.mailnews.*.hostname.get", "noAccess");
    1: pref("capability.policy.mailnews.*.href.get", "noAccess");
    1: pref("capability.policy.mailnews.*.innerHTML.get", "noAccess");
    1: pref("capability.policy.mailnews.*.lowSrc.get", "noAccess");
    1: pref("capability.policy.mailnews.*.nodeValue.get", "noAccess");
    1: pref("capability.policy.mailnews.*.pathname.get", "noAccess");
    1: pref("capability.policy.mailnews.*.protocol.get", "noAccess");
    1: pref("capability.policy.mailnews.*.src.get", "noAccess");
    1: pref("capability.policy.mailnews.*.substringData.get", "noAccess");
    1: pref("capability.policy.mailnews.*.text.get", "noAccess");
20347: pref("capability.policy.mailnews.*.textContent", "noAccess");
    1: pref("capability.policy.mailnews.*.title.get", "noAccess");
22752: pref("capability.policy.mailnews.*.wholeText", "noAccess");
    1: pref("capability.policy.mailnews.DOMException.toString", "noAccess");
    1: pref("capability.policy.mailnews.HTMLAnchorElement.toString", "noAccess");
    1: pref("capability.policy.mailnews.HTMLDocument.domain", "noAccess");
    1: pref("capability.policy.mailnews.HTMLDocument.URL", "noAccess");
20347: pref("capability.policy.mailnews.*.documentURI", "noAccess");
    1: pref("capability.policy.mailnews.Location.toString", "noAccess");
    1: pref("capability.policy.mailnews.Range.toString", "noAccess");
    1: pref("capability.policy.mailnews.Window.blur", "noAccess");
    1: pref("capability.policy.mailnews.Window.focus", "noAccess");
    1: pref("capability.policy.mailnews.Window.innerWidth.set", "noAccess");
    1: pref("capability.policy.mailnews.Window.innerHeight.set", "noAccess");
    1: pref("capability.policy.mailnews.Window.moveBy", "noAccess");
    1: pref("capability.policy.mailnews.Window.moveTo", "noAccess");
    1: pref("capability.policy.mailnews.Window.name.set", "noAccess");
    1: pref("capability.policy.mailnews.Window.outerHeight.set", "noAccess");
    1: pref("capability.policy.mailnews.Window.outerWidth.set", "noAccess");
    1: pref("capability.policy.mailnews.Window.resizeBy", "noAccess");
    1: pref("capability.policy.mailnews.Window.resizeTo", "noAccess");
    1: pref("capability.policy.mailnews.Window.screenX.set", "noAccess");
    1: pref("capability.policy.mailnews.Window.screenY.set", "noAccess");
    1: pref("capability.policy.mailnews.Window.sizeToContent", "noAccess");
    1: pref("capability.policy.mailnews.document.load", "noAccess");
    1: pref("capability.policy.mailnews.XMLHttpRequest.channel", "noAccess");
    1: pref("capability.policy.mailnews.XMLHttpRequest.getInterface", "noAccess");
    1: pref("capability.policy.mailnews.XMLHttpRequest.responseXML", "noAccess");
    1: pref("capability.policy.mailnews.XMLHttpRequest.responseText", "noAccess");
    1: pref("capability.policy.mailnews.XMLHttpRequest.status", "noAccess");
    1: pref("capability.policy.mailnews.XMLHttpRequest.statusText", "noAccess");
    1: pref("capability.policy.mailnews.XMLHttpRequest.abort", "noAccess");
    1: pref("capability.policy.mailnews.XMLHttpRequest.getAllResponseHeaders", "noAccess");
    1: pref("capability.policy.mailnews.XMLHttpRequest.getResponseHeader", "noAccess");
    1: pref("capability.policy.mailnews.XMLHttpRequest.open", "noAccess");
    1: pref("capability.policy.mailnews.XMLHttpRequest.send", "noAccess");
    1: pref("capability.policy.mailnews.XMLHttpRequest.setRequestHeader", "noAccess");
    1: pref("capability.policy.mailnews.XMLHttpRequest.readyState", "noAccess");
    1: pref("capability.policy.mailnews.XMLHttpRequest.overrideMimeType", "noAccess");
    1: pref("capability.policy.mailnews.XMLHttpRequest.onload", "noAccess");
    1: pref("capability.policy.mailnews.XMLHttpRequest.onerror", "noAccess");
    1: pref("capability.policy.mailnews.XMLHttpRequest.onreadystatechange", "noAccess");
    1: pref("capability.policy.mailnews.XMLSerializer.serializeToString", "noAccess");
    1: pref("capability.policy.mailnews.XMLSerializer.serializeToStream", "noAccess");
    1: pref("capability.policy.mailnews.DOMParser.parseFromString", "noAccess");
    1: pref("capability.policy.mailnews.DOMParser.parseFromStream", "noAccess");
    1: pref("capability.policy.mailnews.SOAPCall.transportURI", "noAccess");
    1: pref("capability.policy.mailnews.SOAPCall.verifySourceHeader", "noAccess");
    1: pref("capability.policy.mailnews.SOAPCall.invoke", "noAccess");
    1: pref("capability.policy.mailnews.SOAPCall.asyncInvoke", "noAccess");
    1: pref("capability.policy.mailnews.SOAPResponse.fault", "noAccess");
    1: pref("capability.policy.mailnews.SOAPEncoding.styleURI", "noAccess");
    1: pref("capability.policy.mailnews.SOAPEncoding.getAssociatedEncoding", "noAccess");
    1: pref("capability.policy.mailnews.SOAPEncoding.setEncoder", "noAccess");
    1: pref("capability.policy.mailnews.SOAPEncoding.getEncoder", "noAccess");
    1: pref("capability.policy.mailnews.SOAPEncoding.setDecoder", "noAccess");
    1: pref("capability.policy.mailnews.SOAPEncoding.setDecoder", "noAccess");
    1: pref("capability.policy.mailnews.SOAPEncoding.getDecoder", "noAccess");
    1: pref("capability.policy.mailnews.SOAPEncoding.defaultEncoder", "noAccess");
    1: pref("capability.policy.mailnews.SOAPEncoding.defaultDecoder", "noAccess");
    1: pref("capability.policy.mailnews.SOAPEncoding.schemaCollection", "noAccess");
    1: pref("capability.policy.mailnews.SOAPEncoding.encode", "noAccess");
    1: pref("capability.policy.mailnews.SOAPEncoding.decode", "noAccess");
    1: pref("capability.policy.mailnews.SOAPEncoding.mapSchemaURI", "noAccess");
    1: pref("capability.policy.mailnews.SOAPEncoding.unmapSchemaURI", "noAccess");
    1: pref("capability.policy.mailnews.SOAPEncoding.getInternalSchemaURI", "noAccess");
    1: pref("capability.policy.mailnews.SOAPEncoding.getExternalSchemaURI", "noAccess");
    1: pref("capability.policy.mailnews.SOAPFault.element", "noAccess");
    1: pref("capability.policy.mailnews.SOAPFault.faultNamespaceURI", "noAccess");
    1: pref("capability.policy.mailnews.SOAPFault.faultCode", "noAccess");
    1: pref("capability.policy.mailnews.SOAPFault.faultString", "noAccess");
    1: pref("capability.policy.mailnews.SOAPFault.faultActor", "noAccess");
    1: pref("capability.policy.mailnews.SOAPFault.detail", "noAccess");
    1: pref("capability.policy.mailnews.SOAPHeaderBlock.actorURI", "noAccess");
    1: pref("capability.policy.mailnews.SOAPHeaderBlock.mustUnderstand", "noAccess");
    1: pref("capability.policy.mailnews.SOAPParameter", "noAccess");
    1: pref("capability.policy.mailnews.SOAPPropertyBagMutator.propertyBag", "noAccess");
    1: pref("capability.policy.mailnews.SOAPPropertyBagMutator.addProperty", "noAccess");
    1: pref("capability.policy.mailnews.SchemaLoader.load", "noAccess");
    1: pref("capability.policy.mailnews.SchemaLoader.loadAsync", "noAccess");
    1: pref("capability.policy.mailnews.SchemaLoader.processSchemaElement", "noAccess");
    1: pref("capability.policy.mailnews.SchemaLoader.onLoad", "noAccess");
    1: pref("capability.policy.mailnews.SchemaLoader.onError", "noAccess");
    1: pref("capability.policy.mailnews.WSDLLoader.load", "noAccess");
    1: pref("capability.policy.mailnews.WSDLLoader.loadAsync", "noAccess");
    1: pref("capability.policy.mailnews.WSDLLoader.onLoad", "noAccess");
    1: pref("capability.policy.mailnews.WSDLLoader.onError", "noAccess");
    1: pref("capability.policy.mailnews.WebServiceProxyFactory.createProxy", "noAccess");
    1: pref("capability.policy.mailnews.WebServiceProxyFactory.createProxyAsync", "noAccess");
    1: pref("capability.policy.mailnews.WebServiceProxyFactory.onLoad", "noAccess");
    1: pref("capability.policy.mailnews.WebServiceProxyFactory.onError", "noAccess");
    1: 
    1: // XMLExtras
    1: pref("capability.policy.default.XMLHttpRequest.channel", "noAccess");
    1: pref("capability.policy.default.XMLHttpRequest.getInterface", "noAccess");
 4064: pref("capability.policy.default.XMLHttpRequest.open-uri", "allAccess");
    1: pref("capability.policy.default.DOMParser.parseFromStream", "noAccess");
    1: 
    1: // Clipboard
    1: pref("capability.policy.default.Clipboard.cutcopy", "noAccess");
    1: pref("capability.policy.default.Clipboard.paste", "noAccess");
    1: 
    1: // Scripts & Windows prefs
    1: pref("dom.disable_image_src_set",           false);
    1: pref("dom.disable_window_flip",             false);
13305: pref("dom.disable_window_move_resize",      false);
    1: pref("dom.disable_window_status_change",    false);
    1: 
    1: pref("dom.disable_window_open_feature.titlebar",    false);
    1: pref("dom.disable_window_open_feature.close",       false);
    1: pref("dom.disable_window_open_feature.toolbar",     false);
    1: pref("dom.disable_window_open_feature.location",    false);
    1: pref("dom.disable_window_open_feature.personalbar", false);
    1: pref("dom.disable_window_open_feature.menubar",     false);
    1: pref("dom.disable_window_open_feature.scrollbars",  false);
 7924: pref("dom.disable_window_open_feature.resizable",   true);
    1: pref("dom.disable_window_open_feature.minimizable", false);
    1: pref("dom.disable_window_open_feature.status",      true);
    1: 
    1: pref("dom.allow_scripts_to_close_windows",          false);
    1: 
    1: pref("dom.disable_open_during_load",                false);
    1: pref("dom.popup_maximum",                           20);
    1: pref("dom.popup_allowed_events", "change click dblclick mouseup reset submit");
    1: pref("dom.disable_open_click_delay", 1000);
    1: 
    1: pref("dom.storage.enabled", true);
27313: pref("dom.storage.default_quota",      5120);
    1: 
61194: pref("dom.send_after_paint_to_content", false);
61194: 
60635: // Timeout clamp in ms for timeouts we clamp
64522: pref("dom.min_timeout_value", 4);
63938: // And for background windows
63938: pref("dom.min_background_timeout_value", 1000);
60635: 
80085: // Use the new DOM bindings (only affects any scopes created after the pref is
80085: // changed)
80104: pref("dom.new_bindings", true);
80085: 
28603: // Parsing perf prefs. For now just mimic what the old code did.
28603: #ifndef XP_WIN
28603: pref("content.sink.pending_event_mode", 0);
28603: #endif
28603: 
    1: // Disable popups from plugins by default
    1: //   0 = openAllowed
    1: //   1 = openControlled
    1: //   2 = openAbused
    1: pref("privacy.popups.disable_from_plugins", 2);
    1: 
61491: // "do not track" HTTP header, disabled by default
61491: pref("privacy.donottrackheader.enabled",    false);
61491: 
    1: pref("dom.event.contextmenu.enabled",       true);
    1: 
    1: pref("javascript.enabled",                  true);
    1: pref("javascript.options.strict",           false);
36580: #ifdef DEBUG
36580: pref("javascript.options.strict.debug",     true);
36580: #endif
43069: pref("javascript.options.relimit",          true);
80239: pref("javascript.options.tracejit.content",  false);
80239: pref("javascript.options.tracejit.chrome",   false);
53019: pref("javascript.options.methodjit.content", true);
68965: pref("javascript.options.methodjit.chrome",  true);
56551: pref("javascript.options.jitprofiling.content", true);
68965: pref("javascript.options.jitprofiling.chrome",  true);
78493: pref("javascript.options.pccounts.content", false);
78493: pref("javascript.options.pccounts.chrome",  false);
62574: pref("javascript.options.methodjit_always", false);
77343: pref("javascript.options.typeinference", true);
30112: // This preference limits the memory usage of javascript.
30112: // If you want to change these values for your device,
30112: // please find Bug 417052 comment 17 and Bug 456721
60057: // Comment 32 and Bug 613551.
60057: pref("javascript.options.mem.high_water_mark", 128);
60057: pref("javascript.options.mem.max", -1);
60531: pref("javascript.options.mem.gc_per_compartment", true);
62725: pref("javascript.options.mem.log", false);
73545: pref("javascript.options.gc_on_memory_pressure", true);
    1: 
    1: // advanced prefs
    1: pref("advanced.mailftp",                    false);
    1: pref("image.animation_mode",                "normal");
    1: 
13414: // Same-origin policy for file URIs, "false" is traditional
13471: pref("security.fileuri.strict_origin_policy", true);
 5766: 
    1: // If there is ever a security firedrill that requires
    1: // us to block certian ports global, this is the pref 
    1: // to use.  Is is a comma delimited list of port numbers
    1: // for example:
    1: //   pref("network.security.ports.banned", "1,2,3,4,5");
    1: // prevents necko connecting to ports 1-5 unless the protocol
    1: // overrides.
    1: 
    1: // Default action for unlisted external protocol handlers
    1: pref("network.protocol-handler.external-default", true);      // OK to load
    1: pref("network.protocol-handler.warn-external-default", true); // warn before load
    1: 
    1: // Prevent using external protocol handlers for these schemes
    1: pref("network.protocol-handler.external.hcp", false);
    1: pref("network.protocol-handler.external.vbscript", false);
    1: pref("network.protocol-handler.external.javascript", false);
    1: pref("network.protocol-handler.external.data", false);
    1: pref("network.protocol-handler.external.ms-help", false);
    1: pref("network.protocol-handler.external.shell", false);
    1: pref("network.protocol-handler.external.vnd.ms.radio", false);
    1: #ifdef XP_MACOSX
    1: pref("network.protocol-handler.external.help", false);
    1: #endif
    1: pref("network.protocol-handler.external.disk", false);
    1: pref("network.protocol-handler.external.disks", false);
    1: pref("network.protocol-handler.external.afp", false);
 4428: pref("network.protocol-handler.external.moz-icon", false);
    1: 
    1: // An exposed protocol handler is one that can be used in all contexts.  A
    1: // non-exposed protocol handler is one that can only be used internally by the
    1: // application.  For example, a non-exposed protocol would not be loaded by the
    1: // application in response to a link click or a X-remote openURL command.
    1: // Instead, it would be deferred to the system's external protocol handler.
    1: // Only internal/built-in protocol handlers can be marked as exposed.
    1: 
    1: // This pref controls the default settings.  Per protocol settings can be used
    1: // to override this value.
    1: pref("network.protocol-handler.expose-all", true);
    1: 
    1: // Example: make IMAP an exposed protocol
    1: // pref("network.protocol-handler.expose.imap", true);
    1: 
    1: // <http>
    1: pref("network.http.version", "1.1");	  // default
    1: // pref("network.http.version", "1.0");   // uncomment this out in case of problems
    1: // pref("network.http.version", "0.9");   // it'll work too if you're crazy
    1: // keep-alive option is effectively obsolete. Nevertheless it'll work with
    1: // some older 1.0 servers:
    1: 
    1: pref("network.http.proxy.version", "1.1");    // default
    1: // pref("network.http.proxy.version", "1.0"); // uncomment this out in case of problems
    1:                                               // (required if using junkbuster proxy)
    1: 
    1: // enable caching of http documents
    1: pref("network.http.use-cache", true);
    1: 
    1: // this preference can be set to override the socket type used for normal
    1: // HTTP traffic.  an empty value indicates the normal TCP/IP socket type.
    1: pref("network.http.default-socket-type", "");
    1: 
    1: pref("network.http.keep-alive", true); // set it to false in case of problems
    1: pref("network.http.proxy.keep-alive", true);
29070: // There is a problem with some IIS7 servers that don't close the connection
29070: // properly after it times out (bug #491541). Default timeout on IIS7 is
29070: // 120 seconds. We need to reuse or drop the connection within this time.
29070: // We set the timeout a little shorter to keep a reserve for cases when
29070: // the packet is lost or delayed on the route.
29070: pref("network.http.keep-alive.timeout", 115);
    1: 
68409: // Limit the absolute number of http connections.
68409: // Note: the socket transport service will clamp the number below 256 if the OS
68409: // cannot allocate that many FDs, and it also always tries to reserve up to 250
68409: // file descriptors for things other than sockets.   
68409: pref("network.http.max-connections", 256);
    1: 
    1: // limit the absolute number of http connections that can be established per
    1: // host.  if a http proxy server is enabled, then the "server" is the proxy
    1: // server.  Otherwise, "server" is the http origin server.
13218: pref("network.http.max-connections-per-server", 15);
    1: 
    1: // if network.http.keep-alive is true, and if NOT connecting via a proxy, then
    1: // a new connection will only be attempted if the number of active persistent
    1: // connections to the server is less then max-persistent-connections-per-server.
13218: pref("network.http.max-persistent-connections-per-server", 6);
    1: 
    1: // if network.http.keep-alive is true, and if connecting via a proxy, then a
    1: // new connection will only be attempted if the number of active persistent
    1: // connections to the proxy is less then max-persistent-connections-per-proxy.
13218: pref("network.http.max-persistent-connections-per-proxy", 8);
    1: 
    1: // amount of time (in seconds) to suspend pending requests, before spawning a
    1: // new connection, once the limit on the number of persistent connections per
    1: // host has been reached.  however, a new connection will not be created if
    1: // max-connections or max-connections-per-server has also been reached.
    1: pref("network.http.request.max-start-delay", 10);
    1: 
    1: // Headers
    1: pref("network.http.accept.default", "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8");
    1: pref("network.http.sendRefererHeader",      2); // 0=don't send any, 1=send only on clicks, 2=send on image requests as well
    1: 
    1: // Controls whether we send HTTPS referres to other HTTPS sites.
    1: // By default this is enabled for compatibility (see bug 141641)
    1: pref("network.http.sendSecureXSiteReferrer", true);
    1: 
    1: // Maximum number of consecutive redirects before aborting.
    1: pref("network.http.redirection-limit", 20);
    1: 
    1: // Enable http compression: comment this out in case of problems with 1.1
    1: // NOTE: support for "compress" has been disabled per bug 196406.
46970: // NOTE: separate values with comma+space (", "): see bug 576033
    1: pref("network.http.accept-encoding", "gzip, deflate");
    1: 
    1: pref("network.http.pipelining"      , false);
14392: pref("network.http.pipelining.ssl"  , false); // disable pipelining over SSL
    1: pref("network.http.proxy.pipelining", false);
    1: 
    1: // Max number of requests in the pipeline
    1: pref("network.http.pipelining.maxrequests" , 4);
    1: 
25455: // Prompt for 307 redirects
25455: pref("network.http.prompt-temp-redirect", true);
25455: 
43040: // On networks deploying QoS, it is recommended that these be lockpref()'d,
43040: // since inappropriate marking can easily overwhelm bandwidth reservations
43040: // for certain services (i.e. EF for VoIP, AF4x for interactive video,
43040: // AF3x for broadcast/streaming video, etc)
43040: 
43040: // default value for HTTP
43040: // in a DSCP environment this should be 40 (0x28, or AF11), per RFC-4594,
43040: // Section 4.8 "High-Throughput Data Service Class"
43040: pref("network.http.qos", 0);
43040: 
64613: // The number of milliseconds after sending a SYN for an HTTP connection,
64613: // to wait before trying a different connection. 0 means do not use a second
64613: // connection.
64613: pref("network.http.connection-retry-timeout", 250);
64613: 
77314: // Disable IPv6 for backup connections to workaround problems about broken
77314: // IPv6 connectivity.
77314: pref("network.http.fast-fallback-to-IPv4", false);
77314: 
43040: // default values for FTP
43040: // in a DSCP environment this should be 40 (0x28, or AF11), per RFC-4594,
43040: // Section 4.8 "High-Throughput Data Service Class", and 80 (0x50, or AF22)
43040: // per Section 4.7 "Low-Latency Data Service Class".
43040: pref("network.ftp.data.qos", 0);
43040: pref("network.ftp.control.qos", 0);
43040: 
    1: // </http>
    1: 
43833: // <ws>: WebSocket
43836: pref("network.websocket.enabled", true);
70220: 
70220: // mobile might want to set this much smaller
70220: pref("network.websocket.max-message-size", 16000000);
70220: 
70220: // Should we automatically follow http 3xx redirects during handshake
70220: pref("network.websocket.auto-follow-http-redirects", false);
70220: 
70220: // the number of seconds to wait for websocket connection to be opened
70220: pref("network.websocket.timeout.open", 20);
70220: 
70220: // the number of seconds to wait for a clean close after sending the client
70220: // close message
70220: pref("network.websocket.timeout.close", 20);
70220: 
70220: // the number of seconds of idle read activity to sustain before sending a
70220: // ping probe. 0 to disable.
70220: pref("network.websocket.timeout.ping.request", 0);
70220: 
70220: // the deadline, expressed in seconds, for some read activity to occur after
70220: // generating a ping. If no activity happens then an error and unclean close
70220: // event is sent to the javascript websockets application
70220: pref("network.websocket.timeout.ping.response", 10);
70220: 
70220: // Defines whether or not to try and negotiate the stream-deflate compression
78534: // extension with the websocket server. Stream-Deflate has been removed from
78534: // the standards track document, but can still be used by servers who opt
78534: // into it.
78534: pref("network.websocket.extensions.stream-deflate", false);
70220: 
72502: // the maximum number of concurrent websocket sessions. By specification there
72502: // is never more than one handshake oustanding to an individual host at
72502: // one time.
72502: pref("network.websocket.max-connections", 200);
72502: 
73640: // by default scripts loaded from a https:// origin can only open secure
73640: // (i.e. wss://) websockets.
73640: pref("network.websocket.allowInsecureFromHTTPS", false);
73640: 
43833: // </ws>
43833: 
70324: // Server-Sent Events
70324: 
70324: pref("dom.server-events.enabled", true);
70324: // Equal to the DEFAULT_RECONNECTION_TIME_VALUE value in nsEventSource.cpp
70324: pref("dom.server-events.default-reconnection-time", 5000); // in milliseconds
70324: 
 8363: // If false, remote JAR files that are served with a content type other than
 8363: // application/java-archive or application/x-jar will not be opened
 8363: // by the jar channel.
 8363: pref("network.jar.open-unsafe-types", false);
 8363: 
    1: // This preference controls whether or not internationalized domain names (IDN)
    1: // are handled.  IDN requires a nsIIDNService implementation.
    1: pref("network.enableIDN", true);
    1: 
    1: // This preference, if true, causes all UTF-8 domain names to be normalized to
    1: // punycode.  The intention is to allow UTF-8 domain names as input, but never
    1: // generate them from punycode.
    1: pref("network.IDN_show_punycode", false);
    1: 
    1: // TLDs with "network.IDN.whitelist.tld" explicitly set to true are treated as 
    1: // IDN-safe. Otherwise, they're treated as unsafe and punycode will be used
    1: // for displaying them in the UI (e.g. URL bar). Note that these preferences
    1: // are referred to ONLY when "network.IDN_show_punycode" is false. In other
    1: // words, all IDNs will be shown in punycode if "network.IDN_show_punycode"
    1: // is true.
    1: 
    1: // ccTLDs
    1: pref("network.IDN.whitelist.ac", true);
20851: pref("network.IDN.whitelist.ar", true);
    1: pref("network.IDN.whitelist.at", true);
    1: pref("network.IDN.whitelist.br", true);
    1: pref("network.IDN.whitelist.ch", true);
    1: pref("network.IDN.whitelist.cl", true);
    1: pref("network.IDN.whitelist.cn", true);
    1: pref("network.IDN.whitelist.de", true);
    1: pref("network.IDN.whitelist.dk", true);
 8397: pref("network.IDN.whitelist.es", true);
    1: pref("network.IDN.whitelist.fi", true);
    1: pref("network.IDN.whitelist.gr", true);
    1: pref("network.IDN.whitelist.hu", true);
56433: pref("network.IDN.whitelist.il", true);
    1: pref("network.IDN.whitelist.io", true);
10672: pref("network.IDN.whitelist.ir", true);
    1: pref("network.IDN.whitelist.is", true);
    1: pref("network.IDN.whitelist.jp", true);
    1: pref("network.IDN.whitelist.kr", true);
    1: pref("network.IDN.whitelist.li", true);
    1: pref("network.IDN.whitelist.lt", true);
42125: pref("network.IDN.whitelist.lu", true);
70368: pref("network.IDN.whitelist.lv", true);
    1: pref("network.IDN.whitelist.no", true);
41465: pref("network.IDN.whitelist.nu", true);
41464: pref("network.IDN.whitelist.nz", true);
 5432: pref("network.IDN.whitelist.pl", true);
13503: pref("network.IDN.whitelist.pr", true);
    1: pref("network.IDN.whitelist.se", true);
    1: pref("network.IDN.whitelist.sh", true);
    1: pref("network.IDN.whitelist.th", true);
    1: pref("network.IDN.whitelist.tm", true);
    1: pref("network.IDN.whitelist.tw", true);
63160: pref("network.IDN.whitelist.ua", true);
    1: pref("network.IDN.whitelist.vn", true);
    1: 
42125: // IDN ccTLDs
46155: // ae, UAE, .<Emarat>
46155: pref("network.IDN.whitelist.xn--mgbaam7a8h", true); 
53943: // cn, China, .<China> with variants
53943: pref("network.IDN.whitelist.xn--fiqz9s", true); // Traditional
53943: pref("network.IDN.whitelist.xn--fiqs8s", true); // Simplified
63157: // eg, Egypt, .<Masr>
63157: pref("network.IDN.whitelist.xn--wgbh1c", true);
53943: // hk, Hong Kong, .<Hong Kong>
53943: pref("network.IDN.whitelist.xn--j6w193g", true);
56317: // ir, Iran, <.Iran> with variants
56317: pref("network.IDN.whitelist.xn--mgba3a4f16a", true);
56317: pref("network.IDN.whitelist.xn--mgba3a4fra", true);
53943: // jo, Jordan, .<Al-Ordon>
53943: pref("network.IDN.whitelist.xn--mgbayh7gpa", true);
70367: // lk, Sri Lanka, .<Lanka> and .<Ilangai>
70367: pref("network.IDN.whitelist.xn--fzc2c9e2c", true);
70367: pref("network.IDN.whitelist.xn--xkc2al3hye2a", true);
56432: // qa, Qatar, .<Qatar>
56432: pref("network.IDN.whitelist.xn--wgbl6a", true);
42125: // ru, Russian Federation, .<RF>
42125: pref("network.IDN.whitelist.xn--p1ai", true);
53943: // sa, Saudi Arabia, .<al-Saudiah> with variants
53943: pref("network.IDN.whitelist.xn--mgberp4a5d4ar", true); 
53943: pref("network.IDN.whitelist.xn--mgberp4a5d4a87g", true);
53943: pref("network.IDN.whitelist.xn--mgbqly7c0a67fbc", true);
53943: pref("network.IDN.whitelist.xn--mgbqly7cvafr", true);
70369: // sy, Syria, .<Souria>
70369: pref("network.IDN.whitelist.xn--ogbpf8fl", true);
53943: // tw, Taiwan, <.Taiwan> with variants
53943: pref("network.IDN.whitelist.xn--kpry57d", true);  // Traditional
53943: pref("network.IDN.whitelist.xn--kprw13d", true);  // Simplified
42125: 
42125: // gTLDs
70370: pref("network.IDN.whitelist.asia", true);
    1: pref("network.IDN.whitelist.biz", true);
    1: pref("network.IDN.whitelist.cat", true);
    1: pref("network.IDN.whitelist.info", true);
    1: pref("network.IDN.whitelist.museum", true);
    1: pref("network.IDN.whitelist.org", true);
41463: pref("network.IDN.whitelist.tel", true);
    1: 
11364: // NOTE: Before these can be removed, one of bug 414812's tests must be updated
11364: //       or it will likely fail!  Please CC jwalden+bmo on the bug associated
11364: //       with removing these so he can provide a patch to make the necessary
11364: //       changes to avoid bustage.
 6442: // ".test" localised TLDs for ICANN's top-level IDN trial
 6442: pref("network.IDN.whitelist.xn--0zwm56d", true);
 6442: pref("network.IDN.whitelist.xn--11b5bs3a9aj6g", true);
 6442: pref("network.IDN.whitelist.xn--80akhbyknj4f", true);
 6442: pref("network.IDN.whitelist.xn--9t4b11yi5a", true);
 6442: pref("network.IDN.whitelist.xn--deba0ad", true);
 6442: pref("network.IDN.whitelist.xn--g6w251d", true);
 6442: pref("network.IDN.whitelist.xn--hgbk6aj7f53bba", true);
 6442: pref("network.IDN.whitelist.xn--hlcj6aya9esc7a", true);
 6442: pref("network.IDN.whitelist.xn--jxalpdlp", true);
 6442: pref("network.IDN.whitelist.xn--kgbechtv", true);
 6442: pref("network.IDN.whitelist.xn--zckzah", true);
 6442: 
    1: // If a domain includes any of the following characters, it may be a spoof 
    1: // attempt and so we always display the domain name as punycode. This would 
    1: // override the settings "network.IDN_show_punycode" and 
    1: // "network.IDN.whitelist.*".
25424: pref("network.IDN.blacklist_chars", "\u0020\u00A0\u00BC\u00BD\u00BE\u01C3\u02D0\u0337\u0338\u0589\u05C3\u05F4\u0609\u060A\u066A\u06D4\u0701\u0702\u0703\u0704\u115F\u1160\u1735\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u200B\u2024\u2027\u2028\u2029\u202F\u2039\u203A\u2041\u2044\u2052\u205F\u2153\u2154\u2155\u2156\u2157\u2158\u2159\u215A\u215B\u215C\u215D\u215E\u215F\u2215\u2236\u23AE\u2571\u29F6\u29F8\u2AFB\u2AFD\u2FF0\u2FF1\u2FF2\u2FF3\u2FF4\u2FF5\u2FF6\u2FF7\u2FF8\u2FF9\u2FFA\u2FFB\u3000\u3002\u3014\u3015\u3033\u3164\u321D\u321E\u33AE\u33AF\u33C6\u33DF\uA789\uFE14\uFE15\uFE3F\uFE5D\uFE5E\uFEFF\uFF0E\uFF0F\uFF61\uFFA0\uFFF9\uFFFA\uFFFB\uFFFC\uFFFD");
    1: 
    1: // This preference specifies a list of domains for which DNS lookups will be
    1: // IPv4 only. Works around broken DNS servers which can't handle IPv6 lookups
    1: // and/or allows the user to disable IPv6 on a per-domain basis. See bug 68796.
 5732: pref("network.dns.ipv4OnlyDomains", "");
    1: 
    1: // This preference can be used to turn off IPv6 name lookups. See bug 68796.
    1: pref("network.dns.disableIPv6", false);
    1: 
    1: // This preference controls whether or not URLs with UTF-8 characters are
    1: // escaped.  Set this preference to TRUE for strict RFC2396 conformance.
    1: pref("network.standard-url.escape-utf8", true);
    1: 
    1: // This preference controls whether or not URLs are always encoded and sent as
    1: // UTF-8.
    1: pref("network.standard-url.encode-utf8", true);
    1: 
    1: // This preference controls whether or not queries are encoded and sent as
    1: // UTF-8.
    1: pref("network.standard-url.encode-query-utf8", false);
    1: 
    1: // Idle timeout for ftp control connections - 5 minute default
    1: pref("network.ftp.idleConnectionTimeout", 300);
    1: 
    1: // directory listing format
    1: // 2: HTML
    1: // 3: XUL directory viewer
    1: // all other values are treated like 2
    1: pref("network.dir.format", 2);
    1: 
    1: // enables the prefetch service (i.e., prefetching of <link rel="next"> URLs).
    1: pref("network.prefetch-next", true);
    1: 
    1: 
    1: // The following prefs pertain to the negotiate-auth extension (see bug 17578),
    1: // which provides transparent Kerberos or NTLM authentication using the SPNEGO
    1: // protocol.  Each pref is a comma-separated list of keys, where each key has
    1: // the format:
    1: //   [scheme "://"] [host [":" port]]
    1: // For example, "foo.com" would match "http://www.foo.com/bar", etc.
    1: 
    1: // This list controls which URIs can use the negotiate-auth protocol.  This
    1: // list should be limited to the servers you know you'll need to login to.
    1: pref("network.negotiate-auth.trusted-uris", "");
    1: // This list controls which URIs can support delegation.
    1: pref("network.negotiate-auth.delegation-uris", "");
    1: 
    1: // Allow SPNEGO by default when challenged by a proxy server.
    1: pref("network.negotiate-auth.allow-proxies", true);
    1: 
    1: // Path to a specific gssapi library
    1: pref("network.negotiate-auth.gsslib", "");
    1: 
    1: // Specify if the gss lib comes standard with the OS
    1: pref("network.negotiate-auth.using-native-gsslib", true);
    1: 
    1: #ifdef XP_WIN
    1: 
    1: // Default to using the SSPI intead of GSSAPI on windows 
    1: pref("network.auth.use-sspi", true);
    1: 
    1: #endif
    1: 
35150: // Controls which NTLM authentication implementation we default to. True forces
35150: // the use of our generic (internal) NTLM authentication implementation vs. any
35150: // native implementation provided by the os. This pref is for diagnosing issues
35150: // with native NTLM. (See bug 520607 for details.) Using generic NTLM authentication
35150: // can expose the user to reflection attack vulnerabilities. Do not change this
35150: // unless you know what you're doing!
35150: // This pref should be removed 6 months after the release of firefox 3.6. 
35150: pref("network.auth.force-generic-ntlm", false);
35150: 
    1: // The following prefs are used to enable automatic use of the operating
    1: // system's NTLM implementation to silently authenticate the user with their
    1: // Window's domain logon.  The trusted-uris pref follows the format of the
    1: // trusted-uris pref for negotiate authentication.
    1: pref("network.automatic-ntlm-auth.allow-proxies", true);
    1: pref("network.automatic-ntlm-auth.trusted-uris", "");
    1: 
    1: // This preference controls whether or not the LM hash will be included in
    1: // response to a NTLM challenge.  By default, this is disabled since servers
    1: // should almost never need the LM hash, and the LM hash is what makes NTLM
    1: // authentication less secure.  See bug 250691 for further details.
    1: // NOTE: automatic-ntlm-auth which leverages the OS-provided NTLM
    1: //       implementation will not be affected by this preference.
    1: pref("network.ntlm.send-lm-response", false);
    1: 
    1: pref("permissions.default.image",           1); // 1-Accept, 2-Deny, 3-dontAcceptForeign
12358: 
12358: pref("network.proxy.type",                  5);
    1: pref("network.proxy.ftp",                   "");
    1: pref("network.proxy.ftp_port",              0);
    1: pref("network.proxy.http",                  "");
    1: pref("network.proxy.http_port",             0);
    1: pref("network.proxy.ssl",                   "");
    1: pref("network.proxy.ssl_port",              0);
    1: pref("network.proxy.socks",                 "");
    1: pref("network.proxy.socks_port",            0);
    1: pref("network.proxy.socks_version",         5);
    1: pref("network.proxy.socks_remote_dns",      false);
    1: pref("network.proxy.no_proxies_on",         "localhost, 127.0.0.1");
    1: pref("network.proxy.failover_timeout",      1800); // 30 minutes
    1: pref("network.online",                      true); //online/offline
 2263: pref("network.cookie.cookieBehavior",       0); // 0-Accept, 1-dontAcceptForeign, 2-dontUse
43344: pref("network.cookie.thirdparty.sessionOnly", false);
    1: pref("network.cookie.lifetimePolicy",       0); // accept normally, 1-askBeforeAccepting, 2-acceptForSession,3-acceptForNDays
    1: pref("network.cookie.alwaysAcceptSessionCookies", false);
    1: pref("network.cookie.prefsMigrated",        false);
    1: pref("network.cookie.lifetime.days",        90);
    1: 
    1: // The PAC file to load.  Ignored unless network.proxy.type is 2.
    1: pref("network.proxy.autoconfig_url", "");
    1: 
    1: // If we cannot load the PAC file, then try again (doubling from interval_min
    1: // until we reach interval_max or the PAC file is successfully loaded).
    1: pref("network.proxy.autoconfig_retry_interval_min", 5);    // 5 seconds
    1: pref("network.proxy.autoconfig_retry_interval_max", 300);  // 5 minutes
    1: 
    1: pref("converter.html2txt.structs",          true); // Output structured phrases (strong, em, code, sub, sup, b, i, u)
    1: pref("converter.html2txt.header_strategy",  1); // 0 = no indention; 1 = indention, increased with header level; 2 = numbering and slight indention
    1: 
 9675: pref("intl.accept_languages",               "chrome://global/locale/intl.properties");
 9675: pref("intl.menuitems.alwaysappendaccesskeys","chrome://global/locale/intl.properties");
 9675: pref("intl.menuitems.insertseparatorbeforeaccesskeys","chrome://global/locale/intl.properties");
 9675: pref("intl.charsetmenu.browser.static",     "chrome://global/locale/intl.properties");
57468: pref("intl.charsetmenu.browser.more1",      "ISO-8859-1, ISO-8859-15, IBM850, x-mac-roman, windows-1252, ISO-8859-14, ISO-8859-7, x-mac-greek, windows-1253, x-mac-icelandic, ISO-8859-10, ISO-8859-3");
57468: pref("intl.charsetmenu.browser.more2",      "ISO-8859-4, ISO-8859-13, windows-1257, IBM852, ISO-8859-2, x-mac-ce, windows-1250, x-mac-croatian, IBM855, ISO-8859-5, ISO-IR-111, KOI8-R, x-mac-cyrillic, windows-1251, IBM866, KOI8-U, x-mac-ukrainian, ISO-8859-16, x-mac-romanian");
64407: pref("intl.charsetmenu.browser.more3",      "GB2312, gbk, gb18030, HZ-GB-2312, ISO-2022-CN, Big5, Big5-HKSCS, x-euc-tw, EUC-JP, ISO-2022-JP, Shift_JIS, EUC-KR, x-windows-949, x-johab, ISO-2022-KR");
57468: pref("intl.charsetmenu.browser.more4",      "armscii-8, GEOSTD8, TIS-620, ISO-8859-11, windows-874, IBM857, ISO-8859-9, x-mac-turkish, windows-1254, x-viet-tcvn5712, VISCII, x-viet-vps, windows-1258, x-mac-devanagari, x-mac-gujarati, x-mac-gurmukhi");
57468: pref("intl.charsetmenu.browser.more5",      "ISO-8859-6, windows-1256, IBM864, ISO-8859-8-I, windows-1255, ISO-8859-8, IBM862");
64406: pref("intl.charsetmenu.browser.unicode",    "UTF-8, UTF-16LE, UTF-16BE");
 9675: pref("intl.charsetmenu.mailedit",           "chrome://global/locale/intl.properties");
    1: pref("intl.charsetmenu.browser.cache",      "");
    1: pref("intl.charsetmenu.mailview.cache",     "");
    1: pref("intl.charsetmenu.composer.cache",     "");
    1: pref("intl.charsetmenu.browser.cache.size", 5);
 9675: pref("intl.charset.detector",               "chrome://global/locale/intl.properties");
 9675: pref("intl.charset.default",                "chrome://global-platform/locale/intl.properties");
 8167: pref("intl.ellipsis",                       "chrome://global-platform/locale/intl.properties");
    1: pref("intl.locale.matchOS",                 false);
    1: // fallback charset list for Unicode conversion (converting from Unicode)
    1: // currently used for mail send only to handle symbol characters (e.g Euro, trademark, smartquotes)
    1: // for ISO-8859-1
    1: pref("intl.fallbackCharsetList.ISO-8859-1", "windows-1252");
 9675: pref("font.language.group",                 "chrome://global/locale/intl.properties");
    1: 
30836: // these locales have right-to-left UI
30836: pref("intl.uidirection.ar", "rtl");
30836: pref("intl.uidirection.he", "rtl");
30836: pref("intl.uidirection.fa", "rtl");
78208: pref("intl.uidirection.ur", "rtl");
30836: 
69309: // use en-US hyphenation by default for content tagged with plain lang="en"
69309: pref("intl.hyphenation-alias.en", "en-us");
69309: // and for other subtags of en-*, if no specific patterns are available
69309: pref("intl.hyphenation-alias.en-*", "en-us");
69309: 
74215: pref("intl.hyphenation-alias.af-*", "af");
74215: pref("intl.hyphenation-alias.bg-*", "bg");
74215: pref("intl.hyphenation-alias.ca-*", "ca");
74215: pref("intl.hyphenation-alias.cy-*", "cy");
74215: pref("intl.hyphenation-alias.da-*", "da");
74215: pref("intl.hyphenation-alias.eo-*", "eo");
74215: pref("intl.hyphenation-alias.es-*", "es");
74215: pref("intl.hyphenation-alias.et-*", "et");
74364: pref("intl.hyphenation-alias.fi-*", "fi");
74356: pref("intl.hyphenation-alias.fr-*", "fr");
74215: pref("intl.hyphenation-alias.gl-*", "gl");
74215: pref("intl.hyphenation-alias.hr-*", "hr");
74215: pref("intl.hyphenation-alias.hsb-*", "hsb");
77206: pref("intl.hyphenation-alias.hu-*", "hu");
74215: pref("intl.hyphenation-alias.ia-*", "ia");
74215: pref("intl.hyphenation-alias.is-*", "is");
77208: pref("intl.hyphenation-alias.it-*", "it");
74215: pref("intl.hyphenation-alias.kmr-*", "kmr");
74215: pref("intl.hyphenation-alias.la-*", "la");
74362: pref("intl.hyphenation-alias.lt-*", "lt");
74218: pref("intl.hyphenation-alias.mn-*", "mn");
74215: pref("intl.hyphenation-alias.nl-*", "nl");
74215: pref("intl.hyphenation-alias.pt-*", "pt");
74358: pref("intl.hyphenation-alias.ru-*", "ru");
74215: pref("intl.hyphenation-alias.sl-*", "sl");
74215: pref("intl.hyphenation-alias.sv-*", "sv");
77210: pref("intl.hyphenation-alias.tr-*", "tr");
74215: pref("intl.hyphenation-alias.uk-*", "uk");
74215: 
74216: // use reformed (1996) German patterns by default unless specifically tagged as de-1901
74216: // (these prefs may soon be obsoleted by better BCP47-based tag matching, but for now...)
74216: pref("intl.hyphenation-alias.de", "de-1996");
74216: pref("intl.hyphenation-alias.de-*", "de-1996");
74216: pref("intl.hyphenation-alias.de-DE-1901", "de-1901");
74216: pref("intl.hyphenation-alias.de-CH-*", "de-CH");
74216: 
74220: // patterns from TeX are tagged as "sh" (Serbo-Croatian) macrolanguage;
74220: // alias "sr" (Serbian) and "bs" (Bosnian) to those patterns
74220: // (Croatian has its own separate patterns).
74220: pref("intl.hyphenation-alias.sr", "sh");
74220: pref("intl.hyphenation-alias.bs", "sh");
74220: pref("intl.hyphenation-alias.sh-*", "sh");
74220: pref("intl.hyphenation-alias.sr-*", "sh");
74220: pref("intl.hyphenation-alias.bs-*", "sh");
74220: 
74360: // Norwegian has two forms, Bokmål and Nynorsk, with "no" as a macrolanguage encompassing both.
74360: // For "no", we'll alias to "nb" (Bokmål) as that is the more widely used written form.
74360: pref("intl.hyphenation-alias.no", "nb");
74360: pref("intl.hyphenation-alias.no-*", "nb");
74360: pref("intl.hyphenation-alias.nb-*", "nb");
74360: pref("intl.hyphenation-alias.nn-*", "nn");
74360: 
72267: pref("font.mathfont-family", "STIXNonUnicode, STIXSizeOneSym, STIXSize1, STIXGeneral, Asana Math, Standard Symbols L, DejaVu Sans, Cambria Math");
 8734: 
12989: // Some CJK fonts have bad underline offset, their CJK character glyphs are overlapped (or adjoined)  to its underline.
12989: // These fonts are ignored the underline offset, instead of it, the underline is lowered to bottom of its em descent.
12989: pref("font.blacklist.underline_offset", "FangSong,Gulim,GulimChe,MingLiU,MingLiU-ExtB,MingLiU_HKSCS,MingLiU-HKSCS-ExtB,MS Gothic,MS Mincho,MS PGothic,MS PMincho,MS UI Gothic,PMingLiU,PMingLiU-ExtB,SimHei,SimSun,SimSun-ExtB,Hei,Kai,Apple LiGothic,Apple LiSung,Osaka");
12989: 
    1: pref("images.dither", "auto");
    1: pref("security.directory",              "");
    1: 
    1: pref("signed.applets.codebase_principal_support", false);
    1: pref("security.checkloaduri", true);
    1: pref("security.xpconnect.plugin.unrestricted", true);
    1: // security-sensitive dialogs should delay button enabling. In milliseconds.
    1: pref("security.dialog_enable_delay", 2000);
    1: 
37377: pref("security.csp.enable", true);
51435: pref("security.csp.debug", false);
37377: 
    1: // Modifier key prefs: default to Windows settings,
    1: // menu access key = alt, accelerator key = control.
    1: // Use 17 for Ctrl, 18 for Alt, 224 for Meta, 0 for none. Mac settings in macprefs.js
    1: pref("ui.key.accelKey", 17);
    1: pref("ui.key.menuAccessKey", 18);
    1: pref("ui.key.generalAccessKey", -1);
    1: 
    1: // If generalAccessKey is -1, use the following two prefs instead.
    1: // Use 0 for disabled, 1 for Shift, 2 for Ctrl, 4 for Alt, 8 for Meta
    1: // (values can be combined, e.g. 5 for Alt+Shift)
    1: pref("ui.key.chromeAccess", 4);
    1: pref("ui.key.contentAccess", 5);
    1: 
    1: pref("ui.key.menuAccessKeyFocuses", false); // overridden below
    1: pref("ui.key.saveLink.shift", true); // true = shift, false = meta
    1: 
32813: // Disable page loading activity cursor by default.
32813: pref("ui.use_activity_cursor", false);
32813: 
    1: // Middle-mouse handling
    1: pref("middlemouse.paste", false);
    1: pref("middlemouse.openNewWindow", true);
    1: pref("middlemouse.contentLoadURL", false);
    1: pref("middlemouse.scrollbarPosition", false);
    1: 
    1: // Clipboard behavior
    1: pref("clipboard.autocopy", false);
    1: 
    1: // mouse wheel scroll transaction period of time (in milliseconds)
    1: pref("mousewheel.transaction.timeout", 1500);
    1: // mouse wheel scroll transaction is held even if the mouse cursor is moved.
    1: pref("mousewheel.transaction.ignoremovedelay", 100);
    1: 
33016: // prefs for app level mouse wheel scrolling acceleration.
31122: // number of mousewheel clicks when acceleration starts
31122: // acceleration can be turned off if pref is set to -1
33016: pref("mousewheel.acceleration.start", -1);
33016: // factor to be multiplied for constant acceleration
31122: pref("mousewheel.acceleration.factor", 10);
31122: 
33016: // Prefs for override the system mouse wheel scrolling speed on the root
33016: // content of the web pages.  When
33016: // "mousewheel.system_scroll_override_on_root_content.enabled" is true and the system
33016: // scrolling speed isn't customized by the user, the root content scrolling
33016: // speed is multiplied by the following factors.  The value will be used as
33016: // 1/100.  E.g., 200 means 2.00.
33016: // NOTE: Even if "mousewheel.system_scroll_override_on_root_content.enabled" is
33016: // true, when Gecko detects the user customized the system scrolling speed
33016: // settings, the override isn't executed.
33016: pref("mousewheel.system_scroll_override_on_root_content.vertical.factor", 200);
33016: pref("mousewheel.system_scroll_override_on_root_content.horizontal.factor", 200);
33016: 
    1: // 0=lines, 1=pages, 2=history , 3=text size
    1: pref("mousewheel.withnokey.action",0);
31122: pref("mousewheel.withnokey.numlines",6);
    1: pref("mousewheel.withnokey.sysnumlines",true);
    1: pref("mousewheel.withcontrolkey.action",0);
    1: pref("mousewheel.withcontrolkey.numlines",1);
    1: pref("mousewheel.withcontrolkey.sysnumlines",true);
    1: // mousewheel.withshiftkey, see the Mac note below.
    1: pref("mousewheel.withshiftkey.action",0);
    1: pref("mousewheel.withshiftkey.numlines",1);
    1: pref("mousewheel.withshiftkey.sysnumlines",true);
    1: pref("mousewheel.withaltkey.action",2);
    1: pref("mousewheel.withaltkey.numlines",1);
    1: pref("mousewheel.withaltkey.sysnumlines",false);
    1: pref("mousewheel.withmetakey.action",0);
    1: pref("mousewheel.withmetakey.numlines",1);
    1: pref("mousewheel.withmetakey.sysnumlines",true);
    1: 
    1: // activate horizontal scrolling by default
    1: pref("mousewheel.horizscroll.withnokey.action",0);
    1: pref("mousewheel.horizscroll.withnokey.numlines",1);
    1: pref("mousewheel.horizscroll.withnokey.sysnumlines",true);
    1: pref("mousewheel.horizscroll.withcontrolkey.action",0);
    1: pref("mousewheel.horizscroll.withcontrolkey.numlines",1);
    1: pref("mousewheel.horizscroll.withcontrolkey.sysnumlines",true);
    1: pref("mousewheel.horizscroll.withshiftkey.action",0);
    1: pref("mousewheel.horizscroll.withshiftkey.numlines",1);
    1: pref("mousewheel.horizscroll.withshiftkey.sysnumlines",true);
    1: pref("mousewheel.horizscroll.withaltkey.action",2);
    1: pref("mousewheel.horizscroll.withaltkey.numlines",-1);
    1: pref("mousewheel.horizscroll.withaltkey.sysnumlines",false);
    1: pref("mousewheel.horizscroll.withmetakey.action",0);
    1: pref("mousewheel.horizscroll.withmetakey.numlines",1);
    1: pref("mousewheel.horizscroll.withmetakey.sysnumlines",true);
    1: 
    1: pref("profile.confirm_automigration",true);
    1: // profile.migration_behavior determines how the profiles root is set
    1: // 0 - use NS_APP_USER_PROFILES_ROOT_DIR
    1: // 1 - create one based on the NS4.x profile root
    1: // 2 - use, if not empty, profile.migration_directory otherwise same as 0
    1: pref("profile.migration_behavior",0);
    1: pref("profile.migration_directory", "");
    1: 
    1: // the amount of time (in seconds) that must elapse
    1: // before we think your mozilla profile is defunct
    1: // and you'd benefit from re-migrating from 4.x
    1: // see bug #137886 for more details
    1: //
    1: // if -1, we never think your profile is defunct
    1: // and users will never see the remigrate UI.
    1: pref("profile.seconds_until_defunct", -1);
    1: // We can show it anytime from menus
    1: pref("profile.manage_only_at_launch", false);
    1: 
    1: pref("prefs.converted-to-utf8",false);
    1: 
    1: // --------------------------------------------------
    1: // IBMBIDI 
    1: // --------------------------------------------------
    1: //
    1: // ------------------
    1: //  Text Direction
    1: // ------------------
    1: // 1 = directionLTRBidi *
    1: // 2 = directionRTLBidi
    1: pref("bidi.direction", 1);
    1: // ------------------
    1: //  Text Type
    1: // ------------------
    1: // 1 = charsettexttypeBidi *
    1: // 2 = logicaltexttypeBidi
    1: // 3 = visualtexttypeBidi
    1: pref("bidi.texttype", 1);
    1: // ------------------
    1: //  Numeral Style
    1: // ------------------
    1: // 0 = nominalnumeralBidi *
    1: // 1 = regularcontextnumeralBidi
    1: // 2 = hindicontextnumeralBidi
    1: // 3 = arabicnumeralBidi
    1: // 4 = hindinumeralBidi
24437: // 5 = persiancontextnumeralBidi
24437: // 6 = persiannumeralBidi
    1: pref("bidi.numeral", 0);
    1: // ------------------
    1: //  Support Mode
    1: // ------------------
    1: // 1 = mozillaBidisupport *
    1: // 2 = OsBidisupport
    1: // 3 = disableBidisupport
    1: pref("bidi.support", 1);
    1: // Whether delete and backspace should immediately delete characters not
    1: // visually adjacent to the caret, or adjust the visual position of the caret
    1: // on the first keypress and delete the character on a second keypress
    1: pref("bidi.edit.delete_immediately", false);
    1: 
    1: // Bidi caret movement style:
    1: // 0 = logical
    1: // 1 = visual
    1: // 2 = visual, but logical during selection
    1: pref("bidi.edit.caret_movement_style", 2);
    1: 
22779: // Setting this pref to |true| forces Bidi UI menu items and keyboard shortcuts
22779: // to be exposed, and enables the directional caret hook. By default, only
22779: // expose it for bidi-associated system locales.
22779: pref("bidi.browser.ui", false);
22779: 
    1: // used for double-click word selection behavior. Win will override.
    1: pref("layout.word_select.eat_space_to_next_word", false);
    1: pref("layout.word_select.stop_at_punctuation", true);
    1: 
    1: // controls caret style and word-delete during text selection
    1: // 0 = use platform default
    1: // 1 = caret moves and blinks as when there is no selection; word
    1: //     delete deselects the selection and then deletes word (Windows default)
    1: // 2 = caret moves to selection edge and is not visible during selection; 
    1: //     word delete deletes the selection (Mac default)
    1: // 3 = caret moves and blinks as when there is no selection; word delete
    1: //     deletes the selection (Unix default)
    1: pref("layout.selection.caret_style", 0);
    1: 
    1: // pref to control whether or not to replace backslashes with Yen signs
    1: // in documents encoded in one of Japanese legacy encodings (EUC-JP, 
    1: // Shift_JIS, ISO-2022-JP)
    1: pref("layout.enable_japanese_specific_transform", false);
    1: 
    1: // pref to force frames to be resizable
    1: pref("layout.frames.force_resizability", false);
    1: 
    1: // pref to report CSS errors to the error console
    1: pref("layout.css.report_errors", true);
    1: 
20706: // Should the :visited selector ever match (otherwise :link matches instead)?
20706: pref("layout.css.visited_links_enabled", true);
20706: 
50782: // Override DPI. A value of -1 means use the maximum of 96 and the system DPI.
28470: // A value of 0 means use the system DPI. A positive value is used as the DPI.
28470: // This sets the physical size of a device pixel and thus controls the
28470: // interpretation of physical units such as "pt".
28470: pref("layout.css.dpi", -1);
28470: 
28470: // Set the number of device pixels per CSS pixel. A value <= 0 means choose
50782: // automatically based on user settings for the platform (e.g., "UI scale factor"
50782: // on Mac). A positive value is used as-is. This effectively controls the size
50782: // of a CSS "px". This is only used for windows on the screen, not for printing.
50782: // XXX the default value here should be 0, but before we can set it to 0,
50782: // we have to get this feature working on all platforms.
50782: pref("layout.css.devPixelsPerPx", "1.0");
28470: 
    1: // pref for which side vertical scrollbars should be on
    1: // 0 = end-side in UI direction
    1: // 1 = end-side in document/content direction
    1: // 2 = right
    1: // 3 = left
    1: pref("layout.scrollbar.side", 0);
    1: 
51267: // pref to control browser frame rate, in Hz. A value <= 0 means choose
51267: // automatically based on knowledge of the platform (or 60Hz if no platform-
51267: // specific information is available).
51267: pref("layout.frame_rate", -1);
51267: 
51267: // pref to control precision of the frame rate timer. When true,
51267: // we use a "precise" timer, which means each notification fires
51267: // Nms after the start of the last notification. That means if the
51267: // processing of the notification is slow, the timer can fire immediately
51267: // after we've just finished processing the last notification, which might
51267: // lead to starvation problems.
51267: // When false, we use a "slack" timer which fires Nms after the *end*
51267: // of the last notification. This can give less tight frame rates
51267: // but provides more time for other operations when the browser is
51267: // heavily loaded.
51267: pref("layout.frame_rate.precise", false);
51267: 
    1: // pref to permit users to make verified SOAP calls by default
    1: pref("capability.policy.default.SOAPCall.invokeVerifySourceHeader", "allAccess");
    1: 
    1: // if true, allow plug-ins to override internal imglib decoder mime types in full-page mode
    1: pref("plugin.override_internal_types", false);
    1: pref("plugin.expose_full_path", false); // if true navigator.plugins reveals full path
    1: 
    1: // See bug 136985.  Gives embedders a pref to hook into to show
    1: // a popup blocker if they choose.
    1: pref("browser.popups.showPopupBlocker", true);
    1: 
    1: // Pref to control whether the viewmanager code does double-buffering or not
    1: // See http://bugzilla.mozilla.org/show_bug.cgi?id=169483 for further details...
    1: pref("viewmanager.do_doublebuffering", true);
    1: 
    1: // whether use prefs from system
    1: pref("config.use_system_prefs", false);
    1: 
    1: // if the system has enabled accessibility
    1: pref("config.use_system_prefs.accessibility", false);
    1: 
26874: // enable single finger gesture input (win7+ tablets)
26874: pref("gestures.enable_single_finger_input", true);
26874: 
    1: /*
    1:  * What are the entities that you want Mozilla to save using mnemonic
    1:  * names rather than numeric codes? E.g. If set, we'll output &nbsp;
    1:  * otherwise, we may output 0xa0 depending on the charset.
    1:  *
    1:  * "none"   : don't use any entity names; only use numeric codes.
    1:  * "basic"  : use entity names just for &nbsp; &amp; &lt; &gt; &quot; for 
    1:  *            interoperability/exchange with products that don't support more
    1:  *            than that.
    1:  * "latin1" : use entity names for 8bit accented letters and other special
    1:  *            symbols between 128 and 255.
    1:  * "html"   : use entity names for 8bit accented letters, greek letters, and
    1:  *            other special markup symbols as defined in HTML4.
    1:  */
    1: //pref("editor.encode_entity",                 "html");
    1: 
    1: pref("editor.resizing.preserve_ratio",       true);
    1: pref("editor.positioning.offset",            0);
    1: 
    1: pref("dom.max_chrome_script_run_time", 20);
    1: pref("dom.max_script_run_time", 10);
    1: 
49311: #ifndef DEBUG
38121: // How long a plugin is allowed to process a synchronous IPC message
38121: // before we consider it "hung".
46286: pref("dom.ipc.plugins.timeoutSecs", 45);
76704: // How long a plugin process will wait for a response from the parent
76704: // to a synchronous request before terminating itself. After this
76704: // point the child assumes the parent is hung.
76704: pref("dom.ipc.plugins.parentTimeoutSecs", 15);
49311: // How long a plugin launch is allowed to take before
49311: // we consider it failed.
49311: pref("dom.ipc.plugins.processLaunchTimeoutSecs", 45);
38121: #else
38121: // No timeout in DEBUG builds
38121: pref("dom.ipc.plugins.timeoutSecs", 0);
49311: pref("dom.ipc.plugins.processLaunchTimeoutSecs", 0);
76704: pref("dom.ipc.plugins.parentTimeoutSecs", 0);
38121: #endif
38121: 
61403: // Disable oopp for standard java. They run their own process isolation (which
61403: // conflicts with our implementation, at least on Windows).
55878: pref("dom.ipc.plugins.java.enabled", false);
55878: 
43810: #ifndef ANDROID
38419: #ifndef XP_MACOSX
38419: #ifdef XP_UNIX
38419: // Linux plugins using Xt instead of Xembed don't work out-of-process yet.
38419: pref("dom.ipc.plugins.enabled.libvlcplugin.so", false);
38419: pref("dom.ipc.plugins.enabled.nppdf.so", false);
63642: pref("dom.ipc.plugins.enabled.602plugin.so", false);
38419: #endif
38419: #endif
43810: #endif
38419: 
76840: pref("dom.ipc.processCount", 1);
76840: 
34109: pref("svg.smil.enabled", true);
    1: 
13885: pref("font.minimum-size.ar", 0);
13885: pref("font.minimum-size.x-armn", 0);
13885: pref("font.minimum-size.x-beng", 0);
13885: pref("font.minimum-size.x-baltic", 0);
13885: pref("font.minimum-size.x-central-euro", 0);
13885: pref("font.minimum-size.zh-CN", 0);
13885: pref("font.minimum-size.zh-HK", 0);
13885: pref("font.minimum-size.zh-TW", 0);
13885: pref("font.minimum-size.x-cyrillic", 0);
13885: pref("font.minimum-size.x-devanagari", 0);
13885: pref("font.minimum-size.x-ethi", 0);
13885: pref("font.minimum-size.x-geor", 0);
13885: pref("font.minimum-size.el", 0);
13885: pref("font.minimum-size.x-gujr", 0);
13885: pref("font.minimum-size.x-guru", 0);
13885: pref("font.minimum-size.he", 0);
13885: pref("font.minimum-size.ja", 0);
13885: pref("font.minimum-size.x-knda", 0);
13885: pref("font.minimum-size.x-khmr", 0);
13885: pref("font.minimum-size.ko", 0);
13885: pref("font.minimum-size.x-mlym", 0);
13885: pref("font.minimum-size.x-orya", 0);
13885: pref("font.minimum-size.x-sinh", 0);
13885: pref("font.minimum-size.x-tamil", 0);
13885: pref("font.minimum-size.x-telu", 0);
38930: pref("font.minimum-size.x-tibt", 0);
13885: pref("font.minimum-size.th", 0);
13885: pref("font.minimum-size.tr", 0);
13885: pref("font.minimum-size.x-cans", 0);
13885: pref("font.minimum-size.x-western", 0);
13885: pref("font.minimum-size.x-unicode", 0);
13885: pref("font.minimum-size.x-user-def", 0);
13885: 
    1: #ifdef XP_WIN
30373: 
    1: pref("font.name.serif.ar", "Times New Roman");
31005: pref("font.name.sans-serif.ar", "Arial");
    1: pref("font.name.monospace.ar", "Courier New");
    1: pref("font.name.cursive.ar", "Comic Sans MS");
    1: 
    1: pref("font.name.serif.el", "Times New Roman");
31005: pref("font.name.sans-serif.el", "Arial");
    1: pref("font.name.monospace.el", "Courier New");
    1: pref("font.name.cursive.el", "Comic Sans MS");
    1: 
    1: pref("font.name.serif.he", "Narkisim");
31005: pref("font.name.sans-serif.he", "Arial");
    1: pref("font.name.monospace.he", "Fixed Miriam Transparent");
    1: pref("font.name.cursive.he", "Guttman Yad");
    1: pref("font.name-list.serif.he", "Narkisim, David");
    1: pref("font.name-list.monospace.he", "Fixed Miriam Transparent, Miriam Fixed, Rod, Courier New");
31005: pref("font.name-list.cursive.he", "Guttman Yad, Ktav, Arial");
    1: 
70100: pref("font.name.serif.ja", "MS PMincho");
70100: pref("font.name.sans-serif.ja", "MS PGothic");
70100: pref("font.name.monospace.ja", "MS Gothic");
20381: pref("font.name-list.serif.ja", "MS PMincho, MS Mincho, MS PGothic, MS Gothic");
20381: pref("font.name-list.sans-serif.ja", "MS PGothic, MS Gothic, MS PMincho, MS Mincho");
20381: pref("font.name-list.monospace.ja", "MS Gothic, MS Mincho, MS PGothic, MS PMincho");
    1: 
70100: pref("font.name.serif.ko", "Batang");
70100: pref("font.name.sans-serif.ko", "Gulim");
70100: pref("font.name.monospace.ko", "GulimChe");
70100: pref("font.name.cursive.ko", "Gungsuh");
    1: 
20381: pref("font.name-list.serif.ko", "Batang, Gulim");
20381: pref("font.name-list.sans-serif.ko", "Gulim");
20381: pref("font.name-list.monospace.ko", "GulimChe");
70100: pref("font.name-list.cursive.ko", "Gungsuh");
    1: 
16512: pref("font.name.serif.th", "Tahoma");
16512: pref("font.name.sans-serif.th", "Tahoma");
16512: pref("font.name.monospace.th", "Tahoma");
16512: pref("font.name.cursive.th", "Tahoma");
    1: 
    1: pref("font.name.serif.tr", "Times New Roman");
31005: pref("font.name.sans-serif.tr", "Arial");
    1: pref("font.name.monospace.tr", "Courier New");
    1: pref("font.name.cursive.tr", "Comic Sans MS");
    1: 
    1: pref("font.name.serif.x-baltic", "Times New Roman");
31005: pref("font.name.sans-serif.x-baltic", "Arial");
    1: pref("font.name.monospace.x-baltic", "Courier New");
    1: pref("font.name.cursive.x-baltic", "Comic Sans MS");
    1: 
    1: pref("font.name.serif.x-central-euro", "Times New Roman");
31005: pref("font.name.sans-serif.x-central-euro", "Arial");
    1: pref("font.name.monospace.x-central-euro", "Courier New");
    1: pref("font.name.cursive.x-central-euro", "Comic Sans MS");
    1: 
    1: pref("font.name.serif.x-cyrillic", "Times New Roman");
31005: pref("font.name.sans-serif.x-cyrillic", "Arial");
    1: pref("font.name.monospace.x-cyrillic", "Courier New");
    1: pref("font.name.cursive.x-cyrillic", "Comic Sans MS");
    1: 
    1: pref("font.name.serif.x-unicode", "Times New Roman");
31005: pref("font.name.sans-serif.x-unicode", "Arial");
    1: pref("font.name.monospace.x-unicode", "Courier New");
    1: pref("font.name.cursive.x-unicode", "Comic Sans MS");
    1: 
    1: pref("font.name.serif.x-western", "Times New Roman");
31005: pref("font.name.sans-serif.x-western", "Arial");
    1: pref("font.name.monospace.x-western", "Courier New");
    1: pref("font.name.cursive.x-western", "Comic Sans MS");
    1: 
70100: pref("font.name.serif.zh-CN", "SimSun");
70100: pref("font.name.sans-serif.zh-CN", "SimSun");
70100: pref("font.name.monospace.zh-CN", "SimSun");
20381: pref("font.name-list.serif.zh-CN", "MS Song, SimSun");
20381: pref("font.name-list.sans-serif.zh-CN", "MS Song, SimSun");
20381: pref("font.name-list.monospace.zh-CN", "MS Song, SimSun");
    1: 
    1: // Per Taiwanese users' demand. They don't want to use TC fonts for
    1: // rendering Latin letters. (bug 88579)
    1: pref("font.name.serif.zh-TW", "Times New Roman"); 
31005: pref("font.name.sans-serif.zh-TW", "Arial");
70100: pref("font.name.monospace.zh-TW", "MingLiU");
20381: pref("font.name-list.serif.zh-TW", "PMingLiu, MingLiU"); 
20381: pref("font.name-list.sans-serif.zh-TW", "PMingLiU, MingLiU");
20381: pref("font.name-list.monospace.zh-TW", "MingLiU");
    1: 
    1: // hkscsm3u.ttf (HKSCS-2001) :  http://www.microsoft.com/hk/hkscs
    1: // Hong Kong users have the same demand about glyphs for Latin letters (bug 88579)
    1: pref("font.name.serif.zh-HK", "Times New Roman");
31005: pref("font.name.sans-serif.zh-HK", "Arial");
70100: pref("font.name.monospace.zh-HK", "MingLiu_HKSCS");
20381: pref("font.name-list.serif.zh-HK", "MingLiu_HKSCS, Ming(for ISO10646), MingLiU");
20381: pref("font.name-list.sans-serif.zh-HK", "MingLiU_HKSCS, Ming(for ISO10646), MingLiU");
20381: pref("font.name-list.monospace.zh-HK", "MingLiU_HKSCS, Ming(for ISO10646), MingLiU");
    1: 
    1: pref("font.name.serif.x-devanagari", "Mangal");
    1: pref("font.name.sans-serif.x-devanagari", "Raghindi");
    1: pref("font.name.monospace.x-devanagari", "Mangal");
    1: pref("font.name-list.serif.x-devanagari", "Mangal, Raghindi");
    1: pref("font.name-list.monospace.x-devanagari", "Mangal, Raghindi");
    1: 
    1: pref("font.name.serif.x-tamil", "Latha");
    1: pref("font.name.sans-serif.x-tamil", "Code2000");
    1: pref("font.name.monospace.x-tamil", "Latha");
    1: pref("font.name-list.serif.x-tamil", "Latha, Code2000");
    1: pref("font.name-list.monospace.x-tamil", "Latha, Code2000");
    1: 
    1: # http://www.alanwood.net/unicode/fonts.html
    1: 
    1: pref("font.name.serif.x-armn", "Sylfaen");
    1: pref("font.name.sans-serif.x-armn", "Arial AMU");
    1: pref("font.name.monospace.x-armn", "Arial AMU");
    1: pref("font.name-list.serif.x-armn", "Sylfaen,Arial Unicode MS, Code2000");
    1: pref("font.name-list.monospace.x-armn", "Arial AMU, Arial Unicode MS, Code2000");
    1: 
13885: pref("font.name.serif.x-beng", "Vrinda");
13885: pref("font.name.sans-serif.x-beng", "Vrinda");
    1: pref("font.name.monospace.x-beng", "Mitra Mono");
13885: pref("font.name-list.serif.x-beng", "Vrinda, Akaash, Likhan, Ekushey Punarbhaba, Code2000, Arial Unicode MS"); 
13885: pref("font.name-list.sans-serif.x-beng", "Vrinda, Akaash, Likhan, Ekushey Punarbhaba, Code2000, Arial Unicode MS"); 
    1: pref("font.name-list.monospace.x-beng", "Likhan, Mukti Narrow, Code2000, Arial Unicode MS");
    1: 
    1: pref("font.name.serif.x-cans", "Aboriginal Serif");
    1: pref("font.name.sans-serif.x-cans", "Aboriginal Sans");
    1: pref("font.name.monospace.x-cans", "Aboriginal Sans");
    1: pref("font.name-list.serif.x-cans", "Aboriginal Serif, BJCree Uni");
    1: pref("font.name-list.monospace.x-cans", "Aboriginal Sans, OskiDakelh, Pigiarniq, Uqammaq");
    1: 
    1: pref("font.name.serif.x-ethi", "Visual Geez Unicode");
    1: pref("font.name.sans-serif.x-ethi", "GF Zemen Unicode");
    1: pref("font.name.cursive.x-ethi", "Visual Geez Unicode Title");
    1: pref("font.name.monospace.x-ethi", "Ethiopia Jiret");
    1: pref("font.name-list.serif.x-ethi", "Visual Geez Unicode, Visual Geez Unicode Agazian, Code2000");
    1: pref("font.name-list.monospace.x-ethi", "Ethiopia Jiret, Code2000");
    1: 
    1: pref("font.name.serif.x-geor", "Sylfaen");
    1: pref("font.name.sans-serif.x-geor", "BPG Classic 99U");
    1: pref("font.name.monospace.x-geor", "Code2000");
    1: pref("font.name-list.serif.x-geor", "Sylfaen, BPG Paata Khutsuri U, TITUS Cyberbit Basic");
    1: pref("font.name-list.monospace.x-geor", "BPG Classic 99U, Code2000, Arial Unicode MS");
    1: 
    1: pref("font.name.serif.x-gujr", "Shruti");
    1: pref("font.name.sans-serif.x-gujr", "Shruti");
    1: pref("font.name.monospace.x-gujr", "Code2000");
    1: pref("font.name-list.serif.x-gujr", "Shruti, Code2000, Arial Unicode MS");
    1: pref("font.name-list.monospace.x-gujr", "Code2000, Shruti, Arial Unicode MS");
    1: 
    1: pref("font.name.serif.x-guru", "Raavi");
    1: pref("font.name.sans-serif.x-guru", "Code2000");
    1: pref("font.name.monospace.x-guru", "Code2000");
    1: pref("font.name-list.serif.x-guru", "Raavi, Saab, Code2000, Arial Unicode MS");
    1: pref("font.name-list.monospace.x-guru", "Code2000, Raavi, Saab, Arial Unicode MS");
    1: 
    1: pref("font.name.serif.x-khmr", "PhnomPenh OT");
    1: pref("font.name.sans-serif.x-khmr", "Khmer OS");
    1: pref("font.name.monospace.x-khmr", "Code2000");
    1: pref("font.name-list.serif.x-khmr", "PhnomPenh OT,.Mondulkiri U GR 1.5, Khmer OS");
    1: pref("font.name-list.monospace.x-khmr", "Code2000, Khmer OS, Khmer OS System");
    1: 
13885: pref("font.name.serif.x-mlym", "Rachana_w01");
13885: pref("font.name.sans-serif.x-mlym", "Rachana_w01");
13885: pref("font.name.monospace.x-mlym", "Rachana_w01");
13885: pref("font.name-list.serif.x-mlym", "AnjaliOldLipi, Kartika, ThoolikaUnicode, Code2000, Arial Unicode MS");
13885: pref("font.name-list.sans-serif.x-mlym", "AnjaliOldLipi, Kartika, ThoolikaUnicode, Code2000, Arial Unicode MS");
13885: pref("font.name-list.monospace.x-mlym", "AnjaliOldLipi, Kartika, ThoolikaUnicode, Code2000, Arial Unicode MS");
13885: 
13885: pref("font.name.serif.x-orya", "ori1Uni");
13885: pref("font.name.sans-serif.x-orya", "ori1Uni");
13885: pref("font.name.monospace.x-orya", "ori1Uni");
13885: pref("font.name-list.serif.x-orya", "Kalinga, ori1Uni, Code2000, Arial Unicode MS");
13885: pref("font.name-list.sans-serif.x-orya", "Kalinga, ori1Uni, Code2000, Arial Unicode MS");
13885: pref("font.name-list.monospace.x-orya", "Kalinga, ori1Uni, Code2000, Arial Unicode MS");
13885: 
13885: pref("font.name.serif.x-telu", "Gautami");
13885: pref("font.name.sans-serif.x-telu", "Gautami");
13885: pref("font.name.monospace.x-telu", "Gautami");
13885: pref("font.name-list.serif.x-telu", "Gautami, Akshar Unicode, Code2000, Arial Unicode MS");
13885: pref("font.name-list.sans-serif.x-telu", "Gautami, Akshar Unicode, Code2000, Arial Unicode MS");
13885: pref("font.name-list.monospace.x-telu", "Gautami, Akshar Unicode, Code2000, Arial Unicode MS");
13885: 
13885: pref("font.name.serif.x-knda", "Tunga");
13885: pref("font.name.sans-serif.x-knda", "Tunga");
13885: pref("font.name.monospace.x-knda", "Tunga");
13885: pref("font.name-list.serif.x-knda", "Tunga, AksharUnicode, Code2000, Arial Unicode MS");
13885: pref("font.name-list.sans-serif.x-knda", "Tunga, AksharUnicode, Code2000, Arial Unicode MS");
13885: pref("font.name-list.monospace.x-knda", "Tunga, AksharUnicode, Code2000, Arial Unicode MS");
13885: 
13885: pref("font.name.serif.x-sinh", "Iskoola Pota");
13885: pref("font.name.sans-serif.x-sinh", "Iskoola Pota");
13885: pref("font.name.monospace.x-sinh", "Iskoola Pota");
13885: pref("font.name-list.serif.x-sinh", "Iskoola Pota, AksharUnicode");
13885: pref("font.name-list.sans-serif.x-sinh", "Iskoola Pota, AksharUnicode");
13885: pref("font.name-list.monospace.x-sinh", "Iskoola Pota, AksharUnicode");
    1: 
38930: pref("font.name.serif.x-tibt", "Tibetan Machine Uni");
38930: pref("font.name.sans-serif.x-tibt", "Tibetan Machine Uni");
38930: pref("font.name.monospace.x-tibt", "Tibetan Machine Uni");
38930: pref("font.name-list.serif.x-tibt", "Tibetan Machine Uni, Jomolhari, Microsoft Himalaya");
38930: pref("font.name-list.sans-serif.x-tibt", "Tibetan Machine Uni, Jomolhari, Microsoft Himalaya");
38930: pref("font.name-list.monospace.x-tibt", "Tibetan Machine Uni, Jomolhari, Microsoft Himalaya");
38930: 
    1: pref("font.default.ar", "sans-serif");
    1: pref("font.size.variable.ar", 16);
    1: pref("font.size.fixed.ar", 13);
    1: 
    1: pref("font.default.el", "serif");
    1: pref("font.size.variable.el", 16);
    1: pref("font.size.fixed.el", 13);
    1: 
    1: pref("font.default.he", "sans-serif");
    1: pref("font.size.variable.he", 16);
    1: pref("font.size.fixed.he", 13);
    1: 
    1: pref("font.default.ja", "sans-serif");
    1: pref("font.size.variable.ja", 16);
    1: pref("font.size.fixed.ja", 16);
    1: 
    1: pref("font.default.ko", "sans-serif");
    1: pref("font.size.variable.ko", 16);
    1: pref("font.size.fixed.ko", 16);
    1: 
    1: pref("font.default.th", "serif");
    1: pref("font.size.variable.th", 16);
    1: pref("font.size.fixed.th", 13);
16512: pref("font.minimum-size.th", 10);
    1: 
    1: pref("font.default.tr", "serif");
    1: pref("font.size.variable.tr", 16);
    1: pref("font.size.fixed.tr", 13);
    1: 
    1: pref("font.default.x-baltic", "serif");
    1: pref("font.size.variable.x-baltic", 16);
    1: pref("font.size.fixed.x-baltic", 13);
    1: 
    1: pref("font.default.x-central-euro", "serif");
    1: pref("font.size.variable.x-central-euro", 16);
    1: pref("font.size.fixed.x-central-euro", 13);
    1: 
    1: pref("font.default.x-cyrillic", "serif");
    1: pref("font.size.variable.x-cyrillic", 16);
    1: pref("font.size.fixed.x-cyrillic", 13);
    1: 
    1: pref("font.default.x-devanagari", "serif");
    1: pref("font.size.variable.x-devanagari", 16);
    1: pref("font.size.fixed.x-devanagari", 13);
    1: 
    1: pref("font.default.x-tamil", "serif");
    1: pref("font.size.variable.x-tamil", 16);
    1: pref("font.size.fixed.x-tamil", 13);
    1: 
    1: pref("font.default.x-armn", "serif");
    1: pref("font.size.variable.x-armn", 16);
    1: pref("font.size.fixed.x-armn", 13);
    1: 
    1: pref("font.default.x-beng", "serif");
    1: pref("font.size.variable.x-beng", 16);
    1: pref("font.size.fixed.x-beng", 13);
    1: 
    1: pref("font.default.x-cans", "serif");
    1: pref("font.size.variable.x-cans", 16);
    1: pref("font.size.fixed.x-cans", 13);
    1: 
    1: pref("font.default.x-ethi", "serif");
    1: pref("font.size.variable.x-ethi", 16);
    1: pref("font.size.fixed.x-ethi", 13);
    1: 
    1: pref("font.default.x-geor", "serif");
    1: pref("font.size.variable.x-geor", 16);
    1: pref("font.size.fixed.x-geor", 13);
    1: 
    1: pref("font.default.x-gujr", "serif");
    1: pref("font.size.variable.x-gujr", 16);
    1: pref("font.size.fixed.x-gujr", 13);
    1: 
    1: pref("font.default.x-guru", "serif");
    1: pref("font.size.variable.x-guru", 16);
    1: pref("font.size.fixed.x-guru", 13);
    1: 
    1: pref("font.default.x-khmr", "serif");
    1: pref("font.size.variable.x-khmr", 16);
    1: pref("font.size.fixed.x-khmr", 13);
    1: 
    1: pref("font.default.x-mlym", "serif");
    1: pref("font.size.variable.x-mlym", 16);
    1: pref("font.size.fixed.x-mlym", 13);
    1: 
13885: pref("font.default.x-orya", "serif");
13885: pref("font.size.variable.x-orya", 16);
13885: pref("font.size.fixed.x-orya", 13);
13885: 
13885: pref("font.default.x-telu", "serif");
13885: pref("font.size.variable.x-telu", 16);
13885: pref("font.size.fixed.x-telu", 13);
13885: 
13885: pref("font.default.x-knda", "serif");
13885: pref("font.size.variable.x-knda", 16);
13885: pref("font.size.fixed.x-knda", 13);
13885: 
13885: pref("font.default.x-sinh", "serif");
13885: pref("font.size.variable.x-sinh", 16);
13885: pref("font.size.fixed.x-sinh", 13);
13885: 
38930: pref("font.default.x-tibt", "serif");
38930: pref("font.size.variable.x-tibt", 16);
38930: pref("font.size.fixed.x-tibt", 13);
38930: 
    1: pref("font.default.x-unicode", "serif");
    1: pref("font.size.variable.x-unicode", 16);
    1: pref("font.size.fixed.x-unicode", 13);
    1: 
    1: pref("font.default.x-western", "serif");
    1: pref("font.size.variable.x-western", 16);
    1: pref("font.size.fixed.x-western", 13);
    1: 
    1: pref("font.default.zh-CN", "sans-serif");
    1: pref("font.size.variable.zh-CN", 16);
    1: pref("font.size.fixed.zh-CN", 16);
    1: 
    1: pref("font.default.zh-TW", "sans-serif");
    1: pref("font.size.variable.zh-TW", 16);
    1: pref("font.size.fixed.zh-TW", 16);
    1: 
    1: pref("font.default.zh-HK", "sans-serif");
    1: pref("font.size.variable.zh-HK", 16);
    1: pref("font.size.fixed.zh-HK", 16);
    1: 
13937: // We have special support for Monotype Symbol on Windows.
72267: pref("font.mathfont-family", "STIXNonUnicode, STIXSizeOneSym, STIXSize1, STIXGeneral, Asana Math, Symbol, DejaVu Sans, Cambria Math");
13937: 
42854: // cleartype settings - false implies default system settings 
42854: 
42854: // use cleartype rendering for downloadable fonts (win xp only)
42854: pref("gfx.font_rendering.cleartype.use_for_downloadable_fonts", true);
42854: 
42854: // use cleartype rendering for all fonts always (win xp only)
42894: pref("gfx.font_rendering.cleartype.always_use_for_content", false);
42854: 
68738: // ClearType tuning parameters for directwrite/d2d.
68738: //
68738: // Allows overriding of underlying registry values in:
68738: //   HKCU/Software/Microsoft/Avalon.Graphics/<display> (contrast and level)
68738: //   HKLM/Software/Microsoft/Avalon.Graphics/<display> (gamma, pixel structure)
68738: // and selection of the ClearType/antialiasing mode.
68738: //
68738: // A value of -1 implies use the default value, otherwise value ranges 
68738: // follow registry settings:
68738: //   gamma [1000, 2200]  default: based on screen, typically 2200 (== 2.2)
68738: //   enhanced contrast [0, 1000] default: 50
68738: //   cleartype level [0, 100] default: 100
68738: //   pixel structure [0, 2] default: 0 (flat/RGB/BGR)
68738: //   rendering mode [0, 5] default: 0
68738: //     0 = use default for font & size;
68738: //     1 = aliased;
68738: //     2 = GDI Classic;
68738: //     3 = GDI Natural Widths;
68738: //     4 = Natural;
68738: //     5 = Natural Symmetric
68738: //
68738: // See:
68738: //   http://msdn.microsoft.com/en-us/library/aa970267.aspx
68738: //   http://msdn.microsoft.com/en-us/library/dd368190%28v=VS.85%29.aspx
68738: // Note: DirectWrite uses the "Enhanced Contrast Level" value rather than the 
68738: // "Text Contrast Level" value
68738: 
68738: pref("gfx.font_rendering.cleartype_params.gamma", -1);
68738: pref("gfx.font_rendering.cleartype_params.enhanced_contrast", -1);
68738: pref("gfx.font_rendering.cleartype_params.cleartype_level", -1);
68738: pref("gfx.font_rendering.cleartype_params.pixel_structure", -1);
68738: pref("gfx.font_rendering.cleartype_params.rendering_mode", -1);
68738: 
71189: // A comma-separated list of font family names. Fonts in these families will
71486: // be forced to use "GDI Classic" ClearType mode, provided the value
71486: // of gfx.font_rendering.cleartype_params.rendering_mode is -1
71486: // (i.e. a specific rendering_mode has not been explicitly set).
71192: // Currently we apply this setting to the sans-serif Microsoft "core Web fonts".
71192: pref("gfx.font_rendering.cleartype_params.force_gdi_classic_for_families",
71930:      "Arial,Consolas,Courier New,Microsoft Sans Serif,Segoe UI,Tahoma,Trebuchet MS,Verdana");
71190: // The maximum size at which we will force GDI classic mode using
71190: // force_gdi_classic_for_families.
71192: pref("gfx.font_rendering.cleartype_params.force_gdi_classic_max_size", 15);
71189: 
    1: pref("ui.key.menuAccessKeyFocuses", true);
    1: 
    1: // override double-click word selection behavior.
    1: pref("layout.word_select.eat_space_to_next_word", true);
    1: 
    1: // scrollbar snapping region
    1: pref("slider.snapMultiplier", 6);
    1: 
    1: // print_extra_margin enables platforms to specify an extra gap or margin
    1: // around the content of the page for Print Preview only
    1: pref("print.print_extra_margin", 90); // twips (90 twips is an eigth of an inch)
    1: 
    1: // Whether to extend the native dialog with information on printing frames.
    1: pref("print.extend_native_print_dialog", true);
    1: 
    1: // Locate Java by scanning the Sun JRE installation directory with a minimum version
    1: // Note: Does not scan if security.enable_java is not true
    1: pref("plugin.scan.SunJRE", "1.3");
    1: 
    1: // Locate plugins by scanning the Adobe Acrobat installation directory with a minimum version
    1: pref("plugin.scan.Acrobat", "5.0");
    1: 
    1: // Locate plugins by scanning the Quicktime installation directory with a minimum version
    1: pref("plugin.scan.Quicktime", "5.0");
    1: 
    1: // Locate and scan the Window Media Player installation directory for plugins with a minimum version
    1: pref("plugin.scan.WindowsMediaPlayer", "7.0");
    1: 
    1: // Locate plugins by the directories specified in the Windows registry for PLIDs
    1: // Which is currently HKLM\Software\MozillaPlugins\xxxPLIDxxx\Path
    1: pref("plugin.scan.plid.all", true);
    1: 
    1: // Help Windows NT, 2000, and XP dialup a RAS connection
    1: // when a network address is unreachable.
    1: pref("network.autodial-helper.enabled", true);
    1: 
    1: // Pref to control whether we set ddeexec subkeys for the http
    1: // Internet shortcut protocol if we are handling it.  These
    1: // subkeys will be set only while we are running (to avoid the
    1: // problem of Windows showing an alert when it tries to use DDE
    1: // and we're not already running).
    1: pref("advanced.system.supportDDEExec", true);
    1: 
    1: // Switch the keyboard layout per window
    1: pref("intl.keyboard.per_window_layout", false);
    1: 
31956: #ifdef NS_ENABLE_TSF
24836: // Enable/Disable TSF support
24836: pref("intl.enable_tsf_support", false);
24836: 
25409: // We need to notify the layout change to TSF, but we cannot check the actual
25409: // change now, therefore, we always notify it by this fequency.
25409: pref("intl.tsf.on_layout_change_interval", 100);
31956: #endif
25409: 
18972: // See bug 448927, on topmost panel, some IMEs are not usable on Windows.
18972: pref("ui.panel.default_level_parent", false);
18972: 
33016: pref("mousewheel.system_scroll_override_on_root_content.enabled", true);
33016: 
70039: // High resolution scrolling with supported mouse drivers on Vista or later.
70340: pref("mousewheel.enable_pixel_scrolling", true);
70039: 
39248: // If your mouse drive sends WM_*SCROLL messages when you turn your mouse wheel,
39248: // set this to true.  Then, gecko processes them as mouse wheel messages.
39248: pref("mousewheel.emulate_at_wm_scroll", false);
39248: 
33529: // Enables or disabled the TrackPoint hack, -1 is autodetect, 0 is off,
33529: // and 1 is on.  Set this to 1 if TrackPoint scrolling is not working.
33529: pref("ui.trackpoint_hack.enabled", -1);
57092: 
57092: // Setting this to a non-empty string overrides the Win32 "window class" used
57092: // for "normal" windows. Setting this to MozillaUIWindowClass might make
57092: // some trackpad drivers behave better.
57092: pref("ui.window_class_override", "");
57092: 
62477: // Enables or disables the Elantech gesture hacks.  -1 is autodetect, 0 is off,
62477: // and 1 is on.  Set this to 1 if three-finger swipe gestures do not cause
62477: // page back/forward actions, or if pinch-to-zoom does not work.
62477: pref("ui.elantech_gesture_hacks.enabled", -1);
62477: 
    1: # WINNT
    1: #endif
    1: 
    1: #ifdef XP_MACOSX
    1: // Mac specific preference defaults
    1: pref("browser.drag_out_of_frame_style", 1);
    1: pref("ui.key.saveLink.shift", false); // true = shift, false = meta
    1: 
14090: // default fonts (in UTF8 and using canonical names)
14090: // to determine canonical font names, use a debug build and 
14090: // enable NSPR logging for module fontInfoLog:5
14090: // canonical names immediately follow '(fontinit) family:' in the log
    1: 
 6141: pref("font.name.serif.ar", "Al Bayan");
 6141: pref("font.name.sans-serif.ar", "Geeza Pro");
 6141: pref("font.name.monospace.ar", "Geeza Pro");
 6141: pref("font.name.cursive.ar", "DecoType Naskh");
 6141: pref("font.name.fantasy.ar", "KufiStandardGK");
 6141: pref("font.name-list.serif.ar", "Al Bayan");
 6141: pref("font.name-list.sans-serif.ar", "Geeza Pro");
 6141: pref("font.name-list.monospace.ar", "Geeza Pro");
 6141: pref("font.name-list.cursive.ar", "DecoType Naskh");
 6141: pref("font.name-list.fantasy.ar", "KufiStandardGK");
    1: 
    1: pref("font.name.serif.el", "Lucida Grande");
    1: pref("font.name.sans-serif.el", "Lucida Grande");
 6141: pref("font.name.monospace.el", "Lucida Grande");
 6141: pref("font.name.cursive.el", "Lucida Grande");
 6141: pref("font.name.fantasy.el", "Lucida Grande");
 4247: pref("font.name-list.serif.el", "Lucida Grande");
 4247: pref("font.name-list.sans-serif.el", "Lucida Grande");
 6141: pref("font.name-list.monospace.el", "Lucida Grande");
 6141: pref("font.name-list.cursive.el", "Lucida Grande");
 6141: pref("font.name-list.fantasy.el", "Lucida Grande");
 6141: 
68023: pref("font.name.serif.he", "Times New Roman");
68023: pref("font.name.sans-serif.he", "Arial");
68023: pref("font.name.monospace.he", "Courier New");
68023: pref("font.name.cursive.he", "Times New Roman");
68023: pref("font.name.fantasy.he", "Times New Roman");
68023: pref("font.name-list.serif.he", "Times New Roman");
68023: pref("font.name-list.sans-serif.he", "Arial");
68023: pref("font.name-list.monospace.he", "Courier New");
68023: pref("font.name-list.cursive.he", "Times New Roman");
68023: pref("font.name-list.fantasy.he", "Times New Roman");
 4247: 
14090: pref("font.name.serif.ja", "Hiragino Mincho Pro"); 
14090: pref("font.name.sans-serif.ja", "Hiragino Kaku Gothic Pro"); 
14090: pref("font.name.monospace.ja", "Osaka-Mono"); 
14090: pref("font.name-list.serif.ja", "Hiragino Mincho Pro"); 
14090: pref("font.name-list.sans-serif.ja", "Hiragino Kaku Gothic Pro"); 
14090: pref("font.name-list.monospace.ja", "Osaka-Mono"); 
    1: 
    1: pref("font.name.serif.ko", "AppleMyungjo"); 
    1: pref("font.name.sans-serif.ko", "AppleGothic"); 
    1: pref("font.name.monospace.ko", "AppleGothic"); 
 4247: pref("font.name-list.serif.ko", "AppleMyungjo"); 
 4247: pref("font.name-list.sans-serif.ko", "AppleGothic"); 
 4247: pref("font.name-list.monospace.ko", "AppleGothic"); 
 6141: 
 6141: pref("font.name.serif.th", "Thonburi");
16512: pref("font.name.sans-serif.th", "Thonburi");
 6141: pref("font.name.monospace.th", "Ayuthaya");
 6141: pref("font.name-list.serif.th", "Thonburi");
16512: pref("font.name-list.sans-serif.th", "Thonburi");
 6141: pref("font.name-list.monospace.th", "Ayuthaya");
    1: 
    1: pref("font.name.serif.tr", "Times");
    1: pref("font.name.sans-serif.tr", "Helvetica");
    1: pref("font.name.monospace.tr", "Courier");
    1: pref("font.name.cursive.tr", "Apple Chancery");
    1: pref("font.name.fantasy.tr", "Papyrus");
 4247: pref("font.name-list.serif.tr", "Times");
 4247: pref("font.name-list.sans-serif.tr", "Helvetica");
 4247: pref("font.name-list.monospace.tr", "Courier");
 4247: pref("font.name-list.cursive.tr", "Apple Chancery");
 4247: pref("font.name-list.fantasy.tr", "Papyrus");
    1: 
 6141: pref("font.name.serif.x-armn", "Mshtakan");
 6141: pref("font.name.sans-serif.x-armn", "Mshtakan");
 6141: pref("font.name.monospace.x-armn", "Mshtakan");
 6141: pref("font.name-list.serif.x-armn", "Mshtakan");
 6141: pref("font.name-list.sans-serif.x-armn", "Mshtakan");
 6141: pref("font.name-list.monospace.x-armn", "Mshtakan");
 6141:  
    1: pref("font.name.serif.x-baltic", "Times");
    1: pref("font.name.sans-serif.x-baltic", "Helvetica");
    1: pref("font.name.monospace.x-baltic", "Courier");
    1: pref("font.name.cursive.x-baltic", "Apple Chancery");
    1: pref("font.name.fantasy.x-baltic", "Papyrus");
 4247: pref("font.name-list.serif.x-baltic", "Times");
 4247: pref("font.name-list.sans-serif.x-baltic", "Helvetica");
 4247: pref("font.name-list.monospace.x-baltic", "Courier");
 4247: pref("font.name-list.cursive.x-baltic", "Apple Chancery");
 4247: pref("font.name-list.fantasy.x-baltic", "Papyrus");
    1: 
 6141: // no suitable fonts for bengali ship with mac os x
 6141: // however two can be freely downloaded
 6141: // SolaimanLipi, Rupali http://ekushey.org/?page/mac_download
13735: pref("font.name.serif.x-beng", "সোলাইমান লিপি");
 6141: pref("font.name.sans-serif.x-beng", "রূপালী");
 6141: pref("font.name.monospace.x-beng", "রূপালী");
13735: pref("font.name-list.serif.x-beng", "সোলাইমান লিপি");
 6141: pref("font.name-list.sans-serif.x-beng", "রূপালী");
 6141: pref("font.name-list.monospace.x-beng", "রূপালী");
 6141: 
 6141: pref("font.name.serif.x-cans", "Euphemia UCAS");
 6141: pref("font.name.sans-serif.x-cans", "Euphemia UCAS");
 6141: pref("font.name.monospace.x-cans", "Euphemia UCAS");
 6141: pref("font.name-list.serif.x-cans", "Euphemia UCAS");
 6141: pref("font.name-list.sans-serif.x-cans", "Euphemia UCAS");
 6141: pref("font.name-list.monospace.x-cans", "Euphemia UCAS");
 6141: 
    1: pref("font.name.serif.x-central-euro", "Times");
    1: pref("font.name.sans-serif.x-central-euro", "Helvetica");
    1: pref("font.name.monospace.x-central-euro", "Courier");
    1: pref("font.name.cursive.x-central-euro", "Apple Chancery");
    1: pref("font.name.fantasy.x-central-euro", "Papyrus");
 4247: pref("font.name-list.serif.x-central-euro", "Times");
 4247: pref("font.name-list.sans-serif.x-central-euro", "Helvetica");
 4247: pref("font.name-list.monospace.x-central-euro", "Courier");
 4247: pref("font.name-list.cursive.x-central-euro", "Apple Chancery");
 4247: pref("font.name-list.fantasy.x-central-euro", "Papyrus");
    1: 
77205: pref("font.name.serif.x-cyrillic", "Times");
77205: pref("font.name.sans-serif.x-cyrillic", "Helvetica");
77205: pref("font.name.monospace.x-cyrillic", "Monaco");
77205: pref("font.name.cursive.x-cyrillic", "Geneva");
    1: pref("font.name.fantasy.x-cyrillic", "Charcoal CY");
77205: pref("font.name-list.serif.x-cyrillic", "Times");
77205: pref("font.name-list.sans-serif.x-cyrillic", "Helvetica");
77205: pref("font.name-list.monospace.x-cyrillic", "Monaco");
77205: pref("font.name-list.cursive.x-cyrillic", "Geneva");
 4247: pref("font.name-list.fantasy.x-cyrillic", "Charcoal CY");
    1: 
 6141: pref("font.name.serif.x-devanagari", "Devanagari MT");
 6141: pref("font.name.sans-serif.x-devanagari", "Devanagari MT");
 6141: pref("font.name.monospace.x-devanagari", "Devanagari MT");
 6141: pref("font.name-list.serif.x-devanagari", "Devanagari MT");
 6141: pref("font.name-list.sans-serif.x-devanagari", "Devanagari MT");
 6141: pref("font.name-list.monospace.x-devanagari", "Devanagari MT");
 6141: 
 6141: // no suitable fonts for ethiopic ship with mac os x
 6141: // however one can be freely downloaded
 6141: // Abyssinica SIL http://scripts.sil.org/AbyssinicaSIL_Download
 6141: pref("font.name.serif.x-ethi", "Abyssinica SIL");
 6141: pref("font.name.sans-serif.x-ethi", "Abyssinica SIL");
 6141: pref("font.name.monospace.x-ethi", "Abyssinica SIL");
 6141: pref("font.name-list.serif.x-ethi", "Abyssinica SIL");
 6141: pref("font.name-list.sans-serif.x-ethi", "Abyssinica SIL");
 6141: pref("font.name-list.monospace.x-ethi", "Abyssinica SIL");
 6141: 
 6141: // no suitable fonts for georgian ship with mac os x
 6141: // however some can be freely downloaded
 6141: // TITUS Cyberbit Basic http://titus.fkidg1.uni-frankfurt.de/unicode/tituut.asp
 6141: // Zuzumbo http://homepage.mac.com/rsiradze/FileSharing91.html
 6141: pref("font.name.serif.x-geor", "TITUS Cyberbit Basic");
 6141: pref("font.name.sans-serif.x-geor", "Zuzumbo");
 6141: pref("font.name.monospace.x-geor", "Zuzumbo");
 6141: pref("font.name-list.serif.x-geor", "TITUS Cyberbit Basic"); 
 6141: pref("font.name-list.sans-serif.x-geor", "Zuzumbo");
 6141: pref("font.name-list.monospace.x-geor", "Zuzumbo");
 6141: 
 6141: pref("font.name.serif.x-gujr", "Gujarati MT");
 6141: pref("font.name.sans-serif.x-gujr", "Gujarati MT");
 6141: pref("font.name.monospace.x-gujr", "Gujarati MT");
 6141: pref("font.name-list.serif.x-gujr", "Gujarati MT"); 
 6141: pref("font.name-list.sans-serif.x-gujr", "Gujarati MT");
 6141: pref("font.name-list.monospace.x-gujr", "Gujarati MT");
 6141: 
 6141: pref("font.name.serif.x-guru", "Gurmukhi MT");
 6141: pref("font.name.sans-serif.x-guru", "Gurmukhi MT");
 6141: pref("font.name.monospace.x-guru", "Gurmukhi MT");
 6141: pref("font.name-list.serif.x-guru", "Gurmukhi MT"); 
 6141: pref("font.name-list.sans-serif.x-guru", "Gurmukhi MT");
 6141: pref("font.name-list.monospace.x-guru", "Gurmukhi MT");
 6141: 
 6141: // no suitable fonts for khmer ship with mac os x
 6141: // add this section when fonts exist
 6141: 
 6141: // no suitable fonts for malayalam ship with mac os x
 6141: // add this section when fonts exist
 6141: 
13885: // no suitable fonts for oriya ship with mac os x
13885: // add this section when fonts exist
13885: 
13885: // no suitable fonts for telugu ship with mac os x
14145: // however one can be freely downloaded
14145: // Pothana http://web.nickshanks.com/typography/telugu/
14145: pref("font.name.serif.x-telu", "Pothana");
14145: pref("font.name.sans-serif.x-telu", "Pothana");
14145: pref("font.name.monospace.x-telu", "Pothana");
14145: pref("font.name-list.serif.x-telu", "Pothana");
14145: pref("font.name-list.sans-serif.x-telu", "Pothana");
14145: pref("font.name-list.monospace.x-telu", "Pothana");
13885: 
13885: // no suitable fonts for kannada ship with mac os x
14145: // however one can be freely downloaded
14145: // Kedage http://web.nickshanks.com/typography/kannada/
14145: pref("font.name.serif.x-knda", "Kedage");
14145: pref("font.name.sans-serif.x-knda", "Kedage");
14145: pref("font.name.monospace.x-knda", "Kedage");
14145: pref("font.name-list.serif.x-knda", "Kedage");
14145: pref("font.name-list.sans-serif.x-knda", "Kedage");
14145: pref("font.name-list.monospace.x-knda", "Kedage");
13885: 
13885: // no suitable fonts for sinhala ship with mac os x
13885: // add this section when fonts exist
13885: 
 6141: pref("font.name.serif.x-tamil", "InaiMathi");
 6141: pref("font.name.sans-serif.x-tamil", "InaiMathi");
 6141: pref("font.name.monospace.x-tamil", "InaiMathi");
 6141: pref("font.name-list.serif.x-tamil", "InaiMathi");
 6141: pref("font.name-list.sans-serif.x-tamil", "InaiMathi");
 6141: pref("font.name-list.monospace.x-tamil", "InaiMathi");
 6141: 
38930: // Kailasa ships with mac os x >= 10.5
38930: pref("font.name.serif.x-tibt", "Kailasa");
38930: pref("font.name.sans-serif.x-tibt", "Kailasa");
38930: pref("font.name.monospace.x-tibt", "Kailasa");
38930: pref("font.name-list.serif.x-tibt", "Kailasa");
38930: pref("font.name-list.sans-serif.x-tibt", "Kailasa");
38930: pref("font.name-list.monospace.x-tibt", "Kailasa");
38930: 
    1: pref("font.name.serif.x-unicode", "Times");
    1: pref("font.name.sans-serif.x-unicode", "Helvetica");
    1: pref("font.name.monospace.x-unicode", "Courier");
    1: pref("font.name.cursive.x-unicode", "Apple Chancery");
    1: pref("font.name.fantasy.x-unicode", "Papyrus");
 4247: pref("font.name-list.serif.x-unicode", "Times");
 4247: pref("font.name-list.sans-serif.x-unicode", "Helvetica");
 4247: pref("font.name-list.monospace.x-unicode", "Courier");
 4247: pref("font.name-list.cursive.x-unicode", "Apple Chancery");
 4247: pref("font.name-list.fantasy.x-unicode", "Papyrus");
    1: 
    1: pref("font.name.serif.x-western", "Times");
    1: pref("font.name.sans-serif.x-western", "Helvetica");
    1: pref("font.name.monospace.x-western", "Courier");
    1: pref("font.name.cursive.x-western", "Apple Chancery");
    1: pref("font.name.fantasy.x-western", "Papyrus");
 4247: pref("font.name-list.serif.x-western", "Times");
 4247: pref("font.name-list.sans-serif.x-western", "Helvetica");
 4247: pref("font.name-list.monospace.x-western", "Courier");
 4247: pref("font.name-list.cursive.x-western", "Apple Chancery");
 4247: pref("font.name-list.fantasy.x-western", "Papyrus");
    1: 
14090: pref("font.name.serif.zh-CN", "STSong");
13132: pref("font.name.sans-serif.zh-CN", "STHeiti");
13132: pref("font.name.monospace.zh-CN", "STHeiti");
14090: pref("font.name-list.serif.zh-CN", "STSong");
13132: pref("font.name-list.sans-serif.zh-CN", "STHeiti");
13132: pref("font.name-list.monospace.zh-CN", "STHeiti");
    1: 
10881: pref("font.name.serif.zh-TW", "Apple LiSung"); 
10881: pref("font.name.sans-serif.zh-TW", "Apple LiGothic");  
10881: pref("font.name.monospace.zh-TW", "Apple LiGothic");  
10881: pref("font.name-list.serif.zh-TW", "Apple LiSung"); 
10881: pref("font.name-list.sans-serif.zh-TW", "Apple LiGothic");  
10881: pref("font.name-list.monospace.zh-TW", "Apple LiGothic");  
    1: 
14090: pref("font.name.serif.zh-HK", "LiSong Pro");
14090: pref("font.name.sans-serif.zh-HK", "LiHei Pro");
14090: pref("font.name.monospace.zh-HK", "LiHei Pro");
14090: pref("font.name-list.serif.zh-HK", "LiSong Pro");
14090: pref("font.name-list.sans-serif.zh-HK", "LiHei Pro");
14090: pref("font.name-list.monospace.zh-HK", "LiHei Pro");
    1: 
    1: pref("font.default.ar", "sans-serif");
 6141: pref("font.size.variable.ar", 16);
    1: pref("font.size.fixed.ar", 13);
    1: 
    1: pref("font.default.el", "serif");
    1: pref("font.size.variable.el", 16);
    1: pref("font.size.fixed.el", 13);
    1: 
    1: pref("font.default.he", "sans-serif");
 6141: pref("font.size.variable.he", 16);
    1: pref("font.size.fixed.he", 13);
    1: 
    1: pref("font.default.ja", "sans-serif");
 6141: pref("font.size.variable.ja", 16);
 6141: pref("font.size.fixed.ja", 16);
    1: 
    1: pref("font.default.ko", "sans-serif");
    1: pref("font.size.variable.ko", 16);
    1: pref("font.size.fixed.ko", 16);
    1: 
    1: pref("font.default.th", "serif");
    1: pref("font.size.variable.th", 16);
    1: pref("font.size.fixed.th", 13);
16512: pref("font.minimum-size.th", 10);
    1: 
    1: pref("font.default.tr", "serif");
    1: pref("font.size.variable.tr", 16);
    1: pref("font.size.fixed.tr", 13);
    1: 
 6141: pref("font.default.x-armn", "serif");
 6141: pref("font.size.variable.x-armn", 16);
 6141: pref("font.size.fixed.x-armn", 13);
 6141: 
    1: pref("font.default.x-baltic", "serif");
    1: pref("font.size.variable.x-baltic", 16);
    1: pref("font.size.fixed.x-baltic", 13);
    1: 
 6141: pref("font.default.x-beng", "serif");
 6141: pref("font.size.variable.x-beng", 16);
 6141: pref("font.size.fixed.x-beng", 13);
 6141: 
 6141: pref("font.default.x-cans", "serif");
 6141: pref("font.size.variable.x-cans", 16);
 6141: pref("font.size.fixed.x-cans", 13);
 6141: 
    1: pref("font.default.x-central-euro", "serif");
    1: pref("font.size.variable.x-central-euro", 16);
    1: pref("font.size.fixed.x-central-euro", 13);
    1: 
    1: pref("font.default.x-cyrillic", "serif");
    1: pref("font.size.variable.x-cyrillic", 16);
    1: pref("font.size.fixed.x-cyrillic", 13);
    1: 
 6141: pref("font.default.x-devanagari", "serif");
 6141: pref("font.size.variable.x-devanagari", 16);
 6141: pref("font.size.fixed.x-devanagari", 13);
 6141: 
 6141: pref("font.default.x-ethi", "serif");
 6141: pref("font.size.variable.x-ethi", 16);
 6141: pref("font.size.fixed.x-ethi", 13);
 6141: 
 6141: pref("font.default.x-geor", "serif");
 6141: pref("font.size.variable.x-geor", 16);
 6141: pref("font.size.fixed.x-geor", 13);
 6141: 
 6141: pref("font.default.x-gujr", "serif");
 6141: pref("font.size.variable.x-gujr", 16);
 6141: pref("font.size.fixed.x-gujr", 13);
 6141: 
 6141: pref("font.default.x-guru", "serif");
 6141: pref("font.size.variable.x-guru", 16);
 6141: pref("font.size.fixed.x-guru", 13);
 6141: 
 6141: pref("font.default.x-khmr", "serif");
 6141: pref("font.size.variable.x-khmr", 16);
 6141: pref("font.size.fixed.x-khmr", 13);
 6141: 
 6141: pref("font.default.x-mlym", "serif");
 6141: pref("font.size.variable.x-mlym", 16);
 6141: pref("font.size.fixed.x-mlym", 13);
 6141: 
 6141: pref("font.default.x-tamil", "serif");
 6141: pref("font.size.variable.x-tamil", 16);
 6141: pref("font.size.fixed.x-tamil", 13);
 6141: 
13885: pref("font.default.x-orya", "serif");
13885: pref("font.size.variable.x-orya", 16);
13885: pref("font.size.fixed.x-orya", 13);
13885: 
13885: pref("font.default.x-telu", "serif");
13885: pref("font.size.variable.x-telu", 16);
13885: pref("font.size.fixed.x-telu", 13);
13885: 
13885: pref("font.default.x-knda", "serif");
13885: pref("font.size.variable.x-knda", 16);
13885: pref("font.size.fixed.x-knda", 13);
13885: 
13885: pref("font.default.x-sinh", "serif");
13885: pref("font.size.variable.x-sinh", 16);
13885: pref("font.size.fixed.x-sinh", 13);
13885: 
38930: pref("font.default.x-tibt", "serif");
38930: pref("font.size.variable.x-tibt", 16);
38930: pref("font.size.fixed.x-tibt", 13);
38930: 
    1: pref("font.default.x-unicode", "serif");
    1: pref("font.size.variable.x-unicode", 16);
    1: pref("font.size.fixed.x-unicode", 13);
    1: 
    1: pref("font.default.x-western", "serif");
    1: pref("font.size.variable.x-western", 16);
    1: pref("font.size.fixed.x-western", 13);
    1: 
    1: pref("font.default.zh-CN", "sans-serif");
    1: pref("font.size.variable.zh-CN", 15);
    1: pref("font.size.fixed.zh-CN", 16);
    1: 
    1: pref("font.default.zh-TW", "sans-serif");
    1: pref("font.size.variable.zh-TW", 15);
    1: pref("font.size.fixed.zh-TW", 16);
    1: 
    1: pref("font.default.zh-HK", "sans-serif");
    1: pref("font.size.variable.zh-HK", 15);
    1: pref("font.size.fixed.zh-HK", 16);
    1: 
 8734: // Apple's Symbol is Unicode so use it
72267: pref("font.mathfont-family", "STIXNonUnicode, STIXSizeOneSym, STIXSize1, STIXGeneral, Asana Math, Symbol, DejaVu Sans, Cambria Math");
 8734: 
12239: // individual font faces to be treated as independent families
12239: // names are Postscript names of each face
12239: pref("font.single-face-list", "Osaka-Mono");
12239: 
12239: // optimization hint for fonts with localized names to be read in at startup, otherwise read in at lookup miss
12239: // names are canonical family names (typically English names)
12239: pref("font.preload-names-list", "Hiragino Kaku Gothic Pro,Hiragino Mincho Pro,STSong");
12239: 
    1: // Override the Windows settings: no menu key, meta accelerator key. ctrl for general access key in HTML/XUL
    1: // Use 17 for Ctrl, 18 for Option, 224 for Cmd, 0 for none
    1: pref("ui.key.menuAccessKey", 0);
    1: pref("ui.key.accelKey", 224);
    1: // (pinkerton, joki, saari) IE5 for mac uses Control for access keys. The HTML4 spec
    1: // suggests to use command on mac, but this really sucks (imagine someone having a "q"
    1: // as an access key and not letting you quit the app!). As a result, we've made a 
    1: // command decision 1 day before tree lockdown to change it to the control key.
    1: pref("ui.key.generalAccessKey", -1);
    1: 
    1: // If generalAccessKey is -1, use the following two prefs instead.
    1: // Use 0 for disabled, 1 for Shift, 2 for Ctrl, 4 for Alt, 8 for Meta (Cmd)
    1: // (values can be combined, e.g. 3 for Ctrl+Shift)
    1: pref("ui.key.chromeAccess", 2);
    1: pref("ui.key.contentAccess", 2);
    1: 
    1: // print_extra_margin enables platforms to specify an extra gap or margin
    1: // around the content of the page for Print Preview only
    1: pref("print.print_extra_margin", 90); // twips (90 twips is an eigth of an inch)
    1: 
18972: // See bug 404131, topmost <panel> element wins to Dashboard on MacOSX.
18972: pref("ui.panel.default_level_parent", false);
18972: 
69671: pref("ui.plugin.cancel_composition_at_input_source_changed", false);
69671: 
33016: pref("mousewheel.system_scroll_override_on_root_content.enabled", false);
33016: 
70039: // Macbook touchpad two finger pixel scrolling
70039: pref("mousewheel.enable_pixel_scrolling", true);
70039: 
    1: # XP_MACOSX
    1: #endif
    1: 
 3705: #ifdef XP_OS2
    1: 
    1: pref("ui.key.menuAccessKeyFocuses", true);
    1: 
23547: pref("font.alias-list", "sans,sans-serif,serif,monospace,Tms Rmn,Helv,Courier,Times New Roman");
 3705: 
72267: pref("font.mathfont-family", "STIXNonUnicode, STIXSizeOneSym, STIXSize1, STIXGeneral, Asana Math, DejaVu Sans");
14874: 
14874: // Languages only need lists if we have a default that might not be available.
14874: // Tms Rmn and Helv cannot be used by Thebes but the OS/2 version of FontConfig
14874: // maps them to Times New Roman and Helvetica, respectively. Those fonts and
14874: // Courier are available on OS/2 by default.
    1: 
    1: pref("font.name.serif.ar", "Tms Rmn");
    1: pref("font.name.sans-serif.ar", "Helv");
    1: pref("font.name.monospace.ar", "Courier");
    1: 
    1: pref("font.name.serif.el", "Tms Rmn");
    1: pref("font.name.sans-serif.el", "Helv");
    1: pref("font.name.monospace.el", "Courier");
    1: 
    1: pref("font.name.serif.he", "Tms Rmn");
    1: pref("font.name.sans-serif.he", "Helv");
    1: pref("font.name.monospace.he", "Courier");
    1: 
    1: pref("font.name.serif.ja", "Times New Roman WT J");
14874: pref("font.name-list.serif.ja", "Times New Roman WT J, Times New Roman WT, Times New Roman MT 30, Tms Rmn");
    1: pref("font.name.sans-serif.ja", "Helv");
14874: pref("font.name.monospace.ja", "Kochi Gothic");
14874: pref("font.name-list.monospace.ja", "Kochi Gothic, Kochi Mincho, Courier New, Courier");
    1: 
    1: pref("font.name.serif.ko", "Times New Roman WT K");
14874: pref("font.name-list.serif.ko", "Times New Roman WT K, Times New Roman WT, Times New Roman MT 30, Tms Rmn");
    1: pref("font.name.sans-serif.ko", "Helv");
    1: pref("font.name.monospace.ko", "Courier");
    1: 
    1: pref("font.name.serif.th", "Tms Rmn");
    1: pref("font.name.sans-serif.th", "Helv");
    1: pref("font.name.monospace.th", "Courier");
    1: 
    1: pref("font.name.serif.tr", "Tms Rmn");
    1: pref("font.name.sans-serif.tr", "Helv");
    1: pref("font.name.monospace.tr", "Courier");
    1: 
    1: pref("font.name.serif.x-baltic", "Tms Rmn");
    1: pref("font.name.sans-serif.x-baltic", "Helv");
    1: pref("font.name.monospace.x-baltic", "Courier");
    1: 
    1: pref("font.name.serif.x-central-euro", "Tms Rmn");
14874: pref("font.name.sans-serif.x-central-euro", "Helv");
    1: pref("font.name.monospace.x-central-euro", "Courier");
    1: 
    1: pref("font.name.serif.x-cyrillic", "Tms Rmn");
14874: pref("font.name.sans-serif.x-cyrillic", "Helv");
    1: pref("font.name.monospace.x-cyrillic", "Courier");
    1: 
14874: // Unicode fonts
14874: // Fontconfig will match substrings, so that we only need to list e.g.
14874: // Times New Roman WT and it will search for the J, SC, TC, K variants.
23547: // The DejaVu fonts are shipped with eCS, so list them first but include other
14874: // fonts that OS/2 users are likely to have.
    1: pref("font.name.serif.x-unicode", "Times New Roman MT 30");
23547: pref("font.name-list.serif.x-unicode", "DejaVu Serif, FreeSerif, Times New Roman WT, Times New Roman MT 30, Tms Rmn");
14874: pref("font.name.sans-serif.x-unicode", "Lucida Sans Unicode");
23547: pref("font.name-list.sans-serif.x-unicode", "DejaVu Sans, FreeSans, Arial Unicode, Lucida Sans Unicode, Helv");
14874: pref("font.name.monospace.x-unicode", "DejaVu Sans Mono");
23547: pref("font.name-list.monospace.x-unicode", "DejaVu Sans Mono, FreeMono, Andale Mono, Courier New, Courier");
    1: pref("font.name.fantasy.x-unicode", "Times New Roman MT 30");
23547: pref("font.name-list.fantasy.x-unicode", "DejaVu Serif, FreeSerif, Times New Roman WT, Times New Roman MT 30");
    1: pref("font.name.cursive.x-unicode", "Times New Roman MT 30");
23547: pref("font.name-list.cursive.x-unicode", "DejaVu Serif, FreeSerif, Times New Roman WT, Times New Roman MT 30");
    1: 
    1: pref("font.name.serif.x-western", "Tms Rmn");
    1: pref("font.name.sans-serif.x-western", "Helv");
    1: pref("font.name.monospace.x-western", "Courier");
    1: 
    1: pref("font.name.serif.zh-CN", "Times New Roman WT SC");
14874: pref("font.name-list.serif.zh_CN", "Times New Roman WT SC, Times New Roman MT 30, Times New Roman WT, Tms Rmn");
    1: pref("font.name.sans-serif.zh-CN", "Helv");
    1: pref("font.name.monospace.zh-CN", "Courier");
    1: 
    1: pref("font.name.serif.zh-TW", "Times New Roman WT TC");
14874: pref("font.name-list.serif.zh-TW", "Times New Roman WT TC, Times New Roman MT 30, Times New Roman WT, Tms Rmn");
    1: pref("font.name.sans-serif.zh-TW", "Helv");
    1: pref("font.name.monospace.zh-TW", "Courier");
    1: 
14874: // just copied values from zh-TW
    1: pref("font.name.serif.zh-HK", "Times New Roman WT TC");
14874: pref("font.name-list.serif.zh-HK", "Times New Roman WT TC, Times New Roman MT 30, Times New Roman WT, Tms Rmn");
    1: pref("font.name.sans-serif.zh-HK", "Helv");
    1: pref("font.name.monospace.zh-HK", "Courier");
    1: 
    1: pref("font.default", "serif");
    1: 
14874: pref("font.default.ar", "serif");
    1: pref("font.size.variable.ar", 16);
    1: pref("font.size.fixed.ar", 13);
    1: 
    1: pref("font.default.el", "serif");
    1: pref("font.size.variable.el", 16);
    1: pref("font.size.fixed.el", 13);
    1: 
14874: pref("font.default.he", "serif");
    1: pref("font.size.variable.he", 16);
    1: pref("font.size.fixed.he", 13);
    1: 
14874: pref("font.default.ja", "serif");
    1: pref("font.size.variable.ja", 16);
    1: pref("font.size.fixed.ja", 16);
    1: 
14874: pref("font.default.ko", "serif");
    1: pref("font.size.variable.ko", 16);
    1: pref("font.size.fixed.ko", 16);
    1: 
    1: pref("font.default.th", "serif");
    1: pref("font.size.variable.th", 16);
    1: pref("font.size.fixed.th", 13);
    1: 
    1: pref("font.default.tr", "serif");
    1: pref("font.size.variable.tr", 16);
    1: pref("font.size.fixed.tr", 13);
    1: 
    1: pref("font.default.x-baltic", "serif");
    1: pref("font.size.variable.x-baltic", 16);
    1: pref("font.size.fixed.x-baltic", 13);
    1: 
    1: pref("font.default.x-central-euro", "serif");
    1: pref("font.size.variable.x-central-euro", 16);
    1: pref("font.size.fixed.x-central-euro", 13);
    1: 
    1: pref("font.default.x-cyrillic", "serif");
    1: pref("font.size.variable.x-cyrillic", 16);
    1: pref("font.size.fixed.x-cyrillic", 13);
    1: 
    1: pref("font.default.x-devanagari", "serif");
    1: pref("font.size.variable.x-devanagari", 16);
    1: pref("font.size.fixed.x-devanagari", 13);
    1: 
    1: pref("font.default.x-tamil", "serif");
    1: pref("font.size.variable.x-tamil", 16);
    1: pref("font.size.fixed.x-tamil", 13);
    1: 
    1: pref("font.default.x-unicode", "serif");
    1: pref("font.size.variable.x-unicode", 16);
    1: pref("font.size.fixed.x-unicode", 13);
    1: 
    1: pref("font.default.x-western", "serif");
    1: pref("font.size.variable.x-western", 16);
    1: pref("font.size.fixed.x-western", 13);
    1: 
14874: pref("font.default.zh-CN", "serif");
    1: pref("font.size.variable.zh-CN", 16);
    1: pref("font.size.fixed.zh-CN", 16);
    1: 
14874: pref("font.default.zh-TW", "serif");
    1: pref("font.size.variable.zh-TW", 16);
    1: pref("font.size.fixed.zh-TW", 16);
    1: 
14874: pref("font.default.zh-HK", "serif");
    1: pref("font.size.variable.zh-HK", 16);
    1: pref("font.size.fixed.zh-HK", 16);
    1: 
    1: pref("netinst.profile.show_profile_wizard", true); 
    1: 
    1: pref("middlemouse.paste", true);
    1: 
    1: // override double-click word selection behavior.
    1: pref("layout.word_select.eat_space_to_next_word", true);
    1: pref("layout.word_select.stop_at_punctuation", false);
    1: 
    1: // If false, will always use closest matching size for a given
    1: // image font.  If true, will substitute a vector font for a given
    1: // image font if the given size is smaller/larger than can be handled
    1: // by the image font.
    1: pref("browser.display.substitute_vector_fonts", true);
    1: 
    1: // print_extra_margin enables platforms to specify an extra gap or margin
    1: // around the content of the page for Print Preview only
    1: pref("print.print_extra_margin", 90); // twips (90 twips is an eigth of an inch)
    1: 
    1: pref("applications.telnet", "telnetpm.exe");
    1: pref("applications.telnet.host", "%host%");
    1: pref("applications.telnet.port", "-p %port%");
    1: 
    1: pref("mail.compose.max_recycled_windows", 0);
    1: 
    1: // Disable IPv6 name lookups by default.
    1: // This is because OS/2 doesn't support IPv6
    1: pref("network.dns.disableIPv6", true);
    1: 
18972: // IMEs of OS/2 might use non-topmost windows for topmost <panel> element,
18972: // see bug 451015. If there are other problems by this value, we may need to
18972: // change this value.
18972: pref("ui.panel.default_level_parent", false);
18972: 
33016: pref("mousewheel.system_scroll_override_on_root_content.enabled", false);
33016: 
    1: # OS2
    1: #endif
    1: 
43810: #ifdef ANDROID
    1: // Handled differently under Mac/Windows
    1: pref("network.protocol-handler.warn-external.file", false);
    1: pref("browser.drag_out_of_frame_style", 1);
    1: 
    1: // Middle-mouse handling
    1: pref("middlemouse.paste", true);
    1: pref("middlemouse.contentLoadURL", true);
    1: pref("middlemouse.openNewWindow", true);
    1: pref("middlemouse.scrollbarPosition", true);
    1: 
    1: // Clipboard behavior
    1: pref("clipboard.autocopy", true);
    1: 
    1: pref("browser.urlbar.clickSelectsAll", false);
    1: 
    1: // Tab focus model bit field:
    1: // 1 focuses text controls, 2 focuses other form elements, 4 adds links.
    1: // Leave this at the default, 7, to match mozilla1.0-era user expectations.
    1: // pref("accessibility.tabfocus", 1);
    1: 
    1: // autocomplete keyboard grab workaround
    1: pref("autocomplete.grab_during_popup", true);
    1: pref("autocomplete.ungrab_during_mode_switch", true);
    1: 
    1: // Default to using the system filepicker if possible, but allow
    1: // toggling to use the XUL filepicker
    1: pref("ui.allow_platform_file_picker", true);
    1: 
    1: pref("helpers.global_mime_types_file", "/etc/mime.types");
    1: pref("helpers.global_mailcap_file", "/etc/mailcap");
    1: pref("helpers.private_mime_types_file", "~/.mime.types");
    1: pref("helpers.private_mailcap_file", "~/.mailcap");
    1: pref("java.global_java_version_file", "/etc/.java/versions");
    1: pref("java.private_java_version_file", "~/.java/versions");
    1: pref("java.default_java_location_solaris", "/usr/j2se");
    1: pref("java.default_java_location_others", "/usr/java");
    1: pref("java.java_plugin_library_name", "javaplugin_oji");
    1: pref("applications.telnet", "xterm -e telnet %h %p");
    1: pref("applications.tn3270", "xterm -e tn3270 %h");
    1: pref("applications.rlogin", "xterm -e rlogin %h");
    1: pref("applications.rlogin_with_user", "xterm -e rlogin %h -l %u");
 9584: pref("print.print_command", "lpr ${MOZ_PRINTER_NAME:+-P\"$MOZ_PRINTER_NAME\"}");
    1: pref("print.printer_list", ""); // list of printers, separated by spaces
    1: pref("print.print_reversed", false);
    1: pref("print.print_color", true);
    1: pref("print.print_landscape", false);
    1: pref("print.print_paper_size", 0);
    1: 
    1: // print_extra_margin enables platforms to specify an extra gap or margin
    1: // around the content of the page for Print Preview only
    1: pref("print.print_extra_margin", 0); // twips
    1: 
    1: pref("font.allow_double_byte_special_chars", true);
    1: // font names
    1: 
    1: pref("font.alias-list", "sans,sans-serif,serif,monospace");
    1: 
    1: // ar
    1: 
43810: pref("font.name.serif.el", "Droid Serif");
43810: pref("font.name.sans-serif.el", "Droid Sans");
43810: pref("font.name.monospace.el", "Droid Sans Mono");
43810: 
43810: pref("font.name.serif.he", "Droid Serif");
43810: pref("font.name.sans-serif.he", "Droid Sans");
43810: pref("font.name.monospace.he", "Droid Sans Mono");
43810: 
43810: pref("font.name.serif.ja", "Droid Serif");
63190: pref("font.name.sans-serif.ja", "Droid Sans Japanese");
43810: pref("font.name.monospace.ja", "Droid Sans Mono");
43810: 
43810: pref("font.name.serif.ko", "Droid Serif");
43810: pref("font.name.sans-serif.ko", "Droid Sans");
43810: pref("font.name.monospace.ko", "Droid Sans Mono");
43810: 
43810: pref("font.name.serif.th", "Droid Serif");
43810: pref("font.name.sans-serif.th", "Droid Sans");
43810: pref("font.name.monospace.th", "Droid Sans Mono");
43810: 
43810: pref("font.name.serif.tr", "Droid Serif");
43810: pref("font.name.sans-serif.tr", "Droid Sans");
43810: pref("font.name.monospace.tr", "Droid Sans Mono");
43810: 
43810: pref("font.name.serif.x-baltic", "Droid Serif");
43810: pref("font.name.sans-serif.x-baltic", "Droid Sans");
43810: pref("font.name.monospace.x-baltic", "Droid Sans Mono");
43810: 
43810: pref("font.name.serif.x-central-euro", "Droid Serif");
43810: pref("font.name.sans-serif.x-central-euro", "Droid Sans");
43810: pref("font.name.monospace.x-central-euro", "Droid Sans Mono");
43810: 
43810: pref("font.name.serif.x-cyrillic", "Droid Serif");
43810: pref("font.name.sans-serif.x-cyrillic", "Droid Sans");
43810: pref("font.name.monospace.x-cyrillic", "Droid Sans Mono");
43810: 
43810: pref("font.name.serif.x-unicode", "Droid Serif");
43810: pref("font.name.sans-serif.x-unicode", "Droid Sans");
43810: pref("font.name.monospace.x-unicode", "Droid Sans Mono");
43810: 
43810: pref("font.name.serif.x-user-def", "Droid Serif");
43810: pref("font.name.sans-serif.x-user-def", "Droid Sans");
43810: pref("font.name.monospace.x-user-def", "Droid Sans Mono");
43810: 
43810: pref("font.name.serif.x-western", "Droid Serif");
43810: pref("font.name.sans-serif.x-western", "Droid Sans");
43810: pref("font.name.monospace.x-western", "Droid Sans Mono");
43810: 
43810: pref("font.name.serif.zh-CN", "Droid Serif");
43810: pref("font.name.sans-serif.zh-CN", "Droid Sans");
43810: pref("font.name.monospace.zh-CN", "Droid Sans Mono");
    1: 
    1: // ming_uni.ttf (HKSCS-2001) 
    1: // http://www.info.gov.hk/digital21/eng/hkscs/download/uime.exe
43810: pref("font.name.serif.zh-HK", "Droid Serif");
43810: pref("font.name.sans-serif.zh-HK", "Droid Sans");
43810: pref("font.name.monospace.zh-HK", "Droid Sans Mono");
    1: 
    1: // zh-TW
    1: 
    1: pref("font.default.ar", "sans-serif");
    1: pref("font.size.variable.ar", 16);
    1: pref("font.size.fixed.ar", 12);
    1: 
43810: pref("font.default.el", "sans-serif");
    1: pref("font.size.variable.el", 16);
    1: pref("font.size.fixed.el", 12);
    1: 
    1: pref("font.default.he", "sans-serif");
    1: pref("font.size.variable.he", 16);
    1: pref("font.size.fixed.he", 12);
    1: 
    1: pref("font.default.ja", "sans-serif");
    1: pref("font.size.variable.ja", 16);
    1: pref("font.size.fixed.ja", 16);
    1: 
    1: pref("font.default.ko", "sans-serif");
    1: pref("font.size.variable.ko", 16);
    1: pref("font.size.fixed.ko", 16);
    1: 
    1: pref("font.default.th", "serif");
    1: pref("font.size.variable.th", 16);
16512: pref("font.size.fixed.th", 13);
16512: pref("font.minimum-size.th", 13);
    1: 
43810: pref("font.default.tr", "sans-serif");
    1: pref("font.size.variable.tr", 16);
    1: pref("font.size.fixed.tr", 12);
    1: 
43810: pref("font.default.x-baltic", "sans-serif");
    1: pref("font.size.variable.x-baltic", 16);
    1: pref("font.size.fixed.x-baltic", 12);
    1: 
43810: pref("font.default.x-central-euro", "sans-serif");
    1: pref("font.size.variable.x-central-euro", 16);
    1: pref("font.size.fixed.x-central-euro", 12);
    1: 
43810: pref("font.default.x-cyrillic", "sans-serif");
    1: pref("font.size.variable.x-cyrillic", 16);
    1: pref("font.size.fixed.x-cyrillic", 12);
    1: 
43810: pref("font.default.x-unicode", "sans-serif");
    1: pref("font.size.variable.x-unicode", 16);
    1: pref("font.size.fixed.x-unicode", 12);
    1: 
43810: pref("font.default.x-user-def", "sans-serif");
13885: pref("font.size.variable.x-user-def", 16);
13885: pref("font.size.fixed.x-user-def", 12);
13885: 
43810: pref("font.default.x-western", "sans-serif");
    1: pref("font.size.variable.x-western", 16);
    1: pref("font.size.fixed.x-western", 12);
    1: 
    1: pref("font.default.zh-CN", "sans-serif");
    1: pref("font.size.variable.zh-CN", 16);
    1: pref("font.size.fixed.zh-CN", 16);
    1: 
    1: pref("font.default.zh-TW", "sans-serif");
    1: pref("font.size.variable.zh-TW", 16);
    1: pref("font.size.fixed.zh-TW", 16);
    1: 
    1: pref("font.default.zh-HK", "sans-serif");
    1: pref("font.size.variable.zh-HK", 16);
    1: pref("font.size.fixed.zh-HK", 16);
    1: 
13885: pref("font.default.x-devanagari", "serif");
13885: pref("font.size.variable.x-devanagari", 16);
13885: pref("font.size.fixed.x-devanagari", 13);
13885: 
13885: pref("font.default.x-tamil", "serif");
13885: pref("font.size.variable.x-tamil", 16);
13885: pref("font.size.fixed.x-tamil", 13);
13885: 
13885: pref("font.default.x-armn", "serif");
13885: pref("font.size.variable.x-armn", 16);
13885: pref("font.size.fixed.x-armn", 13);
13885: 
13885: pref("font.default.x-beng", "serif");
13885: pref("font.size.variable.x-beng", 16);
13885: pref("font.size.fixed.x-beng", 13);
13885: 
13885: pref("font.default.x-cans", "serif");
13885: pref("font.size.variable.x-cans", 16);
13885: pref("font.size.fixed.x-cans", 13);
13885: 
13885: pref("font.default.x-ethi", "serif");
13885: pref("font.size.variable.x-ethi", 16);
13885: pref("font.size.fixed.x-ethi", 13);
13885: 
13885: pref("font.default.x-geor", "serif");
13885: pref("font.size.variable.x-geor", 16);
13885: pref("font.size.fixed.x-geor", 13);
13885: 
13885: pref("font.default.x-gujr", "serif");
13885: pref("font.size.variable.x-gujr", 16);
13885: pref("font.size.fixed.x-gujr", 13);
13885: 
13885: pref("font.default.x-guru", "serif");
13885: pref("font.size.variable.x-guru", 16);
13885: pref("font.size.fixed.x-guru", 13);
13885: 
13885: pref("font.default.x-khmr", "serif");
13885: pref("font.size.variable.x-khmr", 16);
13885: pref("font.size.fixed.x-khmr", 13);
13885: 
13885: pref("font.default.x-mlym", "serif");
13885: pref("font.size.variable.x-mlym", 16);
13885: pref("font.size.fixed.x-mlym", 13);
13885: 
13885: pref("font.default.x-orya", "serif");
13885: pref("font.size.variable.x-orya", 16);
13885: pref("font.size.fixed.x-orya", 13);
13885: 
13885: pref("font.default.x-telu", "serif");
13885: pref("font.size.variable.x-telu", 16);
13885: pref("font.size.fixed.x-telu", 13);
13885: 
13885: pref("font.default.x-knda", "serif");
13885: pref("font.size.variable.x-knda", 16);
13885: pref("font.size.fixed.x-knda", 13);
13885: 
13885: pref("font.default.x-sinh", "serif");
13885: pref("font.size.variable.x-sinh", 16);
13885: pref("font.size.fixed.x-sinh", 13);
13885: 
38930: pref("font.default.x-tibt", "serif");
38930: pref("font.size.variable.x-tibt", 16);
38930: pref("font.size.fixed.x-tibt", 13);
38930: 
    1: /* PostScript print module prefs */
    1: // pref("print.postscript.enabled",      true);
    1: pref("print.postscript.paper_size",    "letter");
    1: pref("print.postscript.orientation",   "portrait");
 9584: pref("print.postscript.print_command", "lpr ${MOZ_PRINTER_NAME:+-P\"$MOZ_PRINTER_NAME\"}");
    1: 
43761: // Setting default_level_parent to true makes the default level for popup
43761: // windows "top" instead of "parent".  On GTK2 platform, this is implemented
43761: // with override-redirect windows which is the normal way to implement
43761: // temporary popup windows.  Setting this to false would make the default
43761: // level "parent" which is implemented with managed windows.
43761: // A problem with using managed windows is that metacity sometimes deactivates
43761: // the parent window when the managed popup is shown.
18972: pref("ui.panel.default_level_parent", true);
18972: 
33016: pref("mousewheel.system_scroll_override_on_root_content.enabled", false);
33016: 
43810: # ANDROID
43810: #endif
43810: 
43810: #ifndef ANDROID
43810: #ifndef XP_MACOSX
43810: #ifdef XP_UNIX
43810: // Handled differently under Mac/Windows
43810: pref("network.protocol-handler.warn-external.file", false);
43810: pref("browser.drag_out_of_frame_style", 1);
43810: 
43810: // Middle-mouse handling
43810: pref("middlemouse.paste", true);
43810: pref("middlemouse.contentLoadURL", true);
43810: pref("middlemouse.openNewWindow", true);
43810: pref("middlemouse.scrollbarPosition", true);
43810: 
43810: // Clipboard behavior
43810: pref("clipboard.autocopy", true);
43810: 
43810: pref("browser.urlbar.clickSelectsAll", false);
43810: 
43810: // Tab focus model bit field:
43810: // 1 focuses text controls, 2 focuses other form elements, 4 adds links.
43810: // Leave this at the default, 7, to match mozilla1.0-era user expectations.
43810: // pref("accessibility.tabfocus", 1);
43810: 
43810: // autocomplete keyboard grab workaround
43810: pref("autocomplete.grab_during_popup", true);
43810: pref("autocomplete.ungrab_during_mode_switch", true);
43810: 
43810: // Default to using the system filepicker if possible, but allow
43810: // toggling to use the XUL filepicker
43810: pref("ui.allow_platform_file_picker", true);
43810: 
43810: pref("helpers.global_mime_types_file", "/etc/mime.types");
43810: pref("helpers.global_mailcap_file", "/etc/mailcap");
43810: pref("helpers.private_mime_types_file", "~/.mime.types");
43810: pref("helpers.private_mailcap_file", "~/.mailcap");
43810: pref("java.global_java_version_file", "/etc/.java/versions");
43810: pref("java.private_java_version_file", "~/.java/versions");
43810: pref("java.default_java_location_solaris", "/usr/j2se");
43810: pref("java.default_java_location_others", "/usr/java");
43810: pref("java.java_plugin_library_name", "javaplugin_oji");
43810: pref("applications.telnet", "xterm -e telnet %h %p");
43810: pref("applications.tn3270", "xterm -e tn3270 %h");
43810: pref("applications.rlogin", "xterm -e rlogin %h");
43810: pref("applications.rlogin_with_user", "xterm -e rlogin %h -l %u");
43810: pref("print.print_command", "lpr ${MOZ_PRINTER_NAME:+-P\"$MOZ_PRINTER_NAME\"}");
43810: pref("print.printer_list", ""); // list of printers, separated by spaces
43810: pref("print.print_reversed", false);
43810: pref("print.print_color", true);
43810: pref("print.print_landscape", false);
43810: pref("print.print_paper_size", 0);
43810: 
43810: // print_extra_margin enables platforms to specify an extra gap or margin
43810: // around the content of the page for Print Preview only
43810: pref("print.print_extra_margin", 0); // twips
43810: 
43810: pref("font.allow_double_byte_special_chars", true);
43810: // font names
43810: 
43810: pref("font.alias-list", "sans,sans-serif,serif,monospace");
43810: 
43810: // ar
43810: 
43810: pref("font.name.serif.el", "serif");
43810: pref("font.name.sans-serif.el", "sans-serif");
43810: pref("font.name.monospace.el", "monospace");
43810: 
43810: pref("font.name.serif.he", "serif");
43810: pref("font.name.sans-serif.he", "sans-serif");
43810: pref("font.name.monospace.he", "monospace");
43810: 
43810: pref("font.name.serif.ja", "serif");
43810: pref("font.name.sans-serif.ja", "sans-serif");
43810: pref("font.name.monospace.ja", "monospace");
43810: 
43810: pref("font.name.serif.ko", "serif");
43810: pref("font.name.sans-serif.ko", "sans-serif");
43810: pref("font.name.monospace.ko", "monospace");
43810: 
43810: pref("font.name.serif.th", "serif");
43810: pref("font.name.sans-serif.th", "sans-serif");
43810: pref("font.name.monospace.th", "monospace");
43810: 
43810: pref("font.name.serif.tr", "serif");
43810: pref("font.name.sans-serif.tr", "sans-serif");
43810: pref("font.name.monospace.tr", "monospace");
43810: 
43810: pref("font.name.serif.x-baltic", "serif");
43810: pref("font.name.sans-serif.x-baltic", "sans-serif");
43810: pref("font.name.monospace.x-baltic", "monospace");
43810: 
43810: pref("font.name.serif.x-central-euro", "serif");
43810: pref("font.name.sans-serif.x-central-euro", "sans-serif");
43810: pref("font.name.monospace.x-central-euro", "monospace");
43810: 
43810: pref("font.name.serif.x-cyrillic", "serif");
43810: pref("font.name.sans-serif.x-cyrillic", "sans-serif");
43810: pref("font.name.monospace.x-cyrillic", "monospace");
43810: 
43810: pref("font.name.serif.x-unicode", "serif");
43810: pref("font.name.sans-serif.x-unicode", "sans-serif");
43810: pref("font.name.monospace.x-unicode", "monospace");
43810: 
43810: pref("font.name.serif.x-user-def", "serif");
43810: pref("font.name.sans-serif.x-user-def", "sans-serif");
43810: pref("font.name.monospace.x-user-def", "monospace");
43810: 
43810: pref("font.name.serif.x-western", "serif");
43810: pref("font.name.sans-serif.x-western", "sans-serif");
43810: pref("font.name.monospace.x-western", "monospace");
43810: 
43810: pref("font.name.serif.zh-CN", "serif");
43810: pref("font.name.sans-serif.zh-CN", "sans-serif");
43810: pref("font.name.monospace.zh-CN", "monospace");
43810: 
43810: // ming_uni.ttf (HKSCS-2001) 
43810: // http://www.info.gov.hk/digital21/eng/hkscs/download/uime.exe
43810: pref("font.name.serif.zh-HK", "serif");
43810: pref("font.name.sans-serif.zh-HK", "sans-serif");
43810: pref("font.name.monospace.zh-HK", "monospace");
43810: 
43810: // zh-TW
43810: 
43810: pref("font.default.ar", "sans-serif");
43810: pref("font.size.variable.ar", 16);
43810: pref("font.size.fixed.ar", 12);
43810: 
43810: pref("font.default.el", "serif");
43810: pref("font.size.variable.el", 16);
43810: pref("font.size.fixed.el", 12);
43810: 
43810: pref("font.default.he", "sans-serif");
43810: pref("font.size.variable.he", 16);
43810: pref("font.size.fixed.he", 12);
43810: 
43810: pref("font.default.ja", "sans-serif");
43810: pref("font.size.variable.ja", 16);
43810: pref("font.size.fixed.ja", 16);
43810: 
43810: pref("font.default.ko", "sans-serif");
43810: pref("font.size.variable.ko", 16);
43810: pref("font.size.fixed.ko", 16);
43810: 
43810: pref("font.default.th", "serif");
43810: pref("font.size.variable.th", 16);
43810: pref("font.size.fixed.th", 13);
43810: pref("font.minimum-size.th", 13);
43810: 
43810: pref("font.default.tr", "serif");
43810: pref("font.size.variable.tr", 16);
43810: pref("font.size.fixed.tr", 12);
43810: 
43810: pref("font.default.x-baltic", "serif");
43810: pref("font.size.variable.x-baltic", 16);
43810: pref("font.size.fixed.x-baltic", 12);
43810: 
43810: pref("font.default.x-central-euro", "serif");
43810: pref("font.size.variable.x-central-euro", 16);
43810: pref("font.size.fixed.x-central-euro", 12);
43810: 
43810: pref("font.default.x-cyrillic", "serif");
43810: pref("font.size.variable.x-cyrillic", 16);
43810: pref("font.size.fixed.x-cyrillic", 12);
43810: 
43810: pref("font.default.x-unicode", "serif");
43810: pref("font.size.variable.x-unicode", 16);
43810: pref("font.size.fixed.x-unicode", 12);
43810: 
43810: pref("font.default.x-user-def", "serif");
43810: pref("font.size.variable.x-user-def", 16);
43810: pref("font.size.fixed.x-user-def", 12);
43810: 
43810: pref("font.default.x-western", "serif");
43810: pref("font.size.variable.x-western", 16);
43810: pref("font.size.fixed.x-western", 12);
43810: 
43810: pref("font.default.zh-CN", "sans-serif");
43810: pref("font.size.variable.zh-CN", 16);
43810: pref("font.size.fixed.zh-CN", 16);
43810: 
43810: pref("font.default.zh-TW", "sans-serif");
43810: pref("font.size.variable.zh-TW", 16);
43810: pref("font.size.fixed.zh-TW", 16);
43810: 
43810: pref("font.default.zh-HK", "sans-serif");
43810: pref("font.size.variable.zh-HK", 16);
43810: pref("font.size.fixed.zh-HK", 16);
43810: 
43810: pref("font.default.x-devanagari", "serif");
43810: pref("font.size.variable.x-devanagari", 16);
43810: pref("font.size.fixed.x-devanagari", 13);
43810: 
43810: pref("font.default.x-tamil", "serif");
43810: pref("font.size.variable.x-tamil", 16);
43810: pref("font.size.fixed.x-tamil", 13);
43810: 
43810: pref("font.default.x-armn", "serif");
43810: pref("font.size.variable.x-armn", 16);
43810: pref("font.size.fixed.x-armn", 13);
43810: 
43810: pref("font.default.x-beng", "serif");
43810: pref("font.size.variable.x-beng", 16);
43810: pref("font.size.fixed.x-beng", 13);
43810: 
43810: pref("font.default.x-cans", "serif");
43810: pref("font.size.variable.x-cans", 16);
43810: pref("font.size.fixed.x-cans", 13);
43810: 
43810: pref("font.default.x-ethi", "serif");
43810: pref("font.size.variable.x-ethi", 16);
43810: pref("font.size.fixed.x-ethi", 13);
43810: 
43810: pref("font.default.x-geor", "serif");
43810: pref("font.size.variable.x-geor", 16);
43810: pref("font.size.fixed.x-geor", 13);
43810: 
43810: pref("font.default.x-gujr", "serif");
43810: pref("font.size.variable.x-gujr", 16);
43810: pref("font.size.fixed.x-gujr", 13);
43810: 
43810: pref("font.default.x-guru", "serif");
43810: pref("font.size.variable.x-guru", 16);
43810: pref("font.size.fixed.x-guru", 13);
43810: 
43810: pref("font.default.x-khmr", "serif");
43810: pref("font.size.variable.x-khmr", 16);
43810: pref("font.size.fixed.x-khmr", 13);
43810: 
43810: pref("font.default.x-mlym", "serif");
43810: pref("font.size.variable.x-mlym", 16);
43810: pref("font.size.fixed.x-mlym", 13);
43810: 
43810: pref("font.default.x-orya", "serif");
43810: pref("font.size.variable.x-orya", 16);
43810: pref("font.size.fixed.x-orya", 13);
43810: 
43810: pref("font.default.x-telu", "serif");
43810: pref("font.size.variable.x-telu", 16);
43810: pref("font.size.fixed.x-telu", 13);
43810: 
43810: pref("font.default.x-knda", "serif");
43810: pref("font.size.variable.x-knda", 16);
43810: pref("font.size.fixed.x-knda", 13);
43810: 
43810: pref("font.default.x-sinh", "serif");
43810: pref("font.size.variable.x-sinh", 16);
43810: pref("font.size.fixed.x-sinh", 13);
43810: 
43810: pref("font.default.x-tibt", "serif");
43810: pref("font.size.variable.x-tibt", 16);
43810: pref("font.size.fixed.x-tibt", 13);
43810: 
43810: /* PostScript print module prefs */
43810: // pref("print.postscript.enabled",      true);
43810: pref("print.postscript.paper_size",    "letter");
43810: pref("print.postscript.orientation",   "portrait");
43810: pref("print.postscript.print_command", "lpr ${MOZ_PRINTER_NAME:+-P\"$MOZ_PRINTER_NAME\"}");
43810: 
43810: // On GTK2 platform, we should use topmost window level for the default window
43810: // level of <panel> element of XUL. GTK2 has only two window types. One is
43810: // normal top level window, other is popup window. The popup window is always
43810: // topmost window level, therefore, we are using normal top level window for
43810: // non-topmost panel, but it is pretty hacky. On some Window Managers, we have
43810: // 2 problems:
43810: // 1. The non-topmost panel steals focus from its parent window at showing.
43810: // 2. The parent of non-topmost panel is not activated when the panel is hidden.
43810: // So, we have no reasons we should use non-toplevel window for popup.
43810: pref("ui.panel.default_level_parent", true);
43810: 
43810: pref("mousewheel.system_scroll_override_on_root_content.enabled", false);
43810: 
    1: # XP_UNIX
    1: #endif
    1: #endif
43810: #endif
    1: 
    1: #if OS_ARCH==AIX
    1: 
    1: // Override default Japanese fonts
    1: pref("font.name.serif.ja", "dt-interface system-jisx0208.1983-0");
    1: pref("font.name.sans-serif.ja", "dt-interface system-jisx0208.1983-0");
    1: pref("font.name.monospace.ja", "dt-interface user-jisx0208.1983-0");
    1: 
    1: // Override default Cyrillic fonts
    1: pref("font.name.serif.x-cyrillic", "dt-interface system-iso8859-5");
    1: pref("font.name.sans-serif.x-cyrillic", "dt-interface system-iso8859-5");
    1: pref("font.name.monospace.x-cyrillic", "dt-interface user-iso8859-5");
    1: 
    1: // Override default Unicode fonts
    1: pref("font.name.serif.x-unicode", "dt-interface system-ucs2.cjk_japan-0");
    1: pref("font.name.sans-serif.x-unicode", "dt-interface system-ucs2.cjk_japan-0");
    1: pref("font.name.monospace.x-unicode", "dt-interface user-ucs2.cjk_japan-0");
    1: 
    1: # AIX
    1: #endif
    1: 
    1: #ifdef SOLARIS
    1: 
 9584: pref("print.postscript.print_command", "lp -c -s ${MOZ_PRINTER_NAME:+-d\"$MOZ_PRINTER_NAME\"}");
 9584: pref("print.print_command", "lp -c -s ${MOZ_PRINTER_NAME:+-d\"$MOZ_PRINTER_NAME\"}");
    1: 
    1: # Solaris
    1: #endif
 2261: 
 2261: // Login Manager prefs
 2261: pref("signon.rememberSignons",              true);
 2261: pref("signon.SignonFileName",               "signons.txt"); // obsolete 
 8773: pref("signon.SignonFileName2",              "signons2.txt"); // obsolete
16723: pref("signon.SignonFileName3",              "signons3.txt"); // obsolete
 2261: pref("signon.autofillForms",                true);
40578: pref("signon.autologin.proxy",              false);
40578: pref("signon.debug",                        false);
 7187: 
29403: // Satchel (Form Manager) prefs
30674: pref("browser.formfill.debug",            false);
29403: pref("browser.formfill.enable",           true);
41616: pref("browser.formfill.expire_days",      180);
40579: pref("browser.formfill.saveHttpsForms",   true);
30674: pref("browser.formfill.agedWeight",       2);
31007: pref("browser.formfill.bucketSize",       1);
30674: pref("browser.formfill.maxTimeGroupings", 25);
30674: pref("browser.formfill.timeGroupingSize", 604800);
31007: pref("browser.formfill.boundaryWeight",   25);
31007: pref("browser.formfill.prefixWeight",     5);
29403: 
 7187: // Zoom prefs
11660: pref("browser.zoom.full", false);
12991: pref("zoom.minPercent", 30);
11660: pref("zoom.maxPercent", 300);
12991: pref("toolkit.zoomManager.zoomValues", ".3,.5,.67,.8,.9,1,1.1,1.2,1.33,1.5,1.7,2,2.4,3");
18827: 
18827: // Image cache prefs
18827: // The maximum size, in bytes, of the decoded images we cache
23937: pref("image.cache.size", 5242880);
18827: // A weight, from 0-1000, to place on time when comparing to size.
18827: // Size is given a weight of 1000 - timeweight.
18827: pref("image.cache.timeweight", 500);
24785: 
30324: // The default Accept header sent for images loaded over HTTP(S)
30324: pref("image.http.accept", "image/png,image/*;q=0.8,*/*;q=0.5");
30324: 
46172: //
46172: // Image memory management prefs
46172: //
46172: 
46172: // Discards inactive image frames and re-decodes them on demand from
46172: // compressed data.
51158: pref("image.mem.discardable", true);
46172: 
71843: // Prevents images from automatically being decoded on load, instead allowing
71843: // them to be decoded on demand when they are drawn.
78640: pref("image.mem.decodeondraw", true);
46172: 
47317: // Minimum timeout for image discarding (in milliseconds). The actual time in
47317: // which an image must inactive for it to be discarded will vary between this
47317: // value and twice this value.
72205: //
72205: // This used to be 120 seconds, but having it that high causes our working
72205: // set to grow very large. Switching it back to 10 seconds will hopefully
72205: // be better.
72205: pref("image.mem.min_discard_timeout_ms", 10000);
47317: 
51590: // Chunk size for calls to the image decoders
74144: pref("image.mem.decode_bytes_at_a_time", 4096);
51590: 
51590: // The longest time we can spend in an iteration of an async decode
74144: pref("image.mem.max_ms_before_yield", 5);
51590: 
80141: // The maximum source data size for which we auto sync decode
80141: pref("image.mem.max_bytes_for_sync_decode", 150000);
80141: 
32891: // WebGL prefs
61566: pref("webgl.force-enabled", false);
61566: pref("webgl.disabled", false);
49080: pref("webgl.shader_validator", true);
51417: pref("webgl.force_osmesa", false);
32891: pref("webgl.osmesalib", "");
53695: pref("webgl.verbose", false);
61567: pref("webgl.prefer-native-gl", false);
80338: pref("webgl.min_capability_mode", false);
80338: pref("webgl.disable-extensions", false);
32836: 
24785: #ifdef XP_WIN
24785: // The default TCP send window on Windows is too small, and autotuning only occurs on receive
24785: pref("network.tcp.sendbuffer", 131072);
24785: #endif
28051: 
60324: // Whether to disable acceleration for all widgets.
73594: #ifdef MOZ_E10S_COMPAT
73594: pref("layers.acceleration.disabled", true);
73594: #else
60324: pref("layers.acceleration.disabled", false);
73594: #endif
60324: 
60324: // Whether to force acceleration on, ignoring blacklists.
60324: pref("layers.acceleration.force-enabled", false);
42226: 
77661: pref("layers.acceleration.draw-fps", false);
77661: 
42612: #ifdef XP_WIN
51656: // Whether to disable the automatic detection and use of direct2d.
73594: #ifdef MOZ_E10S_COMPAT
73594: pref("gfx.direct2d.disabled", true);
73594: #else
51656: pref("gfx.direct2d.disabled", false);
73594: #endif
53984: // Whether to attempt to enable Direct2D regardless of automatic detection or
53984: // blacklisting
53984: pref("gfx.direct2d.force-enabled", false);
51656: 
51655: pref("layers.prefer-opengl", false);
56118: pref("layers.prefer-d3d9", false);
42612: #endif
42612: 
28051: // Enable/Disable the geolocation API for content
28051: pref("geo.enabled", true);
29805: 
39098: // Enable/Disable the orientation API for content
72018: pref("device.motion.enabled", true);
39098: 
29805: // Enable/Disable HTML5 parser
63185: pref("html5.parser.enable", true);
37622: // Toggle which thread the HTML5 parser uses for stream parsing
34980: pref("html5.offmainthread", true);
41395: // Time in milliseconds between the time a network buffer is seen and the 
41395: // timer firing when the timer hasn't fired previously in this parse in the 
41395: // off-the-main-thread HTML5 parser.
41736: pref("html5.flushtimer.initialdelay", 120);
41395: // Time in milliseconds between the time a network buffer is seen and the 
41395: // timer firing when the timer has already fired previously in this parse.
41395: pref("html5.flushtimer.subsequentdelay", 120);
37802: 
37802: // Push/Pop/Replace State prefs
37802: pref("browser.history.allowPushState", true);
37802: pref("browser.history.allowReplaceState", true);
37802: pref("browser.history.allowPopState", true);
37802: pref("browser.history.maxStateObjectSize", 655360);
41031: 
42079: // XPInstall prefs
42079: pref("xpinstall.whitelist.required", true);
52422: pref("extensions.alwaysUnpack", false);
42079: 
41031: pref("network.buffer.cache.count", 24);
42514: pref("network.buffer.cache.size",  32768);
59810: 
59810: // Desktop Notification
59810: pref("notification.feature.enabled", false);
74749: 
77092: // Alert sliding effect
77092: pref("alerts.slideIncrement", 1);
77092: pref("alerts.slideIncrementTime", 10);
77092: pref("alerts.totalOpenTime", 4000);
77092: pref("alerts.disableSlidingEffect", false);
77092: 
77843: // DOM full-screen API.
77843: pref("full-screen-api.enabled", false);
77848: pref("full-screen-api.allow-trusted-requests-only", true);
77849: pref("full-screen-api.key-input-restricted", true);
77843: 
77930: // Time limit, in milliseconds, for nsEventStateManager::IsHandlingUserInput().
77930: // Used to detect long running handlers of user-generated events.
77930: pref("dom.event.handling-user-input-time-limit", 1000);
77930:  
74749: //3D Transforms
79545: pref("layout.3d-transforms.enabled", true);

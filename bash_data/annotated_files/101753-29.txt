72423: /* -*- Mode: C++; tab-width: 20; indent-tabs-mode: nil; c-basic-offset: 2 -*-
98983:  * This Source Code Form is subject to the terms of the Mozilla Public
98983:  * License, v. 2.0. If a copy of the MPL was not distributed with this
98983:  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
72423: 
72423: #include "ScaledFontDWrite.h"
72423: #include "PathD2D.h"
72423: 
72423: #include <vector>
72423: 
72423: namespace mozilla {
72423: namespace gfx {
72423: 
72423: TemporaryRef<Path>
72423: ScaledFontDWrite::GetPathForGlyphs(const GlyphBuffer &aBuffer, const DrawTarget *aTarget)
72423: {
72423:   if (aTarget->GetType() != BACKEND_DIRECT2D) {
72423:     // For now we only support Direct2D.
72423:     return NULL;
72423:   }
72423: 
72423:   RefPtr<PathBuilder> pathBuilder = aTarget->CreatePathBuilder();
72423: 
72423:   PathBuilderD2D *pathBuilderD2D =
72423:     static_cast<PathBuilderD2D*>(pathBuilder.get());
72423: 
94392:   CopyGlyphsToSink(aBuffer, pathBuilderD2D->GetSink());
94392: 
94392:   return pathBuilder->Finish();
94392: }
94392: 
94392: void
94392: ScaledFontDWrite::CopyGlyphsToBuilder(const GlyphBuffer &aBuffer, PathBuilder *aBuilder)
94392: {
94392:   // XXX - Check path builder type!
94392:   PathBuilderD2D *pathBuilderD2D =
94392:     static_cast<PathBuilderD2D*>(aBuilder);
94392: 
94392:   CopyGlyphsToSink(aBuffer, pathBuilderD2D->GetSink());
94392: }
94392: 
94392: void
94392: ScaledFontDWrite::CopyGlyphsToSink(const GlyphBuffer &aBuffer, ID2D1GeometrySink *aSink)
94392: {
72423:   std::vector<UINT16> indices;
72423:   std::vector<FLOAT> advances;
72423:   std::vector<DWRITE_GLYPH_OFFSET> offsets;
72423:   indices.resize(aBuffer.mNumGlyphs);
72423:   advances.resize(aBuffer.mNumGlyphs);
72423:   offsets.resize(aBuffer.mNumGlyphs);
72423: 
72423:   memset(&advances.front(), 0, sizeof(FLOAT) * aBuffer.mNumGlyphs);
72423:   for (unsigned int i = 0; i < aBuffer.mNumGlyphs; i++) {
72423:     indices[i] = aBuffer.mGlyphs[i].mIndex;
72423:     offsets[i].advanceOffset = aBuffer.mGlyphs[i].mPosition.x;
72423:     offsets[i].ascenderOffset = -aBuffer.mGlyphs[i].mPosition.y;
72423:   }
72423: 
72423:   mFontFace->GetGlyphRunOutline(mSize, &indices.front(), &advances.front(),
72423:                                 &offsets.front(), aBuffer.mNumGlyphs,
94392:                                 FALSE, FALSE, aSink);
72423: }
72423: 
72423: }
72423: }

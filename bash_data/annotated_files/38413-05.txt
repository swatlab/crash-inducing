    1: /* -*- Mode: C; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
    1: /* ***** BEGIN LICENSE BLOCK *****
    1:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
    1:  *
    1:  * The contents of this file are subject to the Mozilla Public License Version
    1:  * 1.1 (the "License"); you may not use this file except in compliance with
    1:  * the License. You may obtain a copy of the License at
    1:  * http://www.mozilla.org/MPL/
    1:  *
    1:  * Software distributed under the License is distributed on an "AS IS" basis,
    1:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
    1:  * for the specific language governing rights and limitations under the
    1:  * License.
    1:  *
    1:  * The Original Code is mozilla.org code.
    1:  *
    1:  * The Initial Developer of the Original Code is
    1:  * Netscape Communications Corporation.
    1:  * Portions created by the Initial Developer are Copyright (C) 1998
    1:  * the Initial Developer. All Rights Reserved.
    1:  *
    1:  * Contributor(s):
    1:  *
    1:  * Alternatively, the contents of this file may be used under the terms of
    1:  * either the GNU General Public License Version 2 or later (the "GPL"), or
    1:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
    1:  * in which case the provisions of the GPL or the LGPL are applicable instead
    1:  * of those above. If you wish to allow use of your version of this file only
    1:  * under the terms of either the GPL or the LGPL, and not to allow others to
    1:  * use your version of this file under the terms of the MPL, indicate your
    1:  * decision by deleting the provisions above and replace them with the notice
    1:  * and other provisions required by the GPL or the LGPL. If you do not delete
    1:  * the provisions above, a recipient may use your version of this file under
    1:  * the terms of any one of the MPL, the GPL or the LGPL.
    1:  *
    1:  * ***** END LICENSE BLOCK ***** */
    1: 
    1: #include "nsBig5Prober.h"
    1: 
    1: void  nsBig5Prober::Reset(void)
    1: {
    1:   mCodingSM->Reset(); 
    1:   mState = eDetecting;
38413:   mDistributionAnalyser.Reset(mIsPreferredLanguage);
    1: }
    1: 
    1: nsProbingState nsBig5Prober::HandleData(const char* aBuf, PRUint32 aLen)
    1: {
    1:   nsSMState codingState;
    1: 
    1:   for (PRUint32 i = 0; i < aLen; i++)
    1:   {
    1:     codingState = mCodingSM->NextState(aBuf[i]);
    1:     if (codingState == eItsMe)
    1:     {
    1:       mState = eFoundIt;
    1:       break;
    1:     }
    1:     if (codingState == eStart)
    1:     {
    1:       PRUint32 charLen = mCodingSM->GetCurrentCharLen();
    1: 
    1:       if (i == 0)
    1:       {
    1:         mLastChar[1] = aBuf[0];
    1:         mDistributionAnalyser.HandleOneChar(mLastChar, charLen);
    1:       }
    1:       else
    1:         mDistributionAnalyser.HandleOneChar(aBuf+i-1, charLen);
    1:     }
    1:   }
    1: 
    1:   mLastChar[0] = aBuf[aLen-1];
    1: 
    1:   if (mState == eDetecting)
    1:     if (mDistributionAnalyser.GotEnoughData() && GetConfidence() > SHORTCUT_THRESHOLD)
    1:       mState = eFoundIt;
    1: 
    1:   return mState;
    1: }
    1: 
    1: float nsBig5Prober::GetConfidence(void)
    1: {
38413:   float distribCf = mDistributionAnalyser.GetConfidence();
    1: 
    1:   return (float)distribCf;
    1: }
    1: 

78408: /* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
78408: /* ***** BEGIN LICENSE BLOCK *****
78408:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
78408:  *
78408:  * The contents of this file are subject to the Mozilla Public License Version
78408:  * 1.1 (the "License"); you may not use this file except in compliance with
78408:  * the License. You may obtain a copy of the License at
78408:  * http://www.mozilla.org/MPL/
78408:  *
78408:  * Software distributed under the License is distributed on an "AS IS" basis,
78408:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
78408:  * for the specific language governing rights and limitations under the
78408:  * License.
78408:  *
86944:  * The Original Code is Url Classifier code.
78408:  *
78408:  * The Initial Developer of the Original Code is
78408:  * the Mozilla Foundation.
78408:  * Portions created by the Initial Developer are Copyright (C) 2011
78408:  * the Initial Developer. All Rights Reserved.
78408:  *
78408:  * Contributor(s):
78408:  *   Gian-Carlo Pascutto <gpascutto@mozilla.com>
78408:  *
78408:  * Alternatively, the contents of this file may be used under the terms of
78408:  * either the GNU General Public License Version 2 or later (the "GPL"), or
78408:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
78408:  * in which case the provisions of the GPL or the LGPL are applicable instead
78408:  * of those above. If you wish to allow use of your version of this file only
78408:  * under the terms of either the GPL or the LGPL, and not to allow others to
78408:  * use your version of this file under the terms of the MPL, indicate your
78408:  * decision by deleting the provisions above and replace them with the notice
78408:  * and other provisions required by the GPL or the LGPL. If you do not delete
78408:  * the provisions above, a recipient may use your version of this file under
78408:  * the terms of any one of the MPL, the GPL or the LGPL.
78408:  *
78408:  * ***** END LICENSE BLOCK ***** */
78408: 
78085: #include "nsISupports.idl"
78090: #include "nsIFile.idl"
78085: 
78085: interface nsIArray;
78085: 
86944: // Note that the PrefixSet name is historical and we do properly support
86944: // duplicated values, so it's really a Prefix Trie.
86944: // All methods are thread-safe.
86944: 
86944: [scriptable, uuid(519c8519-0f30-426b-bb7b-c400ba0318e2)]
78085: interface nsIUrlClassifierPrefixSet : nsISupports
78085: {
86944:   // Fills the PrefixSet with the given array of prefixes.
86944:   // Can send an empty Array to clear the tree. A truly "empty tree"
86944:   // cannot be represented, so put a sentinel value if that is required
86944:   // Requires array to be sorted.
78085:   void setPrefixes([const, array, size_is(aLength)] in unsigned long aPrefixes,
78085:                    in unsigned long aLength);
86944:   // Do a lookup in the PrefixSet, return whether the value is present.
86944:   // If aReady is set, we will block until there are any entries.
86944:   // If not set, we will return in aReady whether we were ready or not.
78092:   boolean probe(in unsigned long aPrefix, in unsigned long aKey,
78092:                 inout boolean aReady);
86944:   // Return the key that is used to randomize the collisions in the prefixes.
78092:   PRUint32 getKey();
78090:   boolean isEmpty();
78090:   void loadFromFile(in nsIFile aFile);
78090:   void storeToFile(in nsIFile aFile);
78085: };

101309: /* -*- Mode: Objective-C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
101309: /* vim: set ts=2 et sw=2 tw=80: */
101309: /* This Source Code Form is subject to the terms of the Mozilla Public
101309:  * License, v. 2.0. If a copy of the MPL was not distributed with this
101309:  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
101309: 
101309: #import <Cocoa/Cocoa.h>
101309: 
101309: #include "ApplicationAccessibleWrap.h"
106800: #include "nsAccUtils.h"
101309: 
101309: #include "nsAppShell.h"
101309: 
101309: namespace mozilla {
101309: namespace a11y {
101309: 
102366: // Mac a11y whitelisting
101309: static bool sA11yShouldBeEnabled = false;
101309: 
101309: bool
101309: ShouldA11yBeEnabled()
101309: {
102366:   EPlatformDisabledState disabledState = PlatformDisabledState();
102366:   return (disabledState == ePlatformIsForceEnabled) || ((disabledState == ePlatformIsEnabled) && sA11yShouldBeEnabled);
101309: }
101309: 
101309: }
101309: }
101309: 
101309: @interface GeckoNSApplication(a11y)
101309: -(void)accessibilitySetValue:(id)value forAttribute:(NSString*)attribute;
101309: @end
101309: 
101309: @implementation GeckoNSApplication(a11y)
101309: 
101309: -(void)accessibilitySetValue:(id)value forAttribute:(NSString*)attribute
101309: {
101309:   if ([attribute isEqualToString:@"AXEnhancedUserInterface"])
101309:     mozilla::a11y::sA11yShouldBeEnabled = ([value intValue] == 1);
101309: 
101309:   return [super accessibilitySetValue:value forAttribute:attribute];
101309: }
101309: 
101309: @end
101309: 

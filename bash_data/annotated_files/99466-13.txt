58092: /* -*- Mode: C++; c-basic-offset: 2; indent-tabs-mode: nil; tab-width: 8 -*- */
58092: /* vim: set sw=4 ts=8 et tw=80 ft=cpp : */
98983: /* This Source Code Form is subject to the terms of the Mozilla Public
98983:  * License, v. 2.0. If a copy of the MPL was not distributed with this
98983:  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
58092: 
58092: include protocol PContent;
58092: 
58092: using mozilla::null_t;
58092: 
58092: namespace mozilla {
58092: namespace dom {
58092: 
58092: struct ItemData
58092: {
58092:   nsString value;
79445:   bool secure;
58092: };
58092: 
58092: // A cross-process GetValue result -- either null, or containing the parameters
58092: // with which to initialize an nsIDOMStorageItem.
58092: union StorageItem
58092: {
58092:   null_t;
58092:   ItemData;
58092: };
58092: 
58092: // This protocol is little more than a thin wrapper around the DOMStorageBase
58092: // class in nsDOMStorage.h.  The child implementation simply forwards the
58092: // arguments for any given call to the parent, and returns the result.
58092: sync protocol PStorage
58092: {
58092:   manager PContent;
58092: 
58092: parent:
58092:   __delete__();
58092: 
99466:   Init(bool useDB, bool canUseChromePersist, bool sessionOnly, nsCString domain,
99466:        nsCString scopeDBKey, nsCString quotaDomainDBKey,
58092:        nsCString quotaETLDplus1DomainDBKey, PRUint32 storageType);
58092:   
58092:   sync GetKeys(bool callerSecure)
58092:       returns (nsString[] keys);
60073:   sync GetLength(bool callerSecure, bool sessionOnly)
58092:       returns (PRUint32 length, nsresult rv);
60073:   sync GetKey(bool callerSecure, bool sessionOnly, PRUint32 index)
58092:       returns (nsString key, nsresult rv);
60073:   sync GetValue(bool callerSecure, bool sessionOnly, nsString key)
58092:       returns (StorageItem item, nsresult rv);
60073:   sync SetValue(bool callerSecure, bool sessionOnly, nsString key, nsString data)
58092:       returns (nsString oldValue, nsresult rv);
60073:   sync RemoveValue(bool callerSecure, bool sessionOnly, nsString key)
58092:       returns (nsString oldValue, nsresult rv);
60073:   sync Clear(bool callerSecure, bool sessionOnly)
58092:       returns (PRInt32 oldCount, nsresult rv);
58092: 
58092:   sync GetDBValue(nsString key)
79445:       returns (nsString value, bool secure, nsresult rv);
79445:   sync SetDBValue(nsString key, nsString value, bool secure)
58092:       returns (nsresult rv);
79445:   sync SetSecure(nsString key, bool secure)
58092:       returns (nsresult rv);
58092: };
58092: 
58092: }
58092: }

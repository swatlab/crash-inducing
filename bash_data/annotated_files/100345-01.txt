 98983: /* This Source Code Form is subject to the terms of the Mozilla Public
 98983:  * License, v. 2.0. If a copy of the MPL was not distributed with this
 98983:  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 64692: 
 64692: #filter substitution
 64692: 
 98890: // For browser.xml binding
 98890: //
 98890: // cacheRatio* is a ratio that determines the amount of pixels to cache. The
 98890: // ratio is multiplied by the viewport width or height to get the displayport's
 98890: // width or height, respectively.
 98890: //
 98890: // (divide integer value by 1000 to get the ratio)
 98890: //
 98890: // For instance: cachePercentageWidth is 1500
 98890: //               viewport height is 500
 98890: //               => display port height will be 500 * 1.5 = 750
 98890: //
 98890: pref("toolkit.browser.cacheRatioWidth", 2000);
 98890: pref("toolkit.browser.cacheRatioHeight", 3000);
 98890: 
 67273: // How long before a content view (a handle to a remote scrollable object)
 67273: // expires.
 67273: pref("toolkit.browser.contentViewExpire", 3000);
 66620: 
 64692: pref("toolkit.defaultChromeURI", "chrome://browser/content/browser.xul");
 64742: pref("browser.chromeURL", "chrome://browser/content/");
 64692: 
 66068: pref("browser.tabs.warnOnClose", true);
100033: pref("browser.tabs.remote", false);
 66068: 
 66127: pref("toolkit.screen.lock", false);
 66127: 
 98890: // From libpref/src/init/all.js, extended to allow a slightly wider zoom range.
 98890: pref("zoom.minPercent", 20);
 98890: pref("zoom.maxPercent", 400);
 98890: pref("toolkit.zoomManager.zoomValues", ".2,.3,.5,.67,.8,.9,1,1.1,1.2,1.33,1.5,1.7,2,2.4,3,4");
 98890: 
 85987: // Mobile will use faster, less durable mode.
 85987: pref("toolkit.storage.synchronous", 0);
 85987: 
 67049: // Device pixel to CSS px ratio, in percent. Set to -1 to calculate based on display density.
 67049: pref("browser.viewport.scaleRatio", -1);
 77160: pref("browser.viewport.desktopWidth", 980);
 66166: 
 78168: #ifndef ANDROID
 78168: #ifndef MOZ_PLATFORM_MAEMO
 78168: // On desktop builds, simulate an MDPI tablet by default.
 78168: pref("layout.css.dpi", 160);
 78222: #else
 78222: // Maemo X11 lies about its dpi
 78222: pref("layout.css.dpi", 240);
 78168: #endif
 78168: #endif
 67128: /* allow scrollbars to float above chrome ui */
 67128: pref("ui.scrollbarsCanOverlapContent", 1);
 67128: 
 64692: /* cache prefs */
 81337: pref("browser.cache.disk.enable", true);
 95438: pref("browser.cache.disk.capacity", 20480); // kilobytes
 97782: pref("browser.cache.disk.max_entry_size", 4096); // kilobytes
 99847: pref("browser.cache.disk.smart_size.enabled", true);
 99847: pref("browser.cache.disk.smart_size.first_run", true);
 65946: 
 64692: pref("browser.cache.memory.enable", true);
 65302: pref("browser.cache.memory.capacity", 1024); // kilobytes
 65302: 
 65302: /* image cache prefs */
 65303: pref("image.cache.size", 1048576); // bytes
 65302: 
 65302: /* offline cache prefs */
 65667: pref("browser.offline-apps.notify", true);
 65302: pref("browser.cache.offline.enable", true);
 65302: pref("browser.cache.offline.capacity", 5120); // kilobytes
 65302: pref("offline-apps.quota.max", 2048); // kilobytes
 65302: pref("offline-apps.quota.warn", 1024); // kilobytes
 64692: 
 87488: // cache compression turned off for now - see bug #715198
 87488: pref("browser.cache.compression_level", 0);
 87488: 
 66486: /* protocol warning prefs */
 66486: pref("network.protocol-handler.warn-external.tel", false);
 66486: pref("network.protocol-handler.warn-external.mailto", false);
 67364: pref("network.protocol-handler.warn-external.vnd.youtube", false);
 66486: 
 64692: /* http prefs */
 64692: pref("network.http.pipelining", true);
 64692: pref("network.http.pipelining.ssl", true);
 64692: pref("network.http.proxy.pipelining", true);
 64784: pref("network.http.pipelining.maxrequests" , 6);
 64692: pref("network.http.keep-alive.timeout", 600);
 64784: pref("network.http.max-connections", 6);
 64784: pref("network.http.max-connections-per-server", 4);
 64784: pref("network.http.max-persistent-connections-per-server", 4);
 64784: pref("network.http.max-persistent-connections-per-proxy", 4);
 66529: #ifdef MOZ_PLATFORM_MAEMO
 65842: pref("network.autodial-helper.enabled", true);
 65842: #endif
 64692: 
 67219: // See bug 545869 for details on why these are set the way they are
 67219: pref("network.buffer.cache.count", 24);
 67219: pref("network.buffer.cache.size",  16384);
 67219: 
 66474: /* history max results display */
 66474: pref("browser.display.history.maxresults", 100);
 66474: 
 67544: /* How many times should have passed before the remote tabs list is refreshed */
 67544: pref("browser.display.remotetabs.timeout", 10);
 67544: 
 64692: /* session history */
 65238: pref("browser.sessionhistory.max_total_viewers", 1);
 64702: pref("browser.sessionhistory.max_entries", 50);
 64692: 
 67125: /* session store */
 67189: pref("browser.sessionstore.resume_session_once", false);
 93818: pref("browser.sessionstore.resume_from_crash", false);
 67125: pref("browser.sessionstore.resume_from_crash_timeout", 60); // minutes
 67125: pref("browser.sessionstore.interval", 10000); // milliseconds
 72760: pref("browser.sessionstore.max_tabs_undo", 1);
 88471: pref("browser.sessionstore.max_resumed_crashes", 1);
 88471: pref("browser.sessionstore.recent_crashes", 0);
 67125: 
 64840: /* these should help performance */
 64840: pref("mozilla.widget.force-24bpp", true);
 64840: pref("mozilla.widget.use-buffer-pixmap", true);
 64840: pref("mozilla.widget.disable-native-theme", true);
 70860: pref("layout.reflow.synthMouseMove", false);
 64840: 
 64697: /* download manager (don't show the window or alert) */
 64692: pref("browser.download.useDownloadDir", true);
 64810: pref("browser.download.folderList", 1); // Default to ~/Downloads
 64697: pref("browser.download.manager.showAlertOnComplete", false);
 64692: pref("browser.download.manager.showAlertInterval", 2000);
 64692: pref("browser.download.manager.retention", 2);
 64966: pref("browser.download.manager.showWhenStarting", false);
 64692: pref("browser.download.manager.closeWhenDone", true);
 64692: pref("browser.download.manager.openDelay", 0);
 64692: pref("browser.download.manager.focusWhenStarting", false);
 64692: pref("browser.download.manager.flashCount", 2);
 64692: pref("browser.download.manager.displayedHistoryDays", 7);
 64692: 
 64697: /* download alerts (disabled above) */
 64692: pref("alerts.slideIncrement", 1);
 64692: pref("alerts.slideIncrementTime", 10);
 64692: pref("alerts.totalOpenTime", 6000);
 64692: pref("alerts.height", 50);
 64692: 
 76713: /* download helper */
 76713: pref("browser.helperApps.deleteTempFileOnExit", false);
 76713: 
 64692: /* password manager */
 64692: pref("signon.rememberSignons", true);
 64692: pref("signon.expireMasterPassword", false);
 64692: pref("signon.SignonFileName", "signons.txt");
 83633: pref("signon.debug", false);
 64692: 
 66080: /* form helper */
 69954: // 0 = disabled, 1 = enabled, 2 = dynamic depending on screen size
 69954: pref("formhelper.mode", 2);
 66080: pref("formhelper.autozoom", true);
 67257: pref("formhelper.autozoom.caret", true);
 66080: pref("formhelper.restore", false);
 66080: 
 66372: /* find helper */
 66372: pref("findhelper.autozoom", true);
 66372: 
 64692: /* autocomplete */
 64692: pref("browser.formfill.enable", true);
 64692: 
 64692: /* spellcheck */
 67319: pref("layout.spellcheckDefault", 0);
 64692: 
 64692: /* extension manager and xpinstall */
 65313: pref("xpinstall.whitelist.add", "addons.mozilla.org");
 66048: 
 83846: pref("extensions.enabledScopes", 1);
 66048: pref("extensions.autoupdate.enabled", true);
 66048: pref("extensions.autoupdate.interval", 86400);
 65795: pref("extensions.update.enabled", false);
 64692: pref("extensions.update.interval", 86400);
 64692: pref("extensions.dss.enabled", false);
 64692: pref("extensions.dss.switchPending", false);
 64692: pref("extensions.ignoreMTimeChanges", false);
 64692: pref("extensions.logging.enabled", false);
 64795: pref("extensions.hideInstallButton", true);
 65563: pref("extensions.showMismatchUI", false);
 66192: pref("extensions.hideUpdateButton", false);
 88601: pref("extensions.strictCompatibility", false);
 88601: pref("extensions.minCompatibleAppVersion", "11.0");
 64692: 
 88601: pref("extensions.update.url", "https://versioncheck.addons.mozilla.org/update/VersionCheck.php?reqVersion=%REQ_VERSION%&id=%ITEM_ID%&version=%ITEM_VERSION%&maxAppVersion=%ITEM_MAXAPPVERSION%&status=%ITEM_STATUS%&appID=%APP_ID%&appVersion=%APP_VERSION%&appOS=%APP_OS%&appABI=%APP_ABI%&locale=%APP_LOCALE%&currentAppVersion=%CURRENT_APP_VERSION%&updateType=%UPDATE_TYPE%&compatMode=%COMPATIBILITY_MODE%");
 91772: pref("extensions.update.background.url", "https://versioncheck-bg.addons.mozilla.org/update/VersionCheck.php?reqVersion=%REQ_VERSION%&id=%ITEM_ID%&version=%ITEM_VERSION%&maxAppVersion=%ITEM_MAXAPPVERSION%&status=%ITEM_STATUS%&appID=%APP_ID%&appVersion=%APP_VERSION%&appOS=%APP_OS%&appABI=%APP_ABI%&locale=%APP_LOCALE%&currentAppVersion=%CURRENT_APP_VERSION%&updateType=%UPDATE_TYPE%&compatMode=%COMPATIBILITY_MODE%");
 64718: 
 64795: /* preferences for the Get Add-ons pane */
 67289: pref("extensions.getAddons.cache.enabled", true);
 66590: pref("extensions.getAddons.maxResults", 15);
 89351: pref("extensions.getAddons.recommended.browseURL", "https://addons.mozilla.org/%LOCALE%/android/recommended/");
 89351: pref("extensions.getAddons.recommended.url", "https://services.addons.mozilla.org/%LOCALE%/android/api/%API_VERSION%/list/featured/all/%MAX_RESULTS%/%OS%/%VERSION%");
 91773: pref("extensions.getAddons.search.browseURL", "https://addons.mozilla.org/%LOCALE%/android/search?q=%TERMS%&platform=%OS%&appver=%VERSION%");
 89351: pref("extensions.getAddons.search.url", "https://services.addons.mozilla.org/%LOCALE%/android/api/%API_VERSION%/search/%TERMS%/all/%MAX_RESULTS%/%OS%/%VERSION%/%COMPATIBILITY_MODE%");
 89351: pref("extensions.getAddons.browseAddons", "https://addons.mozilla.org/%LOCALE%/android/");
 89351: pref("extensions.getAddons.get.url", "https://services.addons.mozilla.org/%LOCALE%/android/api/%API_VERSION%/search/guid:%IDS%?src=mobile&appOS=%OS%&appVersion=%VERSION%");
 89351: pref("extensions.getAddons.getWithPerformance.url", "https://services.addons.mozilla.org/%LOCALE%/android/api/%API_VERSION%/search/guid:%IDS%?src=mobile&appOS=%OS%&appVersion=%VERSION%&tMain=%TIME_MAIN%&tFirstPaint=%TIME_FIRST_PAINT%&tSessionRestored=%TIME_SESSION_RESTORED%");
 64795: 
 71410: /* preference for the locale picker */
 71410: pref("extensions.getLocales.get.url", "");
 77784: pref("extensions.compatability.locales.buildid", "0");
 71410: 
 64795: /* blocklist preferences */
 64795: pref("extensions.blocklist.enabled", true);
 64795: pref("extensions.blocklist.interval", 86400);
 67344: pref("extensions.blocklist.url", "https://addons.mozilla.org/blocklist/3/%APP_ID%/%APP_VERSION%/%PRODUCT%/%BUILD_ID%/%BUILD_TARGET%/%LOCALE%/%CHANNEL%/%OS_VERSION%/%DISTRIBUTION%/%DISTRIBUTION_VERSION%/%PING_COUNT%/%TOTAL_PING_COUNT%/%DAYS_SINCE_LAST_PING%/");
 65956: pref("extensions.blocklist.detailsURL", "https://www.mozilla.com/%LOCALE%/blocklist/");
 64795: 
 64742: /* block popups by default, and notify the user about blocked popups */
 64742: pref("dom.disable_open_during_load", true);
 64742: pref("privacy.popups.showBrowserMessage", true);
 64742: 
 91851: /* disable opening windows with the dialog feature */
 91851: pref("dom.disable_window_open_dialog_feature", true);
 95323: pref("dom.disable_window_showModalDialog", true);
 95379: pref("dom.disable_window_print", true);
 97404: pref("dom.disable_window_find", true);
 91851: 
 64749: pref("keyword.enabled", true);
 98436: pref("keyword.URL", "");
 64749: 
 64755: pref("accessibility.typeaheadfind", false);
 64755: pref("accessibility.typeaheadfind.timeout", 5000);
 64755: pref("accessibility.typeaheadfind.flashBar", 1);
 64755: pref("accessibility.typeaheadfind.linksonly", false);
 64785: pref("accessibility.typeaheadfind.casesensitive", 0);
 65067: // zoom key(F7) conflicts with caret browsing on maemo
 65067: pref("accessibility.browsewithcaret_shortcut.enabled", false);
 64755: 
 65433: // Whether or not we show a dialog box informing the user that the update was
 65433: // successfully applied.
 65433: pref("app.update.showInstalledUI", false);
 65433: 
 67406: // Whether the character encoding menu is under the main Firefox button. This
 67406: // preference is a string so that localizers can alter it.
 67406: pref("browser.menu.showCharacterEncoding", "chrome://browser/locale/browser.properties");
 67406: pref("intl.charsetmenu.browser.static", "chrome://browser/locale/browser.properties");
 67406: 
 64755: // pointer to the default engine name
 64755: pref("browser.search.defaultenginename", "chrome://browser/locale/region.properties");
 64816: // SSL error page behaviour
 64816: pref("browser.ssl_override_behavior", 2);
 64816: pref("browser.xul.error_pages.expert_bad_cert", false);
 64755: 
 64755: // disable logging for the search service by default
 64755: pref("browser.search.log", false);
 64755: 
 65250: // ordering of search engines in the engine list.
 64755: pref("browser.search.order.1", "chrome://browser/locale/region.properties");
 64755: pref("browser.search.order.2", "chrome://browser/locale/region.properties");
 64755: 
 64755: // disable updating
 64755: pref("browser.search.update", false);
 64755: pref("browser.search.update.log", false);
 64755: pref("browser.search.updateinterval", 6);
 64755: 
 64755: // enable search suggestions by default
 64755: pref("browser.search.suggest.enabled", true);
 64768: 
 65848: // Tell the search service to load search plugins from the locale JAR
 65848: pref("browser.search.loadFromJars", true);
 65848: pref("browser.search.jarURIs", "chrome://browser/locale/searchplugins/");
 65848: 
 65848: // tell the search service that we don't really expose the "current engine"
 65848: pref("browser.search.noCurrentEngine", true);
 65848: 
 64768: // enable xul error pages
 64768: pref("browser.xul.error_pages.enabled", true);
 64768: 
 65580: // Specify emptyRestriction = 0 so that bookmarks appear in the list by default
 65559: pref("browser.urlbar.default.behavior", 0);
 65559: pref("browser.urlbar.default.behavior.emptyRestriction", 0);
 65559: 
 65755: // Let the faviconservice know that we display favicons as 32x32px so that it
 65755: // uses the right size when optimizing favicons
 65755: pref("places.favicons.optimizeToDimension", 32);
 65755: 
 65250: // various and sundry awesomebar prefs (should remove/re-evaluate
 64773: // these once bug 447900 is fixed)
 64773: pref("browser.urlbar.clickSelectsAll", true);
 65333: pref("browser.urlbar.doubleClickSelectsAll", true);
 64773: pref("browser.urlbar.autoFill", false);
 64773: pref("browser.urlbar.matchOnlyTyped", false);
 64773: pref("browser.urlbar.matchBehavior", 1);
 64773: pref("browser.urlbar.filter.javascript", true);
 66132: pref("browser.urlbar.maxRichResults", 24); // increased so we see more results when portrait
 64773: pref("browser.urlbar.search.chunkSize", 1000);
 64773: pref("browser.urlbar.search.timeout", 100);
 64773: pref("browser.urlbar.restrict.history", "^");
 64773: pref("browser.urlbar.restrict.bookmark", "*");
 64773: pref("browser.urlbar.restrict.tag", "+");
 64773: pref("browser.urlbar.match.title", "#");
 64773: pref("browser.urlbar.match.url", "@");
 66950: pref("browser.urlbar.autocomplete.search_threshold", 5);
 64773: pref("browser.history.grouping", "day");
 64773: pref("browser.history.showSessions", false);
 64773: pref("browser.sessionhistory.max_entries", 50);
 64773: pref("browser.history_expire_days", 180);
 64773: pref("browser.history_expire_days_min", 90);
 64773: pref("browser.history_expire_sites", 40000);
 64773: pref("browser.places.migratePostDataAnnotations", true);
 64773: pref("browser.places.updateRecentTagsUri", true);
 64773: pref("places.frecency.numVisits", 10);
 64773: pref("places.frecency.numCalcOnIdle", 50);
 64773: pref("places.frecency.numCalcOnMigrate", 50);
 64773: pref("places.frecency.updateIdleTime", 60000);
 64773: pref("places.frecency.firstBucketCutoff", 4);
 64773: pref("places.frecency.secondBucketCutoff", 14);
 64773: pref("places.frecency.thirdBucketCutoff", 31);
 64773: pref("places.frecency.fourthBucketCutoff", 90);
 64773: pref("places.frecency.firstBucketWeight", 100);
 64773: pref("places.frecency.secondBucketWeight", 70);
 64773: pref("places.frecency.thirdBucketWeight", 50);
 64773: pref("places.frecency.fourthBucketWeight", 30);
 64773: pref("places.frecency.defaultBucketWeight", 10);
 64773: pref("places.frecency.embedVisitBonus", 0);
 64773: pref("places.frecency.linkVisitBonus", 100);
 64773: pref("places.frecency.typedVisitBonus", 2000);
 64773: pref("places.frecency.bookmarkVisitBonus", 150);
 64773: pref("places.frecency.downloadVisitBonus", 0);
 64773: pref("places.frecency.permRedirectVisitBonus", 0);
 64773: pref("places.frecency.tempRedirectVisitBonus", 0);
 64773: pref("places.frecency.defaultVisitBonus", 0);
 64773: pref("places.frecency.unvisitedBookmarkBonus", 140);
 64773: pref("places.frecency.unvisitedTypedBonus", 200);
 64838: 
 64838: // disable color management
 64838: pref("gfx.color_management.mode", 0);
 95353: 
 94471: #ifdef ANDROID
 96932: // 0=fixed margin, 1=velocity bias, 2=dynamic resolution, 3=no margins, 4=prediction bias
 95078: pref("gfx.displayport.strategy", 1);
 95353: // all of the following displayport strategy prefs will be divided by 1000
 95353: // to obtain some multiplier which is then used in the strategy.
 95353: // fixed margin strategy options
 95353: pref("gfx.displayport.strategy_fm.multiplier", -1); // displayport dimension multiplier
 95353: pref("gfx.displayport.strategy_fm.danger_x", -1); // danger zone on x-axis when multiplied by viewport width
 95353: pref("gfx.displayport.strategy_fm.danger_y", -1); // danger zone on y-axis when multiplied by viewport height
 95353: // velocity bias strategy options
 95353: pref("gfx.displayport.strategy_vb.multiplier", -1); // displayport dimension multiplier
 96932: pref("gfx.displayport.strategy_vb.threshold", -1); // velocity threshold in inches/frame
 95353: pref("gfx.displayport.strategy_vb.reverse_buffer", -1); // fraction of buffer to keep in reverse direction from scroll
 95433: pref("gfx.displayport.strategy_vb.danger_x_base", -1); // danger zone on x-axis when multiplied by viewport width
 95433: pref("gfx.displayport.strategy_vb.danger_y_base", -1); // danger zone on y-axis when multiplied by viewport height
 95433: pref("gfx.displayport.strategy_vb.danger_x_incr", -1); // additional danger zone on x-axis when multiplied by viewport width and velocity
 95433: pref("gfx.displayport.strategy_vb.danger_y_incr", -1); // additional danger zone on y-axis when multiplied by viewport height and velocity
 96932: // prediction bias strategy options
 96932: pref("gfx.displayport.strategy_pb.threshold", -1); // velocity threshold in inches/frame
 94471: #endif
 64844: 
 64844: // don't allow JS to move and resize existing windows
 64844: pref("dom.disable_window_move_resize", true);
 64857: 
 65340: // prevent click image resizing for nsImageDocument
 65340: pref("browser.enable_click_image_resizing", false);
 65340: 
 64857: // open in tab preferences
 64857: // 0=default window, 1=current window/tab, 2=new window, 3=new tab in most window
 64857: pref("browser.link.open_external", 3);
 64857: pref("browser.link.open_newwindow", 3);
 64937: // 0=force all new windows to tabs, 1=don't force, 2=only force those with no features set
 64937: pref("browser.link.open_newwindow.restriction", 0);
 64869: 
 64858: // controls which bits of private data to clear. by default we clear them all.
 64858: pref("privacy.item.cache", true);
 64858: pref("privacy.item.cookies", true);
 64858: pref("privacy.item.offlineApps", true);
 64858: pref("privacy.item.history", true);
 64858: pref("privacy.item.formdata", true);
 64858: pref("privacy.item.downloads", true);
 64858: pref("privacy.item.passwords", true);
 64858: pref("privacy.item.sessions", true);
 65231: pref("privacy.item.geolocation", true);
 65231: pref("privacy.item.siteSettings", true);
 67427: pref("privacy.item.syncAccount", true);
 65231: 
 83814: #ifdef MOZ_PLATFORM_MAEMO
 65722: pref("plugins.force.wmode", "opaque");
 83814: #endif
 65722: 
 65956: // URL to the Learn More link XXX this is the firefox one.  Bug 495578 fixes this.
 65956: pref("browser.geolocation.warning.infoURL", "http://www.mozilla.com/%LOCALE%/firefox/geolocation/");
 65231: 
 65231: // enable geo
 65231: pref("geo.enabled", true);
 65231: 
 65107: // content sink control -- controls responsiveness during page load
 65937: // see https://bugzilla.mozilla.org/show_bug.cgi?id=481566#c9
 83973: //pref("content.sink.enable_perf_mode",  2); // 0 - switch, 1 - interactive, 2 - perf
 83973: //pref("content.sink.pending_event_mode", 0);
 83973: //pref("content.sink.perf_deflect_count", 1000000);
 83973: //pref("content.sink.perf_parse_time", 50000000);
 65107: 
 77268: // Disable methodjit in chrome to save memory
 77268: pref("javascript.options.methodjit.chrome",  false);
 77268: 
 67216: pref("javascript.options.mem.high_water_mark", 32);
 65147: 
 73545: // Disable the JS engine's gc on memory pressure, since we do one in the mobile
 73545: // browser (bug 669346).
 73545: pref("javascript.options.gc_on_memory_pressure", false);
 73545: 
 66797: pref("dom.max_chrome_script_run_time", 0); // disable slow script dialog for chrome
 65147: pref("dom.max_script_run_time", 20);
 65231: 
 65250: // JS error console
 67201: pref("devtools.errorconsole.enabled", false);
 65323: 
 83955: pref("font.size.inflation.minTwips", 120);
 83953: 
 98938: // When true, zooming will be enabled on all sites, even ones that declare user-scalable=no.
 98938: pref("browser.ui.zoom.force-user-scalable", false);
 66119: 
 67050: // Touch radius (area around the touch location to look for target elements),
 67050: // in 1/240-inch pixels:
 99285: pref("browser.ui.touch.left", 32);
 99285: pref("browser.ui.touch.right", 32);
 99285: pref("browser.ui.touch.top", 48);
 99285: pref("browser.ui.touch.bottom", 16);
 66125: pref("browser.ui.touch.weight.visited", 120); // percentage
 66118: 
 65994: // plugins
 67267: #if MOZ_PLATFORM_MAEMO == 6
 67267: pref("plugin.disable", false);
 80300: pref("dom.ipc.plugins.enabled", true);
 80300: #elifdef ANDROID
 80300: pref("plugin.disable", false);
 80300: pref("dom.ipc.plugins.enabled", false);
 67267: #else
 65994: pref("plugin.disable", true);
 80300: pref("dom.ipc.plugins.enabled", true);
 79515: #endif
 65514: 
 84386: pref("plugins.click_to_play", true);
100345: // Disabled because of thread safety problem
100345: // in getting the bits from the surface.
100345: // Bug 756253
100345: pref("plugins.use_placeholder", 0);
 84386: 
 67388: // process priority
 67388: // higher values give content process less CPU time
 71943: #if MOZ_PLATFORM_MAEMO == 5
 67388: pref("dom.ipc.content.nice", 10);
 67388: #else
 67388: pref("dom.ipc.content.nice", 1);
 67388: #endif
 67388: 
 65514: // product URLs
 66122: // The breakpad report server to link to in about:crashes
 66122: pref("breakpad.reportURL", "http://crash-stats.mozilla.com/report/index/");
 92120: pref("app.support.baseURL", "http://support.mozilla.org/1/mobile/%VERSION%/%OS%/%LOCALE%/");
 67323: pref("app.feedbackURL", "http://input.mozilla.com/feedback/");
 67469: pref("app.privacyURL", "http://www.mozilla.com/%LOCALE%/m/privacy.html");
 67502: pref("app.creditsURL", "http://www.mozilla.org/credits/");
 78153: pref("app.channelURL", "http://www.mozilla.org/%LOCALE%/firefox/channel/");
 90940: #if MOZ_UPDATE_CHANNEL == aurora
 90940: pref("app.releaseNotesURL", "http://www.mozilla.com/%LOCALE%/mobile/%VERSION%/auroranotes/");
 90940: #else
 90940: pref("app.releaseNotesURL", "http://www.mozilla.com/%LOCALE%/mobile/%VERSION%/releasenotes/");
 90940: #endif
 66702: #if MOZ_UPDATE_CHANNEL == beta
 66702: pref("app.faqURL", "http://www.mozilla.com/%LOCALE%/mobile/beta/faq/");
 66702: #else
 65605: pref("app.faqURL", "http://www.mozilla.com/%LOCALE%/mobile/faq/");
 66702: #endif
 94421: pref("app.marketplaceURL", "https://marketplace.mozilla.org/");
 67404: 
 65535: // Name of alternate about: page for certificate errors (when undefined, defaults to about:neterror)
 65535: pref("security.alternate_certificate_error_page", "certerror");
 65590: 
 67083: pref("security.warn_viewing_mixed", false); // Warning is disabled.  See Bug 616712.
 67082: 
 65716: // Override some named colors to avoid inverse OS themes
 65716: pref("ui.-moz-dialog", "#efebe7");
 65716: pref("ui.-moz-dialogtext", "#101010");
 65716: pref("ui.-moz-field", "#fff");
 65716: pref("ui.-moz-fieldtext", "#1a1a1a");
 65716: pref("ui.-moz-buttonhoverface", "#f3f0ed");
 65716: pref("ui.-moz-buttonhovertext", "#101010");
 65716: pref("ui.-moz-combobox", "#fff");
 65716: pref("ui.-moz-comboboxtext", "#101010");
 65716: pref("ui.buttonface", "#ece7e2");
 65716: pref("ui.buttonhighlight", "#fff");
 65716: pref("ui.buttonshadow", "#aea194");
 65716: pref("ui.buttontext", "#101010");
 65716: pref("ui.captiontext", "#101010");
 65716: pref("ui.graytext", "#b1a598");
 65716: pref("ui.highlight", "#fad184");
 65716: pref("ui.highlighttext", "#1a1a1a");
 65716: pref("ui.infobackground", "#f5f5b5");
 65716: pref("ui.infotext", "#000");
 65716: pref("ui.menu", "#f7f5f3");
 65716: pref("ui.menutext", "#101010");
 65716: pref("ui.threeddarkshadow", "#000");
 65716: pref("ui.threedface", "#ece7e2");
 65716: pref("ui.threedhighlight", "#fff");
 65716: pref("ui.threedlightshadow", "#ece7e2");
 65716: pref("ui.threedshadow", "#aea194");
 65716: pref("ui.window", "#efebe7");
 65716: pref("ui.windowtext", "#101010");
 65716: pref("ui.windowframe", "#efebe7");
 65716: 
 65875: #ifdef MOZ_OFFICIAL_BRANDING
 65875: pref("browser.search.param.yahoo-fr", "moz35");
 65875: pref("browser.search.param.yahoo-fr-cjkt", "moz35");
 65941: pref("browser.search.param.yahoo-fr-ja", "mozff");
 65875: #endif
 65988: 
 65988: /* app update prefs */
 66048: pref("app.update.timer", 60000); // milliseconds (1 min)
 66048: 
 65988: #ifdef MOZ_UPDATER
 66581: pref("app.update.enabled", true);
 66581: pref("app.update.timerFirstInterval", 20000); // milliseconds
 66581: pref("app.update.auto", false);
 65988: pref("app.update.channel", "@MOZ_UPDATE_CHANNEL@");
 65988: pref("app.update.mode", 1);
 65988: pref("app.update.silent", false);
 66012: pref("app.update.url", "https://aus2.mozilla.org/update/4/%PRODUCT%/%VERSION%/%BUILD_ID%/%BUILD_TARGET%/%LOCALE%/%CHANNEL%/%OS_VERSION%/%DISTRIBUTION%/%DISTRIBUTION_VERSION%/%PLATFORM_VERSION%/update.xml");
 65988: pref("app.update.promptWaitTime", 43200);
 65988: pref("app.update.idletime", 60);
 65988: pref("app.update.showInstalledUI", false);
 65988: pref("app.update.incompatible.mode", 0);
 66581: pref("app.update.download.backgroundInterval", 0);
 65988: 
 65988: #ifdef MOZ_OFFICIAL_BRANDING
 65988: pref("app.update.interval", 86400);
 65988: pref("app.update.url.manual", "http://www.mozilla.com/%LOCALE%/m/");
 65988: pref("app.update.url.details", "http://www.mozilla.com/%LOCALE%/mobile/releases/");
 65988: #else
 65988: pref("app.update.interval", 28800);
 67177: pref("app.update.url.manual", "http://www.mozilla.com/%LOCALE%/mobile/");
 67177: pref("app.update.url.details", "http://www.mozilla.com/%LOCALE%/mobile/");
 65988: #endif
 65988: #endif
 66011: 
 66011: // replace newlines with spaces on paste into single-line text boxes
 66011: pref("editor.singleLine.pasteNewlines", 2);
 66040: 
 66040: #ifdef MOZ_PLATFORM_MAEMO
 66040: // update fonts for better readability
 66040: pref("font.default.x-baltic", "SwissA");
 66040: pref("font.default.x-central-euro", "SwissA");
 66040: pref("font.default.x-cyrillic", "SwissA");
 66040: pref("font.default.x-unicode", "SwissA");
 66040: pref("font.default.x-user-def", "SwissA");
 66040: pref("font.default.x-western", "SwissA");
 66040: #endif
 66159: 
 67249: #ifdef MOZ_SERVICES_SYNC
 66327: // sync service
 66327: pref("services.sync.client.type", "mobile");
 67249: pref("services.sync.registerEngines", "Tab,Bookmarks,Form,History,Password,Prefs");
 66327: pref("services.sync.autoconnectDelay", 5);
 66544: 
 67249: // prefs to sync by default
 67249: pref("services.sync.prefs.sync.browser.startup.homepage.title", true);
 67249: pref("services.sync.prefs.sync.browser.startup.homepage", true);
 67249: pref("services.sync.prefs.sync.browser.tabs.warnOnClose", true);
 67249: pref("services.sync.prefs.sync.devtools.errorconsole.enabled", true);
 67249: pref("services.sync.prefs.sync.javascript.enabled", true);
 67249: pref("services.sync.prefs.sync.lightweightThemes.isThemeSelected", true);
 67249: pref("services.sync.prefs.sync.lightweightThemes.usedThemes", true);
 67249: pref("services.sync.prefs.sync.network.cookie.cookieBehavior", true);
 67249: pref("services.sync.prefs.sync.permissions.default.image", true);
 77095: pref("services.sync.prefs.sync.privacy.donottrackheader.enabled", true);
 67249: pref("services.sync.prefs.sync.signon.rememberSignons", true);
 67249: #endif
 67249: 
 67050: // threshold where a tap becomes a drag, in 1/240" reference pixels
 67503: // The names of the preferences are to be in sync with nsEventStateManager.cpp
 67503: pref("ui.dragThresholdX", 25);
 67503: pref("ui.dragThresholdY", 25);
 66778: 
 67277: #if MOZ_PLATFORM_MAEMO == 6
 67277: pref("layers.acceleration.disabled", false);
 77922: #elifdef ANDROID
 77922: pref("layers.acceleration.disabled", false);
 67277: #else
 67246: pref("layers.acceleration.disabled", true);
 67277: #endif
 67130: 
 92797: pref("layers.offmainthreadcomposition.enabled", true);
 92797: 
 67201: pref("notification.feature.enabled", true);
 67367: 
 67367: // prevent tooltips from showing up
 67367: pref("browser.chrome.toolbar_tips", false);
 69152: pref("indexedDB.feature.enabled", true);
 69153: pref("dom.indexedDB.warningQuota", 5);
 67391: 
 67391: // prevent video elements from preloading too much data
 67391: pref("media.preload.default", 1); // default to preload none
 67391: pref("media.preload.auto", 2);    // preload metadata if preload=auto
 67409: 
 91864: //  0: don't show fullscreen keyboard
 91864: //  1: always show fullscreen keyboard
 91864: // -1: show fullscreen keyboard based on threshold pref
 91864: pref("widget.ime.android.landscape_fullscreen", 1);
 91864: pref("widget.ime.android.fullscreen_threshold", 250); // in hundreths of inches
 91864: 
 67409: // optimize images memory usage
 67409: pref("image.mem.decodeondraw", true);
 67409: pref("content.image.allow_locking", false);
 72263: pref("image.mem.min_discard_timeout_ms", 10000);
 67409: 
 69128: // enable touch events interfaces
 89273: pref("dom.w3c_touch_events.enabled", true);
 69128: 
 68973: #ifdef MOZ_SAFE_BROWSING
 68973: // Safe browsing does nothing unless this pref is set
 68973: pref("browser.safebrowsing.enabled", true);
 68973: 
 68973: // Prevent loading of pages identified as malware
 68973: pref("browser.safebrowsing.malware.enabled", true);
 68973: 
 68973: // Non-enhanced mode (local url lists) URL list to check for updates
 68973: pref("browser.safebrowsing.provider.0.updateURL", "http://safebrowsing.clients.google.com/safebrowsing/downloads?client={moz:client}&appver={moz:version}&pver=2.2");
 68973: 
 68973: pref("browser.safebrowsing.dataProvider", 0);
 68973: 
 68973: // Does the provider name need to be localizable?
 68973: pref("browser.safebrowsing.provider.0.name", "Google");
 68973: pref("browser.safebrowsing.provider.0.keyURL", "https://sb-ssl.google.com/safebrowsing/newkey?client={moz:client}&appver={moz:version}&pver=2.2");
 68973: pref("browser.safebrowsing.provider.0.reportURL", "http://safebrowsing.clients.google.com/safebrowsing/report?");
 68973: pref("browser.safebrowsing.provider.0.gethashURL", "http://safebrowsing.clients.google.com/safebrowsing/gethash?client={moz:client}&appver={moz:version}&pver=2.2");
 68973: 
 68973: // HTML report pages
 68973: pref("browser.safebrowsing.provider.0.reportGenericURL", "http://{moz:locale}.phish-generic.mozilla.com/?hl={moz:locale}");
 68973: pref("browser.safebrowsing.provider.0.reportErrorURL", "http://{moz:locale}.phish-error.mozilla.com/?hl={moz:locale}");
 68973: pref("browser.safebrowsing.provider.0.reportPhishURL", "http://{moz:locale}.phish-report.mozilla.com/?hl={moz:locale}");
 68973: pref("browser.safebrowsing.provider.0.reportMalwareURL", "http://{moz:locale}.malware-report.mozilla.com/?hl={moz:locale}");
 68973: pref("browser.safebrowsing.provider.0.reportMalwareErrorURL", "http://{moz:locale}.malware-error.mozilla.com/?hl={moz:locale}");
 68973: 
 68973: // FAQ URLs
 68973: pref("browser.safebrowsing.warning.infoURL", "http://www.mozilla.com/%LOCALE%/%APP%/phishing-protection/");
 68973: pref("browser.geolocation.warning.infoURL", "http://www.mozilla.com/%LOCALE%/%APP%/geolocation/");
 68973: 
 68973: // Name of the about: page contributed by safebrowsing to handle display of error
 68973: // pages on phishing/malware hits.  (bug 399233)
 68973: pref("urlclassifier.alternate_error_page", "blocked");
 68973: 
 68973: // The number of random entries to send with a gethash request.
 68973: pref("urlclassifier.gethashnoise", 4);
 68973: 
 68973: // The list of tables that use the gethash request to confirm partial results.
 68973: pref("urlclassifier.gethashtables", "goog-phish-shavar,goog-malware-shavar");
 68973: 
 68973: // If an urlclassifier table has not been updated in this number of seconds,
 68973: // a gethash request will be forced to check that the result is still in
 68973: // the database.
 68973: pref("urlclassifier.confirm-age", 2700);
 68973: 
 95771: // Maximum size of the sqlite3 cache during an update, in bytes
 95771: pref("urlclassifier.updatecachemax", 4194304);
 95771: 
 68973: // URL for checking the reason for a malware warning.
 68973: pref("browser.safebrowsing.malware.reportURL", "http://safebrowsing.clients.google.com/safebrowsing/diagnostic?client=%NAME%&hl=%LOCALE%&site=");
 69128: #endif
 69128: 
 71410: // True if this is the first time we are showing about:firstrun
 71410: pref("browser.firstrun.show.uidiscovery", true);
 80554: pref("browser.firstrun.show.localepicker", false);
 71410: 
 74730: // True if you always want dump() to work
 74730: //
 74730: // On Android, you also need to do the following for the output
 74730: // to show up in logcat:
 74730: //
 74730: // $ adb shell stop
 74730: // $ adb shell setprop log.redirect-stdio true
 74730: // $ adb shell start
 83485: pref("browser.dom.window.dump.enabled", true);
 78958: 
 78958: // controls if we want camera support
 78958: pref("device.camera.enabled", true);
 78958: pref("media.realtime_decoder.enabled", true);
 83486: 
 83486: pref("dom.report_all_js_exceptions", true);
 83486: pref("javascript.options.showInConsole", true);
 83760: 
 83760: pref("full-screen-api.enabled", true);
 87670: 
 87670: pref("direct-texture.force.enabled", false);
 87670: pref("direct-texture.force.disabled", false);
 95048: 
 95180: // show checkerboard pattern on android; we use background colour instead
 96816: pref("gfx.show_checkerboard_pattern", true);
 95180: 
 95354: // This fraction in 1000ths of velocity remains after every animation frame when the velocity is low.
 95354: pref("ui.scrolling.friction_slow", -1);
 95354: // This fraction in 1000ths of velocity remains after every animation frame when the velocity is high.
 95354: pref("ui.scrolling.friction_fast", -1);
 95354: // Below this velocity (in pixels per frame), the friction starts increasing from friction_fast
 95354: // to friction_slow.
 95354: pref("ui.scrolling.velocity_threshold", -1);
 95354: // The maximum velocity change factor between events, per ms, in 1000ths.
 95354: // Direction changes are excluded.
 95354: pref("ui.scrolling.max_event_acceleration", -1);
 95354: // The rate of deceleration when the surface has overscrolled, in 1000ths.
 95354: pref("ui.scrolling.overscroll_decel_rate", -1);
 95354: // The fraction of the surface which can be overscrolled before it must snap back, in 1000ths.
 95354: pref("ui.scrolling.overscroll_snap_limit", -1);
 95354: // The minimum amount of space that must be present for an axis to be considered scrollable,
 95354: // in 1/1000ths of pixels.
 95354: pref("ui.scrolling.min_scrollable_distance", -1);
 95605: // A comma-separated list of float values in the range [0.0, 1.0) that are used as
 95605: // interpolation frames for zoom animations.
 95605: pref("ui.zooming.animation_frames", "");
 97790: 
 97790: // Enable accessibility mode if platform accessibility is enabled.
 98918: pref("accessibility.accessfu.activate", 2);
 98277: 
 98277: // Mobile manages state by autodetection
 98277: pref("network.manage-offline-status", true);
100316: 
100316: // increase the timeout clamp for background tabs to 15 minutes
100316: pref("dom.min_background_timeout_value", 900000);

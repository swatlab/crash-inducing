 47562: /* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 47562:  * vim: set ts=4 sw=4 et tw=99 ft=cpp:
 47562:  *
 98983:  * This Source Code Form is subject to the terms of the Mozilla Public
 98983:  * License, v. 2.0. If a copy of the MPL was not distributed with this
 98983:  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 47562: 
 47562: #include "jsapi.h"
 47562: #include "jswrapper.h"
 47562: 
 47562: // Xray wrappers re-resolve the original native properties on the native
 47562: // object and always directly access to those properties.
 55599: // Because they work so differently from the rest of the wrapper hierarchy,
 79386: // we pull them out of the Wrapper inheritance hierarchy and create a
 55599: // little world around them.
 47562: 
 94496: class XPCWrappedNative;
 94496: 
 47562: namespace xpc {
 47562: 
 95795: JSBool
 98960: holder_get(JSContext *cx, JSHandleObject holder, JSHandleId id, jsval *vp);
 95795: JSBool
 98960: holder_set(JSContext *cx, JSHandleObject holder, JSHandleId id, JSBool strict, jsval *vp);
 95795: 
 55602: namespace XrayUtils {
 55602: 
 47562: extern JSClass HolderClass;
 55602: 
100409: bool CloneExpandoChain(JSContext *cx, JSObject *src, JSObject *dst);
100409: 
 93950: JSObject *createHolder(JSContext *cx, JSObject *wrappedNative, JSObject *parent);
 93950: 
 55703: bool
 55703: IsTransparent(JSContext *cx, JSObject *wrapper);
 55703: 
 80512: JSObject *
 80512: GetNativePropertiesObject(JSContext *cx, JSObject *wrapper);
 80512: 
 55602: }
 47562: 
 94496: class XPCWrappedNativeXrayTraits;
 94496: class ProxyXrayTraits;
 94512: class DOMXrayTraits;
 94496: 
 55599: // NB: Base *must* derive from JSProxyHandler
 94496: template <typename Base, typename Traits = XPCWrappedNativeXrayTraits >
 47562: class XrayWrapper : public Base {
 47562:   public:
 91237:     XrayWrapper(unsigned flags);
 47562:     virtual ~XrayWrapper();
 47562: 
 55599:     /* Fundamental proxy traps. */
 55599:     virtual bool getPropertyDescriptor(JSContext *cx, JSObject *wrapper, jsid id,
 55599:                                        bool set, js::PropertyDescriptor *desc);
 55599:     virtual bool getOwnPropertyDescriptor(JSContext *cx, JSObject *wrapper, jsid id,
 55599:                                           bool set, js::PropertyDescriptor *desc);
 55599:     virtual bool defineProperty(JSContext *cx, JSObject *wrapper, jsid id,
 55599:                                 js::PropertyDescriptor *desc);
 55599:     virtual bool getOwnPropertyNames(JSContext *cx, JSObject *wrapper,
 55599:                                      js::AutoIdVector &props);
 55599:     virtual bool delete_(JSContext *cx, JSObject *wrapper, jsid id, bool *bp);
 55599:     virtual bool enumerate(JSContext *cx, JSObject *wrapper, js::AutoIdVector &props);
 55599: 
 55599:     /* Derived proxy traps. */
 55582:     virtual bool get(JSContext *cx, JSObject *wrapper, JSObject *receiver, jsid id,
 55582:                      js::Value *vp);
 55582:     virtual bool set(JSContext *cx, JSObject *wrapper, JSObject *receiver, jsid id,
 62397:                      bool strict, js::Value *vp);
 47562:     virtual bool has(JSContext *cx, JSObject *wrapper, jsid id, bool *bp);
 47562:     virtual bool hasOwn(JSContext *cx, JSObject *wrapper, jsid id, bool *bp);
 60532:     virtual bool keys(JSContext *cx, JSObject *wrapper, js::AutoIdVector &props);
 91237:     virtual bool iterate(JSContext *cx, JSObject *wrapper, unsigned flags, js::Value *vp);
 47562: 
 91237:     virtual bool call(JSContext *cx, JSObject *wrapper, unsigned argc, js::Value *vp);
 61453:     virtual bool construct(JSContext *cx, JSObject *wrapper,
 91237:                            unsigned argc, js::Value *argv, js::Value *rval);
 61453: 
 47562:     static XrayWrapper singleton;
 57305: 
 57305:   private:
 94496:     bool enumerate(JSContext *cx, JSObject *wrapper, unsigned flags,
 94496:                    JS::AutoIdVector &props);
 47562: };
 47562: 
 94496: typedef XrayWrapper<js::CrossCompartmentWrapper, ProxyXrayTraits > XrayProxy;
 94512: typedef XrayWrapper<js::CrossCompartmentWrapper, DOMXrayTraits > XrayDOM;
 80072: 
 95795: class SandboxProxyHandler : public js::AbstractWrapper {
 95795: public:
 95795:     SandboxProxyHandler() : js::AbstractWrapper(0)
 95795:     {
 47562:     }
 95795: 
 95795:     virtual bool getPropertyDescriptor(JSContext *cx, JSObject *proxy, jsid id,
 95795:                                        bool set, js::PropertyDescriptor *desc);
 95795:     virtual bool getOwnPropertyDescriptor(JSContext *cx, JSObject *proxy,
 95795:                                           jsid id, bool set,
 95795:                                           js::PropertyDescriptor *desc);
 95795: };
 95795: 
 95795: extern SandboxProxyHandler sandboxProxyHandler;
 95795: }

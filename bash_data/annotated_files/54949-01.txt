50545: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
50545: /* ***** BEGIN LICENSE BLOCK *****
50545:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
50545:  *
50545:  * The contents of this file are subject to the Mozilla Public License Version
50545:  * 1.1 (the "License"); you may not use this file except in compliance with
50545:  * the License. You may obtain a copy of the License at
50545:  * http://www.mozilla.org/MPL/
50545:  *
50545:  * Software distributed under the License is distributed on an "AS IS" basis,
50545:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
50545:  * for the specific language governing rights and limitations under the
50545:  * License.
50545:  *
50545:  * The Original Code is mozilla.org code.
50545:  *
50545:  * The Initial Developer of the Original Code is
50545:  * the Mozilla Foundation.
50545:  * Portions created by the Initial Developer are Copyright (C) 2010.
50545:  * the Initial Developer. All Rights Reserved.
50545:  *
50545:  * Contributor(s):
50545:  *
50545:  * Alternatively, the contents of this file may be used under the terms of
50545:  * either the GNU General Public License Version 2 or later (the "GPL"), or
50545:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
50545:  * in which case the provisions of the GPL or the LGPL are applicable instead
50545:  * of those above. If you wish to allow use of your version of this file only
50545:  * under the terms of either the GPL or the LGPL, and not to allow others to
50545:  * use your version of this file under the terms of the MPL, indicate your
50545:  * decision by deleting the provisions above and replace them with the notice
50545:  * and other provisions required by the GPL or the LGPL. If you do not delete
50545:  * the provisions above, a recipient may use your version of this file under
50545:  * the terms of any one of the MPL, the GPL or the LGPL.
50545:  *
50545:  * ***** END LICENSE BLOCK ***** */
50545: 
50545: #include "Image.h"
50545: 
50545: namespace mozilla {
50545: namespace imagelib {
50545: 
50545: // Constructor
51296: Image::Image(imgStatusTracker* aStatusTracker) :
52149:   mAnimationConsumers(0),
52149:   mInitialized(PR_FALSE),
54949:   mAnimating(PR_FALSE),
54949:   mError(PR_FALSE)
50545: {
51296:   if (aStatusTracker) {
51296:     mStatusTracker = aStatusTracker;
51296:     mStatusTracker->SetImage(this);
51296:   } else {
51296:     mStatusTracker = new imgStatusTracker(this);
51296:   }
50545: }
50545: 
54949: PRUint32
54949: Image::GetDataSize()
54949: {
54949:   if (mError)
54949:     return 0;
54949:   
54949:   return GetSourceDataSize() + GetDecodedDataSize();
54949: }
54949: 
51234: // Translates a mimetype into a concrete decoder
51234: Image::eDecoderType
51234: Image::GetDecoderType(const char *aMimeType)
51234: {
51234:   // By default we don't know
51234:   eDecoderType rv = eDecoderType_unknown;
51234: 
51234:   // PNG
51234:   if (!strcmp(aMimeType, "image/png"))
51234:     rv = eDecoderType_png;
51234:   else if (!strcmp(aMimeType, "image/x-png"))
51234:     rv = eDecoderType_png;
51234: 
51234:   // GIF
51234:   else if (!strcmp(aMimeType, "image/gif"))
51234:     rv = eDecoderType_gif;
51234: 
51234: 
51234:   // JPEG
51234:   else if (!strcmp(aMimeType, "image/jpeg"))
51234:     rv = eDecoderType_jpeg;
51234:   else if (!strcmp(aMimeType, "image/pjpeg"))
51234:     rv = eDecoderType_jpeg;
51234:   else if (!strcmp(aMimeType, "image/jpg"))
51234:     rv = eDecoderType_jpeg;
51234: 
51234:   // BMP
51234:   else if (!strcmp(aMimeType, "image/bmp"))
51234:     rv = eDecoderType_bmp;
51234:   else if (!strcmp(aMimeType, "image/x-ms-bmp"))
51234:     rv = eDecoderType_bmp;
51234: 
51234: 
51234:   // ICO
51234:   else if (!strcmp(aMimeType, "image/x-icon"))
51234:     rv = eDecoderType_ico;
51234:   else if (!strcmp(aMimeType, "image/vnd.microsoft.icon"))
51234:     rv = eDecoderType_ico;
51234: 
51234:   // Icon
51234:   else if (!strcmp(aMimeType, "image/icon"))
51234:     rv = eDecoderType_icon;
51234: 
51234:   return rv;
51234: }
51234: 
52149: void
52149: Image::IncrementAnimationConsumers()
52149: {
52149:   mAnimationConsumers++;
52149:   EvaluateAnimation();
52149: }
52149: 
52149: void
52149: Image::DecrementAnimationConsumers()
52149: {
52149:   NS_ABORT_IF_FALSE(mAnimationConsumers >= 1, "Invalid no. of animation consumers!");
52149:   mAnimationConsumers--;
52149:   EvaluateAnimation();
52149: }
52149: 
52149: void
52149: Image::EvaluateAnimation()
52149: {
52149:   if (!mAnimating && ShouldAnimate()) {
52149:     nsresult rv = StartAnimation();
52149:     mAnimating = NS_SUCCEEDED(rv);
52149:   } else if (mAnimating && !ShouldAnimate()) {
52149:     StopAnimation();
52149:     mAnimating = PR_FALSE;
52149:   }
52149: }
51234: 
50545: } // namespace imagelib
50545: } // namespace mozilla

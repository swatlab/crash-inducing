 99735: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 99735: /* vim: set ts=2 et sw=2 tw=80: */
 99735: /* This Source Code Form is subject to the terms of the Mozilla Public
 99735:  * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 99735:  * You can obtain one at http://mozilla.org/MPL/2.0/. */
 99735: 
 99735: #ifndef mozilla_a11y_DocAccessible_inl_h_
 99735: #define mozilla_a11y_DocAccessible_inl_h_
 99735: 
 99735: #include "DocAccessible.h"
 99735: #include "nsAccessibilityService.h"
100057: #include "NotificationController.h"
 99735: 
100057: inline void
100057: DocAccessible::BindChildDocument(DocAccessible* aDocument)
100057: {
100057:   mNotificationController->ScheduleChildDocBinding(aDocument);
100057: }
100057: 
100057: template<class Class, class Arg>
100057: inline void
100057: DocAccessible::HandleNotification(Class* aInstance,
100057:                                   typename TNotification<Class, Arg>::Callback aMethod,
100057:                                   Arg* aArg)
100057: {
100057:   if (mNotificationController) {
100057:     mNotificationController->HandleNotification<Class, Arg>(aInstance,
100057:                                                             aMethod, aArg);
100057:   }
100057: }
100057: 
100057: inline void
100057: DocAccessible::UpdateText(nsIContent* aTextNode)
100057: {
100057:   NS_ASSERTION(mNotificationController, "The document was shut down!");
100057: 
100057:   // Ignore the notification if initial tree construction hasn't been done yet.
100057:   if (mNotificationController && HasLoadState(eTreeConstructed))
100057:     mNotificationController->ScheduleTextUpdate(aTextNode);
100057: }
100057: 
106800: inline void
106800: DocAccessible::MaybeNotifyOfValueChange(Accessible* aAccessible)
106800: {
106800:   mozilla::a11y::role role = aAccessible->Role();
106800:   if (role == mozilla::a11y::roles::ENTRY ||
106800:       role == mozilla::a11y::roles::COMBOBOX) {
106800:     nsRefPtr<AccEvent> valueChangeEvent =
106800:       new AccEvent(nsIAccessibleEvent::EVENT_VALUE_CHANGE, aAccessible,
106800:                    eAutoDetect, AccEvent::eRemoveDupes);
106800:     FireDelayedAccessibleEvent(valueChangeEvent);
106800:     }
106800:   }
106800: 
 99735: #endif

 24120: var gTestPage = "http://example.org/browser/browser/base/content/test/dummy_page.html";
 25831: var gTestImage = "http://example.org/browser/browser/base/content/test/moz.png";
 23677: var gTab1, gTab2, gTab3;
 23677: var gLevel;
 33882: const BACK = 0;
 33882: const FORWARD = 1;
 23677: 
 23677: function test() {
 23677:   waitForExplicitFinish();
 23677: 
 23677:   gTab1 = gBrowser.addTab(gTestPage);
 23677:   gTab2 = gBrowser.addTab();
 23677:   gTab3 = gBrowser.addTab();
137506:   gBrowser.selectedTab = gTab1;
 23677: 
137506:   load(gTab1, gTestPage, function () {
137506:     load(gTab2, gTestPage, secondPageLoaded);
137506:   });
 23677: }
 23677: 
 25762: function secondPageLoaded() {
137506:   zoomTest(gTab1, 1, "Initial zoom of tab 1 should be 1");
137506:   zoomTest(gTab2, 1, "Initial zoom of tab 2 should be 1");
137506:   zoomTest(gTab3, 1, "Initial zoom of tab 3 should be 1");
 23677: 
 23677:   // Now have three tabs, two with the test page, one blank. Tab 1 is selected
 23677:   // Zoom tab 1
137506:   FullZoom.enlarge();
 23677:   gLevel = ZoomManager.getZoomForBrowser(gBrowser.getBrowserForTab(gTab1));
 23677: 
 25762:   ok(gLevel > 1, "New zoom for tab 1 should be greater than 1");
137506:   zoomTest(gTab2, 1, "Zooming tab 1 should not affect tab 2");
137506:   zoomTest(gTab3, 1, "Zooming tab 1 should not affect tab 3");
 23677: 
137506:   load(gTab3, gTestPage, thirdPageLoaded);
 23677: }
 23677: 
 25762: function thirdPageLoaded() {
137506:   zoomTest(gTab1, gLevel, "Tab 1 should still be zoomed");
137506:   zoomTest(gTab2, 1, "Tab 2 should still not be affected");
137506:   zoomTest(gTab3, gLevel, "Tab 3 should have zoomed as it was loading in the background");
 23677: 
 23677:   // Switching to tab 2 should update its zoom setting.
137506:   afterZoom(function() {
137506:     zoomTest(gTab1, gLevel, "Tab 1 should still be zoomed");
137506:     zoomTest(gTab2, gLevel, "Tab 2 should be zoomed now");
137506:     zoomTest(gTab3, gLevel, "Tab 3 should still be zoomed");
 23677: 
137506:     load(gTab1, gTestImage, imageLoaded);
137506:   });
137506: 
137506:   gBrowser.selectedTab = gTab2;
 25831: }
 25831: 
 25831: function imageLoaded() {
137506:   zoomTest(gTab1, 1, "Zoom should be 1 when image was loaded in the background");
137506:   gBrowser.selectedTab = gTab1;
137506:   zoomTest(gTab1, 1, "Zoom should still be 1 when tab with image is selected");
137506: 
137506:   executeSoon(imageZoomSwitch);
 31019: }
 31019: 
 31019: function imageZoomSwitch() {
137506:   navigate(BACK, function () {
137506:     navigate(FORWARD, function () {
137506:       zoomTest(gTab1, 1, "Tab 1 should not be zoomed when an image loads");
 39808: 
137506:       afterZoom(function() {
137506:         zoomTest(gTab1, 1, "Tab 1 should still not be zoomed when deselected");
137506:         finishTest();
137506:       });
137506:       gBrowser.selectedTab = gTab2;
137506:     });
137506:   });
 23677: }
 23677: 
 54316: var finishTestStarted  = false;
 23677: function finishTest() {
 54316:   ok(!finishTestStarted, "finishTest called more than once");
 54316:   finishTestStarted = true;
137506:   gBrowser.selectedTab = gTab1;
137506:   FullZoom.reset();
 23677:   gBrowser.removeTab(gTab1);
137506:   FullZoom.reset();
 23677:   gBrowser.removeTab(gTab2);
137506:   FullZoom.reset();
 23677:   gBrowser.removeTab(gTab3);
137506:   finish();
 23677: }
137506: 
137506: function zoomTest(tab, val, msg) {
137506:   is(ZoomManager.getZoomForBrowser(tab.linkedBrowser), val, msg);
137506: }
137506: 
137506: function load(tab, url, cb) {
137506:   let didLoad = false;
137506:   let didZoom = false;
137506:   tab.linkedBrowser.addEventListener("load", function (event) {
137506:     event.currentTarget.removeEventListener("load", arguments.callee, true);
137506:     didLoad = true;
137506:     if (didZoom)
137506:       executeSoon(cb);
137506:   }, true);
137506: 
137506:   afterZoom(function() {
137506:     didZoom = true;
137506:     if (didLoad)
137506:       executeSoon(cb);
137506:   });
137506: 
137506:   tab.linkedBrowser.loadURI(url);
137506: }
137506: 
137506: function navigate(direction, cb) {
137506:   let didPs = false;
137506:   let didZoom = false;
137506:   gBrowser.addEventListener("pageshow", function (event) {
137506:     gBrowser.removeEventListener("pageshow", arguments.callee, true);
137506:     didPs = true;
137506:     if (didZoom)
137506:       executeSoon(cb);
137506:   }, true);
137506: 
137506:   afterZoom(function() {
137506:     didZoom = true;
137506:     if (didPs)
137506:       executeSoon(cb);
137506:   });
137506: 
137506:   if (direction == BACK)
137506:     gBrowser.goBack();
137506:   else if (direction == FORWARD)
137506:     gBrowser.goForward();
137506: }
137506: 
137506: function afterZoom(cb) {
137506:   let oldSZFB = ZoomManager.setZoomForBrowser;
137506:   ZoomManager.setZoomForBrowser = function(browser, value) {
137506:     oldSZFB.call(ZoomManager, browser, value);
137506:     ZoomManager.setZoomForBrowser = oldSZFB;
137506:     executeSoon(cb);
137506:   };
137506: }

32381: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
32381: /* vim:expandtab:shiftwidth=2:tabstop=2:
32381:  */
32381: /* ***** BEGIN LICENSE BLOCK *****
32381:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
32381:  *
32381:  * The contents of this file are subject to the Mozilla Public License Version
32381:  * 1.1 (the "License"); you may not use this file except in compliance with
32381:  * the License. You may obtain a copy of the License at
32381:  * http://www.mozilla.org/MPL/
32381:  *
32381:  * Software distributed under the License is distributed on an "AS IS" basis,
32381:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
32381:  * for the specific language governing rights and limitations under the
32381:  * License.
32381:  *
32381:  * The Original Code is mozilla.org code.
32381:  *
32381:  * The Initial Developer of the Original Code is
63247:  * Mozilla Foundation.
32381:  * Portions created by the Initial Developer are Copyright (C) 2009
32381:  * the Initial Developer. All Rights Reserved.
32381:  *
32381:  * Contributor(s):
32381:  *   Alexander Surkov <surkov.alexander@gmail.com> (original author)
32381:  *
32381:  * Alternatively, the contents of this file may be used under the terms of
32381:  * either the GNU General Public License Version 2 or later (the "GPL"), or
32381:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
32381:  * in which case the provisions of the GPL or the LGPL are applicable instead
32381:  * of those above. If you wish to allow use of your version of this file only
32381:  * under the terms of either the GPL or the LGPL, and not to allow others to
32381:  * use your version of this file under the terms of the MPL, indicate your
32381:  * decision by deleting the provisions above and replace them with the notice
32381:  * and other provisions required by the GPL or the LGPL. If you do not delete
32381:  * the provisions above, a recipient may use your version of this file under
32381:  * the terms of any one of the MPL, the GPL or the LGPL.
32381:  *
32381:  * ***** END LICENSE BLOCK ***** */
32381: 
32381: #ifndef nsWinUtils_h_
32381: #define nsWinUtils_h_
32381: 
32381: #include "Accessible2.h"
32381: 
32381: #include "nsIArray.h"
54220: #include "nsIDocument.h"
54220: 
54220: const LPCWSTR kClassNameRoot = L"MozillaUIWindowClass";
54220: const LPCWSTR kClassNameTabContent = L"MozillaContentWindowClass";
54220: 
54220: const LPCWSTR kJAWSModuleHandle = L"jhook";
54220: const LPCWSTR kWEModuleHandle = L"gwm32inc";
63261: const LPCWSTR kDolphinModuleHandle = L"dolwinhk";
32381: 
32381: class nsWinUtils
32381: {
32381: public:
32381:   /**
32381:    * Convert nsIArray array of accessible objects to an array of IUnknown*
32381:    * objects used in IA2 methods.
32381:    */
32381:   static HRESULT ConvertToIA2Array(nsIArray *aCollection,
32381:                                    IUnknown ***aAccessibles, long *aCount);
54220: 
54220:   /**
64004:    * Start window emulation if presence of specific AT is detected.
64004:    */
64004:   static bool MaybeStartWindowEmulation();
64004: 
64004:   /**
64004:    * Free resources used for window emulation.
64004:    */
64004:   static void ShutdownWindowEmulation();
64004: 
64004:   /**
64004:    * Return true if window emulation is started.
64004:    */
64004:   static bool IsWindowEmulationStarted();
64004: 
64004:   /**
54220:    * Helper to register window class.
54220:    */
54220:   static void RegisterNativeWindow(LPCWSTR aWindowClass);
54220: 
54220:   /**
54220:    * Helper to create a window.
54220:    */
63261:   static HWND CreateNativeWindow(LPCWSTR aWindowClass, HWND aParentWnd,
63261:                                  int aX, int aY, int aWidth, int aHeight,
63261:                                  bool aIsActive);
63261: 
63261:   /**
63261:    * Helper to show window.
63261:    */
63261:   static void ShowNativeWindow(HWND aWnd);
63261: 
63261:   /**
63261:    * Helper to hide window.
63261:    */
63261:   static void HideNativeWindow(HWND aWnd);
54220: 
54220:   /**
54220:    * Return true if window emulation is enabled.
54220:    */
64004:   static bool IsWindowEmulationFor(LPCWSTR kModuleHandle);
54220: 
54220:   /**
54220:    * Return true if the given document node is for tab document accessible.
54220:    */
54220:   static bool IsTabDocument(nsIDocument* aDocumentNode);
32381: };
32381: 
32381: #endif
32381: 

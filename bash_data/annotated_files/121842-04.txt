118588: /* This Source Code Form is subject to the terms of the Mozilla Public
118588:  * License, v. 2.0. If a copy of the MPL was not distributed with this
118588:  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
118588: 
118588: // This test makes sure that about:privatebrowsing does not appear zoomed in
118588: // if there is already a zoom site pref for about:blank (bug 487656).
118588: 
118588: function test() {
118588:   // initialization
121842:   let pb = Cc["@mozilla.org/privatebrowsing;1"].
121842:            getService(Ci.nsIPrivateBrowsingService);
118588:   waitForExplicitFinish();
118588: 
121842:   let tabBlank = gBrowser.selectedTab;
121842:   let blankBrowser = gBrowser.getBrowserForTab(tabBlank);
121842:   blankBrowser.addEventListener("load", function() {
121842:     blankBrowser.removeEventListener("load", arguments.callee, true);
121842: 
121775:     // change the zoom on the blank page
121842:     FullZoom.enlarge();
121842:     isnot(ZoomManager.zoom, 1, "Zoom level for about:blank should be changed");
121842: 
121842:     // enter private browsing mode
121842:     pb.privateBrowsingEnabled = true;
121842:     let tabAboutPB = gBrowser.selectedTab;
121842:     let browserAboutPB = gBrowser.getBrowserForTab(tabAboutPB);
121842:     browserAboutPB.addEventListener("load", function() {
121842:       browserAboutPB.removeEventListener("load", arguments.callee, true);
121842:       setTimeout(function() {
121775:         // make sure the zoom level is set to 1
121842:         is(ZoomManager.zoom, 1, "Zoom level for about:privatebrowsing should be reset");
121842:         finishTest();
121842:       }, 0);
121775:     }, true);
121842:   }, true);
121842:   blankBrowser.loadURI("about:blank");
118588: }
118588: 
118588: function finishTest() {
121842:   let pb = Cc["@mozilla.org/privatebrowsing;1"].
121842:            getService(Ci.nsIPrivateBrowsingService);
121842:   // leave private browsing mode
121842:   pb.privateBrowsingEnabled = false;
121842:   let tabBlank = gBrowser.selectedTab;
121842:   let blankBrowser = gBrowser.getBrowserForTab(tabBlank);
121842:   blankBrowser.addEventListener("load", function() {
121842:     blankBrowser.removeEventListener("load", arguments.callee, true);
121842: 
121842:     executeSoon(function() {
121775:       // cleanup
121842:       FullZoom.reset();
121842:       finish();
121775:     });
121842:   }, true);
121775: }

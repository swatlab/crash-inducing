19963: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
19963: // vim:cindent:ts=2:et:sw=2:
19963: /* ***** BEGIN LICENSE BLOCK *****
19963:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
19963:  *
19963:  * The contents of this file are subject to the Mozilla Public License Version
19963:  * 1.1 (the "License"); you may not use this file except in compliance with
19963:  * the License. You may obtain a copy of the License at
19963:  * http://www.mozilla.org/MPL/
19963:  *
19963:  * Software distributed under the License is distributed on an "AS IS" basis,
19963:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
19963:  * for the specific language governing rights and limitations under the
19963:  * License.
19963:  *
19963:  * The Original Code is Mozilla Foundation code.
19963:  *
19963:  * The Initial Developer of the Original Code is
19963:  * Mozilla Foundation.
19963:  * Portions created by the Initial Developer are Copyright (C) 2008
19963:  * the Initial Developer. All Rights Reserved.
19963:  *
19963:  * Contributor(s):
19963:  *   John Daggett <jdaggett@mozilla.com>
19963:  *
19963:  * Alternatively, the contents of this file may be used under the terms of
19963:  * either of the GNU General Public License Version 2 or later (the "GPL"),
19963:  * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
19963:  * in which case the provisions of the GPL or the LGPL are applicable instead
19963:  * of those above. If you wish to allow use of your version of this file only
19963:  * under the terms of either the GPL or the LGPL, and not to allow others to
19963:  * use your version of this file under the terms of the MPL, indicate your
19963:  * decision by deleting the provisions above and replace them with the notice
19963:  * and other provisions required by the GPL or the LGPL. If you do not delete
19963:  * the provisions above, a recipient may use your version of this file under
19963:  * the terms of any one of the MPL, the GPL or the LGPL.
19963:  *
19963:  * ***** END LICENSE BLOCK ***** */
19963: 
19963: /* code for loading in @font-face defined font data */
19963: 
19963: #ifndef nsFontFaceLoader_h_
19963: #define nsFontFaceLoader_h_
19963: 
22722: #include "nsCOMPtr.h"
21067: #include "nsIStreamLoader.h"
19963: #include "nsIURI.h"
23932: #include "nsIChannel.h"
62296: #include "nsITimer.h"
19963: #include "gfxUserFontSet.h"
23932: #include "nsHashKeys.h"
23932: #include "nsTHashtable.h"
68402: #include "nsCSSRules.h"
19963: 
19963: class nsIRequest;
19963: class nsISupports;
19963: class nsPresContext;
21370: class nsIPrincipal;
19963: 
23932: class nsFontFaceLoader;
68402: class nsCSSFontFaceRule;
23932: 
23932: // nsUserFontSet - defines the loading mechanism for downloadable fonts
23932: class nsUserFontSet : public gfxUserFontSet
23932: {
23932: public:
23932:   nsUserFontSet(nsPresContext *aContext);
23932:   ~nsUserFontSet();
23932: 
23932:   // Called when this font set is no longer associated with a presentation.
23932:   void Destroy();
23932: 
23932:   // starts loading process, creating and initializing a nsFontFaceLoader obj
23932:   // returns whether load process successfully started or not
69055:   nsresult StartLoad(gfxProxyFontEntry *aFontToLoad, 
23932:                      const gfxFontFaceSrc *aFontFaceSrc);
23932: 
23932:   // Called by nsFontFaceLoader when the loader has completed normally.
23932:   // It's removed from the mLoaders set.
23932:   void RemoveLoader(nsFontFaceLoader *aLoader);
23932: 
68402:   PRBool UpdateRules(const nsTArray<nsFontFaceRuleContainer>& aRules);
68402: 
23932:   nsPresContext *GetPresContext() { return mPresContext; }
23932: 
68402:   virtual void ReplaceFontEntry(gfxProxyFontEntry *aProxy,
68402:                                 gfxFontEntry *aFontEntry);
68402: 
23932: protected:
68402:   // The font-set keeps track of the collection of rules, and their
68402:   // corresponding font entries (whether proxies or real entries),
68402:   // so that we can update the set without having to throw away
68402:   // all the existing fonts.
68402:   struct FontFaceRuleRecord {
68402:     nsRefPtr<gfxFontEntry>       mFontEntry;
68402:     nsFontFaceRuleContainer      mContainer;
68402:   };
68402: 
68402:   void InsertRule(nsCSSFontFaceRule *aRule, PRUint8 aSheetType,
68402:                   nsTArray<FontFaceRuleRecord>& oldRules,
68402:                   PRBool& aFontSetModified);
68402: 
23932:   nsPresContext *mPresContext;  // weak reference
23932: 
23932:   // Set of all loaders pointing to us. These are not strong pointers,
23932:   // but that's OK because nsFontFaceLoader always calls RemoveLoader on
23932:   // us before it dies (unless we die first).
23932:   nsTHashtable< nsPtrHashKey<nsFontFaceLoader> > mLoaders;
68402: 
68402:   nsTArray<FontFaceRuleRecord>   mRules;
23932: };
23932: 
21067: class nsFontFaceLoader : public nsIStreamLoaderObserver
19963: {
19963: public:
19963: 
69055:   nsFontFaceLoader(gfxProxyFontEntry *aFontToLoad, nsIURI *aFontURI, 
23932:                    nsUserFontSet *aFontSet, nsIChannel *aChannel);
19963:   virtual ~nsFontFaceLoader();
19963: 
19963:   NS_DECL_ISUPPORTS
21067:   NS_DECL_NSISTREAMLOADEROBSERVER 
19963: 
19963:   // initiate the load
19963:   nsresult Init();
23932:   // cancel the load and remove its reference to mFontSet
23932:   void Cancel();
19963: 
24480:   void DropChannel() { mChannel = nsnull; }
24480: 
62296:   void StartedLoading(nsIStreamLoader *aStreamLoader);
62296: 
62296:   static void LoadTimerCallback(nsITimer *aTimer, void *aClosure);
62296: 
21370:   static nsresult CheckLoadAllowed(nsIPrincipal* aSourcePrincipal,
21370:                                    nsIURI* aTargetURI,
21370:                                    nsISupports* aContext);
21370: 
22722: private:
69055:   nsRefPtr<gfxProxyFontEntry>  mFontEntry;
19963:   nsCOMPtr<nsIURI>        mFontURI;
23932:   nsRefPtr<nsUserFontSet> mFontSet;
23932:   nsCOMPtr<nsIChannel>    mChannel;
62296:   nsCOMPtr<nsITimer>      mLoadTimer;
62296: 
62296:   nsIStreamLoader        *mStreamLoader;
19963: };
19963: 
19963: #endif /* !defined(nsFontFaceLoader_h_) */

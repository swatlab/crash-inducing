     1: /* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 98983: /* This Source Code Form is subject to the terms of the Mozilla Public
 98983:  * License, v. 2.0. If a copy of the MPL was not distributed with this
 98983:  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
     1: 
 26260: #ifndef nsPluginSafety_h_
 26260: #define nsPluginSafety_h_
     1: 
     1: #include "npapi.h"
 70007: #include "nsPluginHost.h"
 14647: #include <prinrval.h>
     1: 
 69691: #if defined(XP_WIN)
     1: #define CALL_SAFETY_ON
     1: #endif
     1: 
125323: PRIntervalTime NS_NotifyBeginPluginCall();
 14647: void NS_NotifyPluginCall(PRIntervalTime);
 14647: 
     1: #ifdef CALL_SAFETY_ON
     1: 
 94707: #include "mozilla/Preferences.h"
 94707: 
 79445: extern bool gSkipPluginSafeCalls;
     1: 
     1: #define NS_INIT_PLUGIN_SAFE_CALLS                                  \
     1: PR_BEGIN_MACRO                                                     \
 94707:   gSkipPluginSafeCalls =                                           \
 94707:     ::mozilla::Preferences::GetBool("plugin.dont_try_safe_calls",  \
 94707:                                     gSkipPluginSafeCalls);         \
     1: PR_END_MACRO
     1: 
 55810: #define NS_TRY_SAFE_CALL_RETURN(ret, fun, pluginInst) \
     1: PR_BEGIN_MACRO                                     \
125323:   PRIntervalTime startTime = NS_NotifyBeginPluginCall(); \
     1:   if(gSkipPluginSafeCalls)                         \
     1:     ret = fun;                                     \
     1:   else                                             \
     1:   {                                                \
 60281:     MOZ_SEH_TRY                                    \
     1:     {                                              \
     1:       ret = fun;                                   \
     1:     }                                              \
 79533:     MOZ_SEH_EXCEPT(true)                           \
     1:     {                                              \
     1:       nsresult res;                                \
 29578:       nsCOMPtr<nsIPluginHost> host(do_GetService(MOZ_PLUGIN_HOST_CONTRACTID, &res));\
106838:       if(NS_SUCCEEDED(res) && (host != nullptr))    \
106838:         static_cast<nsPluginHost*>(host.get())->HandleBadPlugin(nullptr, pluginInst); \
     1:       ret = (NPError)NS_ERROR_FAILURE;             \
     1:     }                                              \
     1:   }                                                \
 14647:   NS_NotifyPluginCall(startTime);		   \
     1: PR_END_MACRO
     1: 
 55810: #define NS_TRY_SAFE_CALL_VOID(fun, pluginInst) \
     1: PR_BEGIN_MACRO                              \
125323:   PRIntervalTime startTime = NS_NotifyBeginPluginCall(); \
     1:   if(gSkipPluginSafeCalls)                  \
     1:     fun;                                    \
     1:   else                                      \
     1:   {                                         \
 60281:     MOZ_SEH_TRY                             \
     1:     {                                       \
     1:       fun;                                  \
     1:     }                                       \
 79533:     MOZ_SEH_EXCEPT(true)                    \
     1:     {                                       \
     1:       nsresult res;                         \
 29578:       nsCOMPtr<nsIPluginHost> host(do_GetService(MOZ_PLUGIN_HOST_CONTRACTID, &res));\
106838:       if(NS_SUCCEEDED(res) && (host != nullptr))\
106838:         static_cast<nsPluginHost*>(host.get())->HandleBadPlugin(nullptr, pluginInst);\
     1:     }                                       \
     1:   }                                         \
 14647:   NS_NotifyPluginCall(startTime);		   \
     1: PR_END_MACRO
     1: 
     1: #else // vanilla calls
     1: 
 55810: #define NS_TRY_SAFE_CALL_RETURN(ret, fun, pluginInst) \
     1: PR_BEGIN_MACRO                                     \
125323:   PRIntervalTime startTime = NS_NotifyBeginPluginCall(); \
     1:   ret = fun;                                       \
 14647:   NS_NotifyPluginCall(startTime);		               \
     1: PR_END_MACRO
     1: 
 55810: #define NS_TRY_SAFE_CALL_VOID(fun, pluginInst)     \
     1: PR_BEGIN_MACRO                                     \
125323:   PRIntervalTime startTime = NS_NotifyBeginPluginCall(); \
     1:   fun;                                             \
 14647:   NS_NotifyPluginCall(startTime);		               \
     1: PR_END_MACRO
     1: 
     1: #endif // CALL_SAFETY_ON
     1: 
 26260: #endif //nsPluginSafety_h_

19246: /* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
19246: /* ***** BEGIN LICENSE BLOCK *****
19246:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
19246:  *
19246:  * The contents of this file are subject to the Mozilla Public License Version
19246:  * 1.1 (the "License"); you may not use this file except in compliance with
19246:  * the License. You may obtain a copy of the License at
19246:  * http://www.mozilla.org/MPL/
19246:  *
19246:  * Software distributed under the License is distributed on an "AS IS" basis,
19246:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
19246:  * for the specific language governing rights and limitations under the
19246:  * License.
19246:  *
19246:  * The Original Code is mozilla.org code.
19246:  *
19246:  * The Initial Developer of the Original Code is
19246:  * Netscape Communications Corporation.
19246:  * Portions created by the Initial Developer are Copyright (C) 1998
19246:  * the Initial Developer. All Rights Reserved.
19246:  *
19246:  * Contributor(s):
19246:  *   Tim Copperfield <timecop@network.email.ne.jp>
19246:  *   Roland Mainz <roland.mainz@informatik.med.uni-giessen.de>
19246:  *
19246:  * Alternatively, the contents of this file may be used under the terms of
19246:  * either the GNU General Public License Version 2 or later (the "GPL"), or
19246:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
19246:  * in which case the provisions of the GPL or the LGPL are applicable instead
19246:  * of those above. If you wish to allow use of your version of this file only
19246:  * under the terms of either the GPL or the LGPL, and not to allow others to
19246:  * use your version of this file under the terms of the MPL, indicate your
19246:  * decision by deleting the provisions above and replace them with the notice
19246:  * and other provisions required by the GPL or the LGPL. If you do not delete
19246:  * the provisions above, a recipient may use your version of this file under
19246:  * the terms of any one of the MPL, the GPL or the LGPL.
19246:  *
19246:  * ***** END LICENSE BLOCK ***** */
19246: 
19246: #ifndef nsNPAPIPluginInstance_h_
19246: #define nsNPAPIPluginInstance_h_
19246: 
19246: #include "nsCOMPtr.h"
26912: #include "nsTArray.h"
19246: #include "nsIPlugin.h"
19246: #include "nsIPluginInstance.h"
29952: #include "nsIPluginTagInfo.h"
26912: #include "nsPIDOMWindow.h"
29834: #include "nsIPluginInstanceOwner.h"
29937: #include "nsITimer.h"
19246: 
20125: #include "npfunctions.h"
19246: #include "prlink.h"
19246: 
19246: class nsNPAPIPluginStreamListener;
19246: class nsPIDOMWindow;
19246: 
19246: struct nsInstanceStream
19246: {
19246:   nsInstanceStream *mNext;
19246:   nsNPAPIPluginStreamListener *mPluginStreamListener;
19246: 
19246:   nsInstanceStream();
19246:   ~nsInstanceStream();
19246: };
19246: 
29937: class nsNPAPITimer
29937: {
29937: public:
29937:   NPP npp;
29937:   uint32_t id;
29937:   nsCOMPtr<nsITimer> timer;
29937:   void (*callback)(NPP npp, uint32_t timerID);
29937: };
29937: 
29953: class nsNPAPIPluginInstance : public nsIPluginInstance
19246: {
19246: public:
19246:   NS_DECL_ISUPPORTS
19246:   NS_DECL_NSIPLUGININSTANCE
19246: 
19246:   nsresult GetNPP(NPP * aNPP);
19246: 
19246:   // Return the callbacks for the plugin instance.
19246:   nsresult GetCallbacks(const NPPluginFuncs ** aCallbacks);
19246: 
19246:   NPError SetWindowless(PRBool aWindowless);
19246: 
34217:   NPError SetWindowlessLocal(PRBool aWindowlessLocal);
34217: 
19246:   NPError SetTransparent(PRBool aTransparent);
19246: 
19246:   NPError SetWantsAllNetworkStreams(PRBool aWantsAllNetworkStreams);
19246: 
19246: #ifdef XP_MACOSX
19246:   void SetDrawingModel(NPDrawingModel aModel);
32019:   void SetEventModel(NPEventModel aModel);
19246: #endif
19246: 
19246:   nsresult NewNotifyStream(nsIPluginStreamListener** listener, 
19246:                            void* notifyData, 
19246:                            PRBool aCallNotify,
19246:                            const char * aURL);
19246: 
19246:   nsNPAPIPluginInstance(NPPluginFuncs* callbacks, PRLibrary* aLibrary);
19246: 
19246:   // Use Release() to destroy this
29937:   virtual ~nsNPAPIPluginInstance();
19246: 
19246:   // returns the state of mStarted
29937:   PRBool IsStarted();
19246: 
35426:   // cache this NPAPI plugin
35426:   nsresult SetCached(PRBool aCache);
19246: 
19246:   already_AddRefed<nsPIDOMWindow> GetDOMWindow();
19246: 
24475:   nsresult PrivateModeStateChanged();
29834: 
29834:   nsresult GetDOMElement(nsIDOMElement* *result);
29834: 
29937:   nsNPAPITimer* TimerWithID(uint32_t id, PRUint32* index);
29937:   uint32_t      ScheduleTimer(uint32_t interval, NPBool repeat, void (*timerFunc)(NPP npp, uint32_t timerID));
29937:   void          UnscheduleTimer(uint32_t timerID);
32019:   NPError       PopUpContextMenu(NPMenu* menu);
32019:   NPBool        ConvertPoint(double sourceX, double sourceY, NPCoordinateSpace sourceSpace, double *destX, double *destY, NPCoordinateSpace destSpace);
19246: protected:
29834:   nsresult InitializePlugin();
19246: 
29834:   nsresult GetTagType(nsPluginTagType *result);
29834:   nsresult GetAttributes(PRUint16& n, const char*const*& names,
29834:                          const char*const*& values);
29834:   nsresult GetParameters(PRUint16& n, const char*const*& names,
29834:                          const char*const*& values);
32799:   nsresult GetMode(PRInt32 *result);
19246: 
19246:   // A pointer to the plugin's callback functions. This information
19246:   // is actually stored in the plugin class (<b>nsPluginClass</b>),
19246:   // and is common for all plugins of the class.
30212:   NPPluginFuncs* mCallbacks;
19246: 
26260:   // The structure used to communicate between the plugin instance and
26260:   // the browser.
30212:   NPP_t mNPP;
19246: 
19246: #ifdef XP_MACOSX
19246:   NPDrawingModel mDrawingModel;
19246: #endif
19246: 
19246:   // these are used to store the windowless properties
19246:   // which the browser will later query
19246:   PRPackedBool mWindowless;
34217:   PRPackedBool mWindowlessLocal;
19246:   PRPackedBool mTransparent;
19246:   PRPackedBool mStarted;
19246:   PRPackedBool mCached;
19246:   PRPackedBool mWantsAllNetworkStreams;
19246: 
19246: public:
19246:   // True while creating the plugin, or calling NPP_SetWindow() on it.
19246:   PRPackedBool mInPluginInitCall;
30212:   PRLibrary* mLibrary;
19246:   nsInstanceStream *mStreams;
19246: 
29937: private:
26912:   nsTArray<PopupControlState> mPopupStates;
29808: 
30101:   char* mMIMEType;
29834: 
29834:   // Weak pointer to the owner. The owner nulls this out (by calling
29834:   // InvalidateOwner()) when it's no longer our owner.
29834:   nsIPluginInstanceOwner *mOwner;
29937: 
29937:   nsTArray<nsNPAPITimer*> mTimers;
32019: 
32019:   // non-null during a HandleEvent call
32799:   void* mCurrentPluginEvent;
19246: };
19246: 
19246: #endif // nsNPAPIPluginInstance_h_

 63261: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 98983: /* This Source Code Form is subject to the terms of the Mozilla Public
 98983:  * License, v. 2.0. If a copy of the MPL was not distributed with this
 98983:  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 63261: 
 97643: #include "RootAccessibleWrap.h"
 63261: 
 83479: #include "Compatibility.h"
106800: #include "nsCoreUtils.h"
 63261: #include "nsWinUtils.h"
 63261: 
 63261: #include "nsIDOMEventTarget.h"
 72328: #include "nsEventListenerManager.h"
 63261: 
 83479: using namespace mozilla::a11y;
 83479: 
 63261: ////////////////////////////////////////////////////////////////////////////////
 63261: // Constructor/desctructor
 63261: 
 97643: RootAccessibleWrap::
 97643:   RootAccessibleWrap(nsIDocument* aDocument, nsIContent* aRootContent,
 89801:                      nsIPresShell* aPresShell) :
 97643:   RootAccessible(aDocument, aRootContent, aPresShell)
 63261: {
 63261: }
 63261: 
 97643: RootAccessibleWrap::~RootAccessibleWrap()
 63261: {
 63261: }
 63261: 
 63261: ////////////////////////////////////////////////////////////////////////////////
 97643: // RootAccessible
 63261: 
 63261: void
 99568: RootAccessibleWrap::DocumentActivated(DocAccessible* aDocument)
 63261: {
 83479:   if (Compatibility::IsDolphin() &&
 74230:       nsCoreUtils::IsTabDocument(aDocument->GetDocumentNode())) {
 63261:     PRUint32 count = mChildDocuments.Length();
 63261:     for (PRUint32 idx = 0; idx < count; idx++) {
 99568:       DocAccessible* childDoc = mChildDocuments[idx];
 63261:       HWND childDocHWND = static_cast<HWND>(childDoc->GetNativeWindow());
 63261:       if (childDoc != aDocument)
 63261:         nsWinUtils::HideNativeWindow(childDocHWND);
 63261:       else
 63261:         nsWinUtils::ShowNativeWindow(childDocHWND);
 63261:     }
 63261:   }
 63261: }

38727: /* -*- Mode: C++; tab-width: 20; indent-tabs-mode: nil; c-basic-offset: 4 -*-
38727:  * ***** BEGIN LICENSE BLOCK *****
38727:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
38727:  *
38727:  * The contents of this file are subject to the Mozilla Public License Version
38727:  * 1.1 (the "License"); you may not use this file except in compliance with
38727:  * the License. You may obtain a copy of the License at
38727:  * http://www.mozilla.org/MPL/
38727:  *
38727:  * Software distributed under the License is distributed on an "AS IS" basis,
38727:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
38727:  * for the specific language governing rights and limitations under the
38727:  * License.
38727:  *
38727:  * The Original Code is Mozilla Foundation code.
38727:  *
38727:  * The Initial Developer of the Original Code is Mozilla Foundation.
38727:  * Portions created by the Initial Developer are Copyright (C) 2010
38727:  * the Initial Developer. All Rights Reserved.
38727:  *
38727:  * Contributor(s):
38727:  *   Bas Schouten <bschouten@mozilla.com>
38727:  *
38727:  * Alternatively, the contents of this file may be used under the terms of
38727:  * either the GNU General Public License Version 2 or later (the "GPL"), or
38727:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
38727:  * in which case the provisions of the GPL or the LGPL are applicable instead
38727:  * of those above. If you wish to allow use of your version of this file only
38727:  * under the terms of either the GPL or the LGPL, and not to allow others to
38727:  * use your version of this file under the terms of the MPL, indicate your
38727:  * decision by deleting the provisions above and replace them with the notice
38727:  * and other provisions required by the GPL or the LGPL. If you do not delete
38727:  * the provisions above, a recipient may use your version of this file under
38727:  * the terms of any one of the MPL, the GPL or the LGPL.
38727:  *
38727:  * ***** END LICENSE BLOCK ***** */
38727: 
38727: #ifndef GFX_WINDOWSDWRITEFONTS_H
38727: #define GFX_WINDOWSDWRITEFONTS_H
38727: 
38727: #include <dwrite.h>
38727: 
38727: #include "gfxFont.h"
38727: #include "gfxUserFontSet.h"
38727: #include "cairo-win32.h"
38727: 
43526: #include "nsDataHashtable.h"
43526: #include "nsHashKeys.h"
43526: 
38727: /**
38727:  * \brief Class representing a font face for a font entry.
38727:  */
38727: class gfxDWriteFont : public gfxFont 
38727: {
38727: public:
38727:     gfxDWriteFont(gfxFontEntry *aFontEntry,
39306:                   const gfxFontStyle *aFontStyle,
43475:                   PRBool aNeedsBold = PR_FALSE,
43475:                   AntialiasOption = kAntialiasDefault);
38727:     ~gfxDWriteFont();
38727: 
43475:     virtual gfxFont* CopyWithAntialiasOption(AntialiasOption anAAOption);
43475: 
38727:     virtual nsString GetUniqueName();
38727: 
38727:     virtual const gfxFont::Metrics& GetMetrics();
38727: 
38727:     virtual PRUint32 GetSpaceGlyph();
38727: 
38727:     virtual PRBool SetupCairoFont(gfxContext *aContext);
38727: 
61083:     virtual PRBool IsValid();
39352: 
61083:     gfxFloat GetAdjustedSize() {
61083:         return mAdjustedSize;
61083:     }
39352: 
61083:     IDWriteFontFace *GetFontFace();
40504: 
43526:     // override gfxFont table access function to bypass gfxFontEntry cache,
43526:     // use DWrite API to get direct access to system font data
43526:     virtual hb_blob_t *GetFontTable(PRUint32 aTag);
43526: 
61086:     virtual PRBool ProvidesGlyphWidths();
59850: 
61073:     virtual PRInt32 GetGlyphWidth(gfxContext *aCtx, PRUint16 aGID);
59850: 
38727: protected:
61073:     friend class gfxDWriteShaper;
61073: 
43527:     virtual void CreatePlatformShaper();
43527: 
38727:     void ComputeMetrics();
38727: 
61074:     PRBool HasBitmapStrikeForSize(PRUint32 aSize);
61074: 
38727:     cairo_font_face_t *CairoFontFace();
38727: 
38727:     cairo_scaled_font_t *CairoScaledFont();
38727: 
43526:     static void DestroyBlobFunc(void* userArg);
43526: 
38727:     nsRefPtr<IDWriteFontFace> mFontFace;
38727:     cairo_font_face_t *mCairoFontFace;
38727:     cairo_scaled_font_t *mCairoScaledFont;
38727: 
61083:     gfxFont::Metrics          *mMetrics;
59850: 
59850:     // cache of glyph widths in 16.16 fixed-point pixels
59850:     nsDataHashtable<nsUint32HashKey,PRInt32>    mGlyphWidths;
59850: 
59850:     PRPackedBool mNeedsOblique;
59850:     PRPackedBool mNeedsBold;
61074:     PRPackedBool mUseSubpixelPositions;
38727: };
38727: 
38727: #endif

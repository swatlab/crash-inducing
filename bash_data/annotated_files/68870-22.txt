48450: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
48450: /* ***** BEGIN LICENSE BLOCK *****
48450:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
48450:  *
48450:  * The contents of this file are subject to the Mozilla Public License Version
48450:  * 1.1 (the "License"); you may not use this file except in compliance with
48450:  * the License. You may obtain a copy of the License at
48450:  * http://www.mozilla.org/MPL/
48450:  *
48450:  * Software distributed under the License is distributed on an "AS IS" basis,
48450:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
48450:  * for the specific language governing rights and limitations under the
48450:  * License.
48450:  *
48450:  * The Original Code is the Mozilla SMIL Module.
48450:  *
48450:  * The Initial Developer of the Original Code is Mozilla Foundation.
48450:  * Portions created by the Initial Developer are Copyright (C) 2010
48450:  * the Initial Developer. All Rights Reserved.
48450:  *
48450:  * Contributor(s):
48450:  *   Brian Birtles <birtles@gmail.com>
48450:  *
48450:  * Alternatively, the contents of this file may be used under the terms of
48450:  * either the GNU General Public License Version 2 or later (the "GPL"), or
48450:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
48450:  * in which case the provisions of the GPL or the LGPL are applicable instead
48450:  * of those above. If you wish to allow use of your version of this file only
48450:  * under the terms of either the GPL or the LGPL, and not to allow others to
48450:  * use your version of this file under the terms of the MPL, indicate your
48450:  * decision by deleting the provisions above and replace them with the notice
48450:  * and other provisions required by the GPL or the LGPL. If you do not delete
48450:  * the provisions above, a recipient may use your version of this file under
48450:  * the terms of any one of the MPL, the GPL or the LGPL.
48450:  *
48450:  * ***** END LICENSE BLOCK ***** */
48450: 
48450: #include "nsDOMTimeEvent.h"
48450: #include "nsGUIEvent.h"
48450: #include "nsPresContext.h"
48450: #include "nsIInterfaceRequestorUtils.h"
68870: #include "nsIDOMAbstractView.h"
48450: 
48450: nsDOMTimeEvent::nsDOMTimeEvent(nsPresContext* aPresContext, nsEvent* aEvent)
48450:   : nsDOMEvent(aPresContext, aEvent ? aEvent : new nsUIEvent(PR_FALSE, 0, 0)),
48450:     mDetail(0)
48450: {
48450:   if (aEvent) {
48450:     mEventIsInternal = PR_FALSE;
48450:   } else {
48450:     mEventIsInternal = PR_TRUE;
48450:     mEvent->eventStructType = NS_SMIL_TIME_EVENT;
48450:   }
48450: 
48450:   if (mEvent->eventStructType == NS_SMIL_TIME_EVENT) {
48450:     nsUIEvent* event = static_cast<nsUIEvent*>(mEvent);
48450:     mDetail = event->detail;
48450:   }
48450: 
48450:   mEvent->flags |= NS_EVENT_FLAG_CANT_BUBBLE |
48450:                    NS_EVENT_FLAG_CANT_CANCEL;
48450: 
48450:   if (mPresContext) {
48450:     nsCOMPtr<nsISupports> container = mPresContext->GetContainer();
48450:     if (container) {
48450:       nsCOMPtr<nsIDOMWindowInternal> window = do_GetInterface(container);
48450:       if (window) {
48450:         mView = do_QueryInterface(window);
48450:       }
48450:     }
48450:   }
48450: }
48450: 
48450: NS_IMPL_CYCLE_COLLECTION_CLASS(nsDOMTimeEvent)
48450: 
48450: NS_IMPL_CYCLE_COLLECTION_UNLINK_BEGIN_INHERITED(nsDOMTimeEvent, nsDOMEvent)
48450:   NS_IMPL_CYCLE_COLLECTION_UNLINK_NSCOMPTR(mView)
48450: NS_IMPL_CYCLE_COLLECTION_UNLINK_END
48450: 
48450: NS_IMPL_CYCLE_COLLECTION_TRAVERSE_BEGIN_INHERITED(nsDOMTimeEvent, nsDOMEvent)
48450:   NS_IMPL_CYCLE_COLLECTION_TRAVERSE_NSCOMPTR(mView)
48450: NS_IMPL_CYCLE_COLLECTION_TRAVERSE_END
48450: 
48450: NS_IMPL_ADDREF_INHERITED(nsDOMTimeEvent, nsDOMEvent)
48450: NS_IMPL_RELEASE_INHERITED(nsDOMTimeEvent, nsDOMEvent)
48450: 
48450: DOMCI_DATA(TimeEvent, nsDOMTimeEvent)
48450: 
48450: NS_INTERFACE_MAP_BEGIN_CYCLE_COLLECTION_INHERITED(nsDOMTimeEvent)
48450:   NS_INTERFACE_MAP_ENTRY(nsIDOMTimeEvent)
48450:   NS_DOM_INTERFACE_MAP_ENTRY_CLASSINFO(TimeEvent)
48450: NS_INTERFACE_MAP_END_INHERITING(nsDOMEvent)
48450: 
48450: NS_IMETHODIMP
68870: nsDOMTimeEvent::GetView(nsIDOMAbstractView** aView)
48450: {
48450:   *aView = mView;
48450:   NS_IF_ADDREF(*aView);
48450:   return NS_OK;
48450: }
48450: 
48450: NS_IMETHODIMP
48450: nsDOMTimeEvent::GetDetail(PRInt32* aDetail)
48450: {
48450:   *aDetail = mDetail;
48450:   return NS_OK;
48450: }
48450: 
48450: NS_IMETHODIMP
48450: nsDOMTimeEvent::InitTimeEvent(const nsAString& aTypeArg,
68870:                               nsIDOMAbstractView* aViewArg,
48450:                               PRInt32 aDetailArg)
48450: {
48450:   nsresult rv = nsDOMEvent::InitEvent(aTypeArg, PR_FALSE /*doesn't bubble*/,
48450:                                                 PR_FALSE /*can't cancel*/);
48450:   NS_ENSURE_SUCCESS(rv, rv);
48450: 
48450:   mDetail = aDetailArg;
48450:   mView = aViewArg;
48450: 
48450:   return NS_OK;
48450: }
48450: 
48450: nsresult NS_NewDOMTimeEvent(nsIDOMEvent** aInstancePtrResult,
48450:                             nsPresContext* aPresContext,
48450:                             nsEvent* aEvent)
48450: {
48450:   nsDOMTimeEvent* it = new nsDOMTimeEvent(aPresContext, aEvent);
48450:   return CallQueryInterface(it, aInstancePtrResult);
48450: }

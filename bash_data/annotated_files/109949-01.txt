     1: Snapshots of cairo and glitz for mozilla usage.
     1: 
     1: We only include the relevant parts of each release (generally, src/*.[ch]),
     1: as we have Makefile.in's that integrate into the Mozilla build system.  For
     1: documentation and similar, please see the official tarballs at
     1: http://www.cairographics.org/.
     1: 
     1: VERSIONS:
     1: 
 41340:   cairo (12d521df8acc483b2daa844d4f05dc2fe2765ba6)
 95765:   pixman (0.24.2)
     1: 
   314: ==== Patches ====
   314: 
   314: Some specific things:
   314: 
   314: max-font-size.patch: Clamp freetype font size to 1000 to avoid overflow issues
   314: 
  4139: win32-logical-font-scale.patch: set CAIRO_WIN32_LOGICAL_FONT_SCALE to 1
  4139: 
  2365: nonfatal-assertions.patch: Make assertions non-fatal
  4414: 
 12588: buggy-repeat.patch: Unconditionally turn on buggy-repeat handling to bandaid bug 413583.
 12588: 
 21379: cairo-version-fixes.patch: fix up cairo-version.c/cairo-version.h for in-place builds
 21379: 
 21539: win32-ddb-dib.patch: fix for bug 455513; not upstream yet pending feebdack
 21539: 
 24333: win32-vertically-offset-glyph.patch: bug 454098; vertical positioning errors when drawing glyph runs including delta-y offsets on screen via GDI
 24332: 
 24710: ignore-rank0.patch: bug 474886; Not redrawing the background when changing page on flickr
 24710: 
 24817: win32-canvas-glyph-position.patch: bug 475092; horizontal positioning errors when drawing glyph runs with delta-y offsets to canvas through win32-font
 24817: 
 25426: win32-cleartype-clipping.patch: bug 445087; some glyphs are clipped, mainly on right-hand edge, when ClearType is enabled and drawing to RGBA canvas
 25426: 
 29335: on-edge.patch: reverts the in-fill semantic change.
 29335: 
 26419: wrap-source_image.patch: make sure we don't free the source image until we're done with it.
 26419: 
 26419: zero-sized.patch: deal with zero sized surface in ways less likely to crash.
 26419: 
 28293: text-path-filling-threshold.patch: use path filling instead of platform glyph rasterization at a smaller size threshold of 256 device pixels, if the backend supports native filling (which we assume will be fast).
 28293: 
 29335: zombie-face.patch: bug 486974; leak and possible crash with @font-face{src:url()}.  Upstream commit: 0238fe2cafea2e1ed19bb222117bd73ee6898d4d
 29335: 
 29444: win32-raster.patch: bug 498689; use scanline rasterizer on win32
 29444: 
 32382: quartz-falback.patch: try to fix Quartz fallback-to-pixman path; possiby incorrect and obsoleted by Andrea Canciani patch
 32382: 
 32382: quartz-repeating-radial-gradients.patch: use Quartz to render repeating radial gradients instead of falling back
 32382: 
 32382: quartz-const-globals.patch: make some Quartz color function data const globals instead of local variables
 32382: 
 32382: quartz-minimze-gradient-repeat.patch: reduce the number of gradient stop repetitions we use, to improve quality of Quartz's gradient rendering
 32382: 
 34472: quartz-first-stop.patch: return the first stop for negative positions on the gradient line of a nonrepeating linear gradient
 34472: 
 36648: quartz-glyph-extents.patch: bug 534260; work around incorrect glyph extents returned by quartz for anomalous empty glyphs
 36648: 
 42521: quartz-state.patch: bug 522859; refactor cairo-quartz-surface so that state local to a drawing operation is stored in a cairo_quartz_drawing_state_t instead of the surface
 42521: 
 42981: quartz-cache-CGImageRef.patch: cache CGImageRef for a CGBitmapContext; when we reuse it, Quartz will cache stuff, improving performance
 42981: 
 42981: quartz-remove-snapshot.patch: remove broken implementation of backend snapshot
 42981: 
 42981: quartz-cglayers.patch: add support for cairo surfaces backed by CGLayers
 42981: 
 43778: quartz-cglayers-fix-fallback.patch: Bug 572912; fix bug in fallback code in previous patch
 43778: 
 57346: quartz-get-image.patch: Bug 575521; add a way to get the image surface associated with a surface
 57346: 
 59440: quartz-create-for-data.patch: Bug 575521; add a way to create quartz surfaces backed with application-provided data
 59440: 
 37278: premultiply-alpha-solid-gradients.patch: bug 539165; multiply the solid color by the alpha component before using it for a solid surface
 37278: 
 38966: xlib-initialize-members.path: bug 548793; initialize XRender version if the server doesn't have the extension
 38966: 
 41340: remove-comma: remove a comma from enum
 41340: 
 41340: d2d.patch: add d2d support
 41340: 
 41340: fix-zero-len-graident.patch: fix zero length gradients
 41340: 
 41340: fix-clip-copy.patch: fix clip copying
 41340: 
 41340: fix-clip-region-simplification.patch: fixes a bug in clip region simplifications
 41340: 
 41340: expand-in-stroke-limits.patch: expand the in-stroke limits to avoid a bug
 41340: 
 41340: d2d-dwrite.patch: update the d2d/dwrite stuff
 41340: 
 41340: add-a-stash-of-cairo_t-s.patch: use the stash to avoid malloc/freeing cairo_t's
 41340: 
 41340: bgr.patch: fix image wrapping
 41340: 
 41340: disable-server-graidents.patch: disable server-side gradients
 41340: 
 41340: clip-invariant.patch: make rasterization closer to being clip invariant
 41340: 
 41340: fix-unnecessary-fallback.patch: avoid unnecessary fallback
 41340: 
 41340: handle-a1-upload.patch: handle a1 image uploads through converter
 41340: 
 41340: surface-clipper.patch: remove an incorrect optimization
 41340: 
 41340: fix-win32-show-glyphs-clipping.patch: fix a clipping bug
 41340: 
 41340: native-clipping.patch: Add support for a native clipping api
 41340: 
 41340: quartz-is-clear.patch: Propagate the quartz is_clear flag.
 41340: 
 41514: cairo-qt-compile.patch: Fix compile error, return not reached, and clone_similar interface
 41514: 
 43476: dwrite-glyph-extents.patch: Add padding to extents of antialiased glyphs, to avoid unwanted clipping. (bug 568191)
 43476: 
 43646: fix-ps-output.patch: PS: Add missing 'q' when resetting clip path (42b5cac7668625c9761113ff72b47af5cfd10377)
 43646: 
 43648: ensure-text-flushed.patch: PDF-operators: ensure text operations flushed before emitting clip (42b5cac7668625c9761113ff72b47af5cfd10377)
 43648: 
 46298: fix-xcopyarea-with-clips.patch: 5d07307b691afccccbb15f773d5231669ba44f5a
 46298: 
 47119: cairo-x-visual.patch: make valid visua for cairo_xlib_surface_create_with_xrender_format (55037bfb2454a671332d961e061c712ab5471580)
 47119: 
 47726: win32-transparent-surface.patch: add API so we can create a win32 surface for an HDC and indicate the surface has an alpha channel
 47726: 
 47854: cairo_qt_glyphs.patch: Drop X surface from Qt surface, add support for new qt glyphs api
 47854: 
 48106: empty-clip-rectangles.patch: f2fa15680ec3ac95cb68d4957557f06561a7dc55
 48106: 
 48106: empty-clip-extents.patch: b79ea8a6cab8bd28aebecf6e1e8229d5ac017264
 48106: 
 48106: clip-rects-surface-extents.patch: 108b1c7825116ed3f93aa57384bbd3290cdc9181
 48106: 
 48712: disable-previous-scaled-font-cache.patch: Disable the previous-scaled-font-cache until we figure out our ctm handling (#583035)
 48712:  
 48764: copyarea-with-alpha.patch: support simple overlapping self copies in (some) color_alpha xlib surfaces. https://bugs.freedesktop.org/show_bug.cgi?id=29250
 48764: 
 50755: fix-clip-test.patch: Use y 498c10032ea3f8631a928cd7df96766f2c8ddca4
 50755: 
 57379: quartz-refactor-surface-setup.patch: Extract the surface-source setup chunk of _cairo_quartz_setup_state into its own function
 57379: 
 57380: quartz-fix-PAD.patch: Treat PAD like NONE instead of REPEAT
 57380: 
 57381: quartz-mask-non-OVER.patch: Don't use CGContextSetAlpha to optimize alpha masking for non-OVER operators
 57381: 
 57382: quartz-layers-content.patch: Store cairo content type in CGLayer surfaces
 57382: 
 57384: quartz-optimize-OVER.patch: Optimize OVER to SOURCE for opaque patterns
 57384: 
 57901: quartz-check-imageSurfaceEquiv.patch: Drop cairo_quartz_surface_t's "imageSurfaceEquiv" member variable if we have problems creating it
 57901: 
 60853: disable-subpixel-antialiasing.patch: Add API to disable subpixel antialiasing completely for a target surface
 60853: 
 60854: tee-surfaces-pointwise.patch: Composite tee subsurfaces pointwise if possible
 60854: 
 60855: pattern_get_surface-no-error.patch: Don't put a pattern into error if cairo_pattern_get_surface fails
 60855: 
 61032: missing-cairo-clip-init.diff: Missing cairo_clip_init call in cairo_gstate_show_text_glyphs lead to crash
 61032: 
 61033: fix-cairo-win32-print-gdi-error.diff: Don't use fwprintf with char* format.  Flush stderr so that all error messages appears before exit.
 61033: 
 63335: pixman-image-transform.patch: Reset the transform on pixman images when using them as destinations.
 63335: 
 73667: fix-cairo-surface-wrapper-flush-build-warning.patch: Ensures that _cairo_surface_wrapper_flush always returns a status, to silence the build warning
 73667: 
 76888: fixup-unbounded.patch: Hack to work around bad assumption.
 77287: 
 77287: quartz-get-image-performance: Make cairo_quartz_get_image faster in the failure case by not flushing unless we are going to succeed.
 77287: 
 77755: lround-c99-only.patch: Only use lround in C99 programs.
 77755: 
 78282: unicode-printing.patch: Print as unicode (bug 454532)
 78282: 
 86771: quartz-mark-dirty.patch: Add a quartz implementation of mark_dirty_rectangle (bug 715704)
 86771: 
 88623: expose-snapshot.patch: Make functions to add snapshots public, as well as allow creating null surfaces publically. (bug 715658)
 88623: 
 93748: fix-build-with-Werror=return-type.patch: Fix builds with -Werror=return-type (bug 737909)
 93748: 
 97598: avoid-extend-none.patch: Avoid incorrectly using EXTEND_NONE (bug 751668)
 97598: 
103388: win32-ExtCreatePen-zero-size.patch: Don't pass zero width or dash lengths to ExtCreatePen (bug 768348)
103388: 
106422: d2d-repeating-gradients.patch: Minimize number of gradient stops added to handle repeating with path fills (bug 768775)
106422: 
108666: xlib-glyph-clip-region.patch: bug 709477, addressed upstream by be1ff2f45fdbc69537e513834fcffa0435e63073
108666: 
109949: setlcdfilter_in_tree.patch bug 790139; force cairo to use FT_Library_SetLcdFilter from our in tree library rather than picking it up from the system
109949: 
 12588: ==== pixman patches ====
 12588: 
 43029: pixman-android-cpu-detect.patch: Add CPU detection support for Android, where we can't reliably access /proc/self/auxv.
 43029: 
 35697: pixman-rename-and-endian.patch: include cairo-platform.h for renaming of external symbols and endian macros
 10415: 
 41920: NOTE: we previously supported ARM assembler on MSVC, this has been removed because of the maintenance burden
 41920: 
 58364: pixman-export.patch: use cairo_public for PIXMAN_EXPORT to make sure pixman symbols are not exported in libxul
 58364: 
 95765: pixman-limits.patch: include limits.h for SIZE_MAX
 86473: 
 98296: pixman-lowres-interp.patch: Use lower quality interpolation for more speed.
 98296: 
 98614: pixman-bilinear-fastpath.patch: Bilinear fast paths for non-neon
 98614: 
104467: pixman-16-bit-pipeline.patch: 16 bit pipeline for dithering
104467: 
104468: pixman-dither.patch: Add dithering of 16 bit gradients
104468: 
 21300: ==== disable printing patch ====
 21300: 
 21300: disable-printing.patch:  allows us to use NS_PRINTING to disable printing.

85969: Components.utils.import("resource://gre/modules/FileUtils.jsm");        
85969: 
85969: function loadIntoWindow(window) {}
85969: function unloadFromWindow(window) {}
85969: 
85969: function setDefaultPrefs() {
85969:     // This code sets the preferences for extension-based reftest; for
85969:     // command-line based reftest they are set in function handler_handle in
85969:     // reftest-cmdline.js.  These two locations should stay in sync.
85969:     //
85969:     // FIXME: These should be in only one place.
85969:     var prefs = Components.classes["@mozilla.org/preferences-service;1"].
85969:                 getService(Components.interfaces.nsIPrefService);
85969:     var branch = prefs.getDefaultBranch("");
85969:     branch.setBoolPref("gfx.color_management.force_srgb", true);
85969:     branch.setBoolPref("browser.dom.window.dump.enabled", true);
85969:     branch.setIntPref("ui.caretBlinkTime", -1);
85969:     branch.setBoolPref("dom.send_after_paint_to_content", true);
85969:     // no slow script dialogs
85969:     branch.setIntPref("dom.max_script_run_time", 0);
85969:     branch.setIntPref("dom.max_chrome_script_run_time", 0);
85969:     branch.setIntPref("hangmonitor.timeout", 0);
88010:     // Ensure autoplay is enabled for all platforms.
88010:     branch.setBoolPref("media.autoplay.enabled", true);
85969: }
85969: 
85969: var windowListener = {
85969:     onOpenWindow: function(aWindow) {
85969:         let domWindow = aWindow.QueryInterface(Components.interfaces.nsIInterfaceRequestor).getInterface(Components.interfaces.nsIDOMWindowInternal || Components.interfaces.nsIDOMWindow);
85969:         domWindow.addEventListener("load", function() {
85969:             domWindow.removeEventListener("load", arguments.callee, false);
85969: 
85969:             let wm = Components.classes["@mozilla.org/appshell/window-mediator;1"].getService(Components.interfaces.nsIWindowMediator);
85969: 
85969:             // Load into any existing windows
85969:             let enumerator = wm.getEnumerator("navigator:browser");
85969:             while (enumerator.hasMoreElements()) {
85969:                 let win = enumerator.getNext().QueryInterface(Components.interfaces.nsIDOMWindow);
85969:                 setDefaultPrefs();
85969:                 Components.utils.import("chrome://reftest/content/reftest.jsm");
87622:                 win.addEventListener("pageshow", function() {
87622:                     win.removeEventListener("pageshow", arguments.callee); 
87622:                     // We add a setTimeout here because windows.innerWidth/Height are not set yet;
87622:                     win.setTimeout(function () {OnRefTestLoad(win);}, 0);
87622:                 });
85969:                 break;
85969:             }
85969:         }, false);
85969:    },
85969:    onCloseWindow: function(aWindow){ },
85969:    onWindowTitleChange: function(){ },
85969: };
85969: 
85969: function startup(aData, aReason) {
85969:     let wm = Components.classes["@mozilla.org/appshell/window-mediator;1"].
85969:              getService (Components.interfaces.nsIWindowMediator);
85969: 
85969:     Components.manager.addBootstrappedManifestLocation(aData.installPath);
85969: 
85969:     // Load into any new windows
85969:     wm.addListener(windowListener);
85969: }
85969: 
85969: function shutdown(aData, aReason) {
85969:     // When the application is shutting down we normally don't have to clean up any UI changes
85969:     if (aReason == APP_SHUTDOWN)
85969:         return;
85969: 
85969:     let wm = Components.classes["@mozilla.org/appshell/window-mediator;1"].
85969:              getService(Components.interfaces.nsIWindowMediator);
85969: 
85969:     // Stop watching for new windows
85969:     wm.removeListener(windowListener);
85969: 
85969:     // Unload from any existing windows
85969:     let enumerator = wm.getEnumerator("navigator:browser");
85969:     while (enumerator.hasMoreElements()) {
85969:         let win = enumerator.getNext().QueryInterface(Components.interfaces.nsIDOMWindow);
85969:         unloadFromWindow(win);
85969:     }
85969: }
85969: 
85969: function install(aData, aReason) { }
85969: function uninstall(aData, aReason) { }
85969: 

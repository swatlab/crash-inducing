     1: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
     1:  *
 99778:  * This Source Code Form is subject to the terms of the Mozilla Public
 99778:  * License, v. 2.0. If a copy of the MPL was not distributed with this
 99778:  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
     1: 
     1: #include "nsPKIParamBlock.h"
     1: #include "nsIServiceManager.h"
     1: #include "nsIDialogParamBlock.h"
     1: #include "nsIMutableArray.h"
     1: 
     1: NS_IMPL_THREADSAFE_ISUPPORTS2(nsPKIParamBlock, nsIPKIParamBlock,
     1:                                                nsIDialogParamBlock)
     1: 
     1: nsPKIParamBlock::nsPKIParamBlock()
     1: {
     1: }
     1: 
     1: nsresult
     1: nsPKIParamBlock::Init()
     1: {
     1:   mDialogParamBlock = do_CreateInstance(NS_DIALOGPARAMBLOCK_CONTRACTID);
119832:   return (mDialogParamBlock == nullptr) ? NS_ERROR_OUT_OF_MEMORY : NS_OK;
     1: }
     1: 
     1: nsPKIParamBlock::~nsPKIParamBlock()
     1: {
     1: }
     1: 
     1: 
     1: NS_IMETHODIMP 
108991: nsPKIParamBlock::SetNumberStrings( int32_t inNumStrings )
     1: {
     1:   return mDialogParamBlock->SetNumberStrings(inNumStrings);
     1: }
     1: 
     1: NS_IMETHODIMP 
108991: nsPKIParamBlock::SetInt(int32_t inIndex, int32_t inInt)
     1: {
     1:   return mDialogParamBlock->SetInt(inIndex, inInt);
     1: }
     1: 
     1: NS_IMETHODIMP 
108991: nsPKIParamBlock::GetInt(int32_t inIndex, int32_t *outInt)
     1: {
     1:   return mDialogParamBlock->GetInt(inIndex, outInt);
     1: }
     1: 
     1: 
     1: NS_IMETHODIMP 
108991: nsPKIParamBlock::GetString(int32_t inIndex, PRUnichar **_retval)
     1: {
     1:   return mDialogParamBlock->GetString(inIndex, _retval);
     1: }
     1: 
     1: NS_IMETHODIMP 
108991: nsPKIParamBlock::SetString(int32_t inIndex, const PRUnichar *inString)
     1: {
     1:   return mDialogParamBlock->SetString(inIndex, inString);
     1: }
     1: 
     1: NS_IMETHODIMP
     1: nsPKIParamBlock::GetObjects(nsIMutableArray * *aObjects)
     1: {
     1:   return mDialogParamBlock->GetObjects(aObjects);
     1: }
     1: 
     1: NS_IMETHODIMP
     1: nsPKIParamBlock::SetObjects(nsIMutableArray * aObjects)
     1: {
     1:   return mDialogParamBlock->SetObjects(aObjects);
     1: }
     1: 
     1: 
     1: 
108991: /* void setISupportAtIndex (in int32_t index, in nsISupports object); */
     1: NS_IMETHODIMP 
108991: nsPKIParamBlock::SetISupportAtIndex(int32_t index, nsISupports *object)
     1: {
     1:   if (!mSupports) {
     1:     mSupports = do_CreateInstance(NS_SUPPORTSARRAY_CONTRACTID);
119832:     if (mSupports == nullptr) {
     1:       return NS_ERROR_OUT_OF_MEMORY;
     1:     }
     1:   }
107639:   // Ignore any InsertElementAt error, because this function always did that
107639:   mSupports->InsertElementAt(object, index-1);
107639:   return NS_OK;
     1: }
     1: 
108991: /* nsISupports getISupportAtIndex (in int32_t index); */
     1: NS_IMETHODIMP 
108991: nsPKIParamBlock::GetISupportAtIndex(int32_t index, nsISupports **_retval)
     1: {
     1:   NS_ENSURE_ARG(_retval);
     1: 
     1:   *_retval = mSupports->ElementAt(index-1);
     1:   return NS_OK;
     1: }
     1: 
     1: 

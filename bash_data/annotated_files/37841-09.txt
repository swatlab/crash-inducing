36266: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
36266: /* ***** BEGIN LICENSE BLOCK *****
36266:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
36266:  *
36266:  * The contents of this file are subject to the Mozilla Public License Version
36266:  * 1.1 (the "License"); you may not use this file except in compliance with
36266:  * the License. You may obtain a copy of the License at
36266:  * http://www.mozilla.org/MPL/
36266:  *
36266:  * Software distributed under the License is distributed on an "AS IS" basis,
36266:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
36266:  * for the specific language governing rights and limitations under the
36266:  * License.
36266:  *
36266:  * The Original Code is mozilla.org code.
36266:  *
36266:  * The Initial Developer of the Original Code is
36266:  * Netscape Communications Corporation.
36266:  * Portions created by the Initial Developer are Copyright (C) 1998
36266:  * the Initial Developer. All Rights Reserved.
36266:  *
36266:  * Contributor(s):
36266:  *  Josh Aas <josh@mozilla.com>
36266:  *
36266:  * Alternatively, the contents of this file may be used under the terms of
36266:  * either the GNU General Public License Version 2 or later (the "GPL"), or
36266:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
36266:  * in which case the provisions of the GPL or the LGPL are applicable instead
36266:  * of those above. If you wish to allow use of your version of this file only
36266:  * under the terms of either the GPL or the LGPL, and not to allow others to
36266:  * use your version of this file under the terms of the MPL, indicate your
36266:  * decision by deleting the provisions above and replace them with the notice
36266:  * and other provisions required by the GPL or the LGPL. If you do not delete
36266:  * the provisions above, a recipient may use your version of this file under
36266:  * the terms of any one of the MPL, the GPL or the LGPL.
36266:  *
36266:  * ***** END LICENSE BLOCK ***** */
36266: 
36266: #ifndef nsPluginTags_h_
36266: #define nsPluginTags_h_
36266: 
36266: #include "nscore.h"
36266: #include "prtypes.h"
36266: #include "nsAutoPtr.h"
36266: #include "nsCOMPtr.h"
36266: #include "nsIPluginTag.h"
36266: #include "nsIPlugin.h"
37841: #include "nsNPAPIPluginInstance.h"
37841: #include "nsISupportsArray.h"
36266: 
36266: class nsPluginHost;
36266: struct PRLibrary;
36266: struct nsPluginInfo;
36266: 
36266: // Remember that flags are written out to pluginreg.dat, be careful
36266: // changing their meaning.
36266: #define NS_PLUGIN_FLAG_ENABLED      0x0001    // is this plugin enabled?
36266: // no longer used                   0x0002    // reuse only if regenerating pluginreg.dat
36266: #define NS_PLUGIN_FLAG_FROMCACHE    0x0004    // this plugintag info was loaded from cache
36266: #define NS_PLUGIN_FLAG_UNWANTED     0x0008    // this is an unwanted plugin
36266: #define NS_PLUGIN_FLAG_BLOCKLISTED  0x0010    // this is a blocklisted plugin
36266: 
36266: // A linked-list of plugin information that is used for instantiating plugins
36266: // and reflecting plugin information into JavaScript.
36266: class nsPluginTag : public nsIPluginTag
36266: {
36266: public:
36266:   enum nsRegisterType {
36266:     ePluginRegister,
36266:     ePluginUnregister
36266:   };
36266:   
36266:   NS_DECL_ISUPPORTS
36266:   NS_DECL_NSIPLUGINTAG
36266:   
36266:   nsPluginTag(nsPluginTag* aPluginTag);
36266:   nsPluginTag(nsPluginInfo* aPluginInfo);
36266:   nsPluginTag(const char* aName,
36266:               const char* aDescription,
36266:               const char* aFileName,
36266:               const char* aFullPath,
36266:               const char* aVersion,
36266:               const char* const* aMimeTypes,
36266:               const char* const* aMimeDescriptions,
36266:               const char* const* aExtensions,
36266:               PRInt32 aVariants,
36266:               PRInt64 aLastModifiedTime = 0,
36266:               PRBool aCanUnload = PR_TRUE,
36266:               PRBool aArgsAreUTF8 = PR_FALSE);
36266:   ~nsPluginTag();
36266:   
36266:   void SetHost(nsPluginHost * aHost);
36266:   void TryUnloadPlugin();
36266:   void Mark(PRUint32 mask);
36266:   void UnMark(PRUint32 mask);
36266:   PRBool HasFlag(PRUint32 flag);
36266:   PRUint32 Flags();
36266:   PRBool Equals(nsPluginTag* aPluginTag);
36266:   PRBool IsEnabled();
36266:   void RegisterWithCategoryManager(PRBool aOverrideInternalTypes,
36266:                                    nsRegisterType aType = ePluginRegister);
36266:   
36266:   nsRefPtr<nsPluginTag> mNext;
36266:   nsPluginHost *mPluginHost;
36266:   nsCString     mName; // UTF-8
36266:   nsCString     mDescription; // UTF-8
36266:   PRInt32       mVariants;
36266:   char          **mMimeTypeArray;
36266:   nsTArray<nsCString> mMimeDescriptionArray; // UTF-8
36266:   char          **mExtensionsArray;
36266:   PRLibrary     *mLibrary;
36266:   nsCOMPtr<nsIPlugin> mEntryPoint;
36266:   PRPackedBool  mCanUnloadLibrary;
36266:   PRPackedBool  mIsJavaPlugin;
36266:   PRPackedBool  mIsNPRuntimeEnabledJavaPlugin;
36266:   nsCString     mFileName; // UTF-8
36266:   nsCString     mFullPath; // UTF-8
36266:   nsCString     mVersion;  // UTF-8
36266:   PRInt64       mLastModifiedTime;
36266: private:
36266:   PRUint32      mFlags;
36266:   
36266:   nsresult EnsureMembersAreUTF8();
36266: };
36266: 
37841: struct nsPluginInstanceTag
37841: {
37841:   char*                  mURL;
37841:   nsRefPtr<nsPluginTag>  mPluginTag;
37841:   nsNPAPIPluginInstance* mInstance; // this must always be valid
37841:   PRBool                 mDefaultPlugin;
37841:   // Array holding all opened stream listeners for this entry
37841:   nsCOMPtr <nsISupportsArray> mStreams; 
37841:   
37841:   nsPluginInstanceTag(nsPluginTag* aPluginTag,
37841:                       nsIPluginInstance* aInstance, 
37841:                       const char * url,
37841:                       PRBool aDefaultPlugin);
37841:   ~nsPluginInstanceTag();
37841: };
37841: 
36266: #endif // nsPluginTags_h_

16295: /********************************************************************
16295:  *                                                                  *
16295:  * THIS FILE IS PART OF THE OggVorbis SOFTWARE CODEC SOURCE CODE.   *
16295:  * USE, DISTRIBUTION AND REPRODUCTION OF THIS LIBRARY SOURCE IS     *
16295:  * GOVERNED BY A BSD-STYLE SOURCE LICENSE INCLUDED WITH THIS SOURCE *
16295:  * IN 'COPYING'. PLEASE READ THESE TERMS BEFORE DISTRIBUTING.       *
16295:  *                                                                  *
31034:  * THE OggVorbis SOURCE CODE IS (C) COPYRIGHT 1994-2009             *
16295:  * by the Xiph.Org Foundation http://www.xiph.org/                  *
16295:  *                                                                  *
16295:  ********************************************************************
16295: 
16295:  function: random psychoacoustics (not including preecho)
31034:  last mod: $Id: psy.h 16227 2009-07-08 06:58:46Z xiphmont $
16295: 
16295:  ********************************************************************/
16295: 
16295: #ifndef _V_PSY_H_
16295: #define _V_PSY_H_
16295: #include "smallft.h"
16295: 
16295: #include "backends.h"
16295: #include "envelope.h"
16295: 
16295: #ifndef EHMER_MAX
16295: #define EHMER_MAX 56
16295: #endif
16295: 
16295: /* psychoacoustic setup ********************************************/
16295: #define P_BANDS 17      /* 62Hz to 16kHz */
16295: #define P_LEVELS 8      /* 30dB to 100dB */
16295: #define P_LEVEL_0 30.    /* 30 dB */
16295: #define P_NOISECURVES 3
16295: 
16295: #define NOISE_COMPAND_LEVELS 40
16295: typedef struct vorbis_info_psy{
16295:   int   blockflag;
16295: 
16295:   float ath_adjatt;
16295:   float ath_maxatt;
16295: 
16295:   float tone_masteratt[P_NOISECURVES];
16295:   float tone_centerboost;
16295:   float tone_decay;
16295:   float tone_abs_limit;
16295:   float toneatt[P_BANDS];
16295: 
16295:   int noisemaskp;
16295:   float noisemaxsupp;
16295:   float noisewindowlo;
16295:   float noisewindowhi;
16295:   int   noisewindowlomin;
16295:   int   noisewindowhimin;
16295:   int   noisewindowfixed;
16295:   float noiseoff[P_NOISECURVES][P_BANDS];
16295:   float noisecompand[NOISE_COMPAND_LEVELS];
16295: 
16295:   float max_curve_dB;
16295: 
16295:   int normal_channel_p;
16295:   int normal_point_p;
16295:   int normal_start;
16295:   int normal_partition;
16295:   double normal_thresh;
16295: } vorbis_info_psy;
16295: 
16295: typedef struct{
16295:   int   eighth_octave_lines;
16295: 
16295:   /* for block long/short tuning; encode only */
16295:   float preecho_thresh[VE_BANDS];
16295:   float postecho_thresh[VE_BANDS];
16295:   float stretch_penalty;
16295:   float preecho_minenergy;
16295: 
16295:   float ampmax_att_per_sec;
16295: 
16295:   /* channel coupling config */
16295:   int   coupling_pkHz[PACKETBLOBS];
16295:   int   coupling_pointlimit[2][PACKETBLOBS];
16295:   int   coupling_prepointamp[PACKETBLOBS];
16295:   int   coupling_postpointamp[PACKETBLOBS];
16295:   int   sliding_lowpass[2][PACKETBLOBS];
16295: 
16295: } vorbis_info_psy_global;
16295: 
16295: typedef struct {
16295:   float ampmax;
16295:   int   channels;
16295: 
16295:   vorbis_info_psy_global *gi;
16295:   int   coupling_pointlimit[2][P_NOISECURVES];
16295: } vorbis_look_psy_global;
16295: 
16295: 
16295: typedef struct {
16295:   int n;
16295:   struct vorbis_info_psy *vi;
16295: 
16295:   float ***tonecurves;
16295:   float **noiseoffset;
16295: 
16295:   float *ath;
16295:   long  *octave;             /* in n.ocshift format */
16295:   long  *bark;
16295: 
16295:   long  firstoc;
16295:   long  shiftoc;
16295:   int   eighth_octave_lines; /* power of two, please */
16295:   int   total_octave_lines;
16295:   long  rate; /* cache it */
16295: 
16295:   float m_val; /* Masking compensation value */
16295: 
16295: } vorbis_look_psy;
16295: 
16295: extern void   _vp_psy_init(vorbis_look_psy *p,vorbis_info_psy *vi,
16295:                            vorbis_info_psy_global *gi,int n,long rate);
16295: extern void   _vp_psy_clear(vorbis_look_psy *p);
16295: extern void  *_vi_psy_dup(void *source);
16295: 
16295: extern void   _vi_psy_free(vorbis_info_psy *i);
16295: extern vorbis_info_psy *_vi_psy_copy(vorbis_info_psy *i);
16295: 
16295: extern void _vp_remove_floor(vorbis_look_psy *p,
16295:                              float *mdct,
16295:                              int *icodedflr,
16295:                              float *residue,
16295:                              int sliding_lowpass);
16295: 
16295: extern void _vp_noisemask(vorbis_look_psy *p,
16295:                           float *logmdct,
16295:                           float *logmask);
16295: 
16295: extern void _vp_tonemask(vorbis_look_psy *p,
16295:                          float *logfft,
16295:                          float *logmask,
16295:                          float global_specmax,
16295:                          float local_specmax);
16295: 
16295: extern void _vp_offset_and_mix(vorbis_look_psy *p,
16295:                                float *noise,
16295:                                float *tone,
16295:                                int offset_select,
16295:                                float *logmask,
16295:                                float *mdct,
16295:                                float *logmdct);
16295: 
16295: extern float _vp_ampmax_decay(float amp,vorbis_dsp_state *vd);
16295: 
16295: extern float **_vp_quantize_couple_memo(vorbis_block *vb,
16295:                                         vorbis_info_psy_global *g,
16295:                                         vorbis_look_psy *p,
16295:                                         vorbis_info_mapping0 *vi,
16295:                                         float **mdct);
16295: 
16295: extern void _vp_couple(int blobno,
16295:                        vorbis_info_psy_global *g,
16295:                        vorbis_look_psy *p,
16295:                        vorbis_info_mapping0 *vi,
16295:                        float **res,
16295:                        float **mag_memo,
16295:                        int   **mag_sort,
16295:                        int   **ifloor,
16295:                        int   *nonzero,
16295:                        int   sliding_lowpass);
16295: 
16295: extern void _vp_noise_normalize(vorbis_look_psy *p,
16295:                                 float *in,float *out,int *sortedindex);
16295: 
16295: extern void _vp_noise_normalize_sort(vorbis_look_psy *p,
16295:                                      float *magnitudes,int *sortedindex);
16295: 
16295: extern int **_vp_quantize_couple_sort(vorbis_block *vb,
16295:                                       vorbis_look_psy *p,
16295:                                       vorbis_info_mapping0 *vi,
16295:                                       float **mags);
16295: 
16295: extern void hf_reduction(vorbis_info_psy_global *g,
16295:                          vorbis_look_psy *p,
16295:                          vorbis_info_mapping0 *vi,
16295:                          float **mdct);
16295: 
16295: 
16295: #endif

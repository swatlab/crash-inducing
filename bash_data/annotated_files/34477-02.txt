11286: #
11286: # ***** BEGIN LICENSE BLOCK *****
11286: # Version: MPL 1.1/GPL 2.0/LGPL 2.1
11286: #
11286: # The contents of this file are subject to the Mozilla Public License Version
11286: # 1.1 (the "License"); you may not use this file except in compliance with
11286: # the License. You may obtain a copy of the License at
11286: # http://www.mozilla.org/MPL/
11286: #
11286: # Software distributed under the License is distributed on an "AS IS" basis,
11286: # WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
11286: # for the specific language governing rights and limitations under the
11286: # License.
11286: #
11286: # The Original Code is mozilla.org code.
11286: #
11286: # The Initial Developer of the Original Code is
11286: # Mozilla Foundation
11286: # Portions created by the Initial Developer are Copyright (C) 2008
11286: # the Initial Developer. All Rights Reserved.
11286: #
11286: # Contributor(s):
11286: #  Ted Mielczarek <ted.mielczarek@gmail.com>
11286: #
11286: # Alternatively, the contents of this file may be used under the terms of
11286: # either of the GNU General Public License Version 2 or later (the "GPL"),
11286: # or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
11286: # in which case the provisions of the GPL or the LGPL are applicable instead
11286: # of those above. If you wish to allow use of your version of this file only
11286: # under the terms of either the GPL or the LGPL, and not to allow others to
11286: # use your version of this file under the terms of the MPL, indicate your
11286: # decision by deleting the provisions above and replace them with the notice
11286: # and other provisions required by the GPL or the LGPL. If you do not delete
11286: # the provisions above, a recipient may use your version of this file under
11286: # the terms of any one of the MPL, the GPL or the LGPL.
11286: #
11286: # ***** END LICENSE BLOCK *****
11286: 
11286: DEPTH		= ../..
11286: topsrcdir	= @top_srcdir@
11286: srcdir		= @srcdir@
11286: VPATH		= @srcdir@
11286: 
11286: include $(DEPTH)/config/autoconf.mk
11286: 
11286: MODULE		= jemalloc
11286: 
15458: # jemalloc.c properly uses 'static', so don't burden it with manually exposing
15458: # symbols.
15458: VISIBILITY_FLAGS=
15458: 
11286: ifeq (WINNT,$(OS_TARGET))
11286: # Building the CRT from source
27523: CRT_OBJ_DIR = $(CURDIR)/crtsrc
27523: MOZ_CRT_DLL_NAME = mozcrt19
31983: MOZ_CRTCPP_DLL_NAME = mozcpp19
27523: MOZ_CRT_STATIC_LIBS = libcmt libcpmt
27523: MOZ_CRT_DLL = $(CRT_OBJ_DIR)/build/intel/$(MOZ_CRT_DLL_NAME).dll
27523: MOZ_CRT_IMPORT_LIB = $(CRT_OBJ_DIR)/build/intel/$(MOZ_CRT_DLL_NAME).lib
31983: MOZ_CRTCPP_DLL = $(CRT_OBJ_DIR)/build/intel/$(MOZ_CRTCPP_DLL_NAME).dll
31983: MOZ_CRTCPP_IMPORT_LIB = $(CRT_OBJ_DIR)/build/intel/$(MOZ_CRTCPP_DLL_NAME).lib
27523: 
31983: # copy the CRT DLLs to dist/bin,
31983: # copy the import libs to dist/lib
27523: libs:: $(MOZ_CRT_DLL) $(MOZ_CRT_IMPORT_LIB)
31983: 	$(INSTALL) $(MOZ_CRT_DLL) $(MOZ_CRTCPP_DLL) $(FINAL_TARGET)
31983: 	$(INSTALL) $(MOZ_CRT_IMPORT_LIB) $(MOZ_CRTCPP_IMPORT_LIB) $(DIST)/lib
27523: 
27523: $(MOZ_CRT_IMPORT_LIB): $(MOZ_CRT_DLL)
11286: 
26774: define EXTRACT_CMD
26774: cd $(CRT_OBJ_DIR)/intel/$(i)_lib && lib "-extract:..\\build\\intel\\$(i)_obj\\unhandld.obj" eh.lib
26774: 
27523: endef # don't touch the blank line. actually, don't touch anything in this file.
26774: 
11286: # patch if necessary
32967: ifeq ($(CC_VERSION), 14.00.50727.762)
32967: CRTDIFF=crtvc8sp1.diff
32967: else
32967: CRTDIFF=crtvc9sp1.diff
32967: endif
32967: 
32967: $(CRT_OBJ_DIR)/jemalloc.c: $(srcdir)/$(CRTDIFF)
11286: 	rm -rf $(CRT_OBJ_DIR)
27523: 	cp -R "$(WIN32_CRT_SRC_DIR)" $(CRT_OBJ_DIR)
11286: # per http://forums.microsoft.com/MSDN/ShowPost.aspx?PostID=1189363&SiteID=1
26774: 	$(foreach i,dll mt xdll xmt,$(EXTRACT_CMD))
11286: # truly awful
11286: #XXX: get ed into mozillabuild, bug 415123
32967: 	$(PERL) $(srcdir)/apply-ed-patches.pl $(srcdir)/$(CRTDIFF) \
11286: 	$(CRT_OBJ_DIR) $(srcdir)/ed.exe
11286: 
27523: $(MOZ_CRT_DLL): \
15458:   $(CRT_OBJ_DIR)/jemalloc.c $(srcdir)/jemalloc.c $(srcdir)/jemalloc.h \
34477:   $(srcdir)/rb.h
34477: 	cp $(srcdir)/jemalloc.c $(srcdir)/jemalloc.h $(srcdir)/rb.h \
34477: 	$(CRT_OBJ_DIR)
11286: # this pretty much sucks, but nmake and make don't play well together
11286: 	$(PYTHON) $(srcdir)/build-crt.py $(CRT_OBJ_DIR)
27523: # XXX: these don't link right for some reason; the problem is likely
27523: # that  not all the standard symbols are exported; looks like MSFT
27523: # never updated the sample.def files; could probably fix if someone
27523: # were ever bored enough. :-)
27523: 	rm -f $(addsuffix .lib, $(addprefix $(CRT_OBJ_DIR)/build/intel/, $(MOZ_CRT_STATIC_LIBS)))
27523: 	rm -f $(addsuffix .pdb, $(addprefix $(CRT_OBJ_DIR)/build/intel/, $(MOZ_CRT_STATIC_LIBS)))
11286: 
33419: # but still export jemalloc.h
33419: EXPORTS = jemalloc.h
33419: 
27523: else # Not Windows
11286: 
11286: MODULE_OPTIMIZE_FLAGS = -O2
14800: ifeq ($(OS_ARCH),SunOS)
14800: ifndef GNU_CC
14800: MODULE_OPTIMIZE_FLAGS = -xO5
14800: endif
14800: endif
14800: 
11286: LIBRARY_NAME	= jemalloc
13070: 
15046: # Build jemalloc as a shared lib.  This is mandatory for Darwin, since a library
15046: # init function is used on that platform.
18429: ifeq ($(OS_ARCH),Darwin)
11286: FORCE_SHARED_LIB= 1
18429: else
18429: DIST_INSTALL = 1
18429: FORCE_STATIC_LIB= 1
18429: endif
11286: 
27812: EXPORTS = jemalloc.h
27812: CSRCS   = jemalloc.c
11286: 
12204: #XXX: PGO on Linux causes problems here
12204: # See bug 419470
12204: NO_PROFILE_GUIDED_OPTIMIZE = 1
11286: endif
11286: 
11286: include $(topsrcdir)/config/rules.mk
11286: 
11286: ifeq (Darwin,$(OS_TARGET))
11286: LDFLAGS += -init _jemalloc_darwin_init
11628: endif

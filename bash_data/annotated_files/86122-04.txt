43113: /* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
43113:  *
43113:  * ***** BEGIN LICENSE BLOCK *****
43113:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
43113:  *
43113:  * The contents of this file are subject to the Mozilla Public License Version
43113:  * 1.1 (the "License"); you may not use this file except in compliance with
43113:  * the License. You may obtain a copy of the License at
43113:  * http://www.mozilla.org/MPL/
43113:  *
43113:  * Software distributed under the License is distributed on an "AS IS" basis,
43113:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
43113:  * for the specific language governing rights and limitations under the
43113:  * License.
43113:  *
43113:  * The Original Code is nsDiskCacheDevice.h, released
43113:  * February 20, 2001.
43113:  *
43113:  * The Initial Developer of the Original Code is
43113:  * Netscape Communications Corporation.
43113:  * Portions created by the Initial Developer are Copyright (C) 2001
43113:  * the Initial Developer. All Rights Reserved.
43113:  *
43113:  * Contributor(s):
43113:  *   Gordon Sheridan <gordon@netscape.com>
43113:  *   Patrick C. Beard <beard@netscape.com>
43113:  *
43113:  * Alternatively, the contents of this file may be used under the terms of
43113:  * either the GNU General Public License Version 2 or later (the "GPL"), or
43113:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
43113:  * in which case the provisions of the GPL or the LGPL are applicable instead
43113:  * of those above. If you wish to allow use of your version of this file only
43113:  * under the terms of either the GPL or the LGPL, and not to allow others to
43113:  * use your version of this file under the terms of the MPL, indicate your
43113:  * decision by deleting the provisions above and replace them with the notice
43113:  * and other provisions required by the GPL or the LGPL. If you do not delete
43113:  * the provisions above, a recipient may use your version of this file under
43113:  * the terms of any one of the MPL, the GPL or the LGPL.
43113:  *
43113:  * ***** END LICENSE BLOCK ***** */
43113: 
43113: #ifndef _nsDiskCacheDevice_h_
43113: #define _nsDiskCacheDevice_h_
43113: 
43113: #include "nsCacheDevice.h"
43113: #include "nsDiskCacheBinding.h"
43113: #include "nsDiskCacheBlockFile.h"
43113: #include "nsDiskCacheEntry.h"
43113: 
43113: #include "nsILocalFile.h"
43113: #include "nsIObserver.h"
43113: #include "nsCOMArray.h"
43113: 
43113: class nsDiskCacheMap;
43113: 
43113: 
43113: class nsDiskCacheDevice : public nsCacheDevice {
43113: public:
43113:     nsDiskCacheDevice();
43113:     virtual ~nsDiskCacheDevice();
43113: 
43113:     virtual nsresult        Init();
43113:     virtual nsresult        Shutdown();
43113: 
43113:     virtual const char *    GetDeviceID(void);
79445:     virtual nsCacheEntry *  FindEntry(nsCString * key, bool *collision);
43113:     virtual nsresult        DeactivateEntry(nsCacheEntry * entry);
43113:     virtual nsresult        BindEntry(nsCacheEntry * entry);
43113:     virtual void            DoomEntry( nsCacheEntry * entry );
43113: 
43113:     virtual nsresult OpenInputStreamForEntry(nsCacheEntry *    entry,
43113:                                              nsCacheAccessMode mode,
43113:                                              PRUint32          offset,
43113:                                              nsIInputStream ** result);
43113: 
43113:     virtual nsresult OpenOutputStreamForEntry(nsCacheEntry *     entry,
43113:                                               nsCacheAccessMode  mode,
43113:                                               PRUint32           offset,
43113:                                               nsIOutputStream ** result);
43113: 
43113:     virtual nsresult        GetFileForEntry(nsCacheEntry *    entry,
43113:                                             nsIFile **        result);
43113: 
43113:     virtual nsresult        OnDataSizeChange(nsCacheEntry * entry, PRInt32 deltaSize);
43113:     
43113:     virtual nsresult        Visit(nsICacheVisitor * visitor);
43113: 
43113:     virtual nsresult        EvictEntries(const char * clientID);
43113: 
52143:     bool                    EntryIsTooBig(PRInt64 entrySize);
52143: 
43113:     /**
43113:      * Preference accessors
43113:      */
43113:     void                    SetCacheParentDirectory(nsILocalFile * parentDir);
43113:     void                    SetCapacity(PRUint32  capacity);
72584:     void                    SetMaxEntrySize(PRInt32  maxSizeInKilobytes);
43113: 
43113: /* private: */
43113: 
43113:     void                    getCacheDirectory(nsILocalFile ** result);
43113:     PRUint32                getCacheCapacity();
43113:     PRUint32                getCacheSize();
43113:     PRUint32                getEntryCount();
43113:     
43113:     nsDiskCacheMap *        CacheMap()    { return &mCacheMap; }
43113:     
43113: private:    
68582:     friend class nsDiskCacheDeviceDeactivateEntryEvent;
43113:     /**
43113:      *  Private methods
43113:      */
43113: 
68582:     inline bool IsValidBinding(nsDiskCacheBinding *binding)
68582:     {
68582:         NS_ASSERTION(binding, "  binding == nsnull");
68582:         NS_ASSERTION(binding->mDeactivateEvent == nsnull,
68582:                      "  entry in process of deactivation");
68582:         return (binding && !binding->mDeactivateEvent);
68582:     }
68582: 
79445:     bool                    Initialized() { return mInitialized; }
43113: 
79445:     nsresult                Shutdown_Private(bool flush);
68582:     nsresult                DeactivateEntry_Private(nsCacheEntry * entry,
68582:                                                     nsDiskCacheBinding * binding);
43113: 
43113:     nsresult                OpenDiskCache();
43113:     nsresult                ClearDiskCache();
43113: 
43113:     nsresult                EvictDiskCacheEntries(PRUint32  targetCapacity);
43113:     
43113:     /**
43113:      *  Member variables
43113:      */
43113:     nsCOMPtr<nsILocalFile>  mCacheDirectory;
43113:     nsDiskCacheBindery      mBindery;
43113:     PRUint32                mCacheCapacity;     // Unit is KiB's
72584:     PRInt32                 mMaxEntrySize;      // Unit is bytes internally
43113:     // XXX need soft/hard limits, currentTotal
43113:     nsDiskCacheMap          mCacheMap;
79445:     bool                    mInitialized;
43113: };
43113: 
43113: #endif // _nsDiskCacheDevice_h_

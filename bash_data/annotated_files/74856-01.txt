    1: #
    1: # ***** BEGIN LICENSE BLOCK *****
    1: # Version: MPL 1.1/GPL 2.0/LGPL 2.1
    1: #
    1: # The contents of this file are subject to the Mozilla Public License Version
    1: # 1.1 (the "License"); you may not use this file except in compliance with
    1: # the License. You may obtain a copy of the License at
    1: # http://www.mozilla.org/MPL/
    1: #
    1: # Software distributed under the License is distributed on an "AS IS" basis,
    1: # WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
    1: # for the specific language governing rights and limitations under the
    1: # License.
    1: #
    1: # The Original Code is sqlite3 code.
    1: #
    1: # The Initial Developer of the Original Code is
    1: #   sqlite3
    1: # Portions created by the Initial Developer are Copyright (C) 2004
    1: # the Initial Developer. All Rights Reserved.
    1: #
    1: # Contributor(s):
    1: #   Vladimir Vukicevic <vladimir.vukicevic@oracle.com>
 2623: #   Shawn Wilsher <me@shawnwilsher.com>
10131: #   Ryan VanderMeulen <ryanvm@gmail.com>
    1: #
    1: # Alternatively, the contents of this file may be used under the terms of
    1: # either of the GNU General Public License Version 2 or later (the "GPL"),
    1: # or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
    1: # in which case the provisions of the GPL or the LGPL are applicable instead
    1: # of those above. If you wish to allow use of your version of this file only
    1: # under the terms of either the GPL or the LGPL, and not to allow others to
    1: # use your version of this file under the terms of the MPL, indicate your
    1: # decision by deleting the provisions above and replace them with the notice
    1: # and other provisions required by the GPL or the LGPL. If you do not delete
    1: # the provisions above, a recipient may use your version of this file under
    1: # the terms of any one of the MPL, the GPL or the LGPL.
    1: #
    1: # ***** END LICENSE BLOCK *****
    1: 
    1: DEPTH		= ../../..
    1: topsrcdir	= @top_srcdir@
    1: srcdir		= @srcdir@
    1: VPATH		= @srcdir@
    1: 
    1: include $(DEPTH)/config/autoconf.mk
    1: 
    1: MODULE           = sqlite3
36200: LIBRARY_NAME     = mozsqlite3
37901: SHORT_LIBNAME    = mozsqlt3
 3614: FORCE_SHARED_LIB = 1
 3614: VISIBILITY_FLAGS =
 8506: LIB_IS_C_ONLY    = 1
 3614: 
69623: ifeq ($(OS_ARCH),WINNT)
21029: ifndef GNU_CC
30606: DEFFILE = $(CURDIR)/sqlite-processed.def
21029: RCFILE  = sqlite.rc
21029: RESFILE = sqlite.res
21029: 
30606: GARBAGE += \
30606:   sqlite-version.h \
30606:   $(DEFFILE) \
30606:   $(NULL)
21029: 
30606: # We generate the appropriate version header file with our python script.
21029: sqlite-version.h: sqlite-version.py sqlite3.h
21029: 	$(PYTHON) $^ > $@
30606: 
30606: # We have to preprocess our def file because we need different symbols in debug
30606: # builds exposed that are not built in non-debug builds.
30606: $(DEFFILE): sqlite.def
30606: 	@$(PYTHON) $(topsrcdir)/config/Preprocessor.py $(DEFINES) \
30606: 	  $(srcdir)/sqlite.def > $(DEFFILE)
30606: 
21029: export:: sqlite-version.h
21029: endif
21029: endif
21029: 
74856: # XXX Force -O2 optimisation on Mac because using the default -O3 causes
74856: # crashes. See bug 676499.
74856: ifeq (cocoa,$(MOZ_WIDGET_TOOLKIT))
74856: MODULE_OPTIMIZE_FLAGS = -O2
74856: endif
74856: 
10115: EXPORTS = \
10115:   sqlite3.h \
10115:   $(NULL)
    1: 
    1: CSRCS = \
 2623:   sqlite3.c \
    1:   $(NULL)
    1: 
    1: # -DSQLITE_SECURE_DELETE=1 will cause SQLITE to 0-fill delete data so we
    1: # don't have to vacuum to make sure the data is not visible in the file.
10959: # -DSQLITE_ENABLE_FTS3=1 enables the full-text index module.
10959: # -DSQLITE_CORE=1 statically links that module into the SQLite library.
46994: # -DSQLITE_DEFAULT_PAGE_SIZE=32768 and SQLITE_MAX_DEFAULT_PAGE_SIZE=32768
56087: # increases the page size from 1k, see bug 416330.  The value must stay in sync
56087: # with mozIStorageConnection::DEFAULT_PAGE_SIZE.
39713: # Note: Be sure to update the configure.in checks when these change!
20819: DEFINES = \
20819:   -DSQLITE_SECURE_DELETE=1 \
22151:   -DSQLITE_THREADSAFE=1 \
20819:   -DSQLITE_CORE=1 \
20819:   -DSQLITE_ENABLE_FTS3=1 \
44141:   -DSQLITE_ENABLE_UNLOCK_NOTIFY=1 \
46994:   -DSQLITE_DEFAULT_PAGE_SIZE=32768 \
46994:   -DSQLITE_MAX_DEFAULT_PAGE_SIZE=32768 \
20819:   $(NULL)
20819: 
20819: # -DSQLITE_ENABLE_LOCKING_STYLE=1 to help with AFP folders
20819: ifeq ($(MOZ_WIDGET_TOOLKIT),cocoa)
20819: DEFINES += -DSQLITE_ENABLE_LOCKING_STYLE=1
20819: endif
    1: 
30606: # Turn on SQLite's assertions in debug builds.
30606: ifdef MOZ_DEBUG
30606: DEFINES += -DSQLITE_DEBUG=1
30606: endif
30606: 
34467: # disable PGO for Sun Studio
34467: ifdef SOLARIS_SUNPRO_CC
34467: NO_PROFILE_GUIDED_OPTIMIZE = 1
34467: endif
34467: 
    1: ifeq ($(OS_ARCH),OS2)
    1: ifdef MOZ_OS2_HIGH_MEMORY
    1: DEFINES += -DOS2_HIGH_MEMORY
    1: endif
    1: endif
    1: 
69818: ifeq ($(OS_TARGET),Android)
69818: # default to user readable only to fit Android security model
69818: DEFINES += -DSQLITE_DEFAULT_FILE_PERMISSIONS=0600
69818: endif
69818: 
    1: include $(topsrcdir)/config/rules.mk
    1: 
    1: # next line allows use of MOZ_OBJDIR in .mozconfig with older gcc on BeOS, maybe others
    1: LOCAL_INCLUDES += -I$(srcdir)
 4190: 
 4190: ifeq ($(OS_ARCH),OS2)
30606: ADD_TO_DEF_FILE = $(PYTHON) $(topsrcdir)/config/Preprocessor.py $(DEFINES) \
30606:        $(srcdir)/sqlite.def | sed -e '1,/^EXPORTS$$/ d' -e 's,sqlite3,_\0,' \
30606:        -e 's,\ DATA.*$$,,' >> $(DEF_FILE)
 4190: endif

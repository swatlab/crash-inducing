 84566: <!DOCTYPE HTML>
 84566: <html>
 84566: <!--
 84566: https://bugzilla.mozilla.org/show_bug.cgi?id=675884
 84566: -->
 84566: <head>
 84566:   <title>Test for Bug 675884</title>
 84566:   <script type="application/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
 84566:   <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css"/>
 84566: </head>
 84566: <body>
 84566: <a target="_blank" href="https://bugzilla.mozilla.org/show_bug.cgi?id=675884">Mozilla Bug 675884</a>
 84566: <p id="display"></p>
 84566: <div id="content" style="display: none">
 84566:   
 84566: </div>
 84566: <pre id="test">
 84566: <script type="application/javascript">
 84566: 
 84566: /** Test for Bug 675884 **/
 84566: 
 84566: var receivedEvent;
 84566: document.addEventListener("hello", function(e) { receivedEvent = e; }, true);
 84566: 
 84566: // Event
 84566: var e;
 84566: var ex = false;
 84566: try {
 84566:   e = new Event();
 84566: } catch(exp) {
 84566:   ex = true;
 84566: }
 84566: ok(ex, "First parameter is required!");
 84566: ex = false;
 84566: 
 86062: try {
 86062:   e = new Event("foo", 123);
 86062: } catch(exp) {
 86062:   ex = true;
 86062: }
 86062: ok(ex, "2nd parameter should be an object!");
 86062: ex = false;
 86062: 
 86062: try {
 86062:   e = new Event("foo", "asdf");
 86062: } catch(exp) {
 86062:   ex = true;
 86062: }
 86062: ok(ex, "2nd parameter should be an object!");
 86062: ex = false;
 86062: 
 86062: 
 86062: try {
 86062:   e = new Event("foo", false);
 86062: } catch(exp) {
 86062:   ex = true;
 86062: }
 86062: ok(ex, "2nd parameter should be an object!");
 86062: ex = false;
 86062: 
 86062: 
 84566: e = new Event("hello");
 84566: ok(e.type, "hello", "Wrong event type!");
 84566: ok(!e.isTrusted, "Event shouldn't be trusted!");
 84566: ok(!e.bubbles, "Event shouldn't bubble!");
 84566: ok(!e.cancelable, "Event shouldn't be cancelable!");
 97403: is(e.eventPhase, Event.NONE, "Wrong event phase");
 84566: document.dispatchEvent(e);
 97403: is(e.eventPhase, Event.NONE, "Wrong event phase");
 84566: is(receivedEvent, e, "Wrong event!");
 84566: 
103336: e = new Event("hello", null);
103336: ok(e.type, "hello", "Wrong event type!");
103336: ok(!e.isTrusted, "Event shouldn't be trusted!");
103336: ok(!e.bubbles, "Event shouldn't bubble!");
103336: ok(!e.cancelable, "Event shouldn't be cancelable!");
103336: is(e.eventPhase, Event.NONE, "Wrong event phase");
103336: document.dispatchEvent(e);
103336: is(e.eventPhase, Event.NONE, "Wrong event phase");
103336: is(receivedEvent, e, "Wrong event!");
103336: 
103336: e = new Event("hello", undefined);
103336: ok(e.type, "hello", "Wrong event type!");
103336: ok(!e.isTrusted, "Event shouldn't be trusted!");
103336: ok(!e.bubbles, "Event shouldn't bubble!");
103336: ok(!e.cancelable, "Event shouldn't be cancelable!");
103336: is(e.eventPhase, Event.NONE, "Wrong event phase");
103336: document.dispatchEvent(e);
103336: is(e.eventPhase, Event.NONE, "Wrong event phase");
103336: is(receivedEvent, e, "Wrong event!");
103336: 
103336: e = new Event("hello", {});
103336: ok(e.type, "hello", "Wrong event type!");
103336: ok(!e.isTrusted, "Event shouldn't be trusted!");
103336: ok(!e.bubbles, "Event shouldn't bubble!");
103336: ok(!e.cancelable, "Event shouldn't be cancelable!");
103336: is(e.eventPhase, Event.NONE, "Wrong event phase");
103336: document.dispatchEvent(e);
103336: is(e.eventPhase, Event.NONE, "Wrong event phase");
103336: is(receivedEvent, e, "Wrong event!");
103336: 
 84566: e = new Event("hello", { bubbles: true, cancelable: true });
 84566: ok(e.type, "hello", "Wrong event type!");
 84566: ok(!e.isTrusted, "Event shouldn't be trusted!");
 84566: ok(e.bubbles, "Event should bubble!");
 84566: ok(e.cancelable, "Event should be cancelable!");
 84566: document.dispatchEvent(e);
 84566: is(receivedEvent, e, "Wrong event!");
 84566: 
 84566: // CustomEvent
 84566: 
 84566: try {
 84566:   e = new CustomEvent();
 84566: } catch(exp) {
 84566:   ex = true;
 84566: }
 84566: ok(ex, "First parameter is required!");
 84566: ex = false;
 84566: 
 84566: e = new CustomEvent("hello");
 84566: ok(e.type, "hello", "Wrong event type!");
 84566: ok(!e.isTrusted, "Event shouldn't be trusted!");
 84566: ok(!e.bubbles, "Event shouldn't bubble!");
 84566: ok(!e.cancelable, "Event shouldn't be cancelable!");
 84566: document.dispatchEvent(e);
 84566: is(receivedEvent, e, "Wrong event!");
 84566: 
 84566: e = new CustomEvent("hello", { bubbles: true, cancelable: true, detail: window });
 84566: ok(e.type, "hello", "Wrong event type!");
 84566: ok(!e.isTrusted, "Event shouldn't be trusted!");
 84566: ok(e.bubbles, "Event should bubble!");
 84566: ok(e.cancelable, "Event should be cancelable!");
 84566: is(e.detail, window , "Wrong event.detail!");
 84566: document.dispatchEvent(e);
 84566: is(receivedEvent, e, "Wrong event!");
 84566: 
 84566: e = new CustomEvent("hello", { cancelable: true, detail: window });
 84566: ok(e.type, "hello", "Wrong event type!");
 84566: ok(!e.isTrusted, "Event shouldn't be trusted!");
 84566: ok(!e.bubbles, "Event shouldn't bubble!");
 84566: ok(e.cancelable, "Event should be cancelable!");
 84566: is(e.detail, window , "Wrong event.detail!");
 84566: 
 84566: e = new CustomEvent("hello", { detail: 123 });
 84566: is(e.detail, 123, "Wrong event.detail!");
 84566: ok(!e.bubbles, "Event shouldn't bubble!");
 84566: ok(!e.cancelable, "Event shouldn't be cancelable!");
 84566: 
 84566: var dict = { get detail() { return document.body } };
 84566: e = new CustomEvent("hello", dict);
 84566: is(e.detail, dict.detail, "Wrong event.detail!");
 84566: ok(!e.bubbles, "Event shouldn't bubble!");
 84566: ok(!e.cancelable, "Event shouldn't be cancelable!");
 84566: 
 84566: var dict = { get detail() { throw "foo"; } };
 84566: 
 84566: try {
 84566:   e = new CustomEvent("hello", dict);
 84566: } catch (exp) {
 84566:   ex = true;
 84566: }
 84566: ok(ex, "Should have thrown an exception!");
 84566: ex = false;
 84566: 
 84568: // CloseEvent
 84568: 
 84568: try {
 84568:   e = new CloseEvent();
 84568: } catch(exp) {
 84568:   ex = true;
 84568: }
 84568: ok(ex, "First parameter is required!");
 84568: ex = false;
 84568: 
 84568: e = new CloseEvent("hello");
 84568: ok(e.type, "hello", "Wrong event type!");
 84568: ok(!e.isTrusted, "Event shouldn't be trusted!");
 84568: ok(!e.bubbles, "Event shouldn't bubble!");
 84568: ok(!e.cancelable, "Event shouldn't be cancelable!");
 84568: is(e.wasClean, false, "wasClean should be false!");
 84568: is(e.code, 0, "code should be 0!");
 84568: is(e.reason, "", "reason should be ''!");
 84568: document.dispatchEvent(e);
 84568: is(receivedEvent, e, "Wrong event!");
 84568: 
 84568: e = new CloseEvent("hello",
 84568:   { bubbles: true, cancelable: true, wasClean: true, code: 1, reason: "foo" });
 84568: ok(e.type, "hello", "Wrong event type!");
 84568: ok(!e.isTrusted, "Event shouldn't be trusted!");
 84568: ok(e.bubbles, "Event should bubble!");
 84568: ok(e.cancelable, "Event should be cancelable!");
 84568: is(e.wasClean, true, "wasClean should be true!");
 84568: is(e.code, 1, "code should be 1!");
 84568: is(e.reason, "foo", "reason should be 'foo'!");
 84568: document.dispatchEvent(e);
 84568: is(receivedEvent, e, "Wrong event!");
 84568: 
 84568: e = new CloseEvent("hello",
 84568:   { bubbles: true, cancelable: true, wasClean: true, code: 1 });
 84568: ok(e.type, "hello", "Wrong event type!");
 84568: ok(!e.isTrusted, "Event shouldn't be trusted!");
 84568: ok(e.bubbles, "Event should bubble!");
 84568: ok(e.cancelable, "Event should be cancelable!");
 84568: is(e.wasClean, true, "wasClean should be true!");
 84568: is(e.code, 1, "code should be 1!");
 84568: is(e.reason, "", "reason should be ''!");
 84568: document.dispatchEvent(e);
 84568: is(receivedEvent, e, "Wrong event!");
 84568: 
 84568: 
 84568: // HashChangeEvent
 84568: 
 84568: try {
 84568:   e = new HashChangeEvent();
 84568: } catch(exp) {
 84568:   ex = true;
 84568: }
 84568: ok(ex, "First parameter is required!");
 84568: ex = false;
 84568: 
 84568: e = new HashChangeEvent("hello");
 84568: ok(e.type, "hello", "Wrong event type!");
 84568: ok(!e.isTrusted, "Event shouldn't be trusted!");
 84568: ok(!e.bubbles, "Event shouldn't bubble!");
 84568: ok(!e.cancelable, "Event shouldn't be cancelable!");
 84568: is(e.oldURL, "", "oldURL should be ''");
 84568: is(e.newURL, "", "newURL should be ''");
 84568: document.dispatchEvent(e);
 84568: is(receivedEvent, e, "Wrong event!");
 84568: 
 84568: e = new HashChangeEvent("hello",
 84568:   { bubbles: true, cancelable: true, oldURL: "old", newURL: "new" });
 84568: ok(e.type, "hello", "Wrong event type!");
 84568: ok(!e.isTrusted, "Event shouldn't be trusted!");
 84568: ok(e.bubbles, "Event should bubble!");
 84568: ok(e.cancelable, "Event should be cancelable!");
 84568: is(e.oldURL, "old", "oldURL should be 'old'");
 84568: is(e.newURL, "new", "newURL should be 'new'");
 84568: document.dispatchEvent(e);
 84568: is(receivedEvent, e, "Wrong event!");
 84568: 
 84568: e = new HashChangeEvent("hello",
 84568:   { bubbles: true, cancelable: true, newURL: "new" });
 84568: ok(e.type, "hello", "Wrong event type!");
 84568: ok(!e.isTrusted, "Event shouldn't be trusted!");
 84568: ok(e.bubbles, "Event should bubble!");
 84568: ok(e.cancelable, "Event should be cancelable!");
 84568: is(e.oldURL, "", "oldURL should be ''");
 84568: is(e.newURL, "new", "newURL should be 'new'");
 84568: document.dispatchEvent(e);
 84568: is(receivedEvent, e, "Wrong event!");
 84568: 
 84568: // PageTransitionEvent
 84568: 
 84568: try {
 84568:   e = new PageTransitionEvent();
 84568: } catch(exp) {
 84568:   ex = true;
 84568: }
 84568: ok(ex, "First parameter is required!");
 84568: ex = false;
 84568: 
 84568: e = new PageTransitionEvent("hello");
 84568: ok(e.type, "hello", "Wrong event type!");
 84568: ok(!e.isTrusted, "Event shouldn't be trusted!");
 84568: ok(!e.bubbles, "Event shouldn't bubble!");
 84568: ok(!e.cancelable, "Event shouldn't be cancelable!");
 84568: is(e.persisted, false, "persisted should be false");
 84568: document.dispatchEvent(e);
 84568: is(receivedEvent, e, "Wrong event!");
 84568: 
 84568: e = new PageTransitionEvent("hello",
 84568:   { bubbles: true, cancelable: true, persisted: true});
 84568: ok(e.type, "hello", "Wrong event type!");
 84568: ok(!e.isTrusted, "Event shouldn't be trusted!");
 84568: ok(e.bubbles, "Event should bubble!");
 84568: ok(e.cancelable, "Event should be cancelable!");
 84568: is(e.persisted, true, "persisted should be true");
 84568: document.dispatchEvent(e);
 84568: is(receivedEvent, e, "Wrong event!");
 84568: 
 84568: e = new PageTransitionEvent("hello", { persisted: true});
 84568: ok(e.type, "hello", "Wrong event type!");
 84568: ok(!e.isTrusted, "Event shouldn't be trusted!");
 84568: ok(!e.bubbles, "Event shouldn't bubble!");
 84568: ok(!e.cancelable, "Event shouldn't be cancelable!");
 84568: is(e.persisted, true, "persisted should be true");
 84568: document.dispatchEvent(e);
 84568: is(receivedEvent, e, "Wrong event!");
 84568: 
 84568: // PopStateEvent
 84568: 
 84568: try {
 84568:   e = new PopStateEvent();
 84568: } catch(exp) {
 84568:   ex = true;
 84568: }
 84568: ok(ex, "First parameter is required!");
 84568: ex = false;
 84568: 
 84568: e = new PopStateEvent("hello");
 84568: ok(e.type, "hello", "Wrong event type!");
 84568: ok(!e.isTrusted, "Event shouldn't be trusted!");
 84568: ok(!e.bubbles, "Event shouldn't bubble!");
 84568: ok(!e.cancelable, "Event shouldn't be cancelable!");
 84568: is(e.state, null, "persisted should be null");
 84568: document.dispatchEvent(e);
 84568: is(receivedEvent, e, "Wrong event!");
 84568: 
 84568: e = new PopStateEvent("hello",
 84568:   { bubbles: true, cancelable: true, state: window});
 84568: ok(e.type, "hello", "Wrong event type!");
 84568: ok(!e.isTrusted, "Event shouldn't be trusted!");
 84568: ok(e.bubbles, "Event should bubble!");
 84568: ok(e.cancelable, "Event should be cancelable!");
 84568: is(e.state, window, "persisted should be window");
 84568: document.dispatchEvent(e);
 84568: is(receivedEvent, e, "Wrong event!");
 84568: 
 84568: 
 84568: e = new PopStateEvent("hello", { state: window});
 84568: ok(e.type, "hello", "Wrong event type!");
 84568: ok(!e.isTrusted, "Event shouldn't be trusted!");
 84568: ok(!e.bubbles, "Event shouldn't bubble!");
 84568: ok(!e.cancelable, "Event shouldn't be cancelable!");
 84568: is(e.state, window, "persisted should be window");
 84568: document.dispatchEvent(e);
 84568: is(receivedEvent, e, "Wrong event!");
 84568: 
 84569: // UIEvent
 84569: 
 84569: try {
 84569:   e = new UIEvent();
 84569: } catch(exp) {
 84569:   ex = true;
 84569: }
 84569: ok(ex, "First parameter is required!");
 84569: ex = false;
 84569: 
120929: try {
120929:   e = new UIEvent("foo", { view: {} });
120929:   e.view.onunload;
120929: } catch(exp) {
120929:   ex = true;
120929: }
120929: ok(ex, "{} isn't a valid value.");
120929: ex = false;
120929: 
120929: try {
120929:   e = new UIEvent("foo", { view: null });
120929: } catch(exp) {
120929:   ex = true;
120929: }
120929: ok(!ex, "null is a valid value.");
120929: is(e.view, null);
120929: ex = false;
120929: 
 84569: e = new UIEvent("hello");
 84569: ok(e.type, "hello", "Wrong event type!");
 84569: ok(!e.isTrusted, "Event shouldn't be trusted!");
 84569: ok(!e.bubbles, "Event shouldn't bubble!");
 84569: ok(!e.cancelable, "Event shouldn't be cancelable!");
 84569: is(e.detail, 0, "detail should be 0");
 84569: is(e.view, null, "view should be null");
 84569: document.dispatchEvent(e);
 84569: is(receivedEvent, e, "Wrong event!");
 84569: 
 84569: e = new UIEvent("hello",
 84569:   { bubbles: true, cancelable: true, view: window, detail: 1});
 84569: ok(e.type, "hello", "Wrong event type!");
 84569: ok(!e.isTrusted, "Event shouldn't be trusted!");
 84569: ok(e.bubbles, "Event should bubble!");
 84569: ok(e.cancelable, "Event should be cancelable!");
 84569: is(e.detail, 1, "detail should be 1");
 84569: is(e.view, window, "view should be window");
 84569: document.dispatchEvent(e);
 84569: is(receivedEvent, e, "Wrong event!");
 84569: 
 92724: // StorageEvent
 84569: 
 93433: e = document.createEvent("StorageEvent");
 93433: ok(e, "Should have created an event!");
 93433: 
 84569: try {
 92724:   e = new StorageEvent();
 92724: } catch(exp) {
 92724:   ex = true;
 92724: }
 92724: ok(ex, "First parameter is required!");
 92724: ex = false;
 92724: 
 92724: e = new StorageEvent("hello");
 92724: ok(e.type, "hello", "Wrong event type!");
 92724: ok(!e.isTrusted, "Event shouldn't be trusted!");
 92724: ok(!e.bubbles, "Event shouldn't bubble!");
 92724: ok(!e.cancelable, "Event shouldn't be cancelable!");
 99331: is(e.key, null, "key should be null");
 92724: is(e.oldValue, null, "oldValue should be null");
 92724: is(e.newValue, null, "newValue should be null");
 92724: is(e.url, "", "url should be ''");
 92724: document.dispatchEvent(e);
 92724: is(receivedEvent, e, "Wrong event!");
 92724: 
 92724: e = new StorageEvent("hello",
 92724:   { bubbles: true, cancelable: true, key: "key",
 92724:     oldValue: "oldValue", newValue: "newValue", url: "url",
 92724:     storageArea: localStorage });
 92724: ok(e.type, "hello", "Wrong event type!");
 92724: ok(!e.isTrusted, "Event shouldn't be trusted!");
 92724: ok(e.bubbles, "Event should bubble!");
 92724: ok(e.cancelable, "Event should be cancelable!");
 92724: is(e.key, "key", "Wrong value");
 92724: is(e.oldValue, "oldValue", "Wrong value");
 92724: is(e.newValue, "newValue", "Wrong value");
 92724: is(e.url, "url", "Wrong value");
 92724: is(e.storageArea, localStorage, "Wrong value");
 92724: document.dispatchEvent(e);
 92724: is(receivedEvent, e, "Wrong event!");
 92724: 
 97608: // DeviceProximityEvent
 97608: e = new DeviceProximityEvent("hello", {min: 0, value: 1, max: 2});
 97608: ok(e.type, "hello", "Wrong event type!");
 97608: ok(!e.isTrusted, "Event should not be trusted");
 97608: is(e.value, 1, "value should be 1");
 97608: is(e.min, 0, "min should be 0");
 97608: is(e.max, 2, "max should be 2");
 97608: document.dispatchEvent(e);
 97608: is(receivedEvent, e, "Wrong event!");
 97608: 
 98668: // UserProximityEvent
 98668: e = new UserProximityEvent("hello", {near: true});
 98668: ok(e.type, "hello", "Wrong event type!");
 98668: ok(!e.isTrusted, "Event should not be trusted");
 98668: is(e.near, true, "near should be true");
 98668: document.dispatchEvent(e);
 98668: is(receivedEvent, e, "Wrong event!");
 98668: 
 97609: // DeviceLightEvent
 97609: e = new DeviceLightEvent("hello", {value: 1} );
 97609: ok(e.type, "hello", "Wrong event type!");
 97609: ok(!e.isTrusted, "Event should not be trusted");
 97609: is(e.value, 1, "value should be 1");
 97609: document.dispatchEvent(e);
 97609: is(receivedEvent, e, "Wrong event!");
 97609: 
106396: // DeviceOrientationEvent
106396: e = new DeviceOrientationEvent("hello");
106396: ok(e.type, "hello", "Wrong event type!");
106396: ok(!e.isTrusted, "Event should not be trusted");
106396: is(e.alpha, 0);
106396: is(e.beta, 0);
106396: is(e.gamma, 0);
106396: is(e.absolute, false);
106396: 
106396: e = new DeviceOrientationEvent("hello", { alpha: 1, beta: 2, gamma: 3, absolute: true } );
106396: ok(e.type, "hello", "Wrong event type!");
106396: ok(!e.isTrusted, "Event should not be trusted");
106396: is(e.alpha, 1);
106396: is(e.beta, 2);
106396: is(e.gamma, 3);
106396: is(e.absolute, true);
106396: document.dispatchEvent(e);
106396: is(receivedEvent, e, "Wrong event!");
 97608: 
 92724: // MouseEvent
 92724: 
 92724: try {
 92724:   e = new MouseEvent();
 84569: } catch(exp) {
 84569:   ex = true;
 84569: }
108049: ok(ex, "MouseEvent: First parameter is required!");
 84569: ex = false;
 84569: 
 84569: e = new MouseEvent("hello");
108049: ok(e.type, "hello", "MouseEvent: Wrong event type!");
108049: ok(!e.isTrusted, "MouseEvent: Event shouldn't be trusted!");
108049: ok(!e.bubbles, "MouseEvent: Event shouldn't bubble!");
108049: ok(!e.cancelable, "MouseEvent: Event shouldn't be cancelable!");
 84569: document.dispatchEvent(e);
108049: is(receivedEvent, e, "MouseEvent: Wrong event!");
 84569: 
 84569: var mouseEventProps =
 84569: [ { screenX: 0 },
 84569:   { screenY: 0 },
 84569:   { clientX: 0 },
 84569:   { clientY: 0 },
 84569:   { ctrlKey: false },
 84569:   { shiftKey: false },
 84569:   { altKey: false },
 84569:   { metaKey: false },
 84569:   { button: 0 },
 96888:   { buttons: 0 },
 84569:   { relatedTarget: null }
 84569: ];
 84569: 
 84569: var testProps =
 84569: [
 84569:   { screenX: 1 },
 84569:   { screenY: 2 },
 84569:   { clientX: 3 },
 84569:   { clientY: 4 },
 84569:   { ctrlKey: true },
 84569:   { shiftKey: true },
 84569:   { altKey: true },
 84569:   { metaKey: true },
 84569:   { button: 5 },
 96888:   { buttons: 6 },
 84569:   { relatedTarget: window }
 84569: ];
 84569: 
 84569: var defaultMouseEventValues = {};
 84569: for (var i = 0; i < mouseEventProps.length; ++i) {
 84569:   for (prop in mouseEventProps[i]) {
108049:     ok(prop in e, "MouseEvent: MouseEvent doesn't have property " + prop + "!");
 84569:     defaultMouseEventValues[prop] = mouseEventProps[i][prop]; 
 84569:   }
 84569: }
 84569: 
 84569: while (testProps.length) {
 84569:   var p = testProps.shift();
 84569:   e = new MouseEvent("foo", p);
 84569:   for (var def in defaultMouseEventValues) {
 84569:     if (!(def in p)) {
108049:       is(e[def], defaultMouseEventValues[def],
108049:          "MouseEvent: Wrong default value for " + def + "!");
 84569:     } else {
108049:       is(e[def], p[def], "MouseEvent: Wrong event init value for " + def + "!");
108049:     }
108049:   }
108049: }
108049: 
108783: // PopupBlockedEvent
108783: 
108783: try {
108783:   e = new PopupBlockedEvent();
108783: } catch(exp) {
108783:   ex = true;
108783: }
108783: ok(ex, "PopupBlockedEvent: First parameter is required!");
108783: ex = false;
108783: 
108783: e = new PopupBlockedEvent("hello");
108783: ok(e.type, "hello", "PopupBlockedEvent: Wrong event type!");
108783: ok(!e.isTrusted, "PopupBlockedEvent: Event shouldn't be trusted!");
108783: ok(!e.bubbles, "PopupBlockedEvent: Event shouldn't bubble!");
108783: ok(!e.cancelable, "PopupBlockedEvent: Event shouldn't be cancelable!");
108783: document.dispatchEvent(e);
108783: is(receivedEvent, e, "PopupBlockedEvent: Wrong event!");
108783: 
108783: e = new PopupBlockedEvent("hello",
108783:                           { requestingWindow: window,
108783:                             popupWindowFeatures: "features",
108783:                             popupWindowName: "name"
108783:                           });
108783: is(e.requestingWindow, window);
108783: is(e.popupWindowFeatures, "features");
108783: is(e.popupWindowName, "name");
108783: 
108049: // WheelEvent
108049: 
108049: try {
108049:   e = new WheelEvent();
108049: } catch(exp) {
108049:   ex = true;
108049: }
108049: ok(ex, "WheelEvent: First parameter is required!");
108049: ex = false;
108049: 
108049: e = new WheelEvent("hello");
108049: ok(e.type, "hello", "WheelEvent: Wrong event type!");
108049: ok(!e.isTrusted, "WheelEvent: Event shouldn't be trusted!");
108049: ok(!e.bubbles, "WheelEvent: Event shouldn't bubble!");
108049: ok(!e.cancelable, "WheelEvent: Event shouldn't be cancelable!");
108049: document.dispatchEvent(e);
108049: is(receivedEvent, e, "WheelEvent: Wrong event!");
108049: 
108049: var wheelEventProps =
108049: [ { screenX: 0 },
108049:   { screenY: 0 },
108049:   { clientX: 0 },
108049:   { clientY: 0 },
108049:   { ctrlKey: false },
108049:   { shiftKey: false },
108049:   { altKey: false },
108049:   { metaKey: false },
108049:   { button: 0 },
108049:   { buttons: 0 },
108049:   { relatedTarget: null },
108049:   { deltaX: 0.0 },
108049:   { deltaY: 0.0 },
108049:   { deltaZ: 0.0 },
108049:   { deltaMode: 0 }
108049: ];
108049: 
108049: var testWheelProps =
108049: [
108049:   { screenX: 1 },
108049:   { screenY: 2 },
108049:   { clientX: 3 },
108049:   { clientY: 4 },
108049:   { ctrlKey: true },
108049:   { shiftKey: true },
108049:   { altKey: true },
108049:   { metaKey: true },
108049:   { button: 5 },
108049:   { buttons: 6 },
108049:   { relatedTarget: window },
108049:   { deltaX: 7.8 },
108049:   { deltaY: 9.1 },
108049:   { deltaZ: 2.3 },
108049:   { deltaMode: 4 }
108049: ];
108049: 
108049: var defaultWheelEventValues = {};
108049: for (var i = 0; i < wheelEventProps.length; ++i) {
108049:   for (prop in wheelEventProps[i]) {
108049:     ok(prop in e, "WheelEvent: WheelEvent doesn't have property " + prop + "!");
108049:     defaultWheelEventValues[prop] = wheelEventProps[i][prop]; 
108049:   }
108049: }
108049: 
108049: while (testWheelProps.length) {
108049:   var p = testWheelProps.shift();
108049:   e = new WheelEvent("foo", p);
108049:   for (var def in defaultWheelEventValues) {
108049:     if (!(def in p)) {
108049:       is(e[def], defaultWheelEventValues[def],
108049:          "WheelEvent: Wrong default value for " + def + "!");
108049:     } else {
108049:       is(e[def], p[def], "WheelEvent: Wrong event init value for " + def + "!");
 84569:     }
 84569:   }
 84569: }
 84568: 
 84566: </script>
 84566: </pre>
 84566: </body>
 84566: </html>

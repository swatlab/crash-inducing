    1: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
    1: /* ***** BEGIN LICENSE BLOCK *****
    1:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
    1:  *
    1:  * The contents of this file are subject to the Mozilla Public License Version
    1:  * 1.1 (the "License"); you may not use this file except in compliance with
    1:  * the License. You may obtain a copy of the License at
    1:  * http://www.mozilla.org/MPL/
    1:  *
    1:  * Software distributed under the License is distributed on an "AS IS" basis,
    1:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
    1:  * for the specific language governing rights and limitations under the
    1:  * License.
    1:  *
    1:  * The Original Code is mozilla.org code.
    1:  *
    1:  * The Initial Developer of the Original Code is
    1:  * Netscape Communications Corporation.
    1:  * Portions created by the Initial Developer are Copyright (C) 1998
    1:  * the Initial Developer. All Rights Reserved.
    1:  *
    1:  * Contributor(s):
    1:  *
    1:  * Alternatively, the contents of this file may be used under the terms of
    1:  * either of the GNU General Public License Version 2 or later (the "GPL"),
    1:  * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
    1:  * in which case the provisions of the GPL or the LGPL are applicable instead
    1:  * of those above. If you wish to allow use of your version of this file only
    1:  * under the terms of either the GPL or the LGPL, and not to allow others to
    1:  * use your version of this file under the terms of the MPL, indicate your
    1:  * decision by deleting the provisions above and replace them with the notice
    1:  * and other provisions required by the GPL or the LGPL. If you do not delete
    1:  * the provisions above, a recipient may use your version of this file under
    1:  * the terms of any one of the MPL, the GPL or the LGPL.
    1:  *
    1:  * ***** END LICENSE BLOCK ***** */
    1: 
    1: /* BarProps are the collection of little properties of DOM windows whose
    1:    only property of their own is "visible".  They describe the window
    1:    chrome which can be made visible or not through JavaScript by setting
    1:    the appropriate property (window.menubar.visible)
    1: */
    1: 
    1: #ifndef nsBarProps_h___
    1: #define nsBarProps_h___
    1: 
    1: #include "nscore.h"
    1: #include "nsIScriptContext.h"
    1: #include "nsIDOMBarProp.h"
    1: #include "nsIWeakReference.h"
    1: 
    1: class nsGlobalWindow;
    1: class nsIWebBrowserChrome;
    1: 
    1: // Script "BarProp" object
    1: class nsBarProp : public nsIDOMBarProp
    1: {
    1: public:
69041:   explicit nsBarProp(nsGlobalWindow *aWindow);
    1:   virtual ~nsBarProp();
    1: 
    1:   NS_DECL_ISUPPORTS
    1: 
    1:   NS_IMETHOD GetVisibleByFlag(PRBool *aVisible, PRUint32 aChromeFlag);
    1:   NS_IMETHOD SetVisibleByFlag(PRBool aVisible, PRUint32 aChromeFlag);
    1: 
    1: protected:
69041:   already_AddRefed<nsIWebBrowserChrome> GetBrowserChrome();
69041: 
69041:   nsGlobalWindow             *mDOMWindow;
69041:   nsCOMPtr<nsIWeakReference>  mDOMWindowWeakref;
69041:   /* Note the odd double reference to the owning global window.
69041:      Since the corresponding DOM window nominally owns this object,
69041:      but refcounted ownership of this object can be handed off to
69041:      owners unknown, we need a weak ref back to the DOM window.
69041:      However we also need access to properties of the DOM Window
69041:      that aren't available through interfaces. Then it's either
69041:      a weak ref and some skanky casting, or this funky double ref.
69041:      Funky beats skanky, so here we are. */
    1: };
    1: 
    1: // Script "menubar" object
    1: class nsMenubarProp : public nsBarProp
    1: {
    1: public:
69041:   explicit nsMenubarProp(nsGlobalWindow *aWindow);
    1:   virtual ~nsMenubarProp();
    1: 
    1:   NS_DECL_NSIDOMBARPROP
    1: };
    1: 
    1: // Script "toolbar" object
    1: class nsToolbarProp : public nsBarProp
    1: {
    1: public:
69041:   explicit nsToolbarProp(nsGlobalWindow *aWindow);
    1:   virtual ~nsToolbarProp();
    1: 
    1:   NS_DECL_NSIDOMBARPROP
    1: };
    1: 
    1: // Script "locationbar" object
    1: class nsLocationbarProp : public nsBarProp
    1: {
    1: public:
69041:   explicit nsLocationbarProp(nsGlobalWindow *aWindow);
    1:   virtual ~nsLocationbarProp();
    1: 
    1:   NS_DECL_NSIDOMBARPROP
    1: };
    1: 
    1: // Script "personalbar" object
    1: class nsPersonalbarProp : public nsBarProp
    1: {
    1: public:
69041:   explicit nsPersonalbarProp(nsGlobalWindow *aWindow);
    1:   virtual ~nsPersonalbarProp();
    1: 
    1:   NS_DECL_NSIDOMBARPROP
    1: };
    1: 
    1: // Script "statusbar" object
    1: class nsStatusbarProp : public nsBarProp
    1: {
    1: public:
69041:   explicit nsStatusbarProp(nsGlobalWindow *aWindow);
    1:   virtual ~nsStatusbarProp();
    1: 
    1:   NS_DECL_NSIDOMBARPROP
    1: };
    1: 
    1: // Script "scrollbars" object
69041: class nsScrollbarsProp : public nsBarProp
69041: {
    1: public:
69041:   explicit nsScrollbarsProp(nsGlobalWindow *aWindow);
    1:   virtual ~nsScrollbarsProp();
    1: 
    1:   NS_DECL_NSIDOMBARPROP
    1: };
    1: 
    1: #endif /* nsBarProps_h___ */
    1: 

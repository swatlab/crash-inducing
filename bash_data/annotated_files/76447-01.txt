34681: <!DOCTYPE HTML>
34681: <html>
34681: <!--
34681: -->
34681: <head>
34681:   <title>Test for copy/paste</title>
34681:   <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
34681:   <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
34681: </head>
34681: <body>
34681: <a target="_blank" href="https://bugzilla.mozilla.org/show_bug.cgi?id=524975">Mozilla Bug </a>
34681: <p id="display"></p>
34681: <div id="content" style="display: none">
34681: </div>
34681: <pre id="test">
34681: <script class="testbody" type="text/javascript">
55279: function modifySelection(s) {
55279:   var g = window.getSelection();
55279:   var l = g.getRangeAt(0);
55279:   var d = document.createElement("p");
55279:   d.innerHTML = s;
55279:   d.appendChild(l.cloneContents());
55279: 
55279:   var e = document.createElement("div");
55279:   document.body.appendChild(e);
55279:   e.appendChild(d);
55279:   var a = document.createRange();
55279:   a.selectNode(d);
55279:   g.removeAllRanges();
55279:   g.addRange(a);
55279:   window.setTimeout(function () {
55279:       e.parentNode.removeChild(e);
55279:       g.removeAllRanges();
55279:       g.addRange(l);
55279:   }, 0)
55279: }
34681: 
34681: function testCopyPaste () {
34681:   netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
34681: 
34681:   var webnav = window.QueryInterface(Components.interfaces.nsIInterfaceRequestor)
34681:                      .getInterface(Components.interfaces.nsIWebNavigation)
34681: 
34681:   var docShell = webnav.QueryInterface(Components.interfaces.nsIDocShell);
34681: 
34681:   var documentViewer = docShell.contentViewer
34681:                                .QueryInterface(Components.interfaces.nsIContentViewerEdit);
34681: 
34681:   var clipboard = Components.classes["@mozilla.org/widget/clipboard;1"]
34681:                             .getService(Components.interfaces.nsIClipboard);
34681: 
39582:   var textarea = document.getElementById('input');
39582: 
42637:   function copySelectionToClipboard() {
39582:     documentViewer.copySelection();
76447:     ok(clipboard.hasDataMatchingFlavors(["text/unicode"], 1,1), "check text/unicode");
76447:     ok(clipboard.hasDataMatchingFlavors(["text/html"], 1,1), "check text/html");
42637:   }
42637:   function copyToClipboard(node) {
42637:     textarea.blur();
42637:     clipboard.emptyClipboard(1);
42637:     var sel = window.getSelection();
42637:     sel.removeAllRanges();
42637:     var r = document.createRange();
42637:     r.selectNode(node);
42637:     window.getSelection().addRange(r);
42637:     copySelectionToClipboard();
42637:   }
42637:   function copyRangeToClipboard(startNode,startIndex,endNode,endIndex) {
42637:     textarea.blur();
42637:     clipboard.emptyClipboard(1);
42637:     var sel = window.getSelection();
42637:     sel.removeAllRanges();
42637:     var r = document.createRange();
42637:     r.setStart(startNode,startIndex)
42637:     r.setEnd(endNode,endIndex)
42637:     window.getSelection().addRange(r);
42637:     copySelectionToClipboard();
42637:   }
42637:   function copyChildrenToClipboard(id) {
42637:     textarea.blur();
42637:     clipboard.emptyClipboard(1);
42637:     window.getSelection().selectAllChildren(document.getElementById(id));
42637:     copySelectionToClipboard();
42637:   }
42637:   function getClipboardData(mime) {
42637:     var transferable = Components.classes['@mozilla.org/widget/transferable;1']
42536:                                  .createInstance(Components.interfaces.nsITransferable);
42637:     transferable.addDataFlavor(mime);
42536:     clipboard.getData(transferable, 1);
42637:     var data = {};
42637:     transferable.getTransferData(mime, data, {}) ;
42637:     return data;
42637:   }
42637:   function testClipboardValue(mime, expected) {
42637:     var data = getClipboardData(mime);
42637:     is (data.value == null ? data.value :
42637:         data.value.QueryInterface(Components.interfaces.nsISupportsString).data,
42637:       expected,
42637:       mime + " value in the clipboard");
42637:     return data.value;
42637:   }
42637:   function testPasteText(expected) {
39582:     textarea.value="";
39582:     textarea.focus();
39582:     textarea.QueryInterface(Components.interfaces.nsIDOMNSEditableElement)
39582:             .editor.paste(1);
42637:     is(textarea.value, expected, "value of the textarea after the paste");
42637:   }
42637:   function testSelectionToString(expected) {
42637:     is(window.getSelection().toString().replace(/\r\n/g,"\n"), expected, "Selection.toString");
42637:   }
42637:   function testInnerHTML(id, expected) {
42637:     var value = document.getElementById(id).innerHTML;
42637:     is(value, expected, id + ".innerHTML");
42637:   }
42637:   function testEmptyChildren(id) {
42637:     copyChildrenToClipboard(id);
42637:     testSelectionToString("");
42637:     testClipboardValue("text/unicode", null);
42637:     testClipboardValue("text/html", null);
42637:     testPasteText("");
42637:   }
39582: 
42637:   copyChildrenToClipboard("draggable");
42637:   testSelectionToString("This is a draggable bit of text.");
42637:   testClipboardValue("text/unicode",
42637:                      "This is a draggable bit of text.");
42637:   testClipboardValue("text/html",
42637:                      "<div id=\"draggable\" title=\"title to have a long HTML line\">This is a <em>draggable</em> bit of text.</div>");
42637:   testPasteText("This is a draggable bit of text.");
42637: 
42637:   copyChildrenToClipboard("alist");
43906:   testSelectionToString(" bla\n\n    foo\n    bar\n\n");
43906:   testClipboardValue("text/unicode", "bla\n\n    foo\n    bar\n\n");
42637:   testClipboardValue("text/html", "<div id=\"alist\">\n    bla\n    <ul>\n      <li>foo</li>\n      \n      <li>bar</li>\n    </ul>\n  </div>");
43906:   testPasteText("bla\n\n    foo\n    bar\n\n");
43906: 
43906:   copyChildrenToClipboard("blist");
43906:   testSelectionToString(" mozilla\n\n    foo\n    bar\n\n");
43906:   testClipboardValue("text/unicode", "mozilla\n\n    foo\n    bar\n\n");
43906:   testClipboardValue("text/html", "<div id=\"blist\">\n    mozilla\n    <ol>\n      <li>foo</li>\n      \n      <li>bar</li>\n    </ol>\n  </div>");
43906:   testPasteText("mozilla\n\n    foo\n    bar\n\n");
43906: 
43906:   copyChildrenToClipboard("clist");
43906:   testSelectionToString(" mzla\n\n    foo\n        bazzinga!\n    bar\n\n");
43906:   testClipboardValue("text/unicode", "mzla\n\n    foo\n        bazzinga!\n    bar\n\n");
43906:   testClipboardValue("text/html", "<div id=\"clist\">\n    mzla\n    <ul>\n      <li>foo<ul>\n        <li>bazzinga!</li>\n      </ul></li>\n      \n      <li>bar</li>\n    </ul>\n  </div>");
43906:   testPasteText("mzla\n\n    foo\n        bazzinga!\n    bar\n\n");
42637: 
42637:   copyChildrenToClipboard("div4");
42637:   testSelectionToString(" Tt t t ");
42637:   testClipboardValue("text/unicode", "Tt t t ");
42637:   testClipboardValue("text/html", "<div id=\"div4\">\n  T<textarea>t t t</textarea>\n</div>");
42637:   testInnerHTML("div4", "\n  T<textarea>t t t</textarea>\n");
42637:   testPasteText("Tt t t ");
42637: 
42637:   copyChildrenToClipboard("div5");
42637:   testSelectionToString(" T ");
42637:   testClipboardValue("text/unicode", "T ");
42637:   testClipboardValue("text/html", "<div id=\"div5\">\n  T<textarea>     </textarea>\n</div>");
42637:   testInnerHTML("div5", "\n  T<textarea>     </textarea>\n");
42637:   testPasteText("T ");
42637: 
42637:   copyRangeToClipboard($("div6").childNodes[0],0, $("div6").childNodes[1],1);
42637:   testSelectionToString("");
42637: // START Disabled due to bug 564688
42637: if (false) {
42637:   testClipboardValue("text/unicode", "");
42637:   testClipboardValue("text/html", "");
42637: }
42637: // END Disabled due to bug 564688
42637:   testInnerHTML("div6", "div6");
42637: 
42637:   copyRangeToClipboard($("div7").childNodes[0],0, $("div7").childNodes[0],4);
42637:   testSelectionToString("");
42637: // START Disabled due to bug 564688
42637: if (false) {
42637:   testClipboardValue("text/unicode", "");
42637:   testClipboardValue("text/html", "");
42637: }
42637: // END Disabled due to bug 564688
42637:   testInnerHTML("div7", "div7");
42637: 
42637:   copyRangeToClipboard($("div8").childNodes[0],0, $("div8").childNodes[0],4);
42637:   testSelectionToString("");
42637: // START Disabled due to bug 564688
42637: if (false) {
42637:   testClipboardValue("text/unicode", "");
42637:   testClipboardValue("text/html", "");
42637: }
42637: // END Disabled due to bug 564688
42637:   testInnerHTML("div8", "div8");
42637: 
42637:   copyRangeToClipboard($("div9").childNodes[0],0, $("div9").childNodes[0],4);
42637:   testSelectionToString("div9");
42637:   testClipboardValue("text/unicode", "div9");
42637:   testClipboardValue("text/html", "div9");
42637:   testInnerHTML("div9", "div9");
42637: 
42637:   copyToClipboard($("div10"));
42637:   testSelectionToString("");
42637:   testInnerHTML("div10", "div10");
42637: 
42637:   copyToClipboard($("div10").firstChild);
42637:   testSelectionToString("");
42637: 
42637:   copyRangeToClipboard($("div10").childNodes[0],0, $("div10").childNodes[0],1);
42637:   testSelectionToString("");
42637: 
42637:   copyRangeToClipboard($("div10").childNodes[1],0, $("div10").childNodes[1],1);
42637:   testSelectionToString("");
39582: 
39582:   // ============ copy/paste test from/to a textarea
39582: 
39582:   var val = "1\n 2\n  3";
34681:   textarea.value=val;
34681:   textarea.select();
34681:   textarea.editor.copy();
34681:   
34681:   textarea.value="";
34681:   textarea.editor.paste(1);
34681:   is(textarea.value, val);
39582:   textarea.value="";
34681: 
75139:   // ============ NOSCRIPT should not be copied
75139: 
75139:   copyChildrenToClipboard("div13");
75139:   testSelectionToString("__");
75139:   testClipboardValue("text/unicode", "__");
75139:   testClipboardValue("text/html", "<div id=\"div13\">__</div>");
75139:   testPasteText("__");
75139: 
55279:   // ============ manipulating Selection in oncopy
55279: 
55279:   copyRangeToClipboard($("div11").childNodes[0],0, $("div11").childNodes[1],2);
55279:   testClipboardValue("text/unicode", "Xdiv11");
55279:   testClipboardValue("text/html", "<div><p>X<span>div</span>11</p></div>");
55279:   setTimeout(function(){testSelectionToString("div11")},0);
55279: 
55279:   setTimeout(function(){
55279:     netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
55279:     copyRangeToClipboard($("div12").childNodes[0],0, $("div12").childNodes[1],2);
55279:     testClipboardValue("text/unicode", "Xdiv12");
55279:     testClipboardValue("text/html", "<div><p>X<span>div</span>12</p></div>");
55279:     setTimeout(function(){testSelectionToString("div12")},0);
55279:   },0);
55279: 
55279:   setTimeout(function(){SimpleTest.finish()},0);
34681: }
34681: 
34681: 
34681: SimpleTest.waitForExplicitFinish();
34681: 
34681: addLoadEvent(testCopyPaste);
34681: 
34681: </script>
34681: </pre>
34681: <div>
34681: 
34681:   <div id="draggable" title="title to have a long HTML line">This is a <em>draggable</em> bit of text.</div>
39582:   <textarea id="input" cols="40" rows="10"></textarea>
39582: 
39582:   <div id="alist">
39582:     bla
39582:     <ul>
39582:       <li>foo</li>
42637:       <li style="display: none;">baz</li>
39582:       <li>bar</li>
39582:     </ul>
39582:   </div>
34681: 
43906:   <div id="blist">
43906:     mozilla
43906:     <ol>
43906:       <li>foo</li>
43906:       <li style="display: none;">baz</li>
43906:       <li>bar</li>
43906:     </ol>
43906:   </div>
43906: 
43906:   <div id="clist">
43906:     mzla
43906:     <ul>
43906:       <li>foo<ul>
43906:         <li>bazzinga!</li>
43906:       </ul></li>
43906:       <li style="display: none;">baz</li>
43906:       <li>bar</li>
43906:     </ul>
43906:   </div>
43906: 
42637: <div id="div4">
42637:   T<textarea>t t t</textarea>
42637: </div>
42637: 
42637: <div id="div5">
42637:   T<textarea>     </textarea>
42637: </div>
42637: 
42637: <div id="div6" style="display:none"></div>
42637: <script>
42637: var x = $("div6")
42637: x.appendChild(document.createTextNode('di'))
42637: x.appendChild(document.createTextNode('v6'))
42637: </script>
42637: 
42637: <div id="div7" style="display:none">div7</div>
42637: <div id="div8" style="visibility:hidden">div8</div>
42637: <div style="visibility:hidden"><div id="div9" style="visibility:visible">div9</div></div>
42637: <div style="visibility:hidden"><div><div><div id="div10"></div></div></div></div>
42637: <script>
42637: var x = $("div10")
42637: x.appendChild(document.createTextNode('div'))
42637: x.appendChild(document.createTextNode('10'))
42637: </script>
42637: 
55279: <div id="div11" oncopy="modifySelection('X')"><span>div</span>11</div>
55279: <div id="div12" oncopy="modifySelection('X<b style=\'display:none\'>Y</b>')"><span>div</span>12</div>
42637: 
75139: <div id="div13">_<noscript>FAIL</noscript>_</div>
75139: 
34681: </div>
34681: </body>
34681: </html>

35963: /* -*- Mode: C++; c-basic-offset: 2; indent-tabs-mode: nil; tab-width: 8 -*- */
35963: /* ***** BEGIN LICENSE BLOCK *****
35963:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
35963:  *
35963:  * The contents of this file are subject to the Mozilla Public License Version
35963:  * 1.1 (the "License"); you may not use this file except in compliance with
35963:  * the License. You may obtain a copy of the License at
35963:  * http://www.mozilla.org/MPL/
35963:  *
35963:  * Software distributed under the License is distributed on an "AS IS" basis,
35963:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
35963:  * for the specific language governing rights and limitations under the
35963:  * License.
35963:  *
35963:  * The Original Code is Mozilla IPC.
35963:  *
35963:  * The Initial Developer of the Original Code is
35963:  *   The Mozilla Foundation
35963:  * Portions created by the Initial Developer are Copyright (C) 2009
35963:  * the Initial Developer. All Rights Reserved.
35963:  *
35963:  * Contributor(s):
35963:  *   Chris Jones <jones.chris.g@gmail.com>.
35963:  *
35963:  * Alternatively, the contents of this file may be used under the terms of
35963:  * either the GNU General Public License Version 2 or later (the "GPL"), or
35963:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
35963:  * in which case the provisions of the GPL or the LGPL are applicable instead
35963:  * of those above. If you wish to allow use of your version of this file only
35963:  * under the terms of either the GPL or the LGPL, and not to allow others to
35963:  * use your version of this file under the terms of the MPL, indicate your
35963:  * decision by deleting the provisions above and replace them with the notice
35963:  * and other provisions required by the GPL or the LGPL. If you do not delete
35963:  * the provisions above, a recipient may use your version of this file under
35963:  * the terms of any one of the MPL, the GPL or the LGPL.
35963:  *
35963:  * ***** END LICENSE BLOCK ***** */
35963: 
35963: #ifndef mozilla__ipdltest_IPDLUnitTests_h
35963: #define mozilla__ipdltest_IPDLUnitTests_h 1
35963: 
35963: #include "base/message_loop.h"
36016: #include "base/process.h"
35963: #include "chrome/common/ipc_channel.h"
35963: 
36140: #include "mozilla/ipc/GeckoThread.h"
36140: 
36140: #include "nsIAppShell.h"
36140: 
36140: #include "nsCOMPtr.h"
36057: #include "nsDebug.h"
36140: #include "nsServiceManagerUtils.h" // do_GetService()
36140: #include "nsWidgetsCID.h"       // NS_APPSHELL_CID
36165: #include "nsXULAppAPI.h"
36140: 
35963: 
35963: #define MOZ_IPDL_TESTFAIL_LABEL "TEST-UNEXPECTED-FAIL"
35963: #define MOZ_IPDL_TESTPASS_LABEL "TEST-PASS"
35963: 
36057: 
36057: namespace mozilla {
36057: namespace _ipdltest {
36057: 
36057: //-----------------------------------------------------------------------------
36057: // both processes
36057: const char* const IPDLUnitTestName();
36057: 
35963: // NB: these are named like the similar functions in
35963: // xpcom/test/TestHarness.h.  The names should nominally be kept in
35963: // sync.
35963: 
36057: inline void fail(const char* fmt, ...)
36057: {
36057:   va_list ap;
35963: 
36057:   fprintf(stderr, MOZ_IPDL_TESTFAIL_LABEL " | %s | ", IPDLUnitTestName());
35963: 
36057:   va_start(ap, fmt);
36057:   vfprintf(stderr, fmt, ap);
36057:   va_end(ap);
35963: 
36057:   fputc('\n', stderr);
35963: 
36057:   NS_RUNTIMEABORT("failed test");
36057: }
35963: 
36057: inline void passed(const char* fmt, ...)
36057: {
36057:   va_list ap;
35963: 
36057:   printf(MOZ_IPDL_TESTPASS_LABEL " | %s | ", IPDLUnitTestName());
36057: 
36057:   va_start(ap, fmt);
36057:   vprintf(fmt, ap);
36057:   va_end(ap);
36057: 
36057:   fputc('\n', stdout);
36057: }
35963: 
35963: //-----------------------------------------------------------------------------
35963: // parent process only
35963: 
36606: class IPDLUnitTestSubprocess;
36606: 
36606: extern void* gParentActor;
36606: extern IPDLUnitTestSubprocess* gSubprocess;
36606: 
35963: void IPDLUnitTestMain(void* aData);
35963: 
36165: void QuitParent();
35963: 
35963: //-----------------------------------------------------------------------------
35963: // child process only
35963: 
36606: extern void* gChildActor;
36606: 
36016: void IPDLUnitTestChildInit(IPC::Channel* transport,
36016:                            base::ProcessHandle parent,
36016:                            MessageLoop* worker);
35963: 
36166: inline void QuitChild()
36140: {
36165:   XRE_ShutdownChildProcess();
36140: }
36140: 
35963: } // namespace _ipdltest
35963: } // namespace mozilla
35963: 
35963: 
35963: #endif // ifndef mozilla__ipdltest_IPDLUnitTests_h

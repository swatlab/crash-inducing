 69270: /* vim: se cin sw=2 ts=2 et : */
 69270: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 69270:  *
 98983:  * This Source Code Form is subject to the terms of the Mozilla Public
 98983:  * License, v. 2.0. If a copy of the MPL was not distributed with this
 98983:  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 69270: 
 69270: #ifndef __GfxInfoX11_h__
 69270: #define __GfxInfoX11_h__
 69270: 
 69270: #include "GfxInfoBase.h"
 69270: 
 69270: namespace mozilla {
 69270: namespace widget {
 69270: 
 69270: class GfxInfo : public GfxInfoBase
 69270: {
 69270: public:
 69270: 
 69270:   // We only declare the subset of nsIGfxInfo that we actually implement. The
 69270:   // rest is brought forward from GfxInfoBase.
106218:   NS_IMETHOD GetD2DEnabled(bool *aD2DEnabled);
106218:   NS_IMETHOD GetDWriteEnabled(bool *aDWriteEnabled);
106218:   NS_IMETHOD GetDWriteVersion(nsAString & aDwriteVersion);
106218:   NS_IMETHOD GetCleartypeParameters(nsAString & aCleartypeParams);
106218:   NS_IMETHOD GetAdapterDescription(nsAString & aAdapterDescription);
106218:   NS_IMETHOD GetAdapterDriver(nsAString & aAdapterDriver);
106218:   NS_IMETHOD GetAdapterVendorID(nsAString & aAdapterVendorID);
106218:   NS_IMETHOD GetAdapterDeviceID(nsAString & aAdapterDeviceID);
106218:   NS_IMETHOD GetAdapterRAM(nsAString & aAdapterRAM);
106218:   NS_IMETHOD GetAdapterDriverVersion(nsAString & aAdapterDriverVersion);
106218:   NS_IMETHOD GetAdapterDriverDate(nsAString & aAdapterDriverDate);
106218:   NS_IMETHOD GetAdapterDescription2(nsAString & aAdapterDescription);
106218:   NS_IMETHOD GetAdapterDriver2(nsAString & aAdapterDriver);
106218:   NS_IMETHOD GetAdapterVendorID2(nsAString & aAdapterVendorID);
106218:   NS_IMETHOD GetAdapterDeviceID2(nsAString & aAdapterDeviceID);
106218:   NS_IMETHOD GetAdapterRAM2(nsAString & aAdapterRAM);
106218:   NS_IMETHOD GetAdapterDriverVersion2(nsAString & aAdapterDriverVersion);
106218:   NS_IMETHOD GetAdapterDriverDate2(nsAString & aAdapterDriverDate);
106218:   NS_IMETHOD GetIsGPU2Active(bool *aIsGPU2Active);
 69270:   using GfxInfoBase::GetFeatureStatus;
 69270:   using GfxInfoBase::GetFeatureSuggestedDriverVersion;
 69270:   using GfxInfoBase::GetWebGLParameter;
 69270: 
 69270:   virtual nsresult Init();
 69270:   
 78440:   NS_IMETHOD_(void) GetData();
 78440: 
 84610: #ifdef DEBUG
 84610:   NS_DECL_ISUPPORTS_INHERITED
 84610:   NS_DECL_NSIGFXINFODEBUG
 84610: #endif
 84610: 
 69270: protected:
 69270: 
108991:   virtual nsresult GetFeatureStatusImpl(int32_t aFeature, 
108991:                                         int32_t *aStatus, 
 81328:                                         nsAString & aSuggestedDriverVersion, 
 84603:                                         const nsTArray<GfxDriverInfo>& aDriverInfo, 
106838:                                         OperatingSystem* aOS = nullptr);
 84603:   virtual const nsTArray<GfxDriverInfo>& GetGfxDriverInfo();
 69270: 
 69270: private:
 69270:   nsCString mVendor;
 69270:   nsCString mRenderer;
 69270:   nsCString mVersion;
 69270:   nsCString mAdapterDescription;
 94581:   nsCString mOS;
 94581:   nsCString mOSRelease;
123885:   bool mIsMesa, mIsNVIDIA, mIsFGLRX, mIsNouveau, mIsIntel, mIsOldSwrast;
 74904:   bool mHasTextureFromPixmap;
 90956:   int mGLMajorVersion, mMajorVersion, mMinorVersion, mRevisionVersion;
 69270: 
 69270:   void AddCrashReportAnnotations();
 69270: };
 69270: 
 69270: } // namespace widget
 69270: } // namespace mozilla
 69270: 
 69270: #endif /* __GfxInfoX11_h__ */

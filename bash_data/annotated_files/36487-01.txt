    1: # ***** BEGIN LICENSE BLOCK *****
    1: # Version: MPL 1.1/GPL 2.0/LGPL 2.1
    1: #
    1: # The contents of this file are subject to the Mozilla Public License Version
    1: # 1.1 (the "License"); you may not use this file except in compliance with
    1: # the License. You may obtain a copy of the License at
    1: # http://www.mozilla.org/MPL/
    1: #
    1: # Software distributed under the License is distributed on an "AS IS" basis,
    1: # WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
    1: # for the specific language governing rights and limitations under the
    1: # License.
    1: #
    1: # The Original Code is mozilla.org code.
    1: #
    1: # The Initial Developer of the Original Code is
    1: # Netscape Communications.
    1: # Portions created by the Initial Developer are Copyright (C) 2001
    1: # the Initial Developer. All Rights Reserved.
    1: #
    1: # Contributor(s):
    1: #  Brian Ryner <bryner@brianryner.com>
    1: #  Benjamin Smedberg <benjamin@smedbergs.us>
    1: #
    1: # Alternatively, the contents of this file may be used under the terms of
    1: # either the GNU General Public License Version 2 or later (the "GPL"), or
    1: # the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
    1: # in which case the provisions of the GPL or the LGPL are applicable instead
    1: # of those above. If you wish to allow use of your version of this file only
    1: # under the terms of either the GPL or the LGPL, and not to allow others to
    1: # use your version of this file under the terms of the MPL, indicate your
    1: # decision by deleting the provisions above and replace them with the notice
    1: # and other provisions required by the GPL or the LGPL. If you do not delete
    1: # the provisions above, a recipient may use your version of this file under
    1: # the terms of any one of the MPL, the GPL or the LGPL.
    1: #
    1: # ***** END LICENSE BLOCK *****
    1: 
    1: DEPTH		= ../..
    1: topsrcdir	= @top_srcdir@
    1: srcdir		= @srcdir@
    1: VPATH		= @srcdir@
    1: 
    1: include $(DEPTH)/config/autoconf.mk
    1: 
    1: MODULE = xulapp
    1: LIBRARY_NAME = xulapp_s
    1: LIBXUL_LIBRARY = 1
    1: 
    1: 
    1: 
    1: 
    1: 
    1: FORCE_STATIC_LIB = 1
    1: 
    1: XPIDLSRCS = \
    1: 	nsINativeAppSupport.idl \
    1: 	$(NULL)
    1: 
12606: ifneq (,$(filter WINCE WINNT,$(OS_ARCH)))
    1: XPIDLSRCS += nsIWinAppHelper.idl
    1: endif
    1: 
    1: CPPSRCS = \
    1: 	nsAppRunner.cpp \
    1: 	nsConsoleWriter.cpp \
    1: 	nsXREDirProvider.cpp \
    1: 	nsNativeAppSupportBase.cpp \
    1: 	nsAppData.cpp \
36487: 	nsSigHandlers.cpp \
    1: 	$(NULL)
    1: 
29279: ifdef MOZ_SPLASHSCREEN
29279: ifeq ($(OS_ARCH),WINCE)
29279: CPPSRCS += nsSplashScreenWin.cpp
29279: else
29279: CPPSRCS += nsSplashScreenDummy.cpp
29279: endif
29279: endif
29279: 
    1: DEFINES += -DIMPL_XREAPI
    1: 
    1: ifndef BUILD_STATIC_LIBS
    1: CPPSRCS += nsEmbedFunctions.cpp
    1: endif
    1: 
    1: ifdef MOZ_UPDATER
    1: CPPSRCS += nsUpdateDriver.cpp
    1: DEFINES += -DMOZ_UPDATER
    1: endif
    1: 
    1: ifeq ($(MOZ_WIDGET_TOOLKIT),windows)
    1: CPPSRCS += nsNativeAppSupportWin.cpp
 9989: DEFINES += -DWIN32_LEAN_AND_MEAN -DUNICODE -D_UNICODE
    1: else
 4720: ifeq ($(MOZ_WIDGET_TOOLKIT),cocoa)
 4720: CMMSRCS = nsNativeAppSupportCocoa.mm
    1: else
    1: ifeq ($(MOZ_WIDGET_TOOLKIT),os2)
    1: CPPSRCS += nsNativeAppSupportOS2.cpp
    1: else
    1: ifeq ($(MOZ_WIDGET_TOOLKIT),beos)
    1: CPPSRCS += nsNativeAppSupportBeOS.cpp
    1: else
 3546: ifeq ($(MOZ_WIDGET_TOOLKIT),gtk2)
 3546: CPPSRCS += nsNativeAppSupportUnix.cpp
 3546: else
    1: CPPSRCS += nsNativeAppSupportDefault.cpp
    1: endif
    1: endif
    1: endif
    1: endif
 3546: endif
    1: 
18492: ifeq ($(MOZ_WIDGET_TOOLKIT),cocoa)
18492: CMMSRCS += MacLaunchHelper.mm
    1: CPPSRCS += nsCommandLineServiceMac.cpp
    1: OS_CXXFLAGS += -fexceptions
    1: endif
    1: ifeq ($(MOZ_WIDGET_TOOLKIT),cocoa)
 4720: CMMSRCS += MacApplicationDelegate.mm
    1: endif
    1: 
    1: SHARED_LIBRARY_LIBS += ../profile/src/$(LIB_PREFIX)profile_s.$(LIB_SUFFIX)
    1: 
    1: ifdef MOZ_ENABLE_XREMOTE
    1: SHARED_LIBRARY_LIBS += $(DEPTH)/widget/src/xremoteclient/$(LIB_PREFIX)xremote_client_s.$(LIB_SUFFIX)
    1: LOCAL_INCLUDES += -I$(topsrcdir)/widget/src/xremoteclient
    1: endif
    1: 
 4389: ifdef MOZ_CRASHREPORTER
 4389: SHARED_LIBRARY_LIBS += $(DEPTH)/toolkit/crashreporter/$(LIB_PREFIX)exception_handler_s.$(LIB_SUFFIX)
    1: ifeq ($(OS_ARCH),WINNT)
    1: SHARED_LIBRARY_LIBS += \
 4389: 	$(DEPTH)/toolkit/crashreporter/google-breakpad/src/client/windows/handler/$(LIB_PREFIX)exception_handler_s.$(LIB_SUFFIX) \
22510: 	$(DEPTH)/toolkit/crashreporter/google-breakpad/src/client/windows/crash_generation/$(LIB_PREFIX)crash_generation_s.$(LIB_SUFFIX) \
 4389: 	$(DEPTH)/toolkit/crashreporter/google-breakpad/src/common/windows/$(LIB_PREFIX)breakpad_windows_common_s.$(LIB_SUFFIX)
    1: endif
  787: 
  787: ifeq ($(OS_ARCH),Darwin)
  787: SHARED_LIBRARY_LIBS += \
 4389: 	$(DEPTH)/toolkit/crashreporter/google-breakpad/src/client/$(LIB_PREFIX)minidump_file_writer_s.$(LIB_SUFFIX) \
 4389: 	$(DEPTH)/toolkit/crashreporter/google-breakpad/src/client/mac/handler/$(LIB_PREFIX)exception_handler_s.$(LIB_SUFFIX) \
 4389: 	$(DEPTH)/toolkit/crashreporter/google-breakpad/src/common/$(LIB_PREFIX)breakpad_common_s.$(LIB_SUFFIX) \
 4389: 	$(DEPTH)/toolkit/crashreporter/google-breakpad/src/common/mac/$(LIB_PREFIX)breakpad_mac_common_s.$(LIB_SUFFIX)
  787: endif
 1715: 
 1715: ifeq ($(OS_ARCH),Linux)
 1715: SHARED_LIBRARY_LIBS += \
 4389:   $(DEPTH)/toolkit/crashreporter/google-breakpad/src/client/linux/handler/$(LIB_PREFIX)exception_handler_s.$(LIB_SUFFIX) \
 4389:   $(DEPTH)/toolkit/crashreporter/google-breakpad/src/client/$(LIB_PREFIX)minidump_file_writer_s.$(LIB_SUFFIX) \
 4389:   $(DEPTH)/toolkit/crashreporter/google-breakpad/src/common/$(LIB_PREFIX)breakpad_common_s.$(LIB_SUFFIX) \
 4389:   $(DEPTH)/toolkit/crashreporter/google-breakpad/src/common/linux/$(LIB_PREFIX)breakpad_linux_common_s.$(LIB_SUFFIX) \
 1715:   $(NULL)
 1715: endif
13348: 
13348: ifeq ($(OS_ARCH),SunOS)
13348: SHARED_LIBRARY_LIBS += \
13348:   $(DEPTH)/toolkit/crashreporter/google-breakpad/src/client/solaris/handler/$(LIB_PREFIX)exception_handler_s.$(LIB_SUFFIX) \
13348:   $(DEPTH)/toolkit/crashreporter/google-breakpad/src/client/$(LIB_PREFIX)minidump_file_writer_s.$(LIB_SUFFIX) \
13348:   $(DEPTH)/toolkit/crashreporter/google-breakpad/src/common/$(LIB_PREFIX)breakpad_common_s.$(LIB_SUFFIX) \
13348:   $(DEPTH)/toolkit/crashreporter/google-breakpad/src/common/solaris/$(LIB_PREFIX)breakpad_solaris_common_s.$(LIB_SUFFIX) \
13348:   $(NULL)
13348: endif
    1: endif
    1: 
20285: ifdef ENABLE_TESTS
20285: DIRS += test
20285: endif
20285: 
35741: include $(topsrcdir)/config/config.mk
35741: include $(topsrcdir)/ipc/chromium/chromium-config.mk
    1: include $(topsrcdir)/config/rules.mk
    1: 
35743: LOCAL_INCLUDES += -I$(topsrcdir)/dom/ipc
35743: 
    1: ifdef BUILD_STATIC_LIBS
    1: export::
35724: 	@$(PYTHON) $(MOZILLA_DIR)/config/buildlist.py $(FINAL_LINK_COMP_NAMES) Apprunner
    1: endif
    1: 
    1: LOCAL_INCLUDES += \
    1: 	-I$(srcdir) \
    1: 	-I$(srcdir)/../profile/src \
    1: 	-I$(topsrcdir)/config \
    1: 	$(NULL)
    1: 
16041: CXXFLAGS += $(TK_CFLAGS) $(MOZ_DBUS_GLIB_CFLAGS)
    1: 
19806: ifeq ($(MOZ_WIDGET_TOOLKIT),gtk2)
19806: CXXFLAGS += $(MOZ_PANGO_CFLAGS)
19806: endif
19806: 
    1: ifdef BUILD_STATIC_LIBS
    1: DEFINES += -D_BUILD_STATIC_BIN
    1: endif
    1: 
24526: DEFINES += \
24526:   -DOS_TARGET=\"$(OS_TARGET)\" \
24526:   -DMOZ_WIDGET_TOOLKIT=\"$(MOZ_WIDGET_TOOLKIT)\"
24526: 
    1: ifdef TARGET_XPCOM_ABI
    1: DEFINES += \
    1: 	-DTARGET_XPCOM_ABI=\"$(TARGET_XPCOM_ABI)\" \
    1: 	-DTARGET_OS_ABI=\"$(OS_TARGET)_$(TARGET_XPCOM_ABI)\" \
    1: 	$(NULL)
    1: endif
    1: 
    1: DEFINES += -DTOOLKIT_EM_VERSION=\"$(shell $(PERL) $(topsrcdir)/config/milestone.pl --topsrcdir=$(topsrcdir))\"
    1: 
    1: ifdef WRAP_SYSTEM_INCLUDES
    1: DEFINES		+= -DWRAP_SYSTEM_INCLUDES
    1: endif
    1: 
10285: ifeq ($(OS_ARCH),Linux)
10285: ifneq (,$(findstring lib64,$(libdir)))
10285: DEFINES     += -DHAVE_USR_LIB64_DIR
10285: endif
10285: endif
10285: 
34167: SOURCE_STAMP := $(shell cd $(topsrcdir) && hg identify . 2>/dev/null | cut -f1 -d' ')
25036: # strip a trailing slash from the repo URL because it's not always present,
25036: # and we want to construct a working URL in buildconfig.html
25036: # make+shell+sed = awful
25036: _dollar=$$
25036: SOURCE_REPO := $(shell cd $(topsrcdir) && hg showconfig paths.default 2>/dev/null | head -n1 | sed -e "s/^ssh:/http:/" -e "s/\/$(_dollar)//" )
25036: 
25036: ifdef SOURCE_STAMP
25036: INIARGS = --sourcestamp=$(SOURCE_STAMP)
25036: # extra sanity check for old versions of hg
25036: # that don't support showconfig
25036: ifeq (http,$(patsubst http%,http,$(SOURCE_REPO)))
25036: INIARGS += --sourcerepo=$(SOURCE_REPO)
25036: endif
25036: endif
25036: 
 3041: platform.ini: FORCE
25036: 	$(PYTHON) $(srcdir)/make-platformini.py --buildid=$(shell cat $(DEPTH)/config/buildid) $(INIARGS) $(topsrcdir)/config/milestone.txt > $@
 3041: 
11454: GARBAGE += platform.ini
11454: 
 3041: libs:: platform.ini
 3041: 	$(INSTALL) $^ $(DIST)/bin
 3041: 
 3041: install::
 3041: 	$(INSTALL) $(IFLAGS1) $^ $(DESTDIR)$(mozappdir)

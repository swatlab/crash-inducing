 84764: /* Any copyright is dedicated to the Public Domain.
 84764:    http://creativecommons.org/publicdomain/zero/1.0/ */
 84764: "use strict";
 84764: 
 84764: let tab0, tab1, tab2;
 84764: let testStep = -1;
 84764: 
 84764: function test() {
 84764:   if (!isTiltEnabled()) {
 84764:     info("Skipping tab switch test because Tilt isn't enabled.");
 84764:     return;
 84764:   }
 84764:   if (!isWebGLSupported()) {
 84764:     info("Skipping tab switch test because WebGL isn't supported.");
 84764:     return;
 84764:   }
 84764: 
 84764:   waitForExplicitFinish();
 84764: 
 84764:   gBrowser.tabContainer.addEventListener("TabSelect", tabSelect, false);
 84764:   createTab1();
 84764: }
 84764: 
 84764: function createTab1() {
 84764:   tab0 = gBrowser.selectedTab;
 84764: 
 84764:   tab1 = createTab(function() {
 84764:     createTilt({
 84764:       onInspectorOpen: function()
 84764:       {
 84764:         ok(Tilt.tiltButton.checked === false,
 84764:           "The toolbar tilt button shouldn't be pressed before Tilt is open.");
100193:         ok(InspectorUI.inspecting,
100193:           "The Inspector should be inspecting for tab1.");
100193:         ok(InspectorUI.highlighter.hidden === false,
100193:           "The Highlighter should be visible for tab1.");
 84764:       },
 84764:       onTiltOpen: function()
 84764:       {
100193:         ok(InspectorUI.inspecting === false,
100193:           "The Inspector should not be inspecting for tab1 after Tilt is open.");
100193:         ok(InspectorUI.highlighter.hidden,
100193:           "The Highlighter should not be visible for tab1 after Tilt is open.");
100193: 
 84764:         createTab2();
 84764:       }
100193:     }, false, function suddenDeath()
100193:     {
100193:       info("Tilt could not be initialized properly.");
100193:       cleanup();
 84764:     });
 84764:   });
 84764: }
 84764: 
 84764: function createTab2() {
 84764:   tab2 = createTab(function() {
 84764: 
 84764:     createTilt({
 84764:       onInspectorOpen: function()
 84764:       {
 84764:         ok(Tilt.tiltButton.checked === false,
 84764:           "The toolbar tilt button shouldn't be pressed before Tilt is open.");
100193:         ok(InspectorUI.inspecting,
100193:           "The Inspector should be inspecting for tab2.");
100193:         ok(InspectorUI.highlighter.hidden === false,
100193:           "The Highlighter should be visible for tab2.");
 84764:       },
 84764:       onTiltOpen: function()
 84764:       {
100193:         ok(InspectorUI.inspecting === false,
100193:           "The Inspector should not be inspecting for tab2 after Tilt is open.");
100193:         ok(InspectorUI.highlighter.hidden,
100193:           "The Highlighter should be visible for tab2 after Tilt is open.");
100193: 
 84764:         testStep = 0;
 84764:         tabSelect();
 84764:       }
100193:     }, false, function suddenDeath()
100193:     {
100193:       info("Tilt could not be initialized properly.");
100193:       cleanup();
 84764:     });
 84764:   });
 84764: }
 84764: 
 84764: let testSteps = [
 84764:   function step0() {
 84764:     ok(Tilt.tiltButton.checked === true,
 84764:       "The toolbar tilt button should have been pressed at step0 (tab 2).");
100193:     ok(InspectorUI.inspecting === false,
100193:       "The Inspector should not be inspecting at step0.");
100193:     ok(InspectorUI.highlighter.hidden,
100193:       "The Highlighter should be hidden at step0.");
 84764: 
 84764:     gBrowser.selectedTab = tab1;
 84764:   },
 84764:   function step1() {
 84764:     ok(Tilt.tiltButton.checked === true,
 84764:       "The toolbar tilt button should have been pressed at step1 (tab 1).");
100193:     ok(InspectorUI.inspecting === false,
100193:       "The Inspector should not be inspecting at step1.");
100193:     ok(InspectorUI.highlighter.hidden,
100193:       "The Highlighter should be hidden at step1.");
 84764: 
 84764:     gBrowser.selectedTab = tab0;
 84764:   },
 84764:   function step2() {
 84764:     ok(Tilt.tiltButton.checked === false,
 84764:       "The toolbar tilt button shouldn't have been pressed at step2 (tab 0).");
100193:     ok(InspectorUI.inspecting === false,
100193:       "The Inspector should not be inspecting at step2.");
100193:     is(InspectorUI.highlighter, null,
100193:       "The Highlighter should be dead while in step2.");
 84764: 
 84764:     gBrowser.selectedTab = tab1;
 84764:   },
 84764:   function step3() {
 84764:     ok(Tilt.tiltButton.checked === true,
 84764:       "The toolbar tilt button should have been pressed at step3 (tab 1).");
100193:     ok(InspectorUI.inspecting === false,
100193:       "The Inspector should not be inspecting at step3.");
100193:     ok(InspectorUI.highlighter.hidden,
100193:       "The Highlighter should be hidden at step3.");
 84764: 
 84764:     gBrowser.selectedTab = tab2;
 84764:   },
 84764:   function step4() {
 84764:     ok(Tilt.tiltButton.checked === true,
 84764:       "The toolbar tilt button should have been pressed at step4 (tab 2).");
100193:     ok(InspectorUI.inspecting === false,
100193:       "The Inspector should not be inspecting at step4.");
100193:     ok(InspectorUI.highlighter.hidden,
100193:       "The Highlighter should be hidden at step4.");
 84764: 
 84764:     Tilt.destroy(Tilt.currentWindowId);
 84764:     gBrowser.removeCurrentTab();
100193:     tab2 = null;
 84764:   },
 84764:   function step5() {
 84764:     ok(Tilt.tiltButton.checked === true,
 84764:       "The toolbar tilt button should have been pressed at step5 (tab 1).");
100193:     ok(InspectorUI.inspecting === false,
100193:       "The Inspector should not be inspecting at step5.");
100193:     ok(InspectorUI.highlighter.hidden,
100193:       "The Highlighter should be hidden at step5.");
 84764: 
 84764:     Tilt.destroy(Tilt.currentWindowId);
 84764:     gBrowser.removeCurrentTab();
100193:     tab1 = null;
 84764:   },
 84764:   function step6_cleanup() {
 84764:     ok(Tilt.tiltButton.checked === false,
 84764:       "The toolbar tilt button shouldn't have been pressed at step6 (tab 0).");
100193:     ok(InspectorUI.inspecting === false,
100193:       "The Inspector should not be inspecting at step6.");
100193:     is(InspectorUI.highlighter, null,
100193:       "The Highlighter should be dead while in step6.");
 84764: 
100193:     cleanup();
100193:   }
100193: ];
100193: 
100193: function cleanup() {
100193:   gBrowser.tabContainer.removeEventListener("TabSelect", tabSelect, false);
100193: 
100193:   if (tab1) {
100193:     gBrowser.removeTab(tab1);
 84764:     tab1 = null;
100193:   }
100193:   if (tab2) {
100193:     gBrowser.removeTab(tab2);
 84764:     tab2 = null;
100193:   }
 84764: 
 84764:   finish();
 84764: }
 84764: 
 84764: function tabSelect() {
 84764:   if (testStep !== -1) {
 84764:     executeSoon(testSteps[testStep]);
 84764:     testStep++;
 84764:   }
 84764: }

69270: /* vim: se cin sw=2 ts=2 et : */
69270: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
69270:  *
69270:  * ***** BEGIN LICENSE BLOCK *****
69270:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
69270:  *
69270:  * The contents of this file are subject to the Mozilla Public License Version
69270:  * 1.1 (the "License"); you may not use this file except in compliance with
69270:  * the License. You may obtain a copy of the License at
69270:  * http://www.mozilla.org/MPL/
69270:  *
69270:  * Software distributed under the License is distributed on an "AS IS" basis,
69270:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
69270:  * for the specific language governing rights and limitations under the
69270:  * License.
69270:  *
69270:  * The Original Code is mozilla.org code.
69270:  *
69270:  * The Initial Developer of the Original Code is
69270:  * Mozilla Foundation.
69270:  * Portions created by the Initial Developer are Copyright (C) 2011
69270:  * the Initial Developer. All Rights Reserved.
69270:  *
69270:  * Contributor(s):
69270:  *
69270:  * Alternatively, the contents of this file may be used under the terms of
69270:  * either the GNU General Public License Version 2 or later (the "GPL"), or
69270:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
69270:  * in which case the provisions of the GPL or the LGPL are applicable instead
69270:  * of those above. If you wish to allow use of your version of this file only
69270:  * under the terms of either the GPL or the LGPL, and not to allow others to
69270:  * use your version of this file under the terms of the MPL, indicate your
69270:  * decision by deleting the provisions above and replace them with the notice
69270:  * and other provisions required by the GPL or the LGPL. If you do not delete
69270:  * the provisions above, a recipient may use your version of this file under
69270:  * the terms of any one of the MPL, the GPL or the LGPL.
69270:  *
69270:  * ***** END LICENSE BLOCK ***** */
69270: 
69270: #ifndef __GfxInfoX11_h__
69270: #define __GfxInfoX11_h__
69270: 
69270: #include "GfxInfoBase.h"
69270: 
69270: namespace mozilla {
69270: namespace widget {
69270: 
69270: class GfxInfo : public GfxInfoBase
69270: {
69270: public:
69270: 
69270:   // We only declare the subset of nsIGfxInfo that we actually implement. The
69270:   // rest is brought forward from GfxInfoBase.
79445:   NS_SCRIPTABLE NS_IMETHOD GetD2DEnabled(bool *aD2DEnabled);
79445:   NS_SCRIPTABLE NS_IMETHOD GetDWriteEnabled(bool *aDWriteEnabled);
79445:   NS_SCRIPTABLE NS_IMETHOD GetAzureEnabled(bool *aAzureEnabled);
69270:   NS_SCRIPTABLE NS_IMETHOD GetDWriteVersion(nsAString & aDwriteVersion);
69664:   NS_SCRIPTABLE NS_IMETHOD GetCleartypeParameters(nsAString & aCleartypeParams);
69270:   NS_SCRIPTABLE NS_IMETHOD GetAdapterDescription(nsAString & aAdapterDescription);
69270:   NS_SCRIPTABLE NS_IMETHOD GetAdapterDriver(nsAString & aAdapterDriver);
84604:   NS_SCRIPTABLE NS_IMETHOD GetAdapterVendorID(nsAString & aAdapterVendorID);
84604:   NS_SCRIPTABLE NS_IMETHOD GetAdapterDeviceID(nsAString & aAdapterDeviceID);
69270:   NS_SCRIPTABLE NS_IMETHOD GetAdapterRAM(nsAString & aAdapterRAM);
69270:   NS_SCRIPTABLE NS_IMETHOD GetAdapterDriverVersion(nsAString & aAdapterDriverVersion);
69270:   NS_SCRIPTABLE NS_IMETHOD GetAdapterDriverDate(nsAString & aAdapterDriverDate);
76321:   NS_SCRIPTABLE NS_IMETHOD GetAdapterDescription2(nsAString & aAdapterDescription);
76321:   NS_SCRIPTABLE NS_IMETHOD GetAdapterDriver2(nsAString & aAdapterDriver);
84604:   NS_SCRIPTABLE NS_IMETHOD GetAdapterVendorID2(nsAString & aAdapterVendorID);
84604:   NS_SCRIPTABLE NS_IMETHOD GetAdapterDeviceID2(nsAString & aAdapterDeviceID);
76321:   NS_SCRIPTABLE NS_IMETHOD GetAdapterRAM2(nsAString & aAdapterRAM);
76321:   NS_SCRIPTABLE NS_IMETHOD GetAdapterDriverVersion2(nsAString & aAdapterDriverVersion);
76321:   NS_SCRIPTABLE NS_IMETHOD GetAdapterDriverDate2(nsAString & aAdapterDriverDate);
79445:   NS_SCRIPTABLE NS_IMETHOD GetIsGPU2Active(bool *aIsGPU2Active);
69270:   using GfxInfoBase::GetFeatureStatus;
69270:   using GfxInfoBase::GetFeatureSuggestedDriverVersion;
69270:   using GfxInfoBase::GetWebGLParameter;
69270: 
69270:   virtual nsresult Init();
69270:   
78440:   NS_IMETHOD_(void) GetData();
78440: 
84610: #ifdef DEBUG
84610:   NS_DECL_ISUPPORTS_INHERITED
84610:   NS_DECL_NSIGFXINFODEBUG
84610: #endif
84610: 
69270: protected:
69270: 
81328:   virtual nsresult GetFeatureStatusImpl(PRInt32 aFeature, 
81328:                                         PRInt32 *aStatus, 
81328:                                         nsAString & aSuggestedDriverVersion, 
84603:                                         const nsTArray<GfxDriverInfo>& aDriverInfo, 
81328:                                         OperatingSystem* aOS = nsnull);
84603:   virtual const nsTArray<GfxDriverInfo>& GetGfxDriverInfo();
69270: 
69270: private:
69270:   nsCString mVendor;
69270:   nsCString mRenderer;
69270:   nsCString mVersion;
69270:   nsCString mAdapterDescription;
90957:   bool mIsMesa, mIsNVIDIA, mIsFGLRX, mIsNouveau;
74904:   bool mHasTextureFromPixmap;
90956:   int mGLMajorVersion, mMajorVersion, mMinorVersion, mRevisionVersion;
69270: 
69270:   void AddCrashReportAnnotations();
69270: };
69270: 
69270: } // namespace widget
69270: } // namespace mozilla
69270: 
69270: #endif /* __GfxInfoX11_h__ */

39562: diff --git a/media/liboggz/bug526097.patch b/media/liboggz/bug526097.patch
39562: --- a/media/liboggz/bug526097.patch
39562: +++ b/media/liboggz/bug526097.patch
39562: @@ -1,147 +0,0 @@
39562: -diff --git a/media/liboggz/src/liboggz/oggz_auto.c b/media/liboggz/src/liboggz/oggz_auto.c
39562: ---- a/media/liboggz/src/liboggz/oggz_auto.c
39562: -+++ b/media/liboggz/src/liboggz/oggz_auto.c
39562: -@@ -675,16 +675,17 @@ auto_rcalc_theora(ogg_int64_t next_packe
39562: - typedef struct {
39562: -   int nln_increments[4];
39562: -   int nsn_increment;
39562: -   int short_size;
39562: -   int long_size;
39562: -   int encountered_first_data_packet;
39562: -   int last_was_long;
39562: -   int log2_num_modes;
39562: -+  int mode_sizes_length;
39562: -   int mode_sizes[1];
39562: - } auto_calc_vorbis_info_t;
39562: - 
39562: - 
39562: - static ogg_int64_t
39562: - auto_calc_vorbis(ogg_int64_t now, oggz_stream_t *stream, ogg_packet *op) {
39562: - 
39562: -   auto_calc_vorbis_info_t *info;
39562: -@@ -708,16 +709,17 @@ auto_calc_vorbis(ogg_int64_t now, oggz_s
39562: -     info->nln_increments[3] = long_size >> 1;
39562: -     info->nln_increments[2] = 3 * (long_size >> 2) - (short_size >> 2);
39562: -     info->nln_increments[1] = (long_size >> 2) + (short_size >> 2);
39562: -     info->nln_increments[0] = info->nln_increments[3];
39562: -     info->short_size = short_size;
39562: -     info->long_size = long_size;
39562: -     info->nsn_increment = short_size >> 1;
39562: -     info->encountered_first_data_packet = 0;
39562: -+    info->mode_sizes_length = 0;
39562: - 
39562: -     /* this is a header packet */
39562: -     return 0;
39562: -   }
39562: - 
39562: -   /*
39562: -    * marker for header packets
39562: -    */
39562: -@@ -860,16 +862,17 @@ auto_calc_vorbis(ogg_int64_t now, oggz_s
39562: -       /* Check that size to be realloc'd doesn't overflow */
39562: -       size_realloc_bytes = sizeof(auto_calc_vorbis_info_t) + (size - 1) * sizeof(int);
39562: -       if (size_realloc_bytes < sizeof (auto_calc_vorbis_info_t)) return -1;
39562: - 
39562: -       /* Store mode size information in our info struct */
39562: -       info = realloc(stream->calculate_data, size_realloc_bytes);
39562: -       if (info == NULL) return -1;
39562: - 
39562: -+      info->mode_sizes_length = size + 1;
39562: -       stream->calculate_data = info;
39562: - 
39562: -       i = -1;
39562: -       while ((1 << (++i)) < size);
39562: -       info->log2_num_modes = i;
39562: - 
39562: -       mode_size_ptr = info->mode_sizes;
39562: - 
39562: -@@ -882,85 +885,37 @@ auto_calc_vorbis(ogg_int64_t now, oggz_s
39562: -         current_pos += 5;
39562: -       }
39562: - 
39562: -     }
39562: - 
39562: -     return 0;
39562: -   }
39562: - 
39562: --  info = (auto_calc_vorbis_info_t *)stream->calculate_data;
39562: --
39562: -   return -1;
39562: --
39562: --  {
39562: --    /*
39562: --     * we're in a data packet!  First we need to get the mode of the packet,
39562: --     * and from the mode, the size
39562: --     */
39562: --    int mode;
39562: --    int size;
39562: --    ogg_int64_t result;
39562: --
39562: --    mode = (op->packet[0] >> 1) & ((1 << info->log2_num_modes) - 1);
39562: --    size = info->mode_sizes[mode];
39562: --
39562: --    /*
39562: --     * if we have a working granulepos, we use it, but only if we can't
39562: --     * calculate a valid gp value.
39562: --     */
39562: --    if (now > -1 && stream->last_granulepos == -1) {
39562: --      info->encountered_first_data_packet = 1;
39562: --      info->last_was_long = size;
39562: --      return now;
39562: --    }
39562: --
39562: --    if (info->encountered_first_data_packet == 0) {
39562: --      info->encountered_first_data_packet = 1;
39562: --      info->last_was_long = size;
39562: --      return -1;
39562: --    }
39562: --
39562: --    /*
39562: --     * otherwise, if we haven't yet had a working granulepos, we return
39562: --     * -1
39562: --     */
39562: --    if (stream->last_granulepos == -1) {
39562: --      info->last_was_long = size;
39562: --      return -1;
39562: --    }
39562: --
39562: --    result = stream->last_granulepos +
39562: --      (
39562: --        (info->last_was_long ? info->long_size  : info->short_size)
39562: --        +
39562: --        (size ? info->long_size : info->short_size)
39562: --      ) / 4;
39562: --    info->last_was_long = size;
39562: --
39562: --    return result;
39562: --
39562: --  }
39562: --
39562: - }
39562: - 
39562: - ogg_int64_t
39562: - auto_rcalc_vorbis(ogg_int64_t next_packet_gp, oggz_stream_t *stream,
39562: -                   ogg_packet *this_packet, ogg_packet *next_packet) {
39562: - 
39562: -   auto_calc_vorbis_info_t *info =
39562: -                   (auto_calc_vorbis_info_t *)stream->calculate_data;
39562: - 
39562: -   int mode =
39562: -       (this_packet->packet[0] >> 1) & ((1 << info->log2_num_modes) - 1);
39562: -+  if (info->mode_sizes_length == 0 || mode < 0 || mode >= info->mode_sizes_length)
39562: -+    return 0;
39562: -   int this_size = info->mode_sizes[mode] ? info->long_size : info->short_size;
39562: -   int next_size;
39562: -   ogg_int64_t r;
39562: - 
39562: -   mode = (next_packet->packet[0] >> 1) & ((1 << info->log2_num_modes) - 1);
39562: -+  if (info->mode_sizes_length == 0 || mode < 0 || mode >= info->mode_sizes_length)
39562: -+    return 0;
39562: -   next_size = info->mode_sizes[mode] ? info->long_size : info->short_size;
39562: - 
39562: -   r = next_packet_gp - ((this_size + next_size) / 4);
39562: -   if (r < 0) return 0L;
39562: -   return r;
39562: - 
39562: - }
39562: - 
39557: diff --git a/media/liboggz/src/liboggz/oggz_auto.c b/media/liboggz/src/liboggz/oggz_auto.c
39557: --- a/media/liboggz/src/liboggz/oggz_auto.c
39557: +++ b/media/liboggz/src/liboggz/oggz_auto.c
39557: @@ -675,16 +675,17 @@ auto_rcalc_theora(ogg_int64_t next_packe
39557:  typedef struct {
39557:    int nln_increments[4];
39557:    int nsn_increment;
39557:    int short_size;
39557:    int long_size;
39557:    int encountered_first_data_packet;
39557:    int last_was_long;
39557:    int log2_num_modes;
39557: +  int mode_sizes_length;
39557:    int mode_sizes[1];
39557:  } auto_calc_vorbis_info_t;
39557:  
39557:  
39557:  static ogg_int64_t
39557:  auto_calc_vorbis(ogg_int64_t now, oggz_stream_t *stream, ogg_packet *op) {
39557:  
39557:    auto_calc_vorbis_info_t *info;
39557: @@ -708,16 +709,17 @@ auto_calc_vorbis(ogg_int64_t now, oggz_s
39557:      info->nln_increments[3] = long_size >> 1;
39557:      info->nln_increments[2] = 3 * (long_size >> 2) - (short_size >> 2);
39557:      info->nln_increments[1] = (long_size >> 2) + (short_size >> 2);
39557:      info->nln_increments[0] = info->nln_increments[3];
39557:      info->short_size = short_size;
39557:      info->long_size = long_size;
39557:      info->nsn_increment = short_size >> 1;
39557:      info->encountered_first_data_packet = 0;
39557: +    info->mode_sizes_length = 0;
39557:  
39557:      /* this is a header packet */
39557:      return 0;
39557:    }
39557:  
39557:    /*
39557:     * marker for header packets
39557:     */
39557: @@ -860,16 +862,17 @@ auto_calc_vorbis(ogg_int64_t now, oggz_s
39557:        /* Check that size to be realloc'd doesn't overflow */
39557:        size_realloc_bytes = sizeof(auto_calc_vorbis_info_t) + (size - 1) * sizeof(int);
39557:        if (size_realloc_bytes < sizeof (auto_calc_vorbis_info_t)) return -1;
39557:  
39557:        /* Store mode size information in our info struct */
39557:        info = realloc(stream->calculate_data, size_realloc_bytes);
39557:        if (info == NULL) return -1;
39557:  
39557: +      info->mode_sizes_length = size + 1;
39557:        stream->calculate_data = info;
39557:  
39557:        i = -1;
39557:        while ((1 << (++i)) < size);
39557:        info->log2_num_modes = i;
39557:  
39557:        mode_size_ptr = info->mode_sizes;
39557:  
39557: @@ -882,85 +885,37 @@ auto_calc_vorbis(ogg_int64_t now, oggz_s
39557:          current_pos += 5;
39557:        }
39557:  
39557:      }
39557:  
39557:      return 0;
39557:    }
39557:  
39557: -  info = (auto_calc_vorbis_info_t *)stream->calculate_data;
39557: -
39557:    return -1;
39557: -
39557: -  {
39557: -    /*
39557: -     * we're in a data packet!  First we need to get the mode of the packet,
39557: -     * and from the mode, the size
39557: -     */
39557: -    int mode;
39557: -    int size;
39557: -    ogg_int64_t result;
39557: -
39557: -    mode = (op->packet[0] >> 1) & ((1 << info->log2_num_modes) - 1);
39557: -    size = info->mode_sizes[mode];
39557: -
39557: -    /*
39557: -     * if we have a working granulepos, we use it, but only if we can't
39557: -     * calculate a valid gp value.
39557: -     */
39557: -    if (now > -1 && stream->last_granulepos == -1) {
39557: -      info->encountered_first_data_packet = 1;
39557: -      info->last_was_long = size;
39557: -      return now;
39557: -    }
39557: -
39557: -    if (info->encountered_first_data_packet == 0) {
39557: -      info->encountered_first_data_packet = 1;
39557: -      info->last_was_long = size;
39557: -      return -1;
39557: -    }
39557: -
39557: -    /*
39557: -     * otherwise, if we haven't yet had a working granulepos, we return
39557: -     * -1
39557: -     */
39557: -    if (stream->last_granulepos == -1) {
39557: -      info->last_was_long = size;
39557: -      return -1;
39557: -    }
39557: -
39557: -    result = stream->last_granulepos +
39557: -      (
39557: -        (info->last_was_long ? info->long_size  : info->short_size)
39557: -        +
39557: -        (size ? info->long_size : info->short_size)
39557: -      ) / 4;
39557: -    info->last_was_long = size;
39557: -
39557: -    return result;
39557: -
39557: -  }
39557: -
39557:  }
39557:  
39557:  ogg_int64_t
39557:  auto_rcalc_vorbis(ogg_int64_t next_packet_gp, oggz_stream_t *stream,
39557:                    ogg_packet *this_packet, ogg_packet *next_packet) {
39557:  
39557:    auto_calc_vorbis_info_t *info =
39557:                    (auto_calc_vorbis_info_t *)stream->calculate_data;
39562: +  int this_size, next_size;
39562: +  ogg_int64_t r;
39557:  
39557:    int mode =
39557:        (this_packet->packet[0] >> 1) & ((1 << info->log2_num_modes) - 1);
39562: -  int this_size = info->mode_sizes[mode] ? info->long_size : info->short_size;
39562: -  int next_size;
39562: -  ogg_int64_t r;
39557: +  if (info->mode_sizes_length == 0 || mode < 0 || mode >= info->mode_sizes_length)
39557: +    return 0;
39562: +  this_size = info->mode_sizes[mode] ? info->long_size : info->short_size;
39557:  
39557:    mode = (next_packet->packet[0] >> 1) & ((1 << info->log2_num_modes) - 1);
39557: +  if (info->mode_sizes_length == 0 || mode < 0 || mode >= info->mode_sizes_length)
39557: +    return 0;
39557:    next_size = info->mode_sizes[mode] ? info->long_size : info->short_size;
39557:  
39557:    r = next_packet_gp - ((this_size + next_size) / 4);
39557:    if (r < 0) return 0L;
39557:    return r;
39557:  
39557:  }
39557:  

 87860: /* Any copyright is dedicated to the Public Domain.
 87860:    http://creativecommons.org/publicdomain/zero/1.0/ */
 87860: "use strict";
 87860: 
 87860: let id;
 87860: let tiltKey;
 87860: let eventType;
 87860: 
 87860: function test() {
 87860:   if (!isTiltEnabled()) {
 87860:     info("Skipping initialization key test because Tilt isn't enabled.");
 87860:     return;
 87860:   }
 87860:   if (!isWebGLSupported()) {
 87860:     info("Skipping initialization key test because WebGL isn't supported.");
 87860:     return;
 87860:   }
 87860: 
 87860:   waitForExplicitFinish();
 87860: 
 87860:   id = TiltUtils.getWindowId(gBrowser.selectedBrowser.contentWindow);
 87860:   tiltKey = Tilt.tiltButton.getAttribute("accesskey");
 87860: 
 87860:   if ("nsILocalFileMac" in Ci) {
 87860:     eventType = { type: "keypress", ctrlKey: true };
 87860:   } else {
 87860:     eventType = { type: "keypress", altKey: true };
 87860:   }
 87860: 
 87860:   Services.obs.addObserver(onInspectorOpen, INSPECTOR_OPENED, false);
 87860:   InspectorUI.toggleInspectorUI();
 87860: }
 87860: 
100193: function suddenDeath() {
100193:   Services.obs.removeObserver(onTiltOpen, INITIALIZING);
100193:   cleanup();
100193: }
100193: 
 87860: function onInspectorOpen() {
 87860:   Services.obs.removeObserver(onInspectorOpen, INSPECTOR_OPENED);
 87860: 
 87860:   executeSoon(function() {
 87860:     is(Tilt.visualizers[id], null,
 87860:       "A instance of the visualizer shouldn't be initialized yet.");
 87860: 
 87860:     info("Pressing the accesskey should open Tilt.");
 87860: 
100193:     Tilt.failureCallback = suddenDeath;
100193: 
 88393:     Services.obs.addObserver(onTiltOpen, INITIALIZING, false);
 87860:     EventUtils.synthesizeKey(tiltKey, eventType);
 87860:   });
 87860: }
 87860: 
 87860: function onTiltOpen() {
 88393:   Services.obs.removeObserver(onTiltOpen, INITIALIZING);
 87860: 
 87860:   executeSoon(function() {
 87860:     ok(Tilt.visualizers[id] instanceof TiltVisualizer,
 87860:       "A new instance of the visualizer wasn't created properly.");
 87860:     ok(Tilt.visualizers[id].isInitialized(),
 87860:       "The new instance of the visualizer wasn't initialized properly.");
 87860: 
 87860:     info("Pressing the accesskey again should close Tilt.");
 87860: 
 88393:     Services.obs.addObserver(onTiltClose, DESTROYED, false);
 87860:     EventUtils.synthesizeKey(tiltKey, eventType);
 87860:   });
 87860: }
 87860: 
 87860: function onTiltClose() {
 87860:   is(Tilt.visualizers[id], null,
 87860:     "The current instance of the visualizer wasn't destroyed properly.");
 87860: 
100193:   cleanup();
100193: }
100193: 
100193: function cleanup() {
100193:   Tilt.failureCallback = null;
 87860:   InspectorUI.closeInspectorUI();
 87860:   finish();
 87860: }

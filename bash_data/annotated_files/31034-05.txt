16295: /********************************************************************
16295:  *                                                                  *
16295:  * THIS FILE IS PART OF THE OggVorbis SOFTWARE CODEC SOURCE CODE.   *
16295:  * USE, DISTRIBUTION AND REPRODUCTION OF THIS LIBRARY SOURCE IS     *
16295:  * GOVERNED BY A BSD-STYLE SOURCE LICENSE INCLUDED WITH THIS SOURCE *
16295:  * IN 'COPYING'. PLEASE READ THESE TERMS BEFORE DISTRIBUTING.       *
16295:  *                                                                  *
31034:  * THE OggVorbis SOURCE CODE IS (C) COPYRIGHT 1994-2009             *
16295:  * by the Xiph.Org Foundation http://www.xiph.org/                  *
16295:  *                                                                  *
16295:  ********************************************************************
16295: 
16295:  function: libvorbis backend and mapping structures; needed for
16295:            static mode headers
31034:  last mod: $Id: backends.h 16326 2009-07-24 00:06:53Z xiphmont $
16295: 
16295:  ********************************************************************/
16295: 
16295: /* this is exposed up here because we need it for static modes.
16295:    Lookups for each backend aren't exposed because there's no reason
16295:    to do so */
16295: 
16295: #ifndef _vorbis_backend_h_
16295: #define _vorbis_backend_h_
16295: 
16295: #include "codec_internal.h"
16295: 
16295: /* this would all be simpler/shorter with templates, but.... */
16295: /* Floor backend generic *****************************************/
16295: typedef struct{
16295:   void                   (*pack)  (vorbis_info_floor *,oggpack_buffer *);
16295:   vorbis_info_floor     *(*unpack)(vorbis_info *,oggpack_buffer *);
16295:   vorbis_look_floor     *(*look)  (vorbis_dsp_state *,vorbis_info_floor *);
16295:   void (*free_info) (vorbis_info_floor *);
16295:   void (*free_look) (vorbis_look_floor *);
16295:   void *(*inverse1)  (struct vorbis_block *,vorbis_look_floor *);
16295:   int   (*inverse2)  (struct vorbis_block *,vorbis_look_floor *,
16295:                      void *buffer,float *);
16295: } vorbis_func_floor;
16295: 
16295: typedef struct{
16295:   int   order;
16295:   long  rate;
16295:   long  barkmap;
16295: 
16295:   int   ampbits;
16295:   int   ampdB;
16295: 
16295:   int   numbooks; /* <= 16 */
16295:   int   books[16];
16295: 
16295:   float lessthan;     /* encode-only config setting hacks for libvorbis */
16295:   float greaterthan;  /* encode-only config setting hacks for libvorbis */
16295: 
16295: } vorbis_info_floor0;
16295: 
16295: 
16295: #define VIF_POSIT 63
16295: #define VIF_CLASS 16
16295: #define VIF_PARTS 31
16295: typedef struct{
16295:   int   partitions;                /* 0 to 31 */
16295:   int   partitionclass[VIF_PARTS]; /* 0 to 15 */
16295: 
16295:   int   class_dim[VIF_CLASS];        /* 1 to 8 */
16295:   int   class_subs[VIF_CLASS];       /* 0,1,2,3 (bits: 1<<n poss) */
16295:   int   class_book[VIF_CLASS];       /* subs ^ dim entries */
16295:   int   class_subbook[VIF_CLASS][8]; /* [VIF_CLASS][subs] */
16295: 
16295: 
16295:   int   mult;                      /* 1 2 3 or 4 */
16295:   int   postlist[VIF_POSIT+2];    /* first two implicit */
16295: 
16295: 
16295:   /* encode side analysis parameters */
16295:   float maxover;
16295:   float maxunder;
16295:   float maxerr;
16295: 
16295:   float twofitweight;
16295:   float twofitatten;
16295: 
16295:   int   n;
16295: 
16295: } vorbis_info_floor1;
16295: 
16295: /* Residue backend generic *****************************************/
16295: typedef struct{
16295:   void                 (*pack)  (vorbis_info_residue *,oggpack_buffer *);
16295:   vorbis_info_residue *(*unpack)(vorbis_info *,oggpack_buffer *);
16295:   vorbis_look_residue *(*look)  (vorbis_dsp_state *,
16295:                                  vorbis_info_residue *);
16295:   void (*free_info)    (vorbis_info_residue *);
16295:   void (*free_look)    (vorbis_look_residue *);
16295:   long **(*class)      (struct vorbis_block *,vorbis_look_residue *,
16295:                         float **,int *,int);
16295:   int  (*forward)      (oggpack_buffer *,struct vorbis_block *,
16295:                         vorbis_look_residue *,
16295:                         float **,float **,int *,int,long **);
16295:   int  (*inverse)      (struct vorbis_block *,vorbis_look_residue *,
16295:                         float **,int *,int);
16295: } vorbis_func_residue;
16295: 
16295: typedef struct vorbis_info_residue0{
16295: /* block-partitioned VQ coded straight residue */
16295:   long  begin;
16295:   long  end;
16295: 
16295:   /* first stage (lossless partitioning) */
16295:   int    grouping;         /* group n vectors per partition */
16295:   int    partitions;       /* possible codebooks for a partition */
16295:   int    groupbook;        /* huffbook for partitioning */
16295:   int    secondstages[64]; /* expanded out to pointers in lookup */
31034:   int    booklist[512];    /* list of second stage books */
16295: 
30043:   const float classmetric1[64];
30043:   const float classmetric2[64];
16295: } vorbis_info_residue0;
16295: 
16295: /* Mapping backend generic *****************************************/
16295: typedef struct{
16295:   void                 (*pack)  (vorbis_info *,vorbis_info_mapping *,
16295:                                  oggpack_buffer *);
16295:   vorbis_info_mapping *(*unpack)(vorbis_info *,oggpack_buffer *);
16295:   void (*free_info)    (vorbis_info_mapping *);
16295:   int  (*forward)      (struct vorbis_block *vb);
16295:   int  (*inverse)      (struct vorbis_block *vb,vorbis_info_mapping *);
16295: } vorbis_func_mapping;
16295: 
16295: typedef struct vorbis_info_mapping0{
16295:   int   submaps;  /* <= 16 */
16295:   int   chmuxlist[256];   /* up to 256 channels in a Vorbis stream */
16295: 
16295:   int   floorsubmap[16];   /* [mux] submap to floors */
16295:   int   residuesubmap[16]; /* [mux] submap to residue */
16295: 
16295:   int   coupling_steps;
16295:   int   coupling_mag[256];
16295:   int   coupling_ang[256];
16295: 
16295: } vorbis_info_mapping0;
16295: 
16295: #endif

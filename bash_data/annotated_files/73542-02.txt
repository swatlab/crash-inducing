17092: # -*- Mode: Python -*-
17092: # ***** BEGIN LICENSE BLOCK *****
17092: # Version: MPL 1.1/GPL 2.0/LGPL 2.1
17092: #
17092: # The contents of this file are subject to the Mozilla Public License Version
17092: # 1.1 (the "License"); you may not use this file except in compliance with
17092: # the License. You may obtain a copy of the License at
17092: # http://www.mozilla.org/MPL/
17092: #
17092: # Software distributed under the License is distributed on an "AS IS" basis,
17092: # WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
17092: # for the specific language governing rights and limitations under the
17092: # License.
17092: #
17092: # The Original Code is mozilla.org code.
17092: #
17092: # The Initial Developer of the Original Code is
17092: #   Mozilla Foundation.
17092: # Portions created by the Initial Developer are Copyright (C) 2008
17092: # the Initial Developer. All Rights Reserved.
17092: #
17092: # Contributor(s):
17092: #   Jason Orendorff <jorendorff@mozilla.com>
17092: #
17092: # Alternatively, the contents of this file may be used under the terms of
17092: # either of the GNU General Public License Version 2 or later (the "GPL"),
17092: # or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
17092: # in which case the provisions of the GPL or the LGPL are applicable instead
17092: # of those above. If you wish to allow use of your version of this file only
17092: # under the terms of either the GPL or the LGPL, and not to allow others to
17092: # use your version of this file under the terms of the MPL, indicate your
17092: # decision by deleting the provisions above and replace them with the notice
17092: # and other provisions required by the GPL or the LGPL. If you do not delete
17092: # the provisions above, a recipient may use your version of this file under
17092: # the terms of any one of the MPL, the GPL or the LGPL.
17092: #
17092: # ***** END LICENSE BLOCK *****
17092: 
17092: name = 'DOM'
17092: 
17092: # A quick warning:
17092: #
17092: # Attributes or methods that call GetCurrentNativeCallContext must not be
17092: # quick-stubbed, because quick stubs don't generate a native call context.
17092: # qsgen.py has no way of knowing which attributes and methods do this, as it
17092: # looks at interfaces, not implementations.  The symptoms, if you quick-stub
17092: # one of those, can be really weird, because GetCurrentNativeCallContext
17092: # doesn't crash--it may in fact return a plausible wrong answer.
17092: 
17092: members = [ 
36760:     # dom/interfaces/base
17092:     #
17092:     # Note that many implementations of interfaces in this directory
17092:     # use GetCurrentNativeCallContext, notably:
17092:     #   - nsIDOMCrypto.{generateCRMFRequest,signText}
17092:     #   - nsIDOMLocation.reload
17092:     #   - nsIDOMNSHistory.go
17092:     #   - nsIDOMJSPluginArray.refresh
17092:     #   - nsIDOMWindowInternal.postMessage
17092:     #   - nsIDOMJSWindow.{prompt,setTimeout,setInterval,open,openDialog}
17092:     #
17092:     # (And nsIDOMModalContentWindow.returnValue is an attribute of type
17092:     # nsIVariant, which qsgen.py can't handle.)
17092:     #
17092:     'nsIDOMWindow.name',
17092:     'nsIDOMWindow.parent',
17092:     'nsIDOMWindow.top',
20206:     # Several window properties are magically resolved, including
20206:     # location, _content, navigator, document, and window itself.
20206:     # These do not need quick stubs.
20206:     #'nsIDOMWindow.document',
17092:     'nsIDOMWindow.getSelection',
26402:     'nsIDOMWindow.scrollByLines',
69169:     'nsIDOMWindow.getComputedStyle',
26402:     'nsIDOMJSWindow.dump',
17092:     'nsIDOMScreen.top',
17092:     'nsIDOMScreen.height',
17092:     'nsIDOMScreen.width',
17092:     'nsIDOMScreen.left',
33471:     'nsIDOMClientRect.*',
33471:     'nsIDOMClientRectList.*',
33471:     'nsIDOMPaintRequest.*',
33471:     'nsIDOMPaintRequestList.*',
19313:     # nsLocationSH has ~ALLOW_PROP_MODS_TO_PROTOTYPE, so don't try.
19313:     #'nsIDOMLocation.hostname',
19313:     #'nsIDOMLocation.href',
17092: 
36760:     # dom/interfaces/canvas
17092:     #
38908:     # nsIDOMCanvasRenderingContext2D and friends
37417:     'nsIDOMCanvasRenderingContext2D.*',
38908:     'nsIDOMTextMetrics.*',
38908:     'nsIDOMCanvasGradient.*',
38908:     'nsIDOMCanvasPattern.*',
17092: 
36760:     # dom/interfaces/core
17092:     'nsIDOMCharacterData.data',
17092:     'nsIDOMCharacterData.length',
17092:     'nsIDOMDocument.documentElement',
17092:     'nsIDOMDocument.implementation',
17092:     'nsIDOMDocument.getElementsByTagName',
17092:     'nsIDOMDocument.doctype',
17092:     'nsIDOMDocument.getElementsByTagNameNS',
17092:     'nsIDOMDocument.getElementById',
17092:     'nsIDOMDocument.createDocumentFragment',
17092:     'nsIDOMDocument.createElement',
58484:     'nsIDOMDocument.createElementNS',
17092:     'nsIDOMDocument.importNode',
17092:     'nsIDOMDocument.createTextNode',
64020:     'nsIDOMDocument.documentURI',
64020:     'nsIDOMDocument.adoptNode',
69169:     'nsIDOMDocument.defaultView',
69899:     'nsIDOMDocument.createNodeIterator',
70359:     'nsIDOMDocument.createEvent',
70983:     'nsIDOMDocument.getElementsByClassName',
70983:     'nsIDOMDocument.title',
70983:     'nsIDOMDocument.referrer',
70983:     'nsIDOMDocument.hasFocus',
70983:     # This property is treated specially in nsDOMClassInfo in a way that
70983:     # would shadow any quick stub.  Also, document.location is a special
70983:     # case for security.
70983:     #'nsIDOMDocument.location',
70983:     'nsIDOMDocument.elementFromPoint',
70983:     'nsIDOMDocument.activeElement',
17092:     'nsIDOMElement.removeAttributeNS',
17092:     'nsIDOMElement.removeAttribute',
17092:     'nsIDOMElement.getAttribute',
17092:     'nsIDOMElement.getElementsByTagName',
17092:     'nsIDOMElement.setAttribute',
17092:     'nsIDOMElement.getElementsByTagNameNS',
17092:     'nsIDOMElement.hasAttributeNS',
17092:     'nsIDOMElement.tagName',
17092:     'nsIDOMElement.setAttributeNS',
17092:     'nsIDOMElement.hasAttribute',
17092:     'nsIDOMElement.getAttributeNS',
17092:     'nsIDOMNamedNodeMap.item',
17092:     'nsIDOMNamedNodeMap.length',
71768:     'nsIDOMNode.*',
43630:     'nsIDOMNodeList.*',
29393:     'nsIDOMNodeSelector.querySelector',
29393:     'nsIDOMNodeSelector.querySelectorAll',
17092:     'nsIDOMText.splitText',
52011:     'nsIDOMDOMImplementation.*',
43395:     'nsIDOMDOMStringList.*',
36760:     'nsIDOMDOMTokenList.*',
41438:     'nsIDOMDOMSettableTokenList.*',
17092:     'nsIDOMNameList.getName',
17092:     'nsIDOMNameList.contains',
17092:     'nsIDOMNameList.containsNS',
17092:     'nsIDOMNameList.length',
17092:     'nsIDOMNameList.getNamespaceURI',
26701:     'nsIDOMXULDocument.getBoxObjectFor',
46968:     'nsIDOMNSElement.*',
17092: 
36760:     # dom/interfaces/css
43395:     'nsIDOMElementCSSInlineStyle.*',
32848:     'nsIDOMCSS2Properties.*',
43395:     'nsIDOMRect.*',
47684:     'nsIDOMCSSStyleDeclaration.*',
17092: 
36760:     # dom/interfaces/events
72323:     'nsIDOMEventTarget.addEventListener',
72323:     'nsIDOMEventTarget.removeEventListener',
17092:     'nsIDOMEventTarget.dispatchEvent',
33471: 
33471:     'nsIDOMEvent.*',
33471:     'nsIDOMMouseEvent.*',
33471:     'nsIDOMKeyEvent.*',
33471:     'nsIDOMMutationEvent.*',
33471:     'nsIDOMDragEvent.*',
33471:     'nsIDOMScrollAreaEvent.*',
33471:     'nsIDOMNotifyPaintEvent.*',
33471:     'nsIDOMMessageEvent.*',
33471:     'nsIDOMMouseScrollEvent.*',
33471:     'nsIDOMProgressEvent.lengthComputable',
33471:     'nsIDOMProgressEvent.loaded',
33471:     'nsIDOMProgressEvent.total',
33471:     #XXX Can't quickstub initProgressEvent because it has long long parameters.
17092:     'nsIDOMNSEvent.originalTarget',
29471:     'nsIDOMNSEvent.getPreventDefault',
17092:     'nsIDOMNSUIEvent.which',
17092:     'nsIDOMNSUIEvent.rangeParent',
17092:     'nsIDOMNSUIEvent.rangeOffset',
17092:     'nsIDOMNSUIEvent.pageX',
17092:     'nsIDOMNSUIEvent.pageY',
17092:     'nsIDOMNSUIEvent.isChar',
17092: 
69025:     'nsIDOMTouch.*',
68879:     'nsIDOMTouchList.*',
68879:     'nsIDOMTouchEvent.*',
68879: 
36760:     # dom/interfaces/geolocation - None.
17092: 
36760:     # dom/interfaces/html
17092:     'nsIDOMHTMLAnchorElement.href',
17092:     'nsIDOMHTMLAnchorElement.rel',
17092:     'nsIDOMHTMLAnchorElement.target',
25992:     'nsIDOMHTMLAnchorElement.name',
48890:     'nsIDOMHTMLAnchorElement.text',
48890:     'nsIDOMHTMLAnchorElement.search',
48890:     'nsIDOMHTMLAnchorElement.hash',
17092:     'nsIDOMHTMLBaseElement.href',
17092:     'nsIDOMHTMLBaseElement.target',
17092:     'nsIDOMHTMLButtonElement.name',
17092:     'nsIDOMHTMLButtonElement.form',
17092:     'nsIDOMHTMLButtonElement.value',
17092:     'nsIDOMHTMLButtonElement.disabled',
17092:     'nsIDOMHTMLCollection.item',
19260:     # This is shadowed by nsIDOMHTMLOptionsCollection.length,
19260:     # but it is also present in other objects where it isn't shadowed.
19260:     # Quick stubs handle the shadowing the same as XPConnect.
19260:     'nsIDOMHTMLCollection.length',
17092:     'nsIDOMHTMLDocument.body',
17092:     'nsIDOMHTMLDocument.getElementsByName',
17092:     'nsIDOMHTMLDocument.anchors',
17092:     'nsIDOMHTMLDocument.links',
17092:     'nsIDOMHTMLDocument.URL',
17092:     'nsIDOMHTMLDocument.forms',
17092:     'nsIDOMHTMLDocument.cookie',
17092:     'nsIDOMHTMLDocument.images',
31979:     'nsIDOMHTMLDocument.write',
31979:     'nsIDOMHTMLDocument.writeln',
70985:     'nsIDOMHTMLDocument.domain',
70985:     'nsIDOMHTMLDocument.getSelection',
70985:     'nsIDOMHTMLDocument.designMode',
48943:     'nsIDOMHTMLElement.*',
17092:     'nsIDOMHTMLFormElement.elements',
17092:     'nsIDOMHTMLFormElement.name',
17092:     'nsIDOMHTMLFormElement.submit',
17092:     'nsIDOMHTMLFormElement.length',
17092:     'nsIDOMHTMLFormElement.target',
17092:     'nsIDOMHTMLFormElement.action',
17092:     'nsIDOMHTMLFrameElement.src',
17092:     'nsIDOMHTMLFrameElement.contentDocument',
17092:     'nsIDOMHTMLFrameElement.name',
17092:     'nsIDOMHTMLFrameSetElement.rows',
17092:     'nsIDOMHTMLFrameSetElement.cols',
17092:     'nsIDOMHTMLIFrameElement.src',
17092:     'nsIDOMHTMLIFrameElement.contentDocument',
17092:     'nsIDOMHTMLImageElement.src',
17092:     'nsIDOMHTMLImageElement.name',
17092:     'nsIDOMHTMLImageElement.height',
17092:     'nsIDOMHTMLImageElement.width',
48891:     'nsIDOMHTMLImageElement.complete',
17092:     'nsIDOMHTMLInputElement.defaultChecked',
17092:     'nsIDOMHTMLInputElement.disabled',
17092:     'nsIDOMHTMLInputElement.select',
17092:     'nsIDOMHTMLInputElement.checked',
17092:     'nsIDOMHTMLInputElement.type',
17092:     'nsIDOMHTMLInputElement.form',
17092:     'nsIDOMHTMLInputElement.src',
17092:     'nsIDOMHTMLInputElement.name',
17092:     'nsIDOMHTMLInputElement.value',
48892:     'nsIDOMHTMLInputElement.files',
48892:     'nsIDOMHTMLInputElement.textLength',
48892:     'nsIDOMHTMLInputElement.selectionStart',
48892:     'nsIDOMHTMLInputElement.selectionEnd',
48892:     'nsIDOMHTMLInputElement.setSelectionRange',
17092:     'nsIDOMHTMLLinkElement.disabled',
17092:     'nsIDOMHTMLOptionElement.index',
17092:     'nsIDOMHTMLOptionElement.selected',
17092:     'nsIDOMHTMLOptionElement.form',
48335:     'nsIDOMHTMLOptionElement.text',
17092:     'nsIDOMHTMLOptionElement.defaultSelected',
17092:     'nsIDOMHTMLOptionElement.value',
17092:     'nsIDOMHTMLOptionElement.label',
17092:     'nsIDOMHTMLOptionElement.disabled',
17092:     'nsIDOMHTMLOptionsCollection.item',
17092:     'nsIDOMHTMLOptionsCollection.length',
69585:     'nsIDOMHTMLProgressElement.*',
17092:     'nsIDOMHTMLSelectElement.name',
17092:     'nsIDOMHTMLSelectElement.form',
17092:     'nsIDOMHTMLSelectElement.add',
17092:     'nsIDOMHTMLSelectElement.value',
17092:     'nsIDOMHTMLSelectElement.disabled',
17092:     'nsIDOMHTMLSelectElement.length',
17092:     'nsIDOMHTMLSelectElement.remove',
17092:     'nsIDOMHTMLSelectElement.selectedIndex',
48336:     'nsIDOMHTMLSelectElement.item',
17092:     'nsIDOMHTMLSelectElement.type',
17092:     'nsIDOMHTMLSelectElement.options',
17092:     'nsIDOMHTMLSelectElement.size',
17092:     'nsIDOMHTMLStyleElement.disabled',
17092:     'nsIDOMHTMLTableCellElement.colSpan',
17092:     'nsIDOMHTMLTableCellElement.headers',
17092:     'nsIDOMHTMLTableCellElement.cellIndex',
17092:     'nsIDOMHTMLTableCellElement.rowSpan',
17092:     'nsIDOMHTMLTableCellElement.abbr',
17092:     'nsIDOMHTMLTableCellElement.scope',
17092:     'nsIDOMHTMLTableCellElement.noWrap',
17092:     'nsIDOMHTMLTableCellElement.width',
17092:     'nsIDOMHTMLTableColElement.span',
17092:     'nsIDOMHTMLTableColElement.width',
17092:     'nsIDOMHTMLTableElement.rows',
17092:     'nsIDOMHTMLTableElement.deleteRow',
17092:     'nsIDOMHTMLTableElement.summary',
17092:     'nsIDOMHTMLTableElement.insertRow',
17092:     'nsIDOMHTMLTableRowElement.sectionRowIndex',
17092:     'nsIDOMHTMLTableRowElement.rowIndex',
17092:     'nsIDOMHTMLTableRowElement.cells',
17092:     'nsIDOMHTMLTableRowElement.deleteCell',
17092:     'nsIDOMHTMLTableRowElement.insertCell',
17092:     'nsIDOMHTMLTableSectionElement.rows',
17092:     'nsIDOMHTMLTableSectionElement.insertRow',
17092:     'nsIDOMHTMLTableSectionElement.deleteRow',
17092:     'nsIDOMHTMLTextAreaElement.rows',
17092:     'nsIDOMHTMLTextAreaElement.name',
17092:     'nsIDOMHTMLTextAreaElement.form',
17092:     'nsIDOMHTMLTextAreaElement.defaultValue',
17092:     'nsIDOMHTMLTextAreaElement.cols',
17092:     'nsIDOMHTMLTextAreaElement.value',
17092:     'nsIDOMHTMLTextAreaElement.type',
17092:     'nsIDOMHTMLTextAreaElement.select',
71610:     'nsIDOMHTMLTextAreaElement.setSelectionRange',
71610:     'nsIDOMHTMLTextAreaElement.selectionStart',
71610:     'nsIDOMHTMLTextAreaElement.selectionEnd',
71610:     'nsIDOMHTMLTextAreaElement.textLength',
71610:     'nsIDOMHTMLTextAreaElement.wrap',
17092:     'nsIDOMHTMLTitleElement.text',
17092:     'nsIDOMHTMLCanvasElement.width',
17092:     'nsIDOMHTMLCanvasElement.height',
17092:     'nsIDOMHTMLCanvasElement.getContext',
34227:     'nsIDOMHTMLCanvasElement.toDataURL',
17092:     'nsIDOMNSHTMLElement.contentEditable',
39457:     'nsIDOMNSHTMLElement.isContentEditable',
17092:     'nsIDOMNSHTMLElement.offsetParent',
17092:     'nsIDOMNSHTMLElement.innerHTML',
17092:     'nsIDOMNSHTMLElement.offsetLeft',
17092:     'nsIDOMNSHTMLElement.offsetTop',
17092:     'nsIDOMNSHTMLElement.offsetHeight',
17092:     'nsIDOMNSHTMLElement.offsetWidth',
34227:     'nsIDOMNSHTMLElement.scrollIntoView',
17092:     'nsIDOMNSHTMLFrameElement.contentWindow',
17092:     'nsIDOMNSHTMLOptionCollection.selectedIndex',
34227:     'nsIDOMNSHTMLOptionCollection.add',
17092: 
36760:     # dom/interfaces/json - None.
73060:     # All methods of nsIJSON call GetCurrentNativeCallContext.
17092: 
36760:     # dom/interfaces/load-save - None.
17092: 
36760:     # dom/interfaces/offline - None.
36760: 
36760:     # dom/interfaces/range
40537:     'nsIDOMRange.*',
17092: 
36760:     # dom/interfaces/sidebar - None.
17092: 
36760:     # dom/interfaces/smil - None.
36760: 
36760:     # dom/interfaces/storage
17092:     'nsIDOMToString.toString',
28438:     'nsIDOMStorage.setItem',
28438:     'nsIDOMStorage.length',
28438:     'nsIDOMStorage.getItem',
28438:     'nsIDOMStorage.key',
28438:     'nsIDOMStorage.removeItem',
28438:     'nsIDOMStorage.clear',
17092:     'nsIDOMStorageItem.value',
36918:     'nsIDOMStorageWindow.*',
17092: 
36760:     # dom/interfaces/stylesheets - None.
17092: 
36760:     # dom/interfaces/svg - None.
48944:     'nsIDOMSVGStylable.*',
36760: 
36760:     # dom/interfaces/threads - None.
36760: 
36760:     # dom/interfaces/traversal
17092:     'nsIDOMNodeIterator.nextNode',
17092: 
36760:     # dom/interfaces/xbl - None.
17092: 
36760:     # dom/interfaces/xpath
17092:     'nsIDOMXPathEvaluator.evaluate',
17092:     'nsIDOMXPathEvaluator.createExpression',
17092:     'nsIDOMXPathEvaluator.createNSResolver',
17092:     'nsIDOMXPathExpression.evaluate',
17092:     'nsIDOMXPathNSResolver.lookupNamespaceURI',
17092:     'nsIDOMXPathResult.snapshotItem',
17092:     'nsIDOMXPathResult.iterateNext',
17092:     'nsIDOMXPathResult.snapshotLength',
17092:     'nsIDOMXPathResult.resultType',
17092:     'nsIDOMXPathResult.numberValue',
17092:     'nsIDOMXPathResult.stringValue',
17092:     'nsIDOMXPathResult.booleanValue',
17092:     'nsIDOMXPathResult.singleNodeValue',
17092:     'nsIDOMNSXPathExpression.evaluateWithContext',
17092: 
55408:     # dom/interfaces/xul
55408:     'nsIDOMXULElement.*',
55408: 
55408:     # layout/xul/base/public
55408:     'nsIBoxObject.x',
55408:     'nsIBoxObject.y',
55408:     'nsIBoxObject.screenX',
55408:     'nsIBoxObject.screenY',
55408:     'nsIBoxObject.width',
55408:     'nsIBoxObject.height',
37417: 
72881:     # FileReader
72881:     'nsIDOMFileReader.*',
72881:     
41198:     # XHR
41198:     'nsIXMLHttpRequest.*',
41198:     # nsIXMLHttpRequest.channel is not used on the web, and more
41198:     # importantly relies on the CAPS check that quickstubs don't make.
41198:     '-nsIXMLHttpRequest.channel',
41198:     # various XHR things use ACString and AUTF8String and [cstring]
41198:     # which quickstubs don't handle as return values (or at all in the
41198:     # case of AUTF8String) yet.
41198:     '-nsIXMLHttpRequest.statusText',
41198:     '-nsIXMLHttpRequest.getAllResponseHeaders',
41198:     '-nsIXMLHttpRequest.getResponseHeader',
41198:     '-nsIXMLHttpRequest.setRequestHeader',
41198:     '-nsIXMLHttpRequest.overrideMimeType',
41198:     # nsIXMLHttpRequestUpload doesn't live in its own IDL file, so
41198:     # can't be quickstubbed
41198:     '-nsIXMLHttpRequest.upload',
41198: 
47923:     # WebSocket
47923:     'nsIWebSocket.*',
47923: 
37417:     # webgl
57635:     'nsIDOMWebGLRenderingContext.*',
37417:     # These all use GetCurrentNativeCallContext and should be
37417:     # custom-quickstubbed.
57635:     '-nsIDOMWebGLRenderingContext.getActiveAttrib',
57635:     '-nsIDOMWebGLRenderingContext.getActiveUniform',
57635:     '-nsIDOMWebGLRenderingContext.getParameter',
57635:     '-nsIDOMWebGLRenderingContext.getBufferParameter',
57635:     '-nsIDOMWebGLRenderingContext.getFramebufferAttachmentParameter',
57635:     '-nsIDOMWebGLRenderingContext.getRenderbufferParameter',
57635:     '-nsIDOMWebGLRenderingContext.getProgramParameter',
57635:     '-nsIDOMWebGLRenderingContext.getUniform',
57635:     '-nsIDOMWebGLRenderingContext.getVertexAttrib',
57635:     '-nsIDOMWebGLRenderingContext.getShaderParameter',
57635:     '-nsIDOMWebGLRenderingContext.getContextAttributes',
44204: 
51477:     # Audio
51477:     'nsIDOMNotifyAudioAvailableEvent.frameBuffer',
51477:     'nsIDOMNotifyAudioAvailableEvent.time',
51477:     'nsIDOMHTMLAudioElement.mozWriteAudio',
51477: 
44204:     # dom/indexedDB
44204:     'nsIIDBCursor.*',
62345:     'nsIIDBCursorWithValue.*',
44204:     'nsIIDBDatabase.*',
44204:     'nsIIDBDatabaseException.*',
44204:     'nsIIDBIndex.*',
44204:     'nsIIDBKeyRange.*',
44204:     'nsIIDBObjectStore.*',
44204:     'nsIIDBRequest.*',
44204:     'nsIIDBTransaction.*',
46347:     'nsIIDBFactory.*',
56112:     'nsIIDBVersionChangeEvent.*',
56112:     'nsIIDBVersionChangeRequest.*',
56112:     'nsIIndexedDatabaseUsageCallback.*',
56112:     'nsIIndexedDatabaseManager.*',
17092:     ]
17092: 
17092: # Most interfaces can be found by searching the includePath; to find
17092: # nsIDOMEvent, for example, just look for nsIDOMEvent.idl.  But IDL filenames
17092: # for very long interface names are slightly abbreviated, and many interfaces
17092: # don't have their own files, just for extra wackiness.  So qsgen.py needs
17092: # a little help.
17092: #
17092: irregularFilenames = {
17092:     # abbreviations
17092:     'nsIDOMNSHTMLOptionCollection': 'nsIDOMNSHTMLOptionCollectn',
17092:     'nsIDOMHTMLTableSectionElement': 'nsIDOMHTMLTableSectionElem',
17092: 
17092:     # stowaways
19260:     'nsIDOMTextMetrics': 'nsIDOMCanvasRenderingContext2D',
37417:     'nsIDOMCanvasGradient': 'nsIDOMCanvasRenderingContext2D',
37417:     'nsIDOMCanvasPattern': 'nsIDOMCanvasRenderingContext2D',
37417: 
72881:     'nsIDOMBlob': 'nsIDOMFile',
72881: 
57635:     'nsIWebGLTexture': 'nsIDOMWebGLRenderingContext',
57635:     'nsIWebGLBuffer': 'nsIDOMWebGLRenderingContext',
57635:     'nsIWebGLProgram': 'nsIDOMWebGLRenderingContext',
57635:     'nsIWebGLShader': 'nsIDOMWebGLRenderingContext',
57635:     'nsIWebGLShaderArray': 'nsIDOMWebGLRenderingContext',
57635:     'nsIWebGLFramebuffer': 'nsIDOMWebGLRenderingContext',
57635:     'nsIWebGLRenderbuffer': 'nsIDOMWebGLRenderingContext',
57635:     'nsIWebGLActiveInfo': 'nsIDOMWebGLRenderingContext',
57635:     'nsIWebGLUniformLocation': 'nsIDOMWebGLRenderingContext',
70163:     'nsIWebGLExtension': 'nsIDOMWebGLRenderingContext',
56112: 
56112:     'nsIIndexedDatabaseUsageCallback': 'nsIIndexedDatabaseManager',
68879: 
69025:     'nsIDOMTouch': 'nsIDOMTouchEvent',
68879:     'nsIDOMTouchList': 'nsIDOMTouchEvent',
17092:     }
23258: 
23258: customIncludes = [
23258:     'nsINode.h',
23258:     'nsIContent.h',
23258:     'nsIDocument.h',
32848:     'nsINodeList.h',
37417:     'nsCSSPropertiesQS.h',
42984:     'nsDocument.h',
41912:     'nsGenericDOMDataNode.h',
41912:     'nsGenericElement.h',
42984:     'nsGenericHTMLElement.h',
48944:     'nsSVGStylableElement.h',
42984:     'nsHTMLDocument.h',
40491:     'nsDOMQS.h',
37417:     ]
37417: 
37417: customQuickStubs = [
38908:     'CustomQS_WebGL.h',
38908:     'CustomQS_Canvas2D.h'
38908:     ]
38908: 
38908: customReturnInterfaces = [
38908:     'nsIDOMCanvasPattern',
38908:     'nsIDOMCanvasGradient',
23258:     ]
23258: 
23258: nsIDOMNode_GetChildNodes_customMethodCallCode = """
67991:     nsChildContentList* result = static_cast<nsChildContentList*>(self->GetChildNodesList());
31979:     rv = result ? NS_OK : NS_ERROR_OUT_OF_MEMORY;
31979: """
31979: 
31979: nsIDOMHTMLDocument_Write_customMethodCallCode = """
31979:     nsAString &str = arg0;
31979:     for (uintN i = 1; i < argc; ++i) {
33019:       xpc_qsDOMString next_arg(cx, argv[i], &argv[i],
33019:                                xpc_qsDOMString::eStringify,
33019:                                xpc_qsDOMString::eStringify);
31979:       if (!next_arg.IsValid())
31979:         return JS_FALSE;
31979: 
31979:       str.Append(next_arg);
31979:     }
31979: 
71036:     rv = self->%s(arg0, cx);
23258: """
23258: 
34779: nsIDOMStorage_Clear_customMethodCallCode = """
41911:     rv = self->Clear();
62446:     if (NS_SUCCEEDED(rv))
62446:         JS_ClearScope(cx, obj);
34779: """
34779: 
37417: CUSTOM_QS = {
37417:     'skipgen': True,
37417:     'traceable': False
37417: }
37417: 
37417: CUSTOM_QS_TN = {
37417:     'skipgen': True,
37417:     'traceable': True
37417: }
37417: 
23258: customMethodCalls = {
23258:     'nsIDOMNode_GetNextSibling': {
23258:         'thisType': 'nsINode',
42872:         'code': '    nsINode *result = self->GetNextSibling();',
41911:         'canFail': False
23258:         },
23258:     'nsIDOMNode_GetFirstChild': {
23258:         'thisType': 'nsINode',
42872:         'code': '    nsINode *result = self->GetFirstChild();',
41911:         'canFail': False
23258:         },
23258:     'nsIDOMNode_GetChildNodes': {
23258:         'thisType': 'nsINode',
41911:         'code': nsIDOMNode_GetChildNodes_customMethodCallCode
23258:         },
23258:     'nsIDOMNode_GetPreviousSibling': {
23258:         'thisType': 'nsINode',
42872:         'code': '    nsINode *result = self->GetPreviousSibling();',
41911:         'canFail': False
23258:         },
23258:     'nsIDOMNode_GetLastChild': {
23258:         'thisType': 'nsINode',
41911:         'code': '    nsINode *result = self->GetLastChild();',
41911:         'canFail': False
23258:         },
23258:     'nsIDOMNode_GetOwnerDocument': {
23258:         'thisType': 'nsINode',
41911:         'code': '    nsIDocument *result = self->GetOwnerDocument();',
41911:         'canFail': False
23258:         },
23258:     'nsIDOMNode_GetParentNode': {
23258:         'thisType': 'nsINode',
41911:         'code': '    nsINode *result = self->GetNodeParent();',
41911:         'canFail': False
23258:         },
40488:     'nsIDOMNode_InsertBefore': {
40488:         'thisType': 'nsINode',
40488:         'arg0Type': 'nsINode',
40488:         'arg1Type': 'nsINode',
40488:         'code': '    nsINode *result = self->InsertBefore(arg0, arg1, &rv);\n'
40488:                 '    if(NS_FAILED(rv))\n'
41911:                 '        result = nsnull;'
40488:         },
40488:     'nsIDOMNode_ReplaceChild': {
40488:         'thisType': 'nsINode',
40488:         'arg0Type': 'nsINode',
40488:         'arg1Type': 'nsINode',
40488:         'code': '    nsINode *result = self->ReplaceChild(arg0, arg1, &rv);\n'
40488:                 '    if(NS_FAILED(rv))\n'
41911:                 '        result = nsnull;'
40488:         },
40488:     'nsIDOMNode_RemoveChild': {
40488:         'thisType': 'nsINode',
40488:         'arg0Type': 'nsINode',
40488:         'code': '    rv = self->RemoveChild(arg0);\n'
41911:                 '    nsINode *result = NS_SUCCEEDED(rv) ? arg0 : nsnull;'
40488:         },
40488:     'nsIDOMNode_AppendChild': {
40488:         'thisType': 'nsINode',
40488:         'arg0Type': 'nsINode',
40488:         'code': '    nsINode *result = self->AppendChild(arg0, &rv);\n'
40488:                 '    if(NS_FAILED(rv))\n'
41911:                 '        result = nsnull;'
40488:         },
43015:     'nsIDOMNode_GetNodeType': {
43015:         'thisType': 'nsINode',
71768:         'code': 'PRUint16 result = self->NodeType();',
71768:         'canFail': False
71768:         },
71768:     'nsIDOMNode_GetNodeName': {
71768:         'thisType': 'nsINode',
71771:         'code': 'nsString result = self->NodeName();',
71771:         'canFail': False
71771:         },
71771:     'nsIDOMNode_GetLocalName': {
71771:         'thisType': 'nsINode',
71771:         'code': 'nsString result = self->LocalName();',
43015:         'canFail': False
43015:         },
23258:     'nsIDOMNodeList_Item': {
23258:         'thisType': 'nsINodeList',
41911:         'code': '    nsINode *result = self->GetNodeAt(arg0);',
41911:         'canFail': False
31979:         },
43019:     'nsIDOMHTMLDocument_': {
43019:         'thisType': 'nsHTMLDocument'
43019:         },
43630:     'nsIDOMNodeList_GetLength': {
43630:         'thisType': 'nsINodeList'
43630:         },
31979:     'nsIDOMHTMLDocument_Write': {
43019:         'thisType': 'nsHTMLDocument',
41911:         'code': nsIDOMHTMLDocument_Write_customMethodCallCode % 'Write'
31979:         },
31979:     'nsIDOMHTMLDocument_Writeln': {
43019:         'thisType': 'nsHTMLDocument',
41911:         'code': nsIDOMHTMLDocument_Write_customMethodCallCode % 'Writeln'
32848:         },
43019:     'nsIDOMHTMLDocument_GetBody': {
43019:         'thisType': 'nsHTMLDocument',
43019:         'code': '    nsIContent *result = self->GetBody(&rv);'
43019:         },
43019:     'nsIDOMHTMLDocument_GetElementsByName': {
43019:         'thisType': 'nsHTMLDocument',
43019:         'code': '    nsRefPtr<nsContentList> result = '
43019:                 'self->GetElementsByName(arg0);',
43019:         'canFail': False
43019:         },
34779:     'nsIDOMStorage_Clear': {
34779:         'code': nsIDOMStorage_Clear_customMethodCallCode
34779:         },
38908:     'nsIDOMCanvasRenderingContext2D_StrokeStyle': { 'skipgen': True },
38908:     'nsIDOMCanvasRenderingContext2D_StrokeStyle': { 'skipgen': True },
38908:     'nsIDOMCanvasRenderingContext2D_FillStyle': { 'skipgen': True },
38908:     'nsIDOMCanvasRenderingContext2D_FillStyle': { 'skipgen': True },
49011:     'nsIDOMCSS2Properties_': {
49011:         'thisType': 'nsICSSDeclaration',
49011:         'additionalArguments': 'const nsCSSProperty prop',
49011:         'additionalArgumentValues': 'QS_CSS_PROP_%s',
49011:         'getter_code': '    nsString result;\n' + 
49011:                        '    rv = self->GetPropertyValue(prop, result);',
49011:         'setter_code': '    rv = self->SetPropertyValue(prop, arg0);',
49011:         'canFail': True
49011:         },
43044:     'nsIDOMNSElement_': {
41912:         'thisType': 'nsGenericElement'
41912:         },
46968:     'nsIDOMNSElement_GetScrollTop': {
46968:         'thisType': 'nsGenericElement',
46968:         'code': '    PRInt32 result = self->GetScrollTop();',
46968:         'canFail': False
46968:         },
46968:     'nsIDOMNSElement_SetScrollTop': {
46968:         'thisType': 'nsGenericElement',
46968:         'canFail': False
46968:         },
46968:     'nsIDOMNSElement_GetScrollLeft': {
46968:         'thisType': 'nsGenericElement',
46968:         'code': '    PRInt32 result = self->GetScrollLeft();',
46968:         'canFail': False
46968:         },
46968:     'nsIDOMNSElement_SetScrollLeft': {
46968:         'thisType': 'nsGenericElement',
46968:         'canFail': False
46968:         },
46968:     'nsIDOMNSElement_GetScrollHeight': {
46968:         'thisType': 'nsGenericElement',
46968:         'code': '    PRInt32 result = self->GetScrollHeight();',
46968:         'canFail': False
46968:         },
41912:     'nsIDOMNSElement_GetScrollWidth': {
41912:         'thisType': 'nsGenericElement',
41912:         'code': '    PRInt32 result = self->GetScrollWidth();',
41912:         'canFail': False
41912:         },
41912:     'nsIDOMNSElement_GetClientTop': {
41912:         'thisType': 'nsGenericElement',
41912:         'code': '    PRInt32 result = self->GetClientTop();',
41912:         'canFail': False
41912:         },
41912:     'nsIDOMNSElement_SetClientTop': {
41912:         'thisType': 'nsGenericElement',
41912:         'canFail': False
41912:         },
41912:     'nsIDOMNSElement_GetClientLeft': {
41912:         'thisType': 'nsGenericElement',
41912:         'code': '    PRInt32 result = self->GetClientLeft();',
41912:         'canFail': False
41912:         },
41912:     'nsIDOMNSElement_SetClientLeft': {
41912:         'thisType': 'nsGenericElement',
41912:         'canFail': False
41912:         },
41912:     'nsIDOMNSElement_GetClientHeight': {
41912:         'thisType': 'nsGenericElement',
41912:         'code': '    PRInt32 result = self->GetClientHeight();',
41912:         'canFail': False
41912:         },
41912:     'nsIDOMNSElement_GetClientWidth': {
41912:         'thisType': 'nsGenericElement',
41912:         'code': '    PRInt32 result = self->GetClientWidth();',
41912:         'canFail': False
41912:         },
46968:     'nsIDOMNSElement_GetFirstElementChild': {
46968:         'thisType': 'nsGenericElement',
46968:         'code': '    nsIContent *result = self->GetFirstElementChild();',
46968:         'canFail': False
46968:         },
46968:     'nsIDOMNSElement_GetLastElementChild': {
46968:         'thisType': 'nsGenericElement',
46968:         'code': '    nsIContent *result = self->GetLastElementChild();',
46968:         'canFail': False
46968:         },
46968:     'nsIDOMNSElement_GetPreviousElementSibling': {
46968:         'thisType': 'nsGenericElement',
46968:         'code': '    nsIContent *result = self->GetPreviousElementSibling();',
46968:         'canFail': False
46968:         },
46968:     'nsIDOMNSElement_GetNextElementSibling': {
46968:         'thisType': 'nsGenericElement',
46968:         'code': '    nsIContent *result = self->GetNextElementSibling();',
46968:         'canFail': False
46968:         },
46968:     'nsIDOMNSElement_GetClassList': {
46968:         'thisType': 'nsGenericElement',
46968:         'code': '    nsIDOMDOMTokenList *result = self->GetClassList(&rv);'
46968:         },
46968:     'nsIDOMNSElement_SetCapture': {
46968:         'thisType': 'nsGenericElement',
46968:         'canFail': False
46968:         },
46968:     'nsIDOMNSElement_ReleaseCapture': {
46968:         'thisType': 'nsGenericElement',
46968:         'canFail': False
46968:         },
41912:     'nsIDOMNSElement_MozMatchesSelector': {
41912:         'thisType': 'nsGenericElement',
56306:         'code': '    PRBool result = self->MozMatchesSelector(arg0, &rv);',
41912:         },
41912:     'nsIDOMNodeSelector_QuerySelector': {
41912:         'thisType': 'nsINode',
41912:         'code': '    nsIContent* result = '
41912:                 'nsGenericElement::doQuerySelector(self, arg0, &rv);'
41912:         },
41912:     'nsIDOMNodeSelector_QuerySelectorAll': {
41912:         'thisType': 'nsINode',
41912:         'code': '    nsCOMPtr<nsIDOMNodeList> result;\n'
41912:                 '    rv = nsGenericElement::doQuerySelectorAll(self, '
41912:                 'arg0, getter_AddRefs(result));'
41912:         },
72437:     'nsIDOMNode_Normalize': {
72437:         'thisType': 'nsINode',
72437:         'canFail': False
72437:         },
71768:     'nsIDOMNode_GetBaseURI': {
41912:         'thisType': 'nsINode',
41912:         'canFail': False
41912:         },
71768:     'nsIDOMNode_CompareDocumentPosition': {
41912:         'thisType': 'nsINode',
71768:         'arg0Type': 'nsINode',
71768:         'code': '    PRUint16 result;\n'
71768:                 '    rv = self->CompareDocPosition(arg0, &result);',
71768:         'canFail': True
41912:         },
71768:     'nsIDOMNode_GetTextContent': {
41912:         'thisType': 'nsINode',
41912:         'canFail': False
41912:         },
41912:     'nsIDOM3Node_IsSameNode': {
41912:         'thisType': 'nsINode',
41912:         'arg0Type': 'nsINode',
71768:         'code': '    PRBool result = self == arg0;',
41912:         'canFail': False
41912:         },
71768:     'nsIDOMNode_LookupPrefix': {
41912:         'thisType': 'nsINode',
41912:         'canFail': False
41912:         },
71768:     'nsIDOMNode_IsDefaultNamespace': {
41912:         'thisType': 'nsINode',
41912:         'canFail': False
41912:         },
71768:     'nsIDOMNode_LookupNamespaceURI': {
41912:         'thisType': 'nsINode',
41912:         'canFail': False
41912:         },
71768:     'nsIDOMNode_IsEqualNode': {
41912:         'thisType': 'nsINode',
71769:         'arg0Type': 'nsINode',
71789:         'code': '    PRBool result = self->IsEqualTo(arg0);',
71768:         'canFail': False
71768:         },
71768:     'nsIDOMNode_GetUserData': {
71768:         'thisType': 'nsINode',
41912:         'canFail': False
41912:         },
43090:     'nsIDOMNSHTMLElement_': {
43090:         'thisType': 'nsGenericHTMLElement'
43090:         },
48943:     'nsIDOMHTMLElement_': {
48943:         'thisType': 'nsGenericHTMLElement'
48943:         },
48944:     'nsIDOMElementCSSInlineStyle_GetStyle': {
48944:         'thisType': 'nsStyledElement',
61187:         'code': '    /* XXXbz MathML elements inherit from nsStyledElement but\n'
61187:                 '       don\'t actually implement GetStyle. */\n'
61187:                 '    if (self->GetNameSpaceID() == kNameSpaceID_MathML)\n'
61187:                 '      return xpc_qsThrow(cx, NS_ERROR_XPC_BAD_CONVERT_JS);\n'
61187:                 '    nsIDOMCSSStyleDeclaration* result = '
48944:                 'self->GetStyle(&rv);'
48944:         },
48944:     'nsIDOMSVGStylable_GetStyle': {
48944:         'thisType': 'nsSVGStylableElement',
48944:         'code': '    nsIDOMCSSStyleDeclaration* result = '
48944:                 'self->GetStyle(&rv);'
48944:         },
43178:     'nsIDOMDocument_': {
43178:         'thisType': 'nsDocument'
43178:         },
43178:     'nsIDOMDocument_GetElementById': {
43178:         'thisType': 'nsDocument',
43178:         'code': '    mozilla::dom::Element *result = self->GetElementById(arg0);',
43178:         'canFail': False
43178:         },
43178:     'nsIDOMDocument_GetElementsByTagName': {
43178:         'thisType': 'nsDocument',
43178:         'code': '    nsRefPtr<nsContentList> result ='
43178:                 'self->GetElementsByTagName(arg0);',
43178:         'canFail': False
43178:         },
43178:     'nsIDOMDocument_GetElementsByTagNameNS': {
43178:         'thisType': 'nsDocument',
43178:         'code': '    nsRefPtr<nsContentList> result ='
43178:                 'self->GetElementsByTagNameNS(arg0, arg1);',
43178:         'canFail': False
43178:         },
43181:     'nsIDOMElement_': {
43181:         'thisType': 'nsGenericElement'
43181:         },
71772:     'nsIDOMElement_GetTagName': {
73542:         'thisType': 'nsGenericElement',
71772:         'code': 'nsString result = self->NodeName();',
71772:         'canFail': False
71772:         },
48124:     'nsIDOMDocument_CreateElement': {
48124:         'thisType': 'nsDocument',
48124:         'code': '    nsCOMPtr<nsIContent> result;\n'
48124:                 '    rv = self->CreateElement(arg0, getter_AddRefs(result));'
48124:     },
58484:     'nsIDOMDocument_CreateElementNS': {
58484:         'thisType': 'nsDocument',
58484:         'code': '    nsCOMPtr<nsIContent> result;\n'
58484:                 '    rv = self->CreateElementNS(arg0, arg1, getter_AddRefs(result));'
58484:     },
48124:     'nsIDOMDocument_CreateTextNode': {
48124:         'thisType': 'nsDocument',
48124:         'code': '    nsCOMPtr<nsIContent> result;\n'
48124:                 '    rv = self->CreateTextNode(arg0, getter_AddRefs(result));'
48124:     },
37417:     # WebGL
57635:     'nsIDOMWebGLRenderingContext_BufferData': CUSTOM_QS,
57635:     'nsIDOMWebGLRenderingContext_BufferSubData': CUSTOM_QS,
57635:     'nsIDOMWebGLRenderingContext_ReadPixels': CUSTOM_QS,
57635:     'nsIDOMWebGLRenderingContext_TexImage2D': CUSTOM_QS,
57635:     'nsIDOMWebGLRenderingContext_TexSubImage2D': CUSTOM_QS,
57635:     'nsIDOMWebGLRenderingContext_Uniform1iv': CUSTOM_QS_TN,
57635:     'nsIDOMWebGLRenderingContext_Uniform2iv': CUSTOM_QS_TN,
57635:     'nsIDOMWebGLRenderingContext_Uniform3iv': CUSTOM_QS_TN,
57635:     'nsIDOMWebGLRenderingContext_Uniform4iv': CUSTOM_QS_TN,
57635:     'nsIDOMWebGLRenderingContext_Uniform1fv': CUSTOM_QS_TN,
57635:     'nsIDOMWebGLRenderingContext_Uniform2fv': CUSTOM_QS_TN,
57635:     'nsIDOMWebGLRenderingContext_Uniform3fv': CUSTOM_QS_TN,
57635:     'nsIDOMWebGLRenderingContext_Uniform4fv': CUSTOM_QS_TN,
57635:     'nsIDOMWebGLRenderingContext_UniformMatrix2fv': CUSTOM_QS_TN,
57635:     'nsIDOMWebGLRenderingContext_UniformMatrix3fv': CUSTOM_QS_TN,
57635:     'nsIDOMWebGLRenderingContext_UniformMatrix4fv': CUSTOM_QS_TN,
57635:     'nsIDOMWebGLRenderingContext_VertexAttrib1fv': CUSTOM_QS,
57635:     'nsIDOMWebGLRenderingContext_VertexAttrib2fv': CUSTOM_QS,
57635:     'nsIDOMWebGLRenderingContext_VertexAttrib3fv': CUSTOM_QS,
57635:     'nsIDOMWebGLRenderingContext_VertexAttrib4fv': CUSTOM_QS,
38927:     # Canvas 2D
38927:     'nsIDOMCanvasRenderingContext2D_CreateImageData': CUSTOM_QS,
38927:     'nsIDOMCanvasRenderingContext2D_GetImageData': CUSTOM_QS,
38927:     'nsIDOMCanvasRenderingContext2D_PutImageData': CUSTOM_QS,
62170:     # Nasty hack to make the ordering of |arc| and |arcTo| correct.
62170:     # |arc| is not traceable because it has an optional argument.
62170:     'nsIDOMCanvasRenderingContext2D_ArcTo' : { 'traceable' : False },
23258:     }
32848: 

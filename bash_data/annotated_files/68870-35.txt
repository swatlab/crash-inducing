    1: /* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
    1: /* ***** BEGIN LICENSE BLOCK *****
    1:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
    1:  *
    1:  * The contents of this file are subject to the Mozilla Public License Version
    1:  * 1.1 (the "License"); you may not use this file except in compliance with
    1:  * the License. You may obtain a copy of the License at
    1:  * http://www.mozilla.org/MPL/
    1:  *
    1:  * Software distributed under the License is distributed on an "AS IS" basis,
    1:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
    1:  * for the specific language governing rights and limitations under the
    1:  * License.
    1:  *
    1:  * The Original Code is mozilla.org code.
    1:  *
    1:  * The Initial Developer of the Original Code is
    1:  * Netscape Communications Corporation.
    1:  * Portions created by the Initial Developer are Copyright (C) 2000
    1:  * the Initial Developer. All Rights Reserved.
    1:  *
    1:  * Contributor(s):
    1:  *   Vidur Apparao <vidur@netscape.com> (original author)
    1:  *   Johnny Stenback <jst@netscape.com>
    1:  *
    1:  * Alternatively, the contents of this file may be used under the terms of
    1:  * either of the GNU General Public License Version 2 or later (the "GPL"),
    1:  * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
    1:  * in which case the provisions of the GPL or the LGPL are applicable instead
    1:  * of those above. If you wish to allow use of your version of this file only
    1:  * under the terms of either the GPL or the LGPL, and not to allow others to
    1:  * use your version of this file under the terms of the MPL, indicate your
    1:  * decision by deleting the provisions above and replace them with the notice
    1:  * and other provisions required by the GPL or the LGPL. If you do not delete
    1:  * the provisions above, a recipient may use your version of this file under
    1:  * the terms of any one of the MPL, the GPL or the LGPL.
    1:  *
    1:  * ***** END LICENSE BLOCK ***** */
    1: 
    1: #include "nsIDOMNode.idl"
    1: 
    1: /**
    1:  * The nsIDOMDocument interface represents the entire HTML or XML document.
    1:  * Conceptually, it is the root of the document tree, and provides the 
    1:  * primary access to the document's data.
    1:  * Since elements, text nodes, comments, processing instructions, etc. 
    1:  * cannot exist outside the context of a Document, the nsIDOMDocument 
    1:  * interface also contains the factory methods needed to create these 
    1:  * objects.
    1:  *
    1:  * For more information on this interface please see 
64020:  * http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html
    1:  */
    1: 
68870: [scriptable, uuid(2d305b95-a030-4d24-a12c-7fabf61a8c3c)]
    1: interface nsIDOMDocument : nsIDOMNode
    1: {
    1:   readonly attribute nsIDOMDocumentType         doctype;
    1:   readonly attribute nsIDOMDOMImplementation    implementation;
    1:   readonly attribute nsIDOMElement              documentElement;
    1:   nsIDOMElement                 createElement(in DOMString tagName)
    1:                                   raises(DOMException);
    1:   nsIDOMDocumentFragment        createDocumentFragment();
    1:   nsIDOMText                    createTextNode(in DOMString data);
    1:   nsIDOMComment                 createComment(in DOMString data);
    1:   nsIDOMCDATASection            createCDATASection(in DOMString data)
    1:                                   raises(DOMException);
    1:   nsIDOMProcessingInstruction   createProcessingInstruction(in DOMString target, 
    1:                                                             in DOMString data)
    1:                                   raises(DOMException);
    1:   nsIDOMAttr                    createAttribute(in DOMString name)
    1:                                   raises(DOMException);
    1:   nsIDOMEntityReference         createEntityReference(in DOMString name)
    1:                                   raises(DOMException);
    1:   nsIDOMNodeList                getElementsByTagName(in DOMString tagname);
    1: 
    1:   // Introduced in DOM Level 2:
    1:   nsIDOMNode                    importNode(in nsIDOMNode importedNode,
    1:                                            in boolean deep)
    1:                                   raises(DOMException);
    1:   // Introduced in DOM Level 2:
    1:   nsIDOMElement                 createElementNS(in DOMString namespaceURI,
    1:                                                 in DOMString qualifiedName)
    1:                                   raises(DOMException);
    1:   // Introduced in DOM Level 2:
    1:   nsIDOMAttr                    createAttributeNS(in DOMString namespaceURI,
    1:                                                   in DOMString qualifiedName)
    1:                                   raises(DOMException);
    1:   // Introduced in DOM Level 2:
    1:   nsIDOMNodeList                getElementsByTagNameNS(in DOMString namespaceURI,
    1:                                                        in DOMString localName);
    1:   // Introduced in DOM Level 2:
    1:   nsIDOMElement                 getElementById(in DOMString elementId);
64020:   // Introduced in DOM Level 3:
64020:   readonly attribute DOMString       inputEncoding;
64020:   // Introduced in DOM Level 3:
64020:   readonly attribute DOMString       xmlEncoding;
64020:   // Introduced in DOM Level 3:
64020:            attribute boolean         xmlStandalone;
64020:                                         // raises(DOMException) on setting
64020:   // Introduced in DOM Level 3:
64020:            attribute DOMString       xmlVersion;
64020:                                         // raises(DOMException) on setting
64020:   // Introduced in DOM Level 3:
64020:            attribute DOMString       documentURI;
64020:   // Introduced in DOM Level 3:
64020:   nsIDOMNode         adoptNode(in nsIDOMNode source)
64020:                                         raises(DOMException);
64020:   // Introduced in DOM Level 3:
64020:   void               normalizeDocument();
    1: };

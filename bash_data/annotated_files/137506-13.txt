118588: /* This Source Code Form is subject to the terms of the Mozilla Public
118588:  * License, v. 2.0. If a copy of the MPL was not distributed with this
118588:  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
118588: 
118588: // This test makes sure that about:privatebrowsing does not appear zoomed in
118588: // if there is already a zoom site pref for about:blank (bug 487656).
118588: 
118588: function test() {
118588:   // initialization
118588:   waitForExplicitFinish();
121775:   let windowsToClose = [];
121775:   let windowsToReset = [];
118588: 
121775:   function doTest(aIsZoomedWindow, aWindow, aCallback) {
121775:     aWindow.gBrowser.selectedBrowser.addEventListener("load", function onLoad() {
121775:       aWindow.gBrowser.selectedBrowser.removeEventListener("load", onLoad, true);
121775:       if (aIsZoomedWindow) {
121775:         // change the zoom on the blank page
137506:         aWindow.FullZoom.enlarge();
121775:         isnot(aWindow.ZoomManager.zoom, 1, "Zoom level for about:blank should be changed");
137506:       } else {
121775:         // make sure the zoom level is set to 1
121775:         is(aWindow.ZoomManager.zoom, 1, "Zoom level for about:privatebrowsing should be reset");
137506:       }
118588: 
121775:       aCallback();
121775:     }, true);
118588: 
121775:     aWindow.gBrowser.selectedBrowser.loadURI("about:blank");
118588:   }
118588: 
118588:   function finishTest() {
121775:     // cleanup
137506:     windowsToReset.forEach(function(win) {
137506:       win.FullZoom.reset();
137506:     });
137490:     finish();
121775:   }
118588: 
121775:   function testOnWindow(options, callback) {
121775:     let win = OpenBrowserWindow(options);
121775:     win.addEventListener("load", function onLoad() {
121775:       win.removeEventListener("load", onLoad, false);
121775:       windowsToClose.push(win);
121775:       windowsToReset.push(win);
121775:       executeSoon(function() callback(win));
121775:     }, false);
121775:   };
121775: 
121775:   registerCleanupFunction(function() {
121775:     windowsToClose.forEach(function(win) {
121775:       win.close();
118588:     });
121775:   });
121775: 
121775:   testOnWindow({}, function(win) {
121775:     doTest(true, win, function() {
121775:       testOnWindow({private: true}, function(win) {
121775:         doTest(false, win, finishTest);
121775:       });
121775:     });
121775:   });
118588: }

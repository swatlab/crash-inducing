   1: /* -*- Mode: C++; tab-width: 20; indent-tabs-mode: nil; c-basic-offset: 4 -*-
   1:  * ***** BEGIN LICENSE BLOCK *****
   1:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
   1:  *
   1:  * The contents of this file are subject to the Mozilla Public License Version
   1:  * 1.1 (the "License"); you may not use this file except in compliance with
   1:  * the License. You may obtain a copy of the License at
   1:  * http://www.mozilla.org/MPL/
   1:  *
   1:  * Software distributed under the License is distributed on an "AS IS" basis,
   1:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   1:  * for the specific language governing rights and limitations under the
   1:  * License.
   1:  *
   1:  * The Original Code is Mozilla Corporation code.
   1:  *
   1:  * The Initial Developer of the Original Code is Mozilla Corporation.
   1:  * Portions created by the Initial Developer are Copyright (C) 2005
   1:  * the Initial Developer. All Rights Reserved.
   1:  *
   1:  * Contributor(s):
   1:  *   Vladimir Vukicevic <vladimir@pobox.com>
   1:  *
   1:  * Alternatively, the contents of this file may be used under the terms of
   1:  * either the GNU General Public License Version 2 or later (the "GPL"), or
   1:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   1:  * in which case the provisions of the GPL or the LGPL are applicable instead
   1:  * of those above. If you wish to allow use of your version of this file only
   1:  * under the terms of either the GPL or the LGPL, and not to allow others to
   1:  * use your version of this file under the terms of the MPL, indicate your
   1:  * decision by deleting the provisions above and replace them with the notice
   1:  * and other provisions required by the GPL or the LGPL. If you do not delete
   1:  * the provisions above, a recipient may use your version of this file under
   1:  * the terms of any one of the MPL, the GPL or the LGPL.
   1:  *
   1:  * ***** END LICENSE BLOCK ***** */
   1: 
   1: #include "gfxQuartzSurface.h"
   1: 
 314: #include "cairo-quartz.h"
   1: 
   1: gfxQuartzSurface::gfxQuartzSurface(const gfxSize& size, gfxImageFormat format)
   1:     : mSize(size)
   1: {
1349:     if (!CheckSurfaceSize(size))
1349:         return;
1349: 
 314:     cairo_surface_t *surf = cairo_quartz_surface_create
   1:         ((cairo_format_t) format, floor(size.width), floor(size.height));
   1: 
 314:     mCGContext = cairo_quartz_surface_get_cg_context (surf);
   1: 
   1:     CGContextRetain(mCGContext);
   1: 
   1:     Init(surf);
   1: }
   1: 
   1: gfxQuartzSurface::gfxQuartzSurface(CGContextRef context,
   1:                                    const gfxSize& size)
   1:     : mCGContext(context), mSize(size)
   1: {
   1:     cairo_surface_t *surf = 
 314:         cairo_quartz_surface_create_for_cg_context(context,
   1:                                                    floor(size.width),
 314:                                                    floor(size.height));
   1: 
   1:     CGContextRetain(mCGContext);
   1: 
   1:     Init(surf);
   1: }
   1: 
   1: gfxQuartzSurface::gfxQuartzSurface(cairo_surface_t *csurf) :
   1:     mSize(-1.0, -1.0)
   1: {
 314:     mCGContext = cairo_quartz_surface_get_cg_context (csurf);
   1:     CGContextRetain (mCGContext);
   1: 
   1:     Init(csurf, PR_TRUE);
   1: }
   1: 
   1: gfxQuartzSurface::~gfxQuartzSurface()
   1: {
   1:     CGContextRelease(mCGContext);
   1: }

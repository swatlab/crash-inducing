    1: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
    1: /* ***** BEGIN LICENSE BLOCK *****
    1:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
    1:  *
    1:  * The contents of this file are subject to the Mozilla Public License Version
    1:  * 1.1 (the "License"); you may not use this file except in compliance with
    1:  * the License. You may obtain a copy of the License at
    1:  * http://www.mozilla.org/MPL/
    1:  *
    1:  * Software distributed under the License is distributed on an "AS IS" basis,
    1:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
    1:  * for the specific language governing rights and limitations under the
    1:  * License.
    1:  *
    1:  * The Original Code is Mozilla Communicator client code.
    1:  *
    1:  * The Initial Developer of the Original Code is
    1:  * Netscape Communications Corporation.
    1:  * Portions created by the Initial Developer are Copyright (C) 1998
    1:  * the Initial Developer. All Rights Reserved.
    1:  *
    1:  * Contributor(s):
    1:  *
    1:  * Alternatively, the contents of this file may be used under the terms of
    1:  * either of the GNU General Public License Version 2 or later (the "GPL"),
    1:  * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
    1:  * in which case the provisions of the GPL or the LGPL are applicable instead
    1:  * of those above. If you wish to allow use of your version of this file only
    1:  * under the terms of either the GPL or the LGPL, and not to allow others to
    1:  * use your version of this file under the terms of the MPL, indicate your
    1:  * decision by deleting the provisions above and replace them with the notice
    1:  * and other provisions required by the GPL or the LGPL. If you do not delete
    1:  * the provisions above, a recipient may use your version of this file under
    1:  * the terms of any one of the MPL, the GPL or the LGPL.
    1:  *
    1:  * ***** END LICENSE BLOCK ***** */
    1: 
    1: #ifndef nsXMLDocument_h___
    1: #define nsXMLDocument_h___
    1: 
    1: #include "nsDocument.h"
    1: #include "nsIDOMXMLDocument.h"
    1: #include "nsIScriptContext.h"
    1: 
    1: class nsIParser;
    1: class nsIDOMNode;
    1: class nsIURI;
    1: class nsIChannel;
    1: 
21937: class nsXMLDocument : public nsDocument
    1: {
    1: public:
    1:   nsXMLDocument(const char* aContentType = "application/xml");
    1:   virtual ~nsXMLDocument();
    1: 
    1:   NS_DECL_ISUPPORTS_INHERITED
    1: 
    1:   virtual void Reset(nsIChannel* aChannel, nsILoadGroup* aLoadGroup);
    1:   virtual void ResetToURI(nsIURI *aURI, nsILoadGroup *aLoadGroup,
    1:                           nsIPrincipal* aPrincipal);
    1: 
    1:   virtual nsresult StartDocumentLoad(const char* aCommand, nsIChannel* channel,
    1:                                      nsILoadGroup* aLoadGroup,
    1:                                      nsISupports* aContainer,
    1:                                      nsIStreamListener **aDocListener,
    1:                                      PRBool aReset = PR_TRUE,
    1:                                      nsIContentSink* aSink = nsnull);
    1: 
    1:   virtual void EndLoad();
    1: 
    1:   // nsIDOMXMLDocument
    1:   NS_DECL_NSIDOMXMLDOCUMENT
    1: 
    1:   virtual nsresult Init();
    1: 
    1:   virtual nsresult Clone(nsINodeInfo *aNodeInfo, nsINode **aResult) const;
    1: 
    1: protected:
    1:   // mChannelIsPending indicates whether we're currently asynchronously loading
    1:   // data from mChannel (via document.load() or normal load).  It's set to true
    1:   // when we first find out about the channel (StartDocumentLoad) and set to
    1:   // false in EndLoad or if ResetToURI() is called.  In the latter case our
    1:   // mChannel is also cancelled.  Note that if this member is true, mChannel
    1:   // cannot be null.
    1:   PRPackedBool mChannelIsPending;
    1:   PRPackedBool mAsync;
    1:   PRPackedBool mLoopingForSyncLoad;
    1: };
    1: 
    1: 
    1: #endif // nsXMLDocument_h___

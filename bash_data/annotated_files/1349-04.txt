   1: /* -*- Mode: C++; tab-width: 20; indent-tabs-mode: nil; c-basic-offset: 4 -*-
   1:  * ***** BEGIN LICENSE BLOCK *****
   1:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
   1:  *
   1:  * The contents of this file are subject to the Mozilla Public License Version
   1:  * 1.1 (the "License"); you may not use this file except in compliance with
   1:  * the License. You may obtain a copy of the License at
   1:  * http://www.mozilla.org/MPL/
   1:  *
   1:  * Software distributed under the License is distributed on an "AS IS" basis,
   1:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   1:  * for the specific language governing rights and limitations under the
   1:  * License.
   1:  *
   1:  * The Original Code is Oracle Corporation code.
   1:  *
   1:  * The Initial Developer of the Original Code is Oracle Corporation.
   1:  * Portions created by the Initial Developer are Copyright (C) 2005
   1:  * the Initial Developer. All Rights Reserved.
   1:  *
   1:  * Contributor(s):
   1:  *   Stuart Parmenter <pavlov@pavlov.net>
   1:  *
   1:  * Alternatively, the contents of this file may be used under the terms of
   1:  * either the GNU General Public License Version 2 or later (the "GPL"), or
   1:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   1:  * in which case the provisions of the GPL or the LGPL are applicable instead
   1:  * of those above. If you wish to allow use of your version of this file only
   1:  * under the terms of either the GPL or the LGPL, and not to allow others to
   1:  * use your version of this file under the terms of the MPL, indicate your
   1:  * decision by deleting the provisions above and replace them with the notice
   1:  * and other provisions required by the GPL or the LGPL. If you do not delete
   1:  * the provisions above, a recipient may use your version of this file under
   1:  * the terms of any one of the MPL, the GPL or the LGPL.
   1:  *
   1:  * ***** END LICENSE BLOCK ***** */
   1: 
1349: #include "prmem.h"
1349: 
   1: #include "gfxImageSurface.h"
   1: 
   1: #include "cairo.h"
   1: 
   1: gfxImageSurface::gfxImageSurface(const gfxIntSize& size, gfxImageFormat format) :
   1:     mSize(size), mFormat(format)
   1: {
1349:     mStride = ComputeStride();
1349: 
1349:     if (!CheckSurfaceSize(size))
1349:         return;
1349: 
1349:     mData = (unsigned char *) malloc(mSize.height * mStride);
1349:     if (!mData)
1349:         return;
1349: 
   1:     mOwnsData = PR_TRUE;
   1: 
   1:     cairo_surface_t *surface =
   1:         cairo_image_surface_create_for_data((unsigned char*)mData,
   1:                                             (cairo_format_t)format,
   1:                                             mSize.width,
   1:                                             mSize.height,
1349:                                             mStride);
   1:     Init(surface);
   1: }
   1: 
   1: gfxImageSurface::gfxImageSurface(cairo_surface_t *csurf)
   1: {
   1:     mSize.width = cairo_image_surface_get_width(csurf);
   1:     mSize.height = cairo_image_surface_get_height(csurf);
   1:     mData = cairo_image_surface_get_data(csurf);
   1:     mFormat = (gfxImageFormat) cairo_image_surface_get_format(csurf);
   1:     mOwnsData = PR_FALSE;
   1:     mStride = cairo_image_surface_get_stride(csurf);
   1: 
   1:     Init(csurf, PR_TRUE);
   1: }
   1: 
   1: gfxImageSurface::~gfxImageSurface()
   1: {
1349:     if (!mSurfaceValid)
1349:         return;
1349: 
1349:     if (mOwnsData) {
1349:         free(mData);
1349:         mData = nsnull;
1349:     }
   1: }
   1: 
   1: long
   1: gfxImageSurface::ComputeStride() const
   1: {
   1:     long stride;
   1: 
   1:     if (mFormat == ImageFormatARGB32)
   1:         stride = mSize.width * 4;
   1:     else if (mFormat == ImageFormatRGB24)
   1:         stride = mSize.width * 4;
   1:     else if (mFormat == ImageFormatA8)
   1:         stride = mSize.width;
   1:     else if (mFormat == ImageFormatA1) {
   1:         stride = (mSize.width + 7) / 8;
   1:     } else {
   1:         NS_WARNING("Unknown format specified to gfxImageSurface!");
   1:         stride = mSize.width * 4;
   1:     }
   1: 
   1:     stride = ((stride + 3) / 4) * 4;
   1: 
   1:     return stride;
   1: }

15751: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
15751: /* vim:set ts=2 sw=2 sts=2 et cindent: */
15751: /* ***** BEGIN LICENSE BLOCK *****
15751:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
15751:  *
15751:  * The contents of this file are subject to the Mozilla Public License Version
15751:  * 1.1 (the "License"); you may not use this file except in compliance with
15751:  * the License. You may obtain a copy of the License at
15751:  * http://www.mozilla.org/MPL/
15751:  *
15751:  * Software distributed under the License is distributed on an "AS IS" basis,
15751:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
15751:  * for the specific language governing rights and limitations under the
15751:  * License.
15751:  *
15751:  * The Original Code is Mozilla code.
15751:  *
15751:  * The Initial Developer of the Original Code is the Mozilla Corporation.
15751:  * Portions created by the Initial Developer are Copyright (C) 2007
15751:  * the Initial Developer. All Rights Reserved.
15751:  *
15751:  * Contributor(s):
15751:  *  Chris Double <chris.double@double.co.nz>
15751:  *
15751:  * Alternatively, the contents of this file may be used under the terms of
15751:  * either the GNU General Public License Version 2 or later (the "GPL"), or
15751:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
15751:  * in which case the provisions of the GPL or the LGPL are applicable instead
15751:  * of those above. If you wish to allow use of your version of this file only
15751:  * under the terms of either the GPL or the LGPL, and not to allow others to
15751:  * use your version of this file under the terms of the MPL, indicate your
15751:  * decision by deleting the provisions above and replace them with the notice
15751:  * and other provisions required by the GPL or the LGPL. If you do not delete
15751:  * the provisions above, a recipient may use your version of this file under
15751:  * the terms of any one of the MPL, the GPL or the LGPL.
15751:  *
15751:  * ***** END LICENSE BLOCK ***** */
15751: 
15751: #include "nsIDOMHTMLMediaElement.idl"
15751: 
15751: /**
15751:  * The nsIDOMHTMLVideoElement interface is the interface to a HTML
15751:  * <video> element.
15751:  *
15751:  * For more information on this interface, please see
15751:  * http://www.whatwg.org/specs/web-apps/current-work/#video
15751:  *
15751:  * @status UNDER_DEVELOPMENT
15751:  */
15751: 
89079: [scriptable, uuid(2274055b-8b3a-4a5a-8d72-5d5aea07021a)]
15751: interface nsIDOMHTMLVideoElement : nsIDOMHTMLMediaElement
15751: {
15751:            attribute long width; 
15751:            attribute long height;
15751:   readonly attribute unsigned long videoWidth;
15751:   readonly attribute unsigned long videoHeight;
29590:            attribute DOMString poster;
63611:            
63611:   // A count of the number of video frames that have demuxed from the media
63611:   // resource. If we were playing perfectly, we'd be able to paint this many
63611:   // frames.
63611:   readonly attribute unsigned long mozParsedFrames;
63611: 
63611:   // A count of the number of frames that have been decoded. We may drop
63611:   // frames if the decode is taking too much time.
63611:   readonly attribute unsigned long mozDecodedFrames;
63611: 
63611:   // A count of the number of frames that have been presented to the rendering
63611:   // pipeline. We may drop frames if they arrive late at the renderer.
63611:   readonly attribute unsigned long mozPresentedFrames;
63611: 
63612:   // Number of presented frames which were painted on screen.
63612:   readonly attribute unsigned long mozPaintedFrames;
63612: 
63612:   // Time which the last painted video frame was late by, in seconds.
63612:   readonly attribute double mozFrameDelay;
15751: };
15751: 

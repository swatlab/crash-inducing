33486: /* vim: se cin sw=2 ts=2 et : */
33486: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
33486:  *
33486:  * ***** BEGIN LICENSE BLOCK *****
33486:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
33486:  *
33486:  * The contents of this file are subject to the Mozilla Public License Version
33486:  * 1.1 (the "License"); you may not use this file except in compliance with
33486:  * the License. You may obtain a copy of the License at
33486:  * http://www.mozilla.org/MPL/
33486:  *
33486:  * Software distributed under the License is distributed on an "AS IS" basis,
33486:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
33486:  * for the specific language governing rights and limitations under the
33486:  * License.
33486:  *
33486:  * The Original Code is mozilla.org code.
33486:  *
33486:  * The Initial Developer of the Original Code is
33486:  * Mozilla Foundation.
33486:  * Portions created by the Initial Developer are Copyright (C) 2009
33486:  * the Initial Developer. All Rights Reserved.
33486:  *
33486:  * Contributor(s):
33486:  *   Rob Arnold <tellrob@gmail.com>
33486:  *
33486:  * Alternatively, the contents of this file may be used under the terms of
33486:  * either the GNU General Public License Version 2 or later (the "GPL"), or
33486:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
33486:  * in which case the provisions of the GPL or the LGPL are applicable instead
33486:  * of those above. If you wish to allow use of your version of this file only
33486:  * under the terms of either the GPL or the LGPL, and not to allow others to
33486:  * use your version of this file under the terms of the MPL, indicate your
33486:  * decision by deleting the provisions above and replace them with the notice
33486:  * and other provisions required by the GPL or the LGPL. If you do not delete
33486:  * the provisions above, a recipient may use your version of this file under
33486:  * the terms of any one of the MPL, the GPL or the LGPL.
33486:  *
33486:  * ***** END LICENSE BLOCK ***** */
33486: 
33486: #ifndef __mozilla_widget_TaskbarPreview_h__
33486: #define __mozilla_widget_TaskbarPreview_h__
33486: 
33486: #if MOZ_WINSDK_TARGETVER >= MOZ_NTDDI_WIN7
33486: 
33486: #include <windows.h>
33486: #include <shobjidl.h>
33486: 
33486: #include <nsITaskbarPreview.h>
33486: #include <nsAutoPtr.h>
33486: #include <nsString.h>
33486: #include <nsWeakPtr.h>
33486: #include <nsIDocShell.h>
33486: #include "WindowHook.h"
33486: 
33486: namespace mozilla {
33486: namespace widget {
33486: 
33486: class TaskbarPreview : public nsITaskbarPreview
33486: {
33486: public:
33486:   TaskbarPreview(ITaskbarList4 *aTaskbar, nsITaskbarPreviewController *aController, HWND aHWND, nsIDocShell *aShell);
33486:   virtual ~TaskbarPreview();
33486: 
33486:   NS_DECL_NSITASKBARPREVIEW
33486: 
33486: protected:
33486:   // Called to update ITaskbarList4 dependent properties
33486:   virtual nsresult UpdateTaskbarProperties();
33486: 
33486:   // Invoked when the preview is made visible
33486:   virtual nsresult Enable();
33486:   // Invoked when the preview is made invisible
33486:   virtual nsresult Disable();
33486: 
33486:   // Detaches this preview from the nsWindow instance it's tied to
41139:   virtual void DetachFromNSWindow();
33486: 
33486:   // Marks this preview as being active
33486:   virtual nsresult ShowActive(PRBool active) = 0;
33486:   // Gets a reference to the window used to handle the preview messages
33486:   virtual HWND& PreviewWindow() = 0;
33486: 
33486:   // Window procedure for the PreviewWindow (hooked for window previews)
33486:   virtual LRESULT WndProc(UINT nMsg, WPARAM wParam, LPARAM lParam);
33486: 
33486:   // Returns whether or not the taskbar icon has been created for mWnd The
33486:   // ITaskbarList4 API requires that we wait until the icon has been created
33486:   // before we can call its methods.
33486:   PRBool CanMakeTaskbarCalls();
33486: 
33486:   // Gets the WindowHook for the nsWindow
33486:   WindowHook &GetWindowHook();
33486: 
33486:   // Enables/disables custom drawing for the given window
33486:   static void EnableCustomDrawing(HWND aHWND, PRBool aEnable);
33486: 
33486:   // MSCOM Taskbar interface
33486:   nsRefPtr<ITaskbarList4> mTaskbar;
33486:   // Controller for this preview
33486:   nsCOMPtr<nsITaskbarPreviewController> mController;
33486:   // The HWND to the nsWindow that this object previews
33486:   HWND                    mWnd;
33486:   // Whether or not this preview is visible
33486:   PRBool                  mVisible;
33486: 
33486: private:
33486:   // Called when the tooltip should be updated
33486:   nsresult UpdateTooltip();
33486: 
33486:   // Requests the controller to draw into a canvas of the given width and
33486:   // height. The resulting bitmap is sent to the DWM to display.
33486:   void DrawBitmap(PRUint32 width, PRUint32 height, PRBool isPreview);
33486: 
33486:   // WindowHook procedure for hooking mWnd
33486:   static PRBool MainWindowHook(void *aContext,
33486:                                HWND hWnd, UINT nMsg,
33486:                                WPARAM wParam, LPARAM lParam,
33486:                                LRESULT *aResult);
33486: 
33486:   // Docshell corresponding to the <window> the nsWindow contains
33486:   nsWeakPtr               mDocShell;
33486:   nsString                mTooltip;
33486: 
33486:   // The preview currently marked as active in the taskbar. nsnull if no
33486:   // preview is active (some other window is).
33486:   static TaskbarPreview  *sActivePreview;
33486: };
33486: 
33486: } // namespace widget
33486: } // namespace mozilla
33486: 
33486: #endif // MOZ_WINSDK_TARGETVER >= MOZ_NTDDI_WIN7
33486: 
33486: #endif /* __mozilla_widget_TaskbarPreview_h__ */
33486: 
33486: 

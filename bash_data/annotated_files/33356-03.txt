    1: /* ***** BEGIN LICENSE BLOCK *****
    1:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
    1:  *
    1:  * The contents of this file are subject to the Mozilla Public License Version
    1:  * 1.1 (the "License"); you may not use this file except in compliance with
    1:  * the License. You may obtain a copy of the License at
    1:  * http://www.mozilla.org/MPL/
    1:  *
    1:  * Software distributed under the License is distributed on an "AS IS" basis,
    1:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
    1:  * for the specific language governing rights and limitations under the
    1:  * License.
    1:  *
    1:  * The Original Code is mozilla.org code.
    1:  *
    1:  * The Initial Developer of the Original Code is
    1:  * Netscape Communications Corporation.
    1:  * Portions created by the Initial Developer are Copyright (C) 1998
    1:  * the Initial Developer. All Rights Reserved.
    1:  *
    1:  * Contributor(s):
    1:  *
    1:  * Alternatively, the contents of this file may be used under the terms of
    1:  * either of the GNU General Public License Version 2 or later (the "GPL"),
    1:  * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
    1:  * in which case the provisions of the GPL or the LGPL are applicable instead
    1:  * of those above. If you wish to allow use of your version of this file only
    1:  * under the terms of either the GPL or the LGPL, and not to allow others to
    1:  * use your version of this file under the terms of the MPL, indicate your
    1:  * decision by deleting the provisions above and replace them with the notice
    1:  * and other provisions required by the GPL or the LGPL. If you do not delete
    1:  * the provisions above, a recipient may use your version of this file under
    1:  * the terms of any one of the MPL, the GPL or the LGPL.
    1:  *
    1:  * ***** END LICENSE BLOCK ***** */
    1: 
    1: /** 
    1:   Styles for old GFX form widgets
    1:  **/ 
    1:  
    1: 
    1: @namespace url(http://www.w3.org/1999/xhtml); /* set default namespace to HTML */
    1: @namespace xul url(http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul);
    1: 
    1: *|*::-moz-fieldset-content {
    1:   display: block;
    1:   height: 100%;   /* Need this so percentage heights of kids work right */
    1: }
    1: 
    1: /* miscellaneous form elements */
    1: 
24550: fieldset > legend {
    1:   padding-left: 2px;
    1:   padding-right: 2px;
    1:   border: none;
30867:   position: static;
30867:   float: none;
30867:   width: -moz-fit-content;
30867:   min-width: 0;
30867:   max-width: none;
30867:   height: auto;
30867:   min-height: 0;
30867:   max-height: none;
13093:   white-space: nowrap;
    1: }
    1: 
24580: legend {
24580:   display: block;
24580: }
24580: 
    1: fieldset {
    1:   display: block;
    1:   margin-left: 2px;
    1:   margin-right: 2px;
    1:   padding: 0.35em 0.625em 0.75em;
    1:   border: 2px groove ThreeDFace;
    1: }
    1: 
    1: label {
    1:   cursor: default;
    1: }
    1: 
    1: /* default inputs, text inputs, and selects */
    1: 
    1: /* Note: Values in nsNativeTheme IsWidgetStyled function 
    1:    need to match textfield background/border values here */
    1: 
    1: input {
    1:   -moz-appearance: textfield;
    1:   /* The sum of border-top, border-bottom, padding-top, padding-bottom
    1:      must be the same here, for buttons, and for <select> (including its
    1:      internal padding magic) */
    1:   padding: 1px 0 1px 0;
    1:   border: 2px inset ThreeDFace;
    1:   background-color: -moz-Field;
    1:   color: -moz-FieldText;
    1:   font: -moz-field;
 6046:   text-rendering: optimizeLegibility;
    1:   line-height: normal !important;
    1:   text-align: start;
    1:   text-transform: none;
    1:   word-spacing: normal;
    1:   letter-spacing: normal;
    1:   cursor: text;
    1:   -moz-binding: url("chrome://global/content/platformHTMLBindings.xml#inputFields");
    1:   text-indent: 0;
    1:   -moz-user-select: text;
15268:   text-shadow: none;
    1: }
    1: 
    1: input > .anonymous-div {
16556:   word-wrap: normal !important;
28519:   /* Make the line-height equal to the available height */
28519:   line-height: -moz-block-height;
    1: }
    1: 
    1: textarea {
    1:   margin: 1px 0 1px 0;
    1:   border: 2px inset ThreeDFace;
    1:   background-color: -moz-Field;
    1:   color: -moz-FieldText;
    1:   font: medium -moz-fixed;
 6046:   text-rendering: optimizeLegibility;
    1:   text-align: start;
    1:   text-transform: none;
    1:   word-spacing: normal;
    1:   letter-spacing: normal;
    1:   vertical-align: text-bottom;
    1:   cursor: text;
    1:   -moz-binding: url("chrome://global/content/platformHTMLBindings.xml#textAreas");
 1191:   -moz-appearance: textfield-multiline;
    1:   text-indent: 0;
    1:   -moz-user-select: text;
15268:   text-shadow: none;
20548:   word-wrap: break-word;
    1: }
    1: 
    1: textarea > scrollbar {
    1:   cursor: default;
    1: }
    1: 
    1: textarea > .anonymous-div,
    1: input > .anonymous-div {
33356:   white-space: pre;
    1:   overflow: auto;
    1:   border: 0px !important;
    1:   /* The 1px horizontal padding is for parity with Win/IE */
    1:   padding: 0px 1px;
    1:   margin: 0px;
    1:   /* XXXldb I'm not sure if we really want the 'text-decoration: inherit',
    1:      but it's needed to make 'text-decoration' "work" on text inputs. */
    1:   text-decoration: inherit;
 1520:   ime-mode: inherit;
    1: }
    1: 
33356: textarea > .anonymous-div.wrap,
33356: input > .anonymous-div.wrap {
33356:   white-space: pre-wrap;
33356: }
33356: textarea > .anonymous-div.inherit-overflow,
33356: input > .anonymous-div.inherit-overflow {
33356:   overflow: inherit;
33356: }
33356: 
 2896: input:-moz-read-write,
 2896: textarea:-moz-read-write {
 2896:   -moz-user-modify: read-write !important;
 2896: }
 2896: 
    1: select {
    1:   margin: 0;
 6608:   border-color: ThreeDFace;
23858:   background-color: -moz-Combobox;
23858:   color: -moz-ComboboxText;
    1:   font: -moz-list;
    1:   line-height: normal !important;
    1:   white-space: nowrap !important;
16556:   word-wrap: normal !important;
    1:   text-align: start; 
    1:   cursor: default;
    1:   -moz-box-sizing: border-box;
    1:   -moz-user-select: none;
    1:   -moz-appearance: menulist;
 6608:   border-width: 2px;
 6608:   border-style: inset;
    1:   text-indent: 0;
    1:   overflow: -moz-hidden-unscrollable;
15268:   text-shadow: none;
    1: }
    1: 
    1: /* Need the "select[size][multiple]" selector to override the settings on
    1:    'select[size="1"]', eg if one has <select size="1" multiple> */
    1:    
    1: select[size],
    1: select[multiple],
    1: select[size][multiple] {
    1:   /* Different alignment and padding for listbox vs combobox */
23858:   background-color: -moz-Field;
23858:   color: -moz-FieldText;
    1:   vertical-align: text-bottom;
    1:   padding: 1px 0 1px 0;
    1:   -moz-appearance: listbox;
    1: }
    1: 
    1: select[size="0"],
    1: select[size="1"] {
    1:   /* Except this is not a listbox */
23858:   background-color: -moz-Combobox;
23858:   color: -moz-ComboboxText;
    1:   vertical-align: baseline;
    1:   padding: 0;
    1:   -moz-appearance: menulist;
    1: }
    1: 
    1: select > input[type="button"] {
    1:   width: 12px;
    1:   height: 12px;
    1:   white-space: nowrap;
    1:   position: static !important;
    1:   background-image: url("arrow.gif") !important;
    1:   background-repeat: no-repeat !important;
    1:   background-position: center !important;
    1:   -moz-appearance: menulist-button;
    1: 
    1:   /* Make sure to size correctly if the combobox has a non-auto height. */
    1:   height: 100% ! important;
    1:   -moz-box-sizing: border-box ! important;
    1: 
    1:   /*
    1:     Make sure to align properly with the display frame.  Note that we
    1:     want the baseline of the combobox to match the baseline of the
    1:     display frame, so the dropmarker is what gets the vertical-align.
    1:   */
    1:   vertical-align: top !important;
    1: }
    1: 
    1: select > input[type="button"]:active {
    1:   background-image: url("arrowd.gif") !important;
    1: }
    1: 
    1: select:empty {
12046:   width: 2.5em;
    1: }
    1: 
    1: *|*::-moz-display-comboboxcontrol-frame {
    1:   overflow: -moz-hidden-unscrollable;
    1:   /* This top/bottom padding plus the combobox top/bottom border need to
    1:      add up to the top/bottom borderpadding of text inputs and buttons */ 
    1:   padding-top: 1px;
    1:   padding-bottom: 1px;
    1:   -moz-padding-start: 4px;
    1:   -moz-padding-end: 0;
    1:   color: inherit;
    1:   white-space: nowrap;
    1:   text-align: inherit;
    1:   -moz-user-select: none;
    1:   /* Make sure to size correctly if the combobox has a non-auto height. */
    1:   height: 100% ! important;
    1:   -moz-box-sizing: border-box ! important;
    1: }
    1: 
    1: select::-moz-scrolled-content {
    1:   display: block !important;
    1: }
    1: 
    1: option {
    1:   display: block;
    1:   float: none !important;
    1:   position: static !important;
    1:   min-height: 1em;
    1:   line-height: normal !important;
    1:   -moz-user-select: none;
    1:   text-indent: 0;
 8566:   white-space: nowrap !important;
16556:   word-wrap: normal !important;
    1: }
    1: 
    1: select > option {
    1:   padding-top : 0;
    1:   padding-bottom: 0;
    1:   -moz-padding-start: 3px;
    1:   -moz-padding-end: 5px;
    1: }
    1: 
    1: option:checked {
10620:   background-color: -moz-html-cellhighlight !important;
10620:   color: -moz-html-cellhighlighttext !important;
10360: }
10360: 
10360: select:focus > option:checked,
10360: select:focus > optgroup > option:checked {
    1:   background-color: Highlight ! important;
    1:   color: HighlightText ! important;
    1: }
    1: 
    1: optgroup {
    1:   display: block;
    1:   float: none !important;
    1:   position: static !important;
    1:   font: -moz-list;
    1:   line-height: normal !important;
    1:   font-style: italic;
    1:   font-weight: bold;
    1:   font-size: inherit;
    1:   -moz-user-select: none;
    1:   text-indent: 0;
 8566:   white-space: nowrap !important;
16556:   word-wrap: normal !important;
    1: }
    1: 
    1: optgroup > option {
    1:   -moz-padding-start: 20px;
    1:   font-style: normal;
    1:   font-weight: normal;
    1: }
    1: 
    1: optgroup:before {
    1:   display: block;
    1:   content: attr(label);
    1: }
    1: 
    1: *|*::-moz-dropdown-list {
    1:   z-index: 2147483647;
    1:   background-color: inherit;
    1:   -moz-user-select: none;
    1:   position: static !important;
    1:   float: none !important;
    1: 
    1:   /*
    1:    * We can't change the padding here, because that would affect our
    1:    * intrinsic width, since we scroll.  But at the same time, we want
    1:    * to make sure that our left border+padding matches the left
    1:    * border+padding of a combobox so that our scrollbar will line up
    1:    * with the dropmarker.  So set our left border to 2px.
    1:    */
    1:   border: 1px outset black !important;
    1:   border-left-width: 2px ! important;
    1: } 
    1: 
    1: input[disabled],
    1: textarea[disabled],
    1: option[disabled],
    1: optgroup[disabled],
    1: select[disabled] {
    1:   -moz-user-input: disabled;
    1:   -moz-user-focus: ignore;
    1:   color: GrayText;
    1:   background-color: ThreeDFace;
    1:   cursor: inherit;
    1: }
    1: 
    1: option[disabled],
    1: optgroup[disabled] {
    1:   background-color: transparent;
    1: }
    1: 
    1: /* hidden inputs */
    1: input[type="hidden"] {
    1:   -moz-appearance: none;
29065:   display: none !important;
    1:   padding: 0;
    1:   border: 0;
    1:   cursor: auto;
    1:   -moz-user-focus: ignore;
    1:   -moz-binding: none;
    1: }
    1: 
    1: /* image buttons */
    1: input[type="image"] {
    1:   -moz-appearance: none;
    1:   padding: 0;
    1:   border: none;
    1:   background-color: transparent;
    1:   font-family: sans-serif;
    1:   font-size: small;
    1:   cursor: pointer;
    1:   -moz-binding: none;
    1: }
    1: 
    1: input[type="image"][disabled] {
    1:   cursor: inherit;
    1: }
    1: 
    1: input[type="image"]:focus {
    1:   /* Don't specify the outline-color, we should always use initial value. */
    1:   outline: 1px dotted;
    1: }
    1: 
    1: /* file selector */
    1: input[type="file"] {
    1:   -moz-appearance: none;
    1:   white-space: nowrap;
    1:   cursor: default;
    1:   -moz-binding: none;
    1: 
    1:   padding: 0 !important;
    1:   border-style: none !important;
    1: }
    1: 
 7033: input[type="file"] > input[type="text"] {
    1:   border-color: inherit;
    1:   background-color: inherit;
    1:   color: inherit;
    1:   font-size: inherit;
    1:   letter-spacing: inherit;
    1: }
    1: 
    1: /* button part of file selector */
    1: input[type="file"] > input[type="button"] {
    1:   height: inherit;
    1:   font-size: inherit;
    1:   letter-spacing: inherit;
    1: }
    1: 
    1: /* radio buttons */
    1: input[type="radio"] {
21220:   -moz-appearance: radio;
    1:   margin: 3px 3px 0px 5px;
    1:   -moz-border-radius: 100% !important;
    1: }
    1: 
    1: /* check boxes */
    1: input[type="checkbox"] {
21220:   -moz-appearance: checkbox;
    1:   margin: 3px 3px 3px 4px;
    1:   -moz-border-radius: 0 !important;
    1: }
    1: 
    1: /* common features of radio buttons and check boxes */
    1: 
26885: /* NOTE: The width, height, border-width, and padding here must all
26885:    add up the way nsFormControlFrame::GetIntrinsic(Width|Height)
26885:    expects them to, or they will not come out with total width equal
26885:    to total height on sites that set their 'width' or 'height' to 'auto'.
26885:    (Should we maybe set !important on width and height, then?)  */
    1: input[type="radio"],
    1: input[type="checkbox"] {
26885:   -moz-box-sizing: border-box;
26885:   width: 13px;
26885:   height: 13px;
26885:   cursor: default;
26885:   padding: 0 !important;
26885:   -moz-binding: none;
    1:   /* same colors as |input| rule, but |!important| this time. */
    1:   background-color: -moz-Field ! important;
    1:   color: -moz-FieldText ! important;
    1:   border: 2px inset ThreeDFace ! important;
    1: }
    1: 
    1: input[type="radio"][disabled],
    1: input[type="radio"][disabled]:active,
    1: input[type="radio"][disabled]:hover,
    1: input[type="radio"][disabled]:hover:active,
    1: input[type="checkbox"][disabled],
    1: input[type="checkbox"][disabled]:active,
    1: input[type="checkbox"][disabled]:hover,
    1: input[type="checkbox"][disabled]:hover:active {
    1:   padding: 1px;
    1:   border: 1px inset ThreeDShadow ! important;
    1:   /* same as above, but !important */
    1:   color: GrayText ! important;
    1:   background-color: ThreeDFace ! important;
    1:   cursor: inherit; 
    1: }
    1: 
    1: input[type="checkbox"]:focus,
    1: input[type="radio"]:focus {
    1:   border-style: groove !important;
    1: }
    1: 
    1: input[type="checkbox"]:hover:active,
    1: input[type="radio"]:hover:active {
    1:   background-color: ThreeDFace ! important;
    1:   border-style: inset !important;
    1: }
    1: 
    1: /* buttons */
    1: 
    1: /* Note: Values in nsNativeTheme IsWidgetStyled function 
    1:    need to match button background/border values here */
    1: 
    1: button, 
    1: input[type="reset"],
    1: input[type="button"],
    1: input[type="submit"] { 
    1:   -moz-appearance: button;
    1:   /* The sum of border-top, border-bottom, padding-top, padding-bottom
    1:      must be the same here, for text inputs, and for <select>.  For
    1:      buttons, make sure to include the -moz-focus-inner border/padding. */
    1:   padding: 0px 6px 0px 6px;
    1:   border: 2px outset ButtonFace;
    1:   background-color: ButtonFace;
    1:   color: ButtonText; 
    1:   font: -moz-button;
    1:   line-height: normal !important;
    1:   white-space: pre;
    1:   cursor: default;
    1:   -moz-box-sizing: border-box;
    1:   -moz-user-select: none;
    1:   -moz-binding: none;
    1:   text-align: center;
15268:   text-shadow: none;
    1: }
    1: 
    1: button {
    1:   /* Buttons should lay out like "normal" html, mostly */
11547:   white-space: inherit;
    1:   text-indent: 0;
    1: }
    1: 
    1: *|*::-moz-button-content {
    1:   display: block;
    1: }
    1: 
10754: button:hover,
10754: input[type="reset"]:hover,
10754: input[type="button"]:hover,
10754: input[type="submit"]:hover {
10754:   background-color: -moz-buttonhoverface;
10754:   color: -moz-buttonhovertext;
10754: }
10754: 
    1: button:active:hover,
    1: input[type="reset"]:active:hover,
    1: input[type="button"]:active:hover,
    1: input[type="submit"]:active:hover {
    1:   padding: 0px 5px 0px 7px;
    1:   border-style: inset;
10754:   background-color: ButtonFace;
10754:   color: ButtonText;
    1: }
    1: 
    1: button::-moz-focus-inner,
    1: input[type="reset"]::-moz-focus-inner,
    1: input[type="button"]::-moz-focus-inner,
    1: input[type="submit"]::-moz-focus-inner,
    1: input[type="file"] > input[type="button"]::-moz-focus-inner {
    1:   padding: 0px 2px 0px 2px;
    1:   border: 1px dotted transparent;
    1: }
    1: 
    1: button:focus::-moz-focus-inner,
    1: input[type="reset"]:focus::-moz-focus-inner,
    1: input[type="button"]:focus::-moz-focus-inner,
    1: input[type="submit"]:focus::-moz-focus-inner,
    1: input[type="file"] > input[type="button"]:focus::-moz-focus-inner {
    1:   border-color: ButtonText;
    1: }
    1: 
    1: button[disabled]:active, button[disabled],
    1: input[type="reset"][disabled]:active,
    1: input[type="reset"][disabled],
    1: input[type="button"][disabled]:active,
    1: input[type="button"][disabled],
    1: select[disabled] > input[type="button"],
    1: select[disabled] > input[type="button"]:active,
    1: input[type="submit"][disabled]:active,
    1: input[type="submit"][disabled] {
    1:   /* The sum of border-top, border-bottom, padding-top, padding-bottom
    1:      must be the same here and for text inputs */
 6480:   padding: 0px 6px 0px 6px;
 6480:   border: 2px outset ButtonFace;
    1:   color: GrayText;
    1:   cursor: inherit; 
    1: }
    1: 
    1:  /*
    1:   * Make form controls inherit 'unicode-bidi' transparently as required by
    1:   *  their various anonymous descendants and pseudo-elements:
    1:   *
    1:   * <textarea> and <input type="text">:
    1:   *  inherit into the XULScroll frame with class 'anonymous-div' which is a
    1:   *  child of the text control.
    1:   *
    1:   * Buttons (either <button>, <input type="submit">, <input type="button">
    1:   *          or <input type="reset">)
    1:   *  inherit into the ':-moz-button-content' pseudo-element.
    1:   *
    1:   * <select>:
    1:   *  inherit into the ':-moz-display-comboboxcontrol-frame' pseudo-element and
    1:   *  the <optgroup>'s ':before' pseudo-element, which is where the label of
    1:   *  the <optgroup> gets displayed. The <option>s don't use anonymous boxes,
    1:   *  so they need no special rules.
    1:   */
    1: textarea > .anonymous-div,
    1: input > .anonymous-div,
    1: *|*::-moz-button-content,
    1: *|*::-moz-display-comboboxcontrol-frame,
    1: optgroup:before {
    1:   unicode-bidi: inherit;
    1: }
    1: 
    1:  /*
    1:   * Force the text control child of file input controls to have left-to-right
    1:   * directionality. Otherwise filenames containing right-to-left characters
    1:   * will be reordered with chaotic results.
    1:   */
    1: input[type="file"] > input[type="text"] {
    1:   direction: ltr !important;
    1:   text-align: inherit;
    1: }
    1: 
    1: @media print {
    1:   input, textarea, select, button {
    1:     -moz-user-input: none !important;
    1:   }
    1: 
    1:   input[type="file"] { height: 2em; }
    1: }
    1: 
  469: %if OSARCH==OS2
    1: input {
    1:   font: medium serif; font-family: inherit
    1: }
    1: 
    1: select {
    1:   font: medium serif; font-family: inherit
    1: }
    1: 
    1: optgroup {
    1:   font: medium serif; font-family: inherit
    1: }
    1: 
    1: input[type="reset"],
    1: input[type="button"],
    1: input[type="submit"] { 
    1:   font: medium serif; font-family: inherit
    1: }
    1: 
    1: %endif

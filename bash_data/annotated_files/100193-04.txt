 88393: /* Any copyright is dedicated to the Public Domain.
 88393:    http://creativecommons.org/publicdomain/zero/1.0/ */
 88393: "use strict";
 88393: 
 88393: let tabEvents = "";
 88393: 
 88393: function test() {
 88393:   if (!isTiltEnabled()) {
 88393:     info("Skipping notifications test because Tilt isn't enabled.");
 88393:     return;
 88393:   }
 88393:   if (!isWebGLSupported()) {
 88393:     info("Skipping notifications test because WebGL isn't supported.");
 88393:     return;
 88393:   }
 88393: 
 88393:   requestLongerTimeout(10);
 88393:   waitForExplicitFinish();
 88393: 
 88393:   createTab(function() {
100193:     Services.obs.addObserver(finalize, DESTROYED, false);
 88393:     Services.obs.addObserver(obs_INITIALIZING, INITIALIZING, false);
 88393:     Services.obs.addObserver(obs_INITIALIZED, INITIALIZED, false);
 88393:     Services.obs.addObserver(obs_DESTROYING, DESTROYING, false);
 88393:     Services.obs.addObserver(obs_BEFORE_DESTROYED, BEFORE_DESTROYED, false);
 88393:     Services.obs.addObserver(obs_DESTROYED, DESTROYED, false);
 88393: 
 88393:     info("Starting up the Tilt notifications test.");
100193:     createTilt({}, false, function suddenDeath()
100193:     {
100193:       info("Tilt could not be initialized properly.");
100193:       cleanup();
100193:     });
 88393:   });
 88393: }
 88393: 
 88393: function obs_INITIALIZING() {
 88393:   info("Handling the INITIALIZING notification.");
 88393:   tabEvents += "INITIALIZING;";
 88393: }
 88393: 
 88393: function obs_INITIALIZED() {
 88393:   info("Handling the INITIALIZED notification.");
 88393:   tabEvents += "INITIALIZED;";
 88393: 
 88393:   Tilt.destroy(Tilt.currentWindowId, true);
 88393: }
 88393: 
 88393: function obs_DESTROYING() {
 88393:   info("Handling the DESTROYING( notification.");
 88393:   tabEvents += "DESTROYING;";
 88393: }
 88393: 
 88393: function obs_BEFORE_DESTROYED() {
 88393:   info("Handling the BEFORE_DESTROYED notification.");
 88393:   tabEvents += "BEFORE_DESTROYED;";
 88393: }
 88393: 
 88393: function obs_DESTROYED() {
 88393:   info("Handling the DESTROYED notification.");
 88393:   tabEvents += "DESTROYED;";
 88393: }
 88393: 
100193: function finalize() {
100193:   if (!tabEvents) {
100193:     return;
100193:   }
 88393: 
 88393:   is(tabEvents, "INITIALIZING;INITIALIZED;DESTROYING;BEFORE_DESTROYED;DESTROYED;",
 88393:     "The notifications weren't fired in the correct order.");
 88393: 
100193:   cleanup();
100193: }
 88393: 
100193: function cleanup() {
100193:   info("Cleaning up the notifications test.");
100193: 
100193:   Services.obs.removeObserver(finalize, DESTROYED);
100193:   Services.obs.removeObserver(obs_INITIALIZING, INITIALIZING);
100193:   Services.obs.removeObserver(obs_INITIALIZED, INITIALIZED);
100193:   Services.obs.removeObserver(obs_DESTROYING, DESTROYING);
100193:   Services.obs.removeObserver(obs_BEFORE_DESTROYED, BEFORE_DESTROYED);
100193:   Services.obs.removeObserver(obs_DESTROYED, DESTROYED);
 88393: 
 88393:   gBrowser.removeCurrentTab();
 88393:   finish();
 88393: }

89509: # This Source Code Form is subject to the terms of the Mozilla Public
89509: # License, v. 2.0. If a copy of the MPL was not distributed with this file,
89509: # You can obtain one at http://mozilla.org/MPL/2.0/.
    1: 
    1: DEPTH     = ../..
    1: topsrcdir = @top_srcdir@
    1: srcdir    = @srcdir@
    1: VPATH     = @srcdir@
    1: 
    1: include $(DEPTH)/config/autoconf.mk
    1: 
    1: include $(topsrcdir)/rdf/util/src/objs.mk
    1: include $(topsrcdir)/intl/unicharutil/util/objs.mk
    1: 
    1: MODULE = libxul
    1: LIBRARY_NAME = xul
    1: FORCE_SHARED_LIB = 1
    1: MOZILLA_INTERNAL_API = 1
    1: 
12447: ifeq ($(MOZ_WIDGET_TOOLKIT),cocoa)
    1: # This is going to be a framework named "XUL", not an ordinary library named
    1: # "libxul.dylib"
    1: LIBRARY_NAME=XUL
 4802: # Setting MAKE_FRAMEWORK makes DLL_PREFIX and DLL_SUFFIX be ignored when
 4802: # setting SHARED_LIBRARY; we need to leave DLL_PREFIX and DLL_SUFFIX
 4802: # as-is so that dependencies of the form -ltracemalloc still work.
 4802: MAKE_FRAMEWORK=1
    1: endif
    1: 
68511: VPATH += $(topsrcdir)/build/
68511: CPPSRCS += $(STDCXX_COMPAT)
    1: 
    1: ifeq ($(OS_ARCH)_$(GNU_CC),WINNT_)
    1: CPPSRCS += dlldeps-xul.cpp
    1: endif
    1: 
    1: ifeq ($(OS_ARCH),OS2)
    1: CPPSRCS += dlldeps-xul.cpp
    1: endif
    1: 
67874: ifneq (,$(MOZ_ENABLE_GTK2))
67874: DEFINES += -DMOZ_ENABLE_GTK2
67874: endif
67874: 
    1: SHARED_LIBRARY_LIBS += \
    1:   $(DEPTH)/toolkit/xre/$(LIB_PREFIX)xulapp_s.$(LIB_SUFFIX) \
    1:   $(NULL)
    1: 
    1: SHARED_LIBRARY_LIBS += \
    1:   $(foreach component,$(COMPONENT_LIBS),$(DEPTH)/staticlib/components/$(LIB_PREFIX)$(component).$(LIB_SUFFIX)) \
    1:   $(foreach lib,$(STATIC_LIBS),$(DEPTH)/staticlib/$(LIB_PREFIX)$(lib).$(LIB_SUFFIX)) \
    1:   $(NULL)
    1: 
82439: CPPSRCS += \
82439:   nsStaticXULComponents.cpp \
82439:   $(NULL)
82439: 
82439: ifeq ($(OS_ARCH),WINNT)
82439: CPPSRCS += \
82439:   nsDllMain.cpp \
82439:   $(NULL)
82439: endif
82439: 
82439: ifeq ($(OS_ARCH)_$(GNU_CC),WINNT_)
82439: CPPSRCS += \
82439:   nsGFXDeps.cpp \
82439:   $(NULL)
82439: 
82439: RCINCLUDE = xulrunner.rc
82439: 
82439: ifndef MOZ_NATIVE_ZLIB
82439: CPPSRCS += dlldeps-zlib.cpp
82439: endif
82439: 
86545: LOCAL_INCLUDES += -I$(topsrcdir)/widget/windows
82439: LOCAL_INCLUDES += -I$(topsrcdir)/xpcom/base
82439: endif
82439: 
82439: ifneq (,$(filter WINNT OS2,$(OS_ARCH)))
82439: DEFINES += -DZLIB_DLL=1
82439: endif
82439: 
82439: ifeq ($(OS_ARCH),OS2)
82439: 
82439: CPPSRCS += \
82439:   nsGFXDeps.cpp \
82439:   $(NULL)
82439: 
82439: ifndef MOZ_NATIVE_ZLIB
82439: CPPSRCS += dlldeps-zlib.cpp
82439: endif
82439: 
82439: RESFILE = xulrunos2.res
86545: RCFLAGS += -i $(topsrcdir)/widget/os2
82439: 
86545: LOCAL_INCLUDES += -I$(topsrcdir)/widget/os2
82439: LOCAL_INCLUDES += -I$(topsrcdir)/xpcom/base
82439: endif
82439: 
82439: # dependent libraries
82439: STATIC_LIBS += \
82439:   jsipc_s \
82439:   domipc_s \
82439:   domplugins_s \
82439:   mozipc_s \
82439:   mozipdlgen_s \
82439:   ipcshell_s \
82439:   gfx2d \
82439:   gfxipc_s \
82439:   hal_s \
82439:   $(NULL)
82439: 
84149: ifdef MOZ_B2G_RIL #{
84149: STATIC_LIBS += mozril_s
84149: endif #}
84149: 
82439: ifdef MOZ_IPDL_TESTS
82439: STATIC_LIBS += ipdlunittest_s
82439: endif
82439: 
82439: ifeq (Linux,$(OS_ARCH))
82439: ifneq (Android,$(OS_TARGET))
82439: OS_LIBS += -lrt
82439: endif
82439: endif
82439: 
82439: STATIC_LIBS += \
82439:   xpcom_core \
82439:   ucvutil_s \
82439:   chromium_s \
84205:   snappy_s \
82439:   $(NULL)
82439: 
82439: # component libraries
82439: COMPONENT_LIBS += \
82439:   necko \
82439:   uconv \
82439:   i18n \
82439:   chardet \
82439:   jar$(VERSION_NUMBER) \
82439:   startupcache \
82439:   pref \
82439:   htmlpars \
82439:   imglib2 \
82439:   gkgfx \
82439:   gklayout \
82439:   docshell \
82439:   embedcomponents \
82439:   webbrwsr \
82439:   nsappshell \
82439:   txmgr \
82439:   commandlines \
82439:   toolkitcomps \
82439:   pipboot \
82439:   pipnss \
82439:   appcomps \
82439:   jsreflect \
82439:   composer \
82439:   telemetry \
89580:   jsinspector \
82439:   jsdebugger \
82439:   storagecomps \
82439:   rdf \
82439:   windowds \
82439:   $(NULL)
82439: 
82439: ifdef BUILD_CTYPES
82439: COMPONENT_LIBS += \
82439:   jsctypes \
82439:   $(NULL)
82439: endif
82439: 
82439: COMPONENT_LIBS += \
82439:   jsperf \
82439:   gkplugin \
82439:   $(NULL)
82439: 
82439: ifdef MOZ_XUL
82439: ifdef MOZ_ENABLE_GTK2
82439: COMPONENT_LIBS += \
82439:   unixproxy \
82439:   $(NULL)
82439: endif
82439: endif
82439: 
82439: ifneq (,$(filter cocoa,$(MOZ_WIDGET_TOOLKIT)))
82439: COMPONENT_LIBS += \
82439:   osxproxy \
82439:   $(NULL)
82439: endif
82439: 
82439: ifdef MOZ_XUL
82439: ifeq (qt,$(MOZ_WIDGET_TOOLKIT))
82439: COMPONENT_LIBS += \
82439:         unixproxy \
82439:         $(NULL)
82439: endif
82439: endif
82439: 
82439: ifneq (,$(filter windows,$(MOZ_WIDGET_TOOLKIT)))
82439: COMPONENT_LIBS += \
82439:   windowsproxy \
82439:   $(NULL)
82439: endif
82439: 
82439: ifdef MOZ_JSDEBUGGER
82439: DEFINES += -DMOZ_JSDEBUGGER
82439: COMPONENT_LIBS += \
82439:   jsd \
82439:   $(NULL)
82439: endif
82439: 
82439: ifdef MOZ_PREF_EXTENSIONS
82439: DEFINES += -DMOZ_PREF_EXTENSIONS
82439: COMPONENT_LIBS += \
82439:   autoconfig \
82439:   $(NULL)
82439: endif
82439: 
82439: ifdef MOZ_AUTH_EXTENSION
82439: COMPONENT_LIBS += auth
82439: DEFINES += -DMOZ_AUTH_EXTENSION
82439: endif
82439: 
82439: ifdef MOZ_PERMISSIONS
82439: COMPONENT_LIBS += cookie permissions
82439: DEFINES += -DMOZ_PERMISSIONS
82439: endif
82439: 
82439: ifdef MOZ_UNIVERSALCHARDET
82439: COMPONENT_LIBS += universalchardet
82439: DEFINES += -DMOZ_UNIVERSALCHARDET
82439: endif
82439: 
82440: ifeq (,$(filter android gonk qt os2 cocoa windows,$(MOZ_WIDGET_TOOLKIT)))
82439: ifdef MOZ_XUL
82439: COMPONENT_LIBS += fileview
82439: DEFINES += -DMOZ_FILEVIEW
82439: endif
82439: endif
82439: 
82439: ifdef MOZ_PLACES
82439: COMPONENT_LIBS += \
82439: 	places \
82439: 	$(NULL)
82439: endif
82439: 
82439: ifdef MOZ_XUL
82439: COMPONENT_LIBS += \
82439: 	tkautocomplete \
82439: 	satchel \
82439: 	pippki \
82439: 	$(NULL)
82439: endif
82439: 
82439: ifdef MOZ_ENABLE_GTK2
82439: COMPONENT_LIBS += widget_gtk2
82439: endif
82439: 
82439: ifdef MOZ_ENABLE_GTK2
82439: ifdef MOZ_X11
82439: STATIC_LIBS += gtkxtbin
82439: endif
82439: endif
82439: 
82439: # Platform-specific icon channel stuff - supported mostly-everywhere
82439: ifneq (,$(filter windows os2 mac cocoa gtk2 qt android,$(MOZ_WIDGET_TOOLKIT)))
82439: DEFINES += -DICON_DECODER
82439: COMPONENT_LIBS += imgicon
82439: endif
82439: 
82439: ifeq ($(MOZ_WIDGET_TOOLKIT),android)
82439: COMPONENT_LIBS += widget_android
84013: STATIC_LIBS += skia_npapi
82439: endif
82439: 
82440: ifeq ($(MOZ_WIDGET_TOOLKIT),gonk)
82440: COMPONENT_LIBS += widget_gonk
82440: endif
82440: 
82466: STATIC_LIBS += thebes gl ycbcr
82439: 
92206: ifdef MOZ_ENABLE_PROFILER_SPS
82850: COMPONENT_LIBS += profiler
92206: endif
82439: 
82439: ifeq (windows,$(MOZ_WIDGET_TOOLKIT))
86546: COMPONENT_LIBS += widget_windows
82439: endif
82439: ifeq (os2,$(MOZ_WIDGET_TOOLKIT))
82439: COMPONENT_LIBS += wdgtos2
82439: endif
82439: ifeq (cocoa,$(MOZ_WIDGET_TOOLKIT))
82439: COMPONENT_LIBS += widget_mac
82439: endif
82439: ifeq (qt,$(MOZ_WIDGET_TOOLKIT))
82439: COMPONENT_LIBS += widget_qt
82439: endif
82439: 
82439: ifdef ACCESSIBILITY
82439: COMPONENT_LIBS += accessibility
82439: endif
82439: 
82439: ifdef MOZ_ENABLE_XREMOTE
82439: COMPONENT_LIBS += remoteservice
82439: endif
82439: 
82439: ifdef MOZ_SPELLCHECK
82439: DEFINES += -DMOZ_SPELLCHECK
82439: COMPONENT_LIBS += spellchecker
82439: endif
82439: 
82439: ifdef MOZ_ZIPWRITER
82439: DEFINES += -DMOZ_ZIPWRITER
82439: COMPONENT_LIBS += zipwriter
82439: endif
82439: 
82439: COMPONENT_LIBS += services-crypto
82439: 
82439: ifdef MOZ_DEBUG
82439: ifdef ENABLE_TESTS
82439: COMPONENT_LIBS += gkdebug
82439: endif
82439: endif
82439: 
82439: ifdef MOZ_APP_COMPONENT_LIBS
82439: COMPONENT_LIBS += $(MOZ_APP_COMPONENT_LIBS)
82439: endif
82439: 
82439: ifeq ($(MOZ_WIDGET_TOOLKIT),cocoa)
82439: OS_LIBS += -framework OpenGL -lcups
82439: endif
82439: 
82439: EXTRA_DSO_LDOPTS += \
82439:   $(LIBS_DIR) \
82439:   $(JPEG_LIBS) \
82439:   $(PNG_LIBS) \
82439:   $(QCMS_LIBS) \
82439:   $(MOZ_JS_LIBS) \
82439:   $(NSS_LIBS) \
82439:   $(MOZ_CAIRO_LIBS) \
82439:   $(MOZ_HARFBUZZ_LIBS) \
82439:   $(MOZ_APP_EXTRA_LIBS) \
82439:   $(SQLITE_LIBS) \
82439:   $(NULL)
82439: 
84390: ifdef MOZ_GRAPHITE
84390: EXTRA_DSO_LDOPTS += $(MOZ_GRAPHITE_LIBS)
84390: endif
84390: 
82439: ifdef MOZ_NATIVE_ZLIB
82439: EXTRA_DSO_LDOPTS += $(ZLIB_LIBS)
82439: else
82439: EXTRA_DSO_LDOPTS += $(MOZ_ZLIB_LIBS)
82439: endif
82439: 
82439: ifdef MOZ_NATIVE_HUNSPELL
82439: EXTRA_DSO_LDOPTS += $(MOZ_HUNSPELL_LIBS)
82439: endif
82439: 
82439: ifdef MOZ_NATIVE_LIBEVENT
82439: EXTRA_DSO_LDOPTS += $(MOZ_LIBEVENT_LIBS)
82439: endif
82439: 
82439: ifdef MOZ_NATIVE_LIBVPX
82439: EXTRA_DSO_LDOPTS += $(MOZ_LIBVPX_LIBS)
82439: endif
82439: 
84612: EXTRA_DSO_LDOPTS += $(call EXPAND_LIBNAME_PATH,gkmedias,$(DIST)/lib) 
84612: 
82439: ifdef MOZ_SYDNEYAUDIO
82439: ifeq ($(OS_ARCH),Linux)
82439: EXTRA_DSO_LDOPTS += $(MOZ_ALSA_LIBS)
82439: endif
82439: endif
82439: 
82439: ifdef HAVE_CLOCK_MONOTONIC
82439: EXTRA_DSO_LDOPTS += $(REALTIME_LIBS)
82439: endif
82439: 
84535: ifdef MOZ_ENABLE_SKIA
82439: EXTRA_DSO_LDOPTS += $(MOZ_SKIA_LIBS)
82439: endif
82439: 
82439: ifeq (android,$(MOZ_WIDGET_TOOLKIT))
82439: OS_LIBS += -lGLESv2
82439: endif
    1: 
82440: ifeq (gonk,$(MOZ_WIDGET_TOOLKIT))
84431: OS_LIBS += \
84431:   -lui \
84431:   -lmedia \
85965:   -lhardware_legacy \
87730:   -lhardware \
88184:   -lutils \
89161:   -lcutils \
89161:   -lcamera_client \
89161:   -lbinder \
89499:   -lsensorservice \
84431:   $(NULL)
82440: endif
82440: 
    1: EXTRA_DEPS += \
    1:   $(topsrcdir)/intl/unicharutil/util/objs.mk \
81646:   $(topsrcdir)/rdf/util/src/objs.mk \
    1:   $(NULL)
    1: 
    1: CPPSRCS += \
    1:   $(INTL_UNICHARUTIL_UTIL_LCPPSRCS) \
81646:   $(RDF_UTIL_SRC_LCPPSRCS) \
    1:   $(NULL)
    1: 
    1: GARBAGE += \
    1:   $(INTL_UNICHARUTIL_UTIL_LCPPSRCS) \
    1:   $(wildcard *.$(OBJ_SUFFIX)) \
81646:   $(RDF_UTIL_SRC_LCPPSRCS) \
    1:   $(NULL)
    1: 
48377: LOCAL_INCLUDES += -I$(topsrcdir)/intl/unicharutil/util \
48377:   -I$(topsrcdir)/intl/unicharutil/src
 2997: 
69105: ifneq (,$(filter OS2 WINNT,$(OS_ARCH)))
 4238: SDK_LIBRARY = $(IMPORT_LIBRARY)
 4238: else
 4238: SDK_LIBRARY = $(SHARED_LIBRARY)
 4238: endif
 4238: 
82437: # See bug 653662 - some builders are hitting an internal size limit on
82437: # incremental builds. Disable incremental linking for debug builds on VC8 or
82437: # on 32-bit hosts.
82437: # See: http://social.msdn.microsoft.com/Forums/en-US/vcgeneral/thread/c34d5c37-ca4a-4580-9c7c-4379a8c76d1f/
69950: ifeq ($(OS_ARCH),WINNT)
82437: IS_32BIT_HOST := $(if $(filter AMD64,$(PROCESSOR_ARCHITECTURE) $(PROCESSOR_ARCHITEW6432)),,yes)
82437: ifneq (,$(or $(filter 1400,$(_MSC_VER)),$(IS_32BIT_HOST)))
69950: ifdef MOZ_DEBUG
69950: EXTRA_DSO_LDOPTS += -INCREMENTAL:NO
69950: endif
69950: endif
81014: endif
69950: 
 3944: EXTRA_DSO_LDOPTS += $(LIBS_DIR) $(EXTRA_DSO_LIBS)
    1: 
    1: DEFINES += -DIMPL_XREAPI
    1: 
38924: EXTRA_DSO_LDOPTS += $(NSPR_LIBS) $(MOZALLOC_LIB)
    1: 
12447: ifeq ($(MOZ_WIDGET_TOOLKIT),cocoa)
    1: CXXFLAGS += $(TK_CFLAGS)
38008: OS_LIBS += \
15326:   -framework SystemConfiguration \
    1:   -framework QuickTime \
    1:   -framework IOKit \
75028:   -F/System/Library/PrivateFrameworks -framework CoreUI \
    1:   $(TK_LIBS) \
    1:   $(NULL)
27527: endif
16300: 
27527: ifeq ($(OS_ARCH),Darwin)
21394: ifdef MOZ_SYDNEYAUDIO
86917: OS_LIBS += \
27527:   -framework Carbon \
16300:   -framework CoreAudio \
16300:   -framework AudioToolbox \
16300:   -framework AudioUnit \
72514:   -framework IOKit \
72514:   -framework Foundation \
72514:   -framework AppKit \
16300:   $(NULL)
16300: endif
    1: endif
    1: 
74483: ifneq (,$(filter NetBSD OpenBSD,$(OS_ARCH)))
69429: ifdef MOZ_SYDNEYAUDIO
69429: EXTRA_DSO_LDOPTS += -lossaudio
69429: endif
69429: endif
69429: 
38014: ifdef MOZ_PLATFORM_MAEMO
38014: EXTRA_DSO_LDOPTS += $(MOZ_PLATFORM_MAEMO_LIBS)
19109: endif
19109: 
35003: ifdef MOZ_ENABLE_LIBCONIC
35003: EXTRA_DSO_LDOPTS += $(LIBCONIC_LIBS)
35003: endif
35003: 
30616: ifdef MOZ_ENABLE_DBUS
63917: EXTRA_DSO_LDOPTS += $(MOZ_DBUS_GLIB_LIBS)
63917: endif
30616: 
 2504: ifeq (gtk2,$(MOZ_WIDGET_TOOLKIT))
25500: EXTRA_DSO_LDOPTS += $(XLDFLAGS) $(XLIBS) $(XEXT_LIBS) $(XCOMPOSITE_LIBS) $(MOZ_PANGO_LIBS) $(MOZ_GTK2_LIBS) $(XT_LIBS) -lgthread-2.0
    1: EXTRA_DSO_LDOPTS += $(FT2_LIBS)
    1: endif
    1: 
16759: ifeq (qt,$(MOZ_WIDGET_TOOLKIT))
19744: EXTRA_DSO_LDOPTS += $(XLDFLAGS) $(XLIBS) $(XT_LIBS) $(MOZ_QT_LIBS) -lgthread-2.0
39022: EXTRA_DSO_LDOPTS += $(FT2_LIBS) $(MOZ_PANGO_LIBS)
86545: EXTRA_DSO_LDOPTS += $(LIBXUL_DIST)/../widget/qt/faststartupqt/$(LIB_PREFIX)faststartupqt.$(LIB_SUFFIX)
16759: endif
16759: 
24104: ifdef MOZ_TREE_FREETYPE
57046: ifndef MOZ_TREE_CAIRO
24104: EXTRA_DSO_LDOPTS += $(FT2_LIBS)
24104: endif
57046: endif
24104: 
    1: ifdef MOZ_ENABLE_STARTUP_NOTIFICATION
    1: EXTRA_DSO_LDOPTS += $(MOZ_STARTUP_NOTIFICATION_LIBS)
    1: endif
    1: 
48830: ifdef MOZ_ENABLE_LIBPROXY
48830: EXTRA_DSO_LDOPTS += $(MOZ_LIBPROXY_LIBS)
48830: endif
48830: 
13348: ifeq ($(OS_ARCH),SunOS)
54304: ifdef GNU_CC
54304: EXTRA_DSO_LDOPTS += -lelf
54304: else
34466: EXTRA_DSO_LDOPTS += -lelf -ldemangle
13348: endif
54304: endif
13348: 
    1: ifeq ($(OS_ARCH),WINNT)
93527: OS_LIBS += $(call EXPAND_LIBNAME,shell32 ole32 version winspool comdlg32 imm32 msimg32 shlwapi psapi ws2_32 dbghelp rasapi32 rasdlg iphlpapi uxtheme setupapi secur32)
63467: ifdef MOZ_CRASHREPORTER
63467: OS_LIBS += $(call EXPAND_LIBNAME,wininet)
63467: endif
89333: ifdef ACCESSIBILITY
89333: OS_LIBS += $(call EXPAND_LIBNAME,oleacc)
89333: endif
86500: ifdef _MSC_VER
86500: OS_LIBS += $(call EXPAND_LIBNAME,delayimp)
86500: EXTRA_DSO_LDOPTS += \
87156:   -DELAYLOAD:gkmedias.dll \
90802:   -DELAYLOAD:psapi.dll \
90802:   -DELAYLOAD:dbghelp.dll \
86500:   -DELAYLOAD:rasapi32.dll \
86500:   -DELAYLOAD:rasdlg.dll \
86903:   -DELAYLOAD:comdlg32.dll \
86903:   -DELAYLOAD:winspool.drv \
90802:   -DELAYLOAD:secur32.dll \
86500:   $(NULL)
89552: ifdef ACCESSIBILITY
89552: EXTRA_DSO_LDOPTS += -DELAYLOAD:oleacc.dll
89552: endif
86500: endif
    1: endif # WINNT
12606: 
    1: ifdef MOZ_JPROF
    1: EXTRA_DSO_LDOPTS += -ljprof
    1: endif
    1: 
16759: ifdef MOZ_ENABLE_QT
38320: EXTRA_DSO_LDOPTS += $(MOZ_QT_LDFLAGS) $(XEXT_LIBS)
16759: endif
16759: 
34466: include $(topsrcdir)/config/rules.mk
34466: 
34466: export:: $(RDF_UTIL_SRC_CPPSRCS) $(INTL_UNICHARUTIL_UTIL_CPPSRCS)
34466: 	$(INSTALL) $^ .
34466: 
86545: # need widget/windows for resource.h (included from widget.rc)
82439: LOCAL_INCLUDES += \
82439:   -I$(topsrcdir)/config \
86545:   -I$(topsrcdir)/widget/windows \
82439:   $(NULL)
82439: 
82439: OS_LIBS += $(LIBICONV)
82439: 
82439: DEFINES += \
82439:   -D_IMPL_NS_COM \
82439:   -D_IMPL_NS_STRINGAPI \
82439:   -DEXPORT_XPT_API \
82439:   -DEXPORT_XPTC_API \
82439:   -D_IMPL_NS_GFX \
82439:   -D_IMPL_NS_WIDGET \
82439:   $(NULL)
82439: 
82439: ifeq ($(MOZ_WIDGET_TOOLKIT),windows)
82439: OS_LIBS += $(call EXPAND_LIBNAME,usp10 oleaut32)
82439: endif
34466: 
68434: ifeq ($(OS_ARCH),OpenBSD)
68434: # Needed by nsAuthGSSAPI
68434: EXTRA_DSO_LDOPTS += -lkrb5 -lcrypto
68434: endif
68434: 
52420: ifdef MOZ_DEBUG
52420: ifdef ENABLE_TESTS
52420: DEFINES += -DENABLE_LAYOUTDEBUG
52420: endif
52420: endif
84670: 
84670: ifeq (WINNT_1,$(OS_TARGET)_$(MOZ_PROFILE_USE))
84670: # Wrap linker to measure peak virtual memory usage.
84670: LD := $(PYTHON) $(topsrcdir)/build/link.py $(CURDIR)/linker-vsize $(LD)
84670: endif

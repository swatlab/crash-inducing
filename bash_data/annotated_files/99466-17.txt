58092: /* -*- Mode: C++; c-basic-offset: 2; indent-tabs-mode: nil; tab-width: 8 -*- */
58092: /* vim: set sw=4 ts=8 et tw=80 ft=cpp : */
98983: /* This Source Code Form is subject to the terms of the Mozilla Public
98983:  * License, v. 2.0. If a copy of the MPL was not distributed with this
98983:  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
58092: 
58092: #ifndef mozilla_dom_StorageParent_h
58092: #define mozilla_dom_StorageParent_h
58092: 
58092: #include "mozilla/dom/PStorageParent.h"
58092: #include "nsDOMStorage.h"
58092: 
58092: namespace mozilla {
58092: namespace dom {
58092: 
58092: class StorageConstructData;
58092: 
58092: class StorageParent : public PStorageParent
58092: {
58092: public:
58092:   StorageParent(const StorageConstructData& aData);
58092: 
58092: private:
58092:   bool RecvGetKeys(const bool& aCallerSecure, InfallibleTArray<nsString>* aKeys);
60073:   bool RecvGetLength(const bool& aCallerSecure, const bool& aSessionOnly,
60073:                      PRUint32* aLength, nsresult* rv);
60073:   bool RecvGetKey(const bool& aCallerSecure, const bool& aSessionOnly,
60073:                   const PRUint32& aIndex,nsString* aKey, nsresult* rv);
60073:   bool RecvGetValue(const bool& aCallerSecure, const bool& aSessionOnly,
60073:                     const nsString& aKey, StorageItem* aItem, nsresult* rv);
60073:   bool RecvSetValue(const bool& aCallerSecure, const bool& aSessionOnly,
60073:                     const nsString& aKey, const nsString& aData,
60073:                     nsString* aOldValue, nsresult* rv);
60073:   bool RecvRemoveValue(const bool& aCallerSecure, const bool& aSessionOnly,
60073:                        const nsString& aKey, nsString* aOldData, nsresult* rv);
60073:   bool RecvClear(const bool& aCallerSecure, const bool& aSessionOnly,
60073:                  PRInt32* aOldCount, nsresult* rv);
58092: 
79445:   bool RecvGetDBValue(const nsString& aKey, nsString* aValue, bool* aSecure,
58092:                       nsresult* rv);
58092:   bool RecvSetDBValue(const nsString& aKey, const nsString& aValue,
79445:                       const bool& aSecure, nsresult* rv);
79445:   bool RecvSetSecure(const nsString& aKey, const bool& aSecure, nsresult* rv);
58092: 
58092:   bool RecvInit(const bool& aUseDB,
58092:                 const bool& aCanUseChromePersist,
60073:                 const bool& aSessionOnly,
58092:                 const nsCString& aDomain,
58092:                 const nsCString& aScopeDBKey,
58092:                 const nsCString& aQuotaDomainDBKey,
58092:                 const nsCString& aQuotaETLDplus1DomainDBKey,
58092:                 const PRUint32& aStorageType);
58092: 
58092:   nsRefPtr<DOMStorageImpl> mStorage;
58092: };
58092: 
58092: }
58092: }
58092: 
58092: #endif

     1: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
     1:  *
 99778:  * This Source Code Form is subject to the terms of the Mozilla Public
 99778:  * License, v. 2.0. If a copy of the MPL was not distributed with this
 99778:  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
     1: 
 46998: #include "mozilla/ModuleUtils.h"
     1: 
     1: #include "nsNSSComponent.h"
     1: #include "nsSSLSocketProvider.h"
     1: #include "nsTLSSocketProvider.h"
     1: #include "nsKeygenHandler.h"
     1: 
     1: #include "nsSDR.h"
     1: 
     1: #include "nsPK11TokenDB.h"
     1: #include "nsPKCS11Slot.h"
     1: #include "nsNSSCertificate.h"
 56495: #include "nsNSSCertificateFakeTransport.h"
     1: #include "nsNSSCertificateDB.h"
     1: #include "nsNSSCertCache.h"
     1: #include "nsCMS.h"
     1: #ifdef MOZ_XUL
     1: #include "nsCertTree.h"
     1: #endif
     1: #include "nsCrypto.h"
     1: //For the NS_CRYPTO_CONTRACTID define
     1: #include "nsDOMCID.h"
     1: 
     1: #include "nsCMSSecureMessage.h"
     1: #include "nsCertPicker.h"
     1: #include "nsCURILoader.h"
     1: #include "nsICategoryManager.h"
     1: #include "nsCRLManager.h"
     1: #include "nsNTLMAuthModule.h"
     1: #include "nsStreamCipher.h"
     1: #include "nsKeyModule.h"
  5604: #include "nsDataSignatureVerifier.h"
  6598: #include "nsCertOverrideService.h"
  6886: #include "nsRandomGenerator.h"
  7054: #include "nsRecentBadCerts.h"
  8463: #include "nsSSLStatus.h"
 97210: #include "TransportSecurityInfo.h"
 56656: #include "NSSErrorsService.h"
 93035: #include "nsNSSVersion.h"
     1: 
 56495: #include "nsXULAppAPI.h"
 56495: #define NS_IS_PROCESS_DEFAULT                                                 \
 56495:     (GeckoProcessType_Default == XRE_GetProcessType())
 56495: 
 56495: #define NS_NSS_INSTANTIATE(ensureOperator, _InstanceClass)                    \
 56495:     PR_BEGIN_MACRO                                                            \
     1:         _InstanceClass * inst;                                                \
 47223:         inst = new _InstanceClass();                                          \
119832:         if (NULL == inst) {                                                   \
119832:             if (ensureOperator == nssLoadingComponent)                        \
119832:                 EnsureNSSInitialized(nssInitFailed);                          \
119832:             rv = NS_ERROR_OUT_OF_MEMORY;                                      \
119832:             return rv;                                                        \
119832:         }                                                                     \
     1:         NS_ADDREF(inst);                                                      \
     1:         rv = inst->QueryInterface(aIID, aResult);                             \
     1:         NS_RELEASE(inst);                                                     \
 56495:     PR_END_MACRO
     1: 
 56495: #define NS_NSS_INSTANTIATE_INIT(ensureOperator, _InstanceClass, _InitMethod)  \
 56495:     PR_BEGIN_MACRO                                                            \
     1:         _InstanceClass * inst;                                                \
 47223:         inst = new _InstanceClass();                                          \
119832:         if (NULL == inst) {                                                   \
119832:             if (ensureOperator == nssLoadingComponent)                        \
119832:                 EnsureNSSInitialized(nssInitFailed);                          \
119832:             rv = NS_ERROR_OUT_OF_MEMORY;                                      \
119832:             return rv;                                                        \
119832:         }                                                                     \
     1:         NS_ADDREF(inst);                                                      \
     1:         rv = inst->_InitMethod();                                             \
     1:         if(NS_SUCCEEDED(rv)) {                                                \
     1:             rv = inst->QueryInterface(aIID, aResult);                         \
     1:         }                                                                     \
     1:         NS_RELEASE(inst);                                                     \
 56495:    PR_END_MACRO
 56495: 
 56495: 
 56495: #define NS_NSS_GENERIC_FACTORY_CONSTRUCTOR(ensureOperator,                    \
 56495:                                            _InstanceClass)                    \
 56495:    NS_NSS_GENERIC_FACTORY_CONSTRUCTOR_BYPROCESS(ensureOperator,               \
 56495:                                                 _InstanceClass,               \
 56495:                                                 _InstanceClass)
 56495: 
 56495: // These two macros are ripped off from nsIGenericFactory.h and slightly
 56495: // modified.
 56495: #define NS_NSS_GENERIC_FACTORY_CONSTRUCTOR_BYPROCESS(ensureOperator,          \
 56495:                                                      _InstanceClassChrome,    \
 56495:                                                      _InstanceClassContent)   \
 56495: static nsresult                                                               \
 56495: _InstanceClassChrome##Constructor(nsISupports *aOuter, REFNSIID aIID,         \
 56495:                                   void **aResult)                             \
 56495: {                                                                             \
 56495:     nsresult rv;                                                              \
     1:                                                                               \
119832:     *aResult = NULL;                                                          \
119832:     if (NULL != aOuter) {                                                     \
 56495:         rv = NS_ERROR_NO_AGGREGATION;                                         \
 56495:         return rv;                                                            \
 56495:     }                                                                         \
 56495:                                                                               \
 56495:     if (!EnsureNSSInitialized(ensureOperator))                                \
 56495:         return NS_ERROR_FAILURE;                                              \
 56495:                                                                               \
 56495:     if (NS_IS_PROCESS_DEFAULT)                                                \
 56495:         NS_NSS_INSTANTIATE(ensureOperator, _InstanceClassChrome);             \
 56495:     else                                                                      \
 56495:         NS_NSS_INSTANTIATE(ensureOperator, _InstanceClassContent);            \
 56495:                                                                               \
 56495:     if (ensureOperator == nssLoadingComponent)                                \
 25625:     {                                                                         \
 25625:         if (NS_SUCCEEDED(rv))                                                 \
 25625:             EnsureNSSInitialized(nssInitSucceeded);                           \
 25625:         else                                                                  \
 25625:             EnsureNSSInitialized(nssInitFailed);                              \
 25625:     }                                                                         \
 25625:                                                                               \
     1:     return rv;                                                                \
 56495: }
 56495: 
 56495:  
 56495: #define NS_NSS_GENERIC_FACTORY_CONSTRUCTOR_INIT(ensureOperator,               \
 56495:                                                 _InstanceClass,               \
 56495:                                                 _InitMethod)                  \
 56495:     NS_NSS_GENERIC_FACTORY_CONSTRUCTOR_INIT_BYPROCESS(ensureOperator,         \
 56495:                                                       _InstanceClass,         \
 56495:                                                       _InstanceClass,         \
 56495:                                                       _InitMethod)
 56495: 
 56495: #define NS_NSS_GENERIC_FACTORY_CONSTRUCTOR_INIT_BYPROCESS(ensureOperator,     \
 56495:                                                 _InstanceClassChrome,         \
 56495:                                                 _InstanceClassContent,        \
 56495:                                                 _InitMethod)                  \
 56495: static nsresult                                                               \
 56495: _InstanceClassChrome##Constructor(nsISupports *aOuter, REFNSIID aIID,         \
 56495:                                   void **aResult)                             \
 56495: {                                                                             \
 56495:     nsresult rv;                                                              \
 56495:                                                                               \
119832:     *aResult = NULL;                                                          \
119832:     if (NULL != aOuter) {                                                     \
 56495:         rv = NS_ERROR_NO_AGGREGATION;                                         \
 56495:         return rv;                                                            \
     1:     }                                                                         \
 56495:                                                                               \
 56495:     if (!EnsureNSSInitialized(ensureOperator))                                \
 56495:         return NS_ERROR_FAILURE;                                              \
 56495:                                                                               \
 56495:     if (NS_IS_PROCESS_DEFAULT)                                                \
 56495:         NS_NSS_INSTANTIATE_INIT(ensureOperator,                               \
 56495:                                 _InstanceClassChrome,                         \
 56495:                                 _InitMethod);                                 \
 56495:     else                                                                      \
 56495:         NS_NSS_INSTANTIATE_INIT(ensureOperator,                               \
 56495:                                 _InstanceClassContent,                        \
 56495:                                 _InitMethod);                                 \
 56495:                                                                               \
 56495:     if (ensureOperator == nssLoadingComponent)                                \
 56495:     {                                                                         \
 56495:         if (NS_SUCCEEDED(rv))                                                 \
 56495:             EnsureNSSInitialized(nssInitSucceeded);                           \
 56495:         else                                                                  \
 56495:             EnsureNSSInitialized(nssInitFailed);                              \
 56495:     }                                                                         \
 56495:                                                                               \
 56495:     return rv;                                                                \
 56495: }
     1: 
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR_INIT(nssLoadingComponent, nsNSSComponent,
 56495:                                         Init)
     1: 
 97210: using namespace mozilla::psm;
 97210:   
 97210: namespace {
 97210: 
     1: // Use the special factory constructor for everything this module implements,
     1: // because all code could potentially require the NSS library.
     1: // Our factory constructor takes an additional boolean parameter.
 80486: // Only for the nsNSSComponent, set this to true.
 80486: // All other classes must have this set to false.
     1: 
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR(nssEnsure, nsSSLSocketProvider)
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR(nssEnsure, nsTLSSocketProvider)
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR(nssEnsure, nsSecretDecoderRing)
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR(nssEnsure, nsPK11TokenDB)
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR(nssEnsure, nsPKCS11ModuleDB)
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR_INIT(nssEnsure, PSMContentListener, init)
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR_BYPROCESS(nssEnsureOnChromeOnly,
 56495:                                              nsNSSCertificate,
 56495:                                              nsNSSCertificateFakeTransport)
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR(nssEnsure, nsNSSCertificateDB)
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR(nssEnsure, nsNSSCertCache)
     1: #ifdef MOZ_XUL
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR(nssEnsure, nsCertTree)
     1: #endif
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR(nssEnsure, nsCrypto)
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR(nssEnsure, nsPkcs11)
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR(nssEnsure, nsCMSSecureMessage)
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR(nssEnsure, nsCMSDecoder)
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR(nssEnsure, nsCMSEncoder)
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR(nssEnsure, nsCMSMessage)
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR(nssEnsure, nsCertPicker)
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR(nssEnsure, nsCRLManager)
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR_INIT(nssEnsure, nsNTLMAuthModule, InitTest)
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR(nssEnsure, nsCryptoHash)
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR(nssEnsure, nsCryptoHMAC)
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR(nssEnsure, nsStreamCipher)
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR(nssEnsure, nsKeyObject)
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR(nssEnsure, nsKeyObjectFactory)
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR(nssEnsure, nsDataSignatureVerifier)
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR_INIT(nssEnsure, nsCertOverrideService, Init)
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR(nssEnsure, nsRandomGenerator)
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR_INIT(nssEnsure, nsRecentBadCertsService, Init)
 56495: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR(nssEnsureOnChromeOnly, nsSSLStatus)
 97210: NS_NSS_GENERIC_FACTORY_CONSTRUCTOR(nssEnsureOnChromeOnly, TransportSecurityInfo)
     1: 
 56656: typedef mozilla::psm::NSSErrorsService NSSErrorsService;
 56656: NS_GENERIC_FACTORY_CONSTRUCTOR_INIT(NSSErrorsService, Init)
 93035: NS_GENERIC_FACTORY_CONSTRUCTOR(nsNSSVersion)
 56656: 
 46998: NS_DEFINE_NAMED_CID(NS_NSSCOMPONENT_CID);
 46998: NS_DEFINE_NAMED_CID(NS_SSLSOCKETPROVIDER_CID);
 46998: NS_DEFINE_NAMED_CID(NS_STARTTLSSOCKETPROVIDER_CID);
 46998: NS_DEFINE_NAMED_CID(NS_SDR_CID);
 46998: NS_DEFINE_NAMED_CID(NS_PK11TOKENDB_CID);
 46998: NS_DEFINE_NAMED_CID(NS_PKCS11MODULEDB_CID);
 46998: NS_DEFINE_NAMED_CID(NS_PSMCONTENTLISTEN_CID);
 46998: NS_DEFINE_NAMED_CID(NS_X509CERT_CID);
 46998: NS_DEFINE_NAMED_CID(NS_X509CERTDB_CID);
 46998: NS_DEFINE_NAMED_CID(NS_NSSCERTCACHE_CID);
 46998: NS_DEFINE_NAMED_CID(NS_FORMPROCESSOR_CID);
 46998: #ifdef MOZ_XUL
 46998: NS_DEFINE_NAMED_CID(NS_CERTTREE_CID);
 46998: #endif
 46998: NS_DEFINE_NAMED_CID(NS_PKCS11_CID);
 46998: NS_DEFINE_NAMED_CID(NS_CRYPTO_CID);
 46998: NS_DEFINE_NAMED_CID(NS_CMSSECUREMESSAGE_CID);
 46998: NS_DEFINE_NAMED_CID(NS_CMSDECODER_CID);
 46998: NS_DEFINE_NAMED_CID(NS_CMSENCODER_CID);
 46998: NS_DEFINE_NAMED_CID(NS_CMSMESSAGE_CID);
 46998: NS_DEFINE_NAMED_CID(NS_CRYPTO_HASH_CID);
 46998: NS_DEFINE_NAMED_CID(NS_CRYPTO_HMAC_CID);
 46998: NS_DEFINE_NAMED_CID(NS_CERT_PICKER_CID);
 46998: NS_DEFINE_NAMED_CID(NS_CRLMANAGER_CID);
 46998: NS_DEFINE_NAMED_CID(NS_NTLMAUTHMODULE_CID);
 46998: NS_DEFINE_NAMED_CID(NS_STREAMCIPHER_CID);
 46998: NS_DEFINE_NAMED_CID(NS_KEYMODULEOBJECT_CID);
 46998: NS_DEFINE_NAMED_CID(NS_KEYMODULEOBJECTFACTORY_CID);
 46998: NS_DEFINE_NAMED_CID(NS_DATASIGNATUREVERIFIER_CID);
 46998: NS_DEFINE_NAMED_CID(NS_CERTOVERRIDE_CID);
 46998: NS_DEFINE_NAMED_CID(NS_RANDOMGENERATOR_CID);
 46998: NS_DEFINE_NAMED_CID(NS_RECENTBADCERTS_CID);
 46998: NS_DEFINE_NAMED_CID(NS_SSLSTATUS_CID);
 97210: NS_DEFINE_NAMED_CID(TRANSPORTSECURITYINFO_CID);
 56656: NS_DEFINE_NAMED_CID(NS_NSSERRORSSERVICE_CID);
 93035: NS_DEFINE_NAMED_CID(NS_NSSVERSION_CID);
     1: 
 46998: static const mozilla::Module::CIDEntry kNSSCIDs[] = {
119832:   { &kNS_NSSCOMPONENT_CID, false, NULL, nsNSSComponentConstructor },
119832:   { &kNS_SSLSOCKETPROVIDER_CID, false, NULL, nsSSLSocketProviderConstructor },
119832:   { &kNS_STARTTLSSOCKETPROVIDER_CID, false, NULL, nsTLSSocketProviderConstructor },
119832:   { &kNS_SDR_CID, false, NULL, nsSecretDecoderRingConstructor },
119832:   { &kNS_PK11TOKENDB_CID, false, NULL, nsPK11TokenDBConstructor },
119832:   { &kNS_PKCS11MODULEDB_CID, false, NULL, nsPKCS11ModuleDBConstructor },
119832:   { &kNS_PSMCONTENTLISTEN_CID, false, NULL, PSMContentListenerConstructor },
119832:   { &kNS_X509CERT_CID, false, NULL, nsNSSCertificateConstructor },
119832:   { &kNS_X509CERTDB_CID, false, NULL, nsNSSCertificateDBConstructor },
119832:   { &kNS_NSSCERTCACHE_CID, false, NULL, nsNSSCertCacheConstructor },
119832:   { &kNS_FORMPROCESSOR_CID, false, NULL, nsKeygenFormProcessor::Create },
     1: #ifdef MOZ_XUL
119832:   { &kNS_CERTTREE_CID, false, NULL, nsCertTreeConstructor },
     1: #endif
119832:   { &kNS_PKCS11_CID, false, NULL, nsPkcs11Constructor },
119832:   { &kNS_CRYPTO_CID, false, NULL, nsCryptoConstructor },
119832:   { &kNS_CMSSECUREMESSAGE_CID, false, NULL, nsCMSSecureMessageConstructor },
119832:   { &kNS_CMSDECODER_CID, false, NULL, nsCMSDecoderConstructor },
119832:   { &kNS_CMSENCODER_CID, false, NULL, nsCMSEncoderConstructor },
119832:   { &kNS_CMSMESSAGE_CID, false, NULL, nsCMSMessageConstructor },
119832:   { &kNS_CRYPTO_HASH_CID, false, NULL, nsCryptoHashConstructor },
119832:   { &kNS_CRYPTO_HMAC_CID, false, NULL, nsCryptoHMACConstructor },
119832:   { &kNS_CERT_PICKER_CID, false, NULL, nsCertPickerConstructor },
119832:   { &kNS_CRLMANAGER_CID, false, NULL, nsCRLManagerConstructor },
119832:   { &kNS_NTLMAUTHMODULE_CID, false, NULL, nsNTLMAuthModuleConstructor },
119832:   { &kNS_STREAMCIPHER_CID, false, NULL, nsStreamCipherConstructor },
119832:   { &kNS_KEYMODULEOBJECT_CID, false, NULL, nsKeyObjectConstructor },
119832:   { &kNS_KEYMODULEOBJECTFACTORY_CID, false, NULL, nsKeyObjectFactoryConstructor },
119832:   { &kNS_DATASIGNATUREVERIFIER_CID, false, NULL, nsDataSignatureVerifierConstructor },
119832:   { &kNS_CERTOVERRIDE_CID, false, NULL, nsCertOverrideServiceConstructor },
119832:   { &kNS_RANDOMGENERATOR_CID, false, NULL, nsRandomGeneratorConstructor },
119832:   { &kNS_RECENTBADCERTS_CID, false, NULL, nsRecentBadCertsServiceConstructor },
119832:   { &kNS_SSLSTATUS_CID, false, NULL, nsSSLStatusConstructor },
119832:   { &kTRANSPORTSECURITYINFO_CID, false, NULL, TransportSecurityInfoConstructor },
119832:   { &kNS_NSSERRORSSERVICE_CID, false, NULL, NSSErrorsServiceConstructor },
119832:   { &kNS_NSSVERSION_CID, false, NULL, nsNSSVersionConstructor },
119832:   { NULL }
     1: };
     1: 
 46998: static const mozilla::Module::ContractIDEntry kNSSContracts[] = {
 46998:   { PSM_COMPONENT_CONTRACTID, &kNS_NSSCOMPONENT_CID },
 56656:   { NS_NSS_ERRORS_SERVICE_CONTRACTID, &kNS_NSSERRORSSERVICE_CID },
 93035:   { NS_NSSVERSION_CONTRACTID, &kNS_NSSVERSION_CID },
 46998:   { NS_SSLSOCKETPROVIDER_CONTRACTID, &kNS_SSLSOCKETPROVIDER_CID },
 46998:   { NS_STARTTLSSOCKETPROVIDER_CONTRACTID, &kNS_STARTTLSSOCKETPROVIDER_CID },
 46998:   { NS_SDR_CONTRACTID, &kNS_SDR_CID },
 46998:   { NS_PK11TOKENDB_CONTRACTID, &kNS_PK11TOKENDB_CID },
 46998:   { NS_PKCS11MODULEDB_CONTRACTID, &kNS_PKCS11MODULEDB_CID },
 46998:   { NS_PSMCONTENTLISTEN_CONTRACTID, &kNS_PSMCONTENTLISTEN_CID },
 46998:   { NS_X509CERTDB_CONTRACTID, &kNS_X509CERTDB_CID },
 46998:   { NS_NSSCERTCACHE_CONTRACTID, &kNS_NSSCERTCACHE_CID },
 46998:   { NS_FORMPROCESSOR_CONTRACTID, &kNS_FORMPROCESSOR_CID },
 46998: #ifdef MOZ_XUL
 46998:   { NS_CERTTREE_CONTRACTID, &kNS_CERTTREE_CID },
 46998: #endif
 46998:   { NS_PKCS11_CONTRACTID, &kNS_PKCS11_CID },
 46998:   { NS_CRYPTO_CONTRACTID, &kNS_CRYPTO_CID },
 46998:   { NS_CMSSECUREMESSAGE_CONTRACTID, &kNS_CMSSECUREMESSAGE_CID },
 46998:   { NS_CMSDECODER_CONTRACTID, &kNS_CMSDECODER_CID },
 46998:   { NS_CMSENCODER_CONTRACTID, &kNS_CMSENCODER_CID },
 46998:   { NS_CMSMESSAGE_CONTRACTID, &kNS_CMSMESSAGE_CID },
 46998:   { NS_CRYPTO_HASH_CONTRACTID, &kNS_CRYPTO_HASH_CID },
 46998:   { NS_CRYPTO_HMAC_CONTRACTID, &kNS_CRYPTO_HMAC_CID },
 46998:   { NS_CERT_PICKER_CONTRACTID, &kNS_CERT_PICKER_CID },
 46998:   { "@mozilla.org/uriloader/psm-external-content-listener;1", &kNS_PSMCONTENTLISTEN_CID },
 46998:   { NS_CRLMANAGER_CONTRACTID, &kNS_CRLMANAGER_CID },
 46998:   { NS_CRYPTO_FIPSINFO_SERVICE_CONTRACTID, &kNS_PKCS11MODULEDB_CID },
 46998:   { NS_NTLMAUTHMODULE_CONTRACTID, &kNS_NTLMAUTHMODULE_CID },
 46998:   { NS_STREAMCIPHER_CONTRACTID, &kNS_STREAMCIPHER_CID },
 46998:   { NS_KEYMODULEOBJECT_CONTRACTID, &kNS_KEYMODULEOBJECT_CID },
 46998:   { NS_KEYMODULEOBJECTFACTORY_CONTRACTID, &kNS_KEYMODULEOBJECTFACTORY_CID },
 46998:   { NS_DATASIGNATUREVERIFIER_CONTRACTID, &kNS_DATASIGNATUREVERIFIER_CID },
 46998:   { NS_CERTOVERRIDE_CONTRACTID, &kNS_CERTOVERRIDE_CID },
 46998:   { NS_RANDOMGENERATOR_CONTRACTID, &kNS_RANDOMGENERATOR_CID },
 46998:   { NS_RECENTBADCERTS_CONTRACTID, &kNS_RECENTBADCERTS_CID },
119832:   { NULL }
 46998: };
 46998: 
 46998: static const mozilla::Module::CategoryEntry kNSSCategories[] = {
 46998:   { NS_CONTENT_LISTENER_CATEGORYMANAGER_ENTRY, "application/x-x509-ca-cert", "@mozilla.org/uriloader/psm-external-content-listener;1" },
 46998:   { NS_CONTENT_LISTENER_CATEGORYMANAGER_ENTRY, "application/x-x509-server-cert", "@mozilla.org/uriloader/psm-external-content-listener;1" },
 46998:   { NS_CONTENT_LISTENER_CATEGORYMANAGER_ENTRY, "application/x-x509-user-cert", "@mozilla.org/uriloader/psm-external-content-listener;1" },
 46998:   { NS_CONTENT_LISTENER_CATEGORYMANAGER_ENTRY, "application/x-x509-email-cert", "@mozilla.org/uriloader/psm-external-content-listener;1" },
 46998:   { NS_CONTENT_LISTENER_CATEGORYMANAGER_ENTRY, "application/x-pkcs7-crl", "@mozilla.org/uriloader/psm-external-content-listener;1" },
 46998:   { NS_CONTENT_LISTENER_CATEGORYMANAGER_ENTRY, "application/x-x509-crl", "@mozilla.org/uriloader/psm-external-content-listener;1" },
 46998:   { NS_CONTENT_LISTENER_CATEGORYMANAGER_ENTRY, "application/pkix-crl", "@mozilla.org/uriloader/psm-external-content-listener;1" },
119832:   { NULL }
 46998: };
 46998: 
 46998: static const mozilla::Module kNSSModule = {
 46998:   mozilla::Module::kVersion,
 46998:   kNSSCIDs,
 46998:   kNSSContracts,
 46998:   kNSSCategories
 46998: };
 46998: 
 97210: } // unnamed namespace
 97210: 
 46998: NSMODULE_DEFN(NSS) = &kNSSModule;

16290: # ***** BEGIN LICENSE BLOCK *****
16290: # Version: MPL 1.1/GPL 2.0/LGPL 2.1
16290: #
16290: # The contents of this file are subject to the Mozilla Public License Version
16290: # 1.1 (the "License"); you may not use this file except in compliance with
16290: # the License. You may obtain a copy of the License at
16290: # http://www.mozilla.org/MPL/
16290: #
16290: # Software distributed under the License is distributed on an "AS IS" basis,
16290: # WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
16290: # for the specific language governing rights and limitations under the
16290: # License.
16290: #
16290: # The Original Code is Mozilla code.
16290: #
16290: # The Initial Developer of the Original Code is the Mozilla Corporation.
16290: # Portions created by the Initial Developer are Copyright (C) 2007
16290: # the Initial Developer. All Rights Reserved.
16290: #
16290: # Contributor(s):
16290: #  Chris Double <chris.double@double.co.nz>
16290: #
16290: # Alternatively, the contents of this file may be used under the terms of
16290: # either the GNU General Public License Version 2 or later (the "GPL"), or
16290: # the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
16290: # in which case the provisions of the GPL or the LGPL are applicable instead
16290: # of those above. If you wish to allow use of your version of this file only
16290: # under the terms of either the GPL or the LGPL, and not to allow others to
16290: # use your version of this file under the terms of the MPL, indicate your
16290: # decision by deleting the provisions above and replace them with the notice
16290: # and other provisions required by the GPL or the LGPL. If you do not delete
16290: # the provisions above, a recipient may use your version of this file under
16290: # the terms of any one of the MPL, the GPL or the LGPL.
16290: #
16290: # ***** END LICENSE BLOCK *****
16290: 
29586: DEPTH		= ../../..
16290: topsrcdir	= @top_srcdir@
16290: srcdir		= @srcdir@
16290: VPATH		= @srcdir@
29586: relativesrcdir	= content/media/test
16290: 
16290: include $(DEPTH)/config/autoconf.mk
16290: include $(topsrcdir)/config/rules.mk
16290: 
30147: # Media tests should be backend independent, i.e., not conditioned on
30147: # MOZ_OGG, MOZ_WAVE etc. (The only exception is the can_play_type tests,
30147: # which necessarily depend on the backend(s) configured.) As far as possible,
30147: # each test should work with any resource type. This makes it
30147: # easy to add new backends and reduces the amount of test duplication.
30147: 
30147: # For each supported backend, resources that can be played by that backend
30147: # should be added to the lists in manifest.js. Media tests that aren't
30147: # testing for a bug in handling a specific resource type should pick one of
30147: # the lists in manifest.js and run the test for each resource in the list
30147: # that is supported in the current build (the canPlayType API is useful
30147: # for this).
30147: 
30147: # To test whether a valid resource can simply be played through correctly,
30147: # and optionally that its metadata is read correctly, just
30147: # add it to gPlayTests in manifest.js. To test whether an invalid
30147: # resource correctly throws an error (and does not cause a crash or hang),
30147: # just add it to gErrorTests in manifest.js.
30147: 
30147: # To test for a specific bug in handling a specific resource type,
30147: # make the test first check canPlayType for the type, and if it's not
30147: # supported, just do ok(true, "Type not supported") and stop the test.
30147: 
22823: _TEST_FILES = \
42935: 		allowed.sjs \
22874: 		can_play_type_ogg.js \
22874: 		can_play_type_wave.js \
43339: 		can_play_type_webm.js \
33859: 		cancellable_request.sjs \
42935: 		dynamic_redirect.sjs \
82746: 		dynamic_resource.sjs \
42935: 		file_access_controls.html \
77176: 		fragment_play.js \
77176: 		fragment_noplay.js \
30146: 		manifest.js \
34207: 		reactivate_helper.html \
42935: 		redirect.sjs \
54200: 		referer.sjs \
30148: 		seek1.js \
30148: 		seek2.js \
30148: 		seek3.js \
30148: 		seek4.js \
30148: 		seek5.js \
30148: 		seek6.js \
30148: 		seek7.js \
30148: 		seek8.js \
30148: 		seek9.js \
34050: 		seek10.js \
42935: 		seek11.js \
61823: 		seek12.js \
61823: 		seek13.js \
62891: 		seekLies.sjs \
42935: 		test_access_control.html \
30150: 		test_audio1.html \
30150: 		test_audio2.html \
22823: 		test_autoplay.html \
57359: 		test_autoplay_contentEditable.html \
48906: 		test_buffered.html \
42935: 		test_bug448534.html \
42935: 		test_bug463162.xhtml \
42935: 		test_bug465498.html \
42935: 		test_bug493187.html \
42935: 		test_bug495145.html \
34136: 		test_bug495300.html \
80473: 		test_bug686942.html \
22874: 		test_can_play_type.html \
42935: 		test_closing_connections.html \
16290: 		test_constants.html \
16290: 		test_controls.html \
16290: 		test_currentTime.html \
32934: 		test_decode_error.html \
30146: 		test_decoder_disable.html \
84679: 		test_defaultMuted.html \
42935: 		test_delay_load.html \
42935: 		test_error_on_404.html \
55969: 		test_error_in_video_document.html \
42935: 		test_info_leak.html \
30146: 		test_load.html \
42935: 		test_load_candidates.html \
82746: 		test_load_same_resource.html \
48189: 		test_load_source.html \
82534: 		test_loop.html \
30146: 		test_media_selection.html \
32901: 		test_mozLoadFrom.html \
22823: 		test_networkState.html \
39558: 		test_new_audio.html \
22823: 		test_paused.html \
42935: 		test_paused_after_ended.html \
42935: 		test_play_events.html \
49183: 		test_play_events_2.html \
30147: 		test_playback.html \
30147: 		test_playback_errors.html \
75108:  		test_seekable1.html \
51544: 		test_preload_actions.html \
51544: 		test_preload_attribute.html \
42935: 		test_progress.html \
34207: 		test_reactivate.html \
22823: 		test_readyState.html \
42935: 		test_replay_metadata.html \
40132: 		test_seek.html \
22823: 		test_seek2.html \
62891: 		test_seekLies.html \
42935: 		test_seek_out_of_range.html \
42935: 		test_source.html \
42935: 		test_source_write.html \
42935: 		test_standalone.html \
42935: 		test_timeupdate_small_files.html \
22823: 		test_volume.html \
42935: 		test_video_to_canvas.html \
26837: 		use_large_cache.js \
51477: 		test_audiowrite.html \
22823: 		$(NULL)
22823: 
61642: # Don't run in suite
61642: ifndef MOZ_SUITE
61642: _TEST_FILES += test_play_twice.html
61642: else
61642: $(warning test_play_twice.html is disabled pending investigation. Bug 598252)
61642: endif
61642: 
42935: # These tests are disabled until we figure out random failures.
42935: # When these tests are fixed, we should also make them backend-independent.
33877: #		test_resume.html \
42935: # Bug 492821:
42935: #   test_videoDocumentTitle.html
42935: # Bug 493692:
50948: #   test_preload_suspend.html
51166: # Bug 567954 and Bug 574586:
51166: #   test_mixed_principals.html
42935: # Disabled since we don't play Wave files standalone, for now
42935: #		test_audioDocumentTitle.html
42935: 
43341: # sample files
30146: _TEST_FILES += \
30146: 		320x240.ogv \
31105: 		448636.ogv \
40132: 		audio-overhang.ogg \
50359: 		audio-gaps.ogg \
33447: 		beta-phrasebook.ogg \
32934: 		bogus.ogv \
31113: 		bug495129.ogv \
40132: 		bug495794.ogg \
30146: 		bug461281.ogg \
30146: 		bug482461.ogv \
62888: 		bug482461-theora.ogv \
33857: 		bug498380.ogv \
31110: 		bug498855-1.ogv \
31110: 		bug498855-2.ogv \
31110: 		bug498855-3.ogv \
31109: 		bug499519.ogv \
31111: 		bug500311.ogv \
31111: 		bug500311.ogv^headers^ \
31112: 		bug501279.ogg \
32932: 		bug504613.ogv \
31112: 		bug504644.ogv \
33412: 		bug504843.ogv \
31112: 		bug506094.ogv \
33256: 		bug516323.ogv \
50947: 		bug516323.indexed.ogv \
33825: 		bug520493.ogg \
33826: 		bug520500.ogg \
33856: 		bug520908.ogv \
33856: 		bug520908.ogv^headers^ \
34134: 		bug523816.ogv \
37973: 		bug533822.ogg \
40583: 		bug557094.ogv \
63854: 		bug556821.ogv \
49181: 		bug580982.webm \
55967: 		bug603918.webm \
55967: 		bug604067.webm \
33413: 		chain.ogv \
32938: 		dirac.ogg \
74885: 		multiple-bos.ogg \
54994: 		split.webm \
30146: 		seek.ogv \
43341: 		seek.webm \
48220: 		seek.yuv \
31597: 		short-video.ogv \
30146: 		small-shot.ogg \
30146: 		sound.ogg \
59468: 		spacestorm-1000Hz-100ms.ogg \
40132: 		video-overhang.ogg \
51477: 		file_a4_tone.ogg \
30146: 		$(NULL)
30146: 
30146: # Wave sample files
30146: _TEST_FILES += \
30146: 		big.wav \
32934: 		bogus.wav \
32934: 		r11025_msadpcm_c1.wav \
30146: 		r11025_s16_c1.wav \
30146: 		r11025_s16_c1_trailing.wav \
30146: 		r11025_u8_c1.wav \
30146: 		r11025_u8_c1_trunc.wav \
30146: 		r16000_u8_c1_list.wav \
64403: 		wavedata_u8.wav \
64403: 		wavedata_s16.wav \
68451: 		audio.wav \
30146: 		$(NULL)
30146: 
32934: # Other files
32934: _TEST_FILES += \
32934: 		bogus.duh \
32934: 		$(NULL)
32934: 
42935: # These tests contain backend-specific tests. Try to write backend
42935: # independent tests rather than adding to this list.
22823: ifdef MOZ_OGG
22823: _TEST_FILES += \
42935: 		test_can_play_type_ogg.html \
24775: 		test_contentDuration1.html \
24775: 		test_contentDuration2.html \
24775: 		test_contentDuration3.html \
24775: 		test_contentDuration4.html \
24775: 		test_contentDuration5.html \
24775: 		test_contentDuration6.html \
37543: 		test_contentDuration7.html \
24775: 		contentDuration1.sjs \
24775: 		contentDuration2.sjs \
24775: 		contentDuration3.sjs \
24775: 		contentDuration4.sjs \
24775: 		contentDuration5.sjs \
24775: 		contentDuration6.sjs \
37543: 		contentDuration7.sjs \
75108: 		noContentLength.sjs \
75108: 		test_seekable2.html \
75108: 		test_seekable3.html \
51477: 		test_a4_tone.html \
51477: 		file_audio_event_adopt_iframe.html \
51477: 		test_audio_event_adopt.html \
51477: 		test_framebuffer.html \
54200: 		test_referer.html \
22823: 		$(NULL)
22874: else
22874: _TEST_FILES += \
22874: 		test_can_play_type_no_ogg.html \
22874: 		$(NULL)
22823: endif
22823: 
43339: ifdef MOZ_WEBM
43339: _TEST_FILES += \
43339: 		test_can_play_type_webm.html \
43339: 		$(NULL)
43339: else
43339: _TEST_FILES += \
43339: 		test_can_play_type_no_webm.html \
43339: 		$(NULL)
43339: endif
43339: 
30146: ifdef MOZ_WAVE
30146: _TEST_FILES += \
30146: 		test_can_play_type_wave.html \
77176: 		test_fragment_play.html \
77176: 		test_fragment_noplay.html \
64403: 		test_wave_data_u8.html \
64403: 		test_wave_data_s16.html \
16290: 		$(NULL)
22874: else
22874: _TEST_FILES += \
22874: 		test_can_play_type_no_wave.html \
22874: 		$(NULL)
22823: endif
22823: 
16290: libs:: $(_TEST_FILES)
81471: 	$(INSTALL) $(foreach f,$^,"$f") $(DEPTH)/_tests/testing/mochitest/tests/$(relativesrcdir)

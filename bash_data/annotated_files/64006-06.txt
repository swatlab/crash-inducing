    1: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
    1: /* ***** BEGIN LICENSE BLOCK *****
    1:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
    1:  *
    1:  * The contents of this file are subject to the Mozilla Public License Version
    1:  * 1.1 (the "License"); you may not use this file except in compliance with
    1:  * the License. You may obtain a copy of the License at
    1:  * http://www.mozilla.org/MPL/
    1:  *
    1:  * Software distributed under the License is distributed on an "AS IS" basis,
    1:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
    1:  * for the specific language governing rights and limitations under the
    1:  * License.
    1:  *
    1:  * The Original Code is mozilla.org code.
    1:  *
    1:  * The Initial Developer of the Original Code is
    1:  * Netscape Communications Corporation.
    1:  * Portions created by the Initial Developer are Copyright (C) 1998
    1:  * the Initial Developer. All Rights Reserved.
    1:  *
    1:  * Contributor(s):
    1:  *   Aaron Leventhal (aaronl@netscape.com)
    1:  *   Kyle Yuan (kyle.yuan@sun.com)
    1:  *
    1:  * Alternatively, the contents of this file may be used under the terms of
    1:  * either of the GNU General Public License Version 2 or later (the "GPL"),
    1:  * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
    1:  * in which case the provisions of the GPL or the LGPL are applicable instead
    1:  * of those above. If you wish to allow use of your version of this file only
    1:  * under the terms of either the GPL or the LGPL, and not to allow others to
    1:  * use your version of this file under the terms of the MPL, indicate your
    1:  * decision by deleting the provisions above and replace them with the notice
    1:  * and other provisions required by the GPL or the LGPL. If you do not delete
    1:  * the provisions above, a recipient may use your version of this file under
    1:  * the terms of any one of the MPL, the GPL or the LGPL.
    1:  *
    1:  * ***** END LICENSE BLOCK ***** */
    1: 
    1: #ifndef _nsHTMLTextAccessible_H_
    1: #define _nsHTMLTextAccessible_H_
    1: 
    1: #include "nsTextAccessibleWrap.h"
    1: #include "nsAutoPtr.h"
 1768: #include "nsBaseWidgetAccessible.h"
    1: 
43504: /**
43504:  * Used for text nodes within HTML document.
43504:  */
    1: class nsHTMLTextAccessible : public nsTextAccessibleWrap
    1: {
    1: public:
43504:   nsHTMLTextAccessible(nsIContent *aContent, nsIWeakReference *aShell);
    1: 
34199:   // nsISupports
34199:   NS_DECL_ISUPPORTS_INHERITED
34199: 
    1:   // nsIAccessible
20246:   NS_IMETHOD GetName(nsAString& aName);
20246: 
20246:   // nsAccessible
  401:   virtual nsresult GetAttributesInternal(nsIPersistentProperties *aAttributes);
52027:   virtual PRUint32 NativeRole();
21256:   virtual nsresult GetStateInternal(PRUint32 *aState, PRUint32 *aExtraState);
    1: };
    1: 
43504: /**
43504:  * Used for HTML hr element.
43504:  */
    1: class nsHTMLHRAccessible : public nsLeafAccessible
    1: {
    1: public:
43504:   nsHTMLHRAccessible(nsIContent *aContent, nsIWeakReference *aShell);
25822: 
25822:   // nsAccessible
52027:   virtual PRUint32 NativeRole();
    1: };
    1: 
43504: /**
43504:  * Used for HTML br element.
43504:  */
    1: class nsHTMLBRAccessible : public nsLeafAccessible
    1: {
    1: public:
43504:   nsHTMLBRAccessible(nsIContent *aContent, nsIWeakReference *aShell);
20246: 
20246:   // nsAccessible
20246:   virtual nsresult GetNameInternal(nsAString& aName);
52027:   virtual PRUint32 NativeRole();
21256:   virtual nsresult GetStateInternal(PRUint32 *aState, PRUint32 *aExtraState);
    1: };
    1: 
43504: /**
43504:  * Used for HTML label element.
43504:  */
34092: class nsHTMLLabelAccessible : public nsHyperTextAccessibleWrap
    1: {
    1: public:
43504:   nsHTMLLabelAccessible(nsIContent *aContent, nsIWeakReference *aShell);
20246: 
12086:   NS_DECL_ISUPPORTS_INHERITED
20246: 
20246:   // nsAccessible
20246:   virtual nsresult GetNameInternal(nsAString& aName);
52027:   virtual PRUint32 NativeRole();
    1: };
    1: 
43504: /**
54466:  * Used for HTML output element.
54466:  */
54466: class nsHTMLOutputAccessible : public nsHyperTextAccessibleWrap
54466: {
54466: public:
54466:   nsHTMLOutputAccessible(nsIContent* aContent, nsIWeakReference* aShell);
54466: 
54466:   NS_DECL_ISUPPORTS_INHERITED
54466: 
54466:   // nsIAccessible
54466:   NS_IMETHOD GetRelationByType(PRUint32 aRelationType,
54466:                                nsIAccessibleRelation** aRelation);
54466: 
54466:   // nsAccessible
54466:   virtual PRUint32 NativeRole();
54466:   virtual nsresult GetAttributesInternal(nsIPersistentProperties* aAttributes);
54466: };
54466: 
54466: /**
43504:  * Used for bullet of HTML list item element (for example, HTML li).
43504:  */
  436: class nsHTMLListBulletAccessible : public nsLeafAccessible
    1: {
    1: public:
55763:   nsHTMLListBulletAccessible(nsIContent* aContent, nsIWeakReference* aShell);
  436: 
  436:   // nsIAccessible
    1:   NS_IMETHOD GetName(nsAString& aName);
  436: 
21169:   // nsAccessNode
56292:   virtual bool IsPrimaryForNode() const;
21169: 
21256:   // nsAccessible
52027:   virtual PRUint32 NativeRole();
21256:   virtual nsresult GetStateInternal(PRUint32 *aState, PRUint32 *aExtraState);
61682:   virtual void AppendTextTo(nsAString& aText, PRUint32 aStartOffset = 0,
61682:                             PRUint32 aLength = PR_UINT32_MAX);
    1: };
    1: 
43504: /**
43504:  * Used for HTML list (like HTML ul).
43504:  */
  966: class nsHTMLListAccessible : public nsHyperTextAccessibleWrap
    1: {
    1: public:
43504:   nsHTMLListAccessible(nsIContent *aContent, nsIWeakReference *aShell);
21256: 
34113:   // nsISupports
34113:   NS_DECL_ISUPPORTS_INHERITED
34113: 
21256:   // nsAccessible
52027:   virtual PRUint32 NativeRole();
21256:   virtual nsresult GetStateInternal(PRUint32 *aState, PRUint32 *aExtraState);
    1: };
    1: 
43504: /**
43504:  * Used for HTML list item (e.g. HTML li).
43504:  */
34113: class nsHTMLLIAccessible : public nsHyperTextAccessibleWrap
    1: {
    1: public:
55763:   nsHTMLLIAccessible(nsIContent* aContent, nsIWeakReference* aShell);
20246: 
34113:   // nsISupports
34113:   NS_DECL_ISUPPORTS_INHERITED
34113: 
64006:   // nsAccessNode
64006:   virtual void Shutdown();
64006: 
20246:   // nsIAccessible
    1:   NS_IMETHOD GetBounds(PRInt32 *x, PRInt32 *y, PRInt32 *width, PRInt32 *height);
20246: 
21256:   // nsAccessible
52027:   virtual PRUint32 NativeRole();
21256:   virtual nsresult GetStateInternal(PRUint32 *aState, PRUint32 *aExtraState);
21256: 
64006:   // nsHTMLLIAccessible
64006:   void UpdateBullet(bool aHasBullet);
64006: 
20246: protected:
35523:   // nsAccessible
35523:   virtual void CacheChildren();
20246: 
35523: private:
64006:   nsRefPtr<nsHTMLListBulletAccessible> mBullet;
    1: };
    1: 
64006: inline nsHTMLLIAccessible*
64006: nsAccessible::AsHTMLListItem()
64006: {
64006:   return mFlags & eHTMLListItemAccessible ?
64006:     static_cast<nsHTMLLIAccessible*>(this) : nsnull;
64006: }
64006: 
    1: #endif

50545: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
50545: /* ***** BEGIN LICENSE BLOCK *****
50545:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
50545:  *
50545:  * The contents of this file are subject to the Mozilla Public License Version
50545:  * 1.1 (the "License"); you may not use this file except in compliance with
50545:  * the License. You may obtain a copy of the License at
50545:  * http://www.mozilla.org/MPL/
50545:  *
50545:  * Software distributed under the License is distributed on an "AS IS" basis,
50545:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
50545:  * for the specific language governing rights and limitations under the
50545:  * License.
50545:  *
50545:  * The Original Code is mozilla.org code.
50545:  *
50545:  * The Initial Developer of the Original Code is
50545:  * the Mozilla Foundation.
50545:  * Portions created by the Initial Developer are Copyright (C) 2010.
50545:  * the Initial Developer. All Rights Reserved.
50545:  *
50545:  * Contributor(s):
50545:  *
50545:  * Alternatively, the contents of this file may be used under the terms of
50545:  * either the GNU General Public License Version 2 or later (the "GPL"), or
50545:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
50545:  * in which case the provisions of the GPL or the LGPL are applicable instead
50545:  * of those above. If you wish to allow use of your version of this file only
50545:  * under the terms of either the GPL or the LGPL, and not to allow others to
50545:  * use your version of this file under the terms of the MPL, indicate your
50545:  * decision by deleting the provisions above and replace them with the notice
50545:  * and other provisions required by the GPL or the LGPL. If you do not delete
50545:  * the provisions above, a recipient may use your version of this file under
50545:  * the terms of any one of the MPL, the GPL or the LGPL.
50545:  *
50545:  * ***** END LICENSE BLOCK ***** */
50545: 
50545: #ifndef MOZILLA_IMAGELIB_IMAGE_H_
50545: #define MOZILLA_IMAGELIB_IMAGE_H_
50545: 
50545: #include "imgIContainer.h"
50545: #include "imgStatusTracker.h"
50545: #include "prtypes.h"
50545: 
50545: namespace mozilla {
50545: namespace imagelib {
50545: 
50545: class Image : public imgIContainer
50545: {
50545: public:
51296:   imgStatusTracker& GetStatusTracker() { return *mStatusTracker; }
50545: 
50555:   /**
50555:    * Flags for Image initialization.
50555:    *
50555:    * Meanings:
50555:    *
50555:    * INIT_FLAG_NONE: Lack of flags
50555:    *
50555:    * INIT_FLAG_DISCARDABLE: The container should be discardable
50555:    *
50555:    * INIT_FLAG_DECODE_ON_DRAW: The container should decode on draw rather than
50555:    * decoding on load.
50555:    *
50555:    * INIT_FLAG_MULTIPART: The container will be used to display a stream of
50555:    * images in a multipart channel. If this flag is set, INIT_FLAG_DISCARDABLE
50555:    * and INIT_FLAG_DECODE_ON_DRAW must not be set.
50555:    */
50555:   static const PRUint32 INIT_FLAG_NONE           = 0x0;
50555:   static const PRUint32 INIT_FLAG_DISCARDABLE    = 0x1;
50555:   static const PRUint32 INIT_FLAG_DECODE_ON_DRAW = 0x2;
50555:   static const PRUint32 INIT_FLAG_MULTIPART      = 0x4;
50555: 
50555:   /**
50555:    * Creates a new image container.
50555:    *
50555:    * @param aObserver Observer to send decoder and animation notifications to.
50555:    * @param aMimeType The mimetype of the image.
50555:    * @param aFlags Initialization flags of the INIT_FLAG_* variety.
50555:    */
50555:   virtual nsresult Init(imgIDecoderObserver* aObserver,
50555:                         const char* aMimeType,
53660:                         const char* aURIString,
50555:                         PRUint32 aFlags) = 0;
50555: 
50555:   /**
50555:    * The rectangle defining the location and size of the currently displayed
51294:    * frame.
50555:    */
51294:   virtual void GetCurrentFrameRect(nsIntRect& aRect) = 0;
50555: 
50555:   /**
50555:    * The size, in bytes, occupied by the significant data portions of the image.
50555:    * This includes both compressed source data and decoded frames.
50555:    */
54949:   PRUint32 GetDataSize();
54949: 
54949:   /**
54949:    * The components that make up GetDataSize().
54949:    */      
54949:   virtual PRUint32 GetDecodedDataSize() = 0;
54949:   virtual PRUint32 GetSourceDataSize() = 0;
51193: 
51234:   // Mimetype translation
51234:   enum eDecoderType {
51234:     eDecoderType_png     = 0,
51234:     eDecoderType_gif     = 1,
51234:     eDecoderType_jpeg    = 2,
51234:     eDecoderType_bmp     = 3,
51234:     eDecoderType_ico     = 4,
51234:     eDecoderType_icon    = 5,
51234:     eDecoderType_unknown = 6
51234:   };
51234:   static eDecoderType GetDecoderType(const char *aMimeType);
51234: 
52149:   void IncrementAnimationConsumers();
52149:   void DecrementAnimationConsumers();
52149: #ifdef DEBUG
52149:   PRUint32 GetAnimationConsumers() { return mAnimationConsumers; }
52149: #endif
52149: 
50545: protected:
51296:   Image(imgStatusTracker* aStatusTracker);
50545: 
52149:   /**
52149:    * Decides whether animation should or should not be happening,
52149:    * and makes sure the right thing is being done.
52149:    */
52149:   virtual void EvaluateAnimation();
52149: 
52149:   virtual nsresult StartAnimation() = 0;
52149:   virtual nsresult StopAnimation() = 0;
52149: 
50545:   // Member data shared by all implementations of this abstract class
51296:   nsAutoPtr<imgStatusTracker> mStatusTracker;
52149:   PRUint32                    mAnimationConsumers;
50545:   PRPackedBool                mInitialized;   // Have we been initalized?
52149:   PRPackedBool                mAnimating;
54949:   PRPackedBool                mError;         // Error handling
52149: 
52149:   /**
52149:    * Extended by child classes, if they have additional
52149:    * conditions for being able to animate
52149:    */
52149:   virtual PRBool ShouldAnimate() { return mAnimationConsumers > 0; }
50545: };
50545: 
50545: } // namespace imagelib
50545: } // namespace mozilla
50545: 
50545: #endif // MOZILLA_IMAGELIB_IMAGE_H_

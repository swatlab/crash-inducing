 2411: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 2411: /* ***** BEGIN LICENSE BLOCK *****
 2411:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 2411:  *
 2411:  * The contents of this file are subject to the Mozilla Public License Version
 2411:  * 1.1 (the "License"); you may not use this file except in compliance with
 2411:  * the License. You may obtain a copy of the License at
 2411:  * http://www.mozilla.org/MPL/
 2411:  *
 2411:  * Software distributed under the License is distributed on an "AS IS" basis,
 2411:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 2411:  * for the specific language governing rights and limitations under the
 2411:  * License.
 2411:  *
 2411:  * The Original Code is JavaScript Engine testing utilities.
 2411:  *
 2411:  * The Initial Developer of the Original Code is
 2411:  * Mozilla Foundation.
 2411:  * Portions created by the Initial Developer are Copyright (C) 2007
 2411:  * the Initial Developer. All Rights Reserved.
 2411:  *
 2411:  * Contributor(s): Jesse Ruderman
 2411:  *
 2411:  * Alternatively, the contents of this file may be used under the terms of
 2411:  * either the GNU General Public License Version 2 or later (the "GPL"), or
 2411:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 2411:  * in which case the provisions of the GPL or the LGPL are applicable instead
 2411:  * of those above. If you wish to allow use of your version of this file only
 2411:  * under the terms of either the GPL or the LGPL, and not to allow others to
 2411:  * use your version of this file under the terms of the MPL, indicate your
 2411:  * decision by deleting the provisions above and replace them with the notice
 2411:  * and other provisions required by the GPL or the LGPL. If you do not delete
 2411:  * the provisions above, a recipient may use your version of this file under
 2411:  * the terms of any one of the MPL, the GPL or the LGPL.
 2411:  *
 2411:  * ***** END LICENSE BLOCK ***** */
 2411: 
 2411: var gTestfile = 'regress-375711.js';
 2411: //-----------------------------------------------------------------------------
 2411: var BUGNUMBER = 375711;
 2411: var summary = 'Do not assert with /[Q-b]/i.exec("")';
 2411: var actual = '';
 2411: var expect = '';
 2411: 
 2411: 
 2411: //-----------------------------------------------------------------------------
 2411: test();
 2411: //-----------------------------------------------------------------------------
 2411: 
 2411: function test()
 2411: {
 2411:   enterFunc ('test');
 2411:   printBugNumber(BUGNUMBER);
 2411:   printStatus (summary);
 2411:  
13489:   var s;
13489: 
13489:   // see bug 416933
13489:   print('see bug 416933 for changed behavior on Gecko 1.9');
13489: 
 2411:   try
 2411:   {
13489:     s = '/[Q-b]/.exec("")';
13489:     expect = 'No Error';
13489:     print(s + ' expect ' + expect);
13489:     eval(s);
13489:     actual = 'No Error';
 2411:   }
 2411:   catch(ex)
 2411:   {
 2411:     actual = ex + '';
 2411:   }
13489:   reportCompare(expect, actual, summary + ': ' + s);
13489: 
13489:   try
13489:   {
13489:     s ='/[Q-b]/i.exec("")';
13489:     expect = 'No Error';
13489:     print(s + ' expect ' + expect);
13489:     eval(s);
13489:     actual = 'No Error';
13489:   }
13489:   catch(ex)
13489:   {
13489:     actual = ex + '';
13489:   }
13489:   reportCompare(expect, actual, summary + ': ' + s);
13489: 
13489:   try
13489:   {
13489:     s = '/[q-b]/.exec("")';
13489:     expect = 'SyntaxError: invalid range in character class';
13489:     print(s + ' expect ' + expect);
13489:     eval(s);
13489:     actual = 'No Error';
13489:   }
13489:   catch(ex)
13489:   {
13489:     actual = ex + '';
13489:   }
13489:   reportCompare(expect, actual, summary + ': ' + s);
13489: 
13489:   try
13489:   {
13489:     s ='/[q-b]/i.exec("")';
13489:     expect = 'No Error';
13489:     print(s + ' expect ' + expect);
13489:     eval(s);
13489:     actual = 'No Error';
13489:   }
13489:   catch(ex)
13489:   {
13489:     actual = ex + '';
13489:   }
13489:   reportCompare(expect, actual, summary + ': ' + s);
 2411: 
 2411:   exitFunc ('test');
 2411: }

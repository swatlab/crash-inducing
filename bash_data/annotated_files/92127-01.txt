68749: /* ***** BEGIN LICENSE BLOCK *****
68749:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
68749:  *
68749:  * The contents of this file are subject to the Mozilla Public License Version
68749:  * 1.1 (the "License"); you may not use this file except in compliance with
68749:  * the License. You may obtain a copy of the License at
68749:  * http://www.mozilla.org/MPL/
68749:  *
68749:  * Software distributed under the License is distributed on an "AS IS" basis,
68749:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
68749:  * for the specific language governing rights and limitations under the
68749:  * License.
68749:  *
68749:  * The Original Code is mozilla.org code.
68749:  *
68749:  * The Initial Developer of the Original Code is
68749:  * The Mozilla Foundation.
68749:  * Portions created by the Initial Developer are Copyright (C) 2011
68749:  * the Initial Developer. All Rights Reserved.
68749:  *
68749:  * Contributor(s):
68749:  *   Ted Mielczarek <ted.mielczarek@gmail.com>
68749:  *
68749:  * Alternatively, the contents of this file may be used under the terms of
68749:  * either the GNU General Public License Version 2 or later (the "GPL"), or
68749:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
68749:  * in which case the provisions of the GPL or the LGPL are applicable instead
68749:  * of those above. If you wish to allow use of your version of this file only
68749:  * under the terms of either the GPL or the LGPL, and not to allow others to
68749:  * use your version of this file under the terms of the MPL, indicate your
68749:  * decision by deleting the provisions above and replace them with the notice
68749:  * and other provisions required by the GPL or the LGPL. If you do not delete
68749:  * the provisions above, a recipient may use your version of this file under
68749:  * the terms of any one of the MPL, the GPL or the LGPL.
68749:  *
68749:  * ***** END LICENSE BLOCK ***** */
68749: 
68749: #include <Cocoa/Cocoa.h>
68749: #include "CustomCocoaEvents.h"
68749: #include <Foundation/NSAutoreleasePool.h>
68749: #include <mozilla/CondVar.h>
68749: #include <mozilla/Mutex.h>
68749: #include "mozilla/WidgetTraceEvent.h"
68749: 
68749: using mozilla::CondVar;
68749: using mozilla::Mutex;
68749: using mozilla::MutexAutoLock;
68749: 
68749: namespace {
68749: 
68749: Mutex* sMutex = NULL;
68749: CondVar* sCondVar = NULL;
68749: bool sTracerProcessed = false;
68749: 
68749: }
68749: 
68749: namespace mozilla {
68749: 
68749: bool InitWidgetTracing()
68749: {
68749:   sMutex = new Mutex("Event tracer thread mutex");
68749:   sCondVar = new CondVar(*sMutex, "Event tracer thread condvar");
68749:   return sMutex && sCondVar;
68749: }
68749: 
68749: void CleanUpWidgetTracing()
68749: {
68749:   delete sMutex;
68749:   delete sCondVar;
68749:   sMutex = NULL;
68749:   sCondVar = NULL;
68749: }
68749: 
68749: // This function is called from the main (UI) thread.
68749: void SignalTracerThread()
68749: {
92127:   if (!sMutex || !sCondVar)
92127:     return;
68749:   MutexAutoLock lock(*sMutex);
68749:   NS_ABORT_IF_FALSE(!sTracerProcessed, "Tracer synchronization state is wrong");
68749:   sTracerProcessed = true;
68749:   sCondVar->Notify();
68749: }
68749: 
68749: // This function is called from the background tracer thread.
68749: bool FireAndWaitForTracerEvent()
68749: {
68749:   NS_ABORT_IF_FALSE(sMutex && sCondVar, "Tracing not initialized!");
68749:   NSAutoreleasePool* pool = [[NSAutoreleasePool alloc] init];
68749:   MutexAutoLock lock(*sMutex);
68749:   NS_ABORT_IF_FALSE(!sTracerProcessed, "Tracer synchronization state is wrong");
68749: 
68749:   // Post an application-defined event to the main thread's event queue
68749:   // and wait for it to get processed.
68749:   [NSApp postEvent:[NSEvent otherEventWithType:NSApplicationDefined
68749:                                       location:NSMakePoint(0,0)
68749:                                  modifierFlags:0
68749:                                      timestamp:0
68749:                                   windowNumber:0
68749:                                        context:NULL
68749:                                        subtype:kEventSubtypeTrace
68749:                                          data1:0
68749:                                          data2:0]
68749:              atStart:NO];
68749:   while (!sTracerProcessed)
68749:     sCondVar->Wait();
68749:   sTracerProcessed = false;
68749:   [pool release];
68749:   return true;
68749: }
68749: 
68749: }  // namespace mozilla

31494: /* -*- Mode: C++; c-basic-offset: 4; indent-tabs-mode: nil; tab-width: 4 -*- */
31494: /* vi: set ts=4 sw=4 expandtab: (add to ~/.vimrc: set modeline modelines=5) */
31494: /* ***** BEGIN LICENSE BLOCK *****
31494:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
31494:  *
31494:  * The contents of this file are subject to the Mozilla Public License Version
31494:  * 1.1 (the "License"); you may not use this file except in compliance with
31494:  * the License. You may obtain a copy of the License at
31494:  * http://www.mozilla.org/MPL/
31494:  *
31494:  * Software distributed under the License is distributed on an "AS IS" basis,
31494:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
31494:  * for the specific language governing rights and limitations under the
31494:  * License.
31494:  *
31494:  * The Original Code is [Open Source Virtual Machine].
31494:  *
31494:  * The Initial Developer of the Original Code is
31494:  * Adobe System Incorporated.
31494:  * Portions created by the Initial Developer are Copyright (C) 2004-2007
31494:  * the Initial Developer. All Rights Reserved.
31494:  *
31494:  * Contributor(s):
31494:  *   Adobe AS3 Team
31494:  *
31494:  * Alternatively, the contents of this file may be used under the terms of
31494:  * either the GNU General Public License Version 2 or later (the "GPL"), or
31494:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
31494:  * in which case the provisions of the GPL or the LGPL are applicable instead
31494:  * of those above. If you wish to allow use of your version of this file only
31494:  * under the terms of either the GPL or the LGPL, and not to allow others to
31494:  * use your version of this file under the terms of the MPL, indicate your
31494:  * decision by deleting the provisions above and replace them with the notice
31494:  * and other provisions required by the GPL or the LGPL. If you do not delete
31494:  * the provisions above, a recipient may use your version of this file under
31494:  * the terms of any one of the MPL, the GPL or the LGPL.
31494:  *
31494:  * ***** END LICENSE BLOCK ***** */
31494: 
31494: #include "nanojit.h"
31494: 
33125: #ifdef FEATURE_NANOJIT
33125: 
31494: namespace nanojit
31494: {
31494:     BitSet::BitSet(Allocator& allocator, int nbits)
31494:         : allocator(allocator)
31494:         , cap((nbits+63)>>6)
31494:     {
71332:         resetAndAlloc();
71332:     }
71332: 
71332:     void BitSet::resetAndAlloc()
71332:     {
71332:         bits = (int64_t*)allocator.alloc(cap * sizeof(int64_t));
31494:         reset();
31494:     }
31494: 
31494:     void BitSet::reset()
31494:     {
31494:         for (int i=0, n=cap; i < n; i++)
31494:             bits[i] = 0;
31494:     }
31494: 
31494:     bool BitSet::setFrom(BitSet& other)
31494:     {
31494:         int c = other.cap;
31494:         if (c > cap)
31494:             grow(c);
31494:         int64_t *bits = this->bits;
31494:         int64_t *otherbits = other.bits;
31494:         int64_t newbits = 0;
31494:         for (int i=0; i < c; i++) {
31494:             int64_t b = bits[i];
31494:             int64_t b2 = otherbits[i];
31494:             newbits |= b2 & ~b; // bits in b2 that are not in b
31494:             bits[i] = b|b2;
31494:         }
31494:         return newbits != 0;
31494:     }
31494: 
31494:     /** keep doubling the bitset length until w fits */
31494:     void BitSet::grow(int w)
31494:     {
31494:         int cap2 = cap;
31494:         do {
31494:             cap2 <<= 1;
68918:         } while (w >= cap2);
31494:         int64_t *bits2 = (int64_t*) allocator.alloc(cap2 * sizeof(int64_t));
31494:         int j=0;
31494:         for (; j < cap; j++)
31494:             bits2[j] = bits[j];
31494:         for (; j < cap2; j++)
31494:             bits2[j] = 0;
31494:         cap = cap2;
31494:         bits = bits2;
31494:     }
31494: }
33125: 
33125: #endif // FEATURE_NANOJIT

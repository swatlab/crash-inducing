 68936: /*
 68936:  * Any copyright is dedicated to the Public Domain.
 68936:  * http://creativecommons.org/licenses/publicdomain/
 68936:  */
 68936: 
 68936: function checkConstruct(thing, buggy) {
 68936:     try {
 68936:         new thing();
 68936:         assertEq(0, 1, "not reached " + thing);
 68936:     } catch (e) {
 68936:         if (buggy)
103274:             assertEq(String(e.message).indexOf("is not a constructor") === -1, false);
 68936:         else
103274:             assertEq(String(e.message).indexOf("thing is not a constructor") === -1, false);
 68936:     }
 68936: }
 68936: 
 68936: var re = /aaa/
 68936: checkConstruct(re, false);
 68936: 
 68936: var boundFunctionPrototype = Function.prototype.bind();
 68936: checkConstruct(boundFunctionPrototype, true);
 68936: 
 68936: var boundBuiltin = Math.sin.bind();
 68936: checkConstruct(boundBuiltin, true);
 68936: 
 68936: /* We set the proxies construct trap to undefined,
 68936:  * so the call trap is used as constructor.
 68936:  */
 68936: 
 68936: var proxiedFunctionPrototype = Proxy.create({}, Function.prototype, undefined);
 68936: checkConstruct(proxiedFunctionPrototype, false);
 68936: 
 68936: var proxiedBuiltin = Proxy.create({}, parseInt, undefined);
 68936: checkConstruct(proxiedBuiltin, false);
 68936: 
 68936: 
 68936: if (typeof reportCompare == 'function')
 68936:     reportCompare(0, 0, "ok");

118588: /* This Source Code Form is subject to the terms of the Mozilla Public
118588:  * License, v. 2.0. If a copy of the MPL was not distributed with this
118588:  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
118588: 
118588: // This test makes sure that the geolocation prompt does not show a remember
118588: // control inside the private browsing mode.
118588: 
118588: function test() {
121842:   // initialization
121842:   let pb = Cc["@mozilla.org/privatebrowsing;1"].
121842:            getService(Ci.nsIPrivateBrowsingService);
121842: 
118588:   const testPageURL = "http://mochi.test:8888/browser/" +
121842:     "browser/components/privatebrowsing/test/browser/global/browser_privatebrowsing_geoprompt_page.html";
118588:   waitForExplicitFinish();
118588: 
121842:   gBrowser.selectedTab = gBrowser.addTab();
121842:   gBrowser.selectedBrowser.addEventListener("load", function () {
121842:     gBrowser.selectedBrowser.removeEventListener("load", arguments.callee, true);
118588: 
121842:     let notification = PopupNotifications.getNotification("geolocation");
121842:     ok(notification, "Notification should exist");
118588:     ok(notification.secondaryActions.length > 1, "Secondary actions should exist (always/never remember)");
118588:     notification.remove();
118588: 
121842:     gBrowser.removeCurrentTab();
121842: 
121842:     // enter the private browsing mode
121842:     pb.privateBrowsingEnabled = true;
121842: 
121842:     gBrowser.selectedTab = gBrowser.addTab();
121842:     gBrowser.selectedBrowser.addEventListener("load", function () {
121842:       gBrowser.selectedBrowser.removeEventListener("load", arguments.callee, true);
121842: 
121842:       // Make sure the notification is correctly displayed without a remember control
121842:       let notification = PopupNotifications.getNotification("geolocation");
121842:       ok(notification, "Notification should exist");
121842:       is(notification.secondaryActions.length, 0, "Secondary actions shouldn't exist (always/never remember)");
121842:       notification.remove();
121842: 
121842:       gBrowser.removeCurrentTab();
121842: 
121842:       // cleanup
121842:       pb.privateBrowsingEnabled = false;
121842:       finish();
121842:     }, true);
121842:     content.location = testPageURL;
121842:   }, true);
121842:   content.location = testPageURL;
121735: }

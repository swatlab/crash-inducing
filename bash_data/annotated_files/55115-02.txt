33620: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
33620: /* ***** BEGIN LICENSE BLOCK *****
33620:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
33620:  *
33620:  * The contents of this file are subject to the Mozilla Public License Version
33620:  * 1.1 (the "License"); you may not use this file except in compliance with
33620:  * the License. You may obtain a copy of the License at
33620:  * http://www.mozilla.org/MPL/
33620:  *
33620:  * Software distributed under the License is distributed on an "AS IS" basis,
33620:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
33620:  * for the specific language governing rights and limitations under the
33620:  * License.
33620:  *
33620:  * The Original Code is mozila.org code.
33620:  *
33620:  * The Initial Developer of the Original Code is
33620:  * Mozilla Corporation
33620:  * Portions created by the Initial Developer are Copyright (C) 2007
33620:  * the Initial Developer. All Rights Reserved.
33620:  *
33620:  * Contributor(s):
33620:  *
33620:  * Alternatively, the contents of this file may be used under the terms of
33620:  * either the GNU General Public License Version 2 or later (the "GPL"), or
33620:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
33620:  * in which case the provisions of the GPL or the LGPL are applicable instead
33620:  * of those above. If you wish to allow use of your version of this file only
33620:  * under the terms of either the GPL or the LGPL, and not to allow others to
33620:  * use your version of this file under the terms of the MPL, indicate your
33620:  * decision by deleting the provisions above and replace them with the notice
33620:  * and other provisions required by the GPL or the LGPL. If you do not delete
33620:  * the provisions above, a recipient may use your version of this file under
33620:  * the terms of any one of the MPL, the GPL or the LGPL.
33620:  *
33620:  * ***** END LICENSE BLOCK ***** */
33620: 
34695: #ifndef nsDOMFileReader_h__
34695: #define nsDOMFileReader_h__
33620: 
33620: #include "nsISupportsUtils.h"      
33620: #include "nsString.h"              
33620: #include "nsIStreamListener.h"     
33620: #include "nsIScriptContext.h"      
33620: #include "nsIInterfaceRequestor.h" 
33620: #include "nsJSUtils.h"             
33620: #include "nsTArray.h"              
33620: #include "nsIJSNativeInitializer.h"
33620: #include "prtime.h"                
33620: #include "nsITimer.h"              
33620: #include "nsDOMEventTargetHelper.h"
33620: #include "nsICharsetDetector.h"
33620: #include "nsICharsetDetectionObserver.h"
33620: 
33620: #include "nsIDOMFile.h"
34695: #include "nsIDOMFileReader.h"
33620: #include "nsIDOMFileList.h"
33620: #include "nsIDOMFileError.h"
33620: #include "nsIInputStream.h"
33620: #include "nsCOMPtr.h"
33620: #include "nsIStreamLoader.h"
33620: #include "nsIChannel.h"
35198: #include "prmem.h"
33620: 
33620: #include "nsXMLHttpRequest.h"
33620: 
34695: class nsDOMFileReader : public nsXHREventTarget,
34695:                         public nsIDOMFileReader,
33620:                         public nsIStreamListener,
33620:                         public nsIInterfaceRequestor,
33620:                         public nsSupportsWeakReference,
33620:                         public nsIJSNativeInitializer,
33620:                         public nsITimerCallback,
33620:                         public nsICharsetDetectionObserver
33620: {
33620: public:
34695:   nsDOMFileReader();
34695:   virtual ~nsDOMFileReader();
33620: 
33620:   NS_DECL_ISUPPORTS_INHERITED
33620: 
34695:   NS_DECL_NSIDOMFILEREADER
34695:   NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED(nsDOMFileReader, nsXHREventTarget)
33620: 
33620:   NS_FORWARD_NSIXMLHTTPREQUESTEVENTTARGET(nsXHREventTarget::);
33620:         
33620:   // nsIStreamListener
33620:   NS_DECL_NSISTREAMLISTENER
33620:                                
33620:   // nsIRequestObserver
33620:   NS_DECL_NSIREQUESTOBSERVER
33620:                                
33620:   // nsIInterfaceRequestor 
33620:   NS_DECL_NSIINTERFACEREQUESTOR
33620: 
33620:   // nsITimerCallback
33620:   NS_DECL_NSITIMERCALLBACK
33620:                                
33620:   // nsIJSNativeInitializer                                                
33620:   NS_IMETHOD Initialize(nsISupports* aOwner, JSContext* cx, JSObject* obj, 
33620:                         PRUint32 argc, jsval* argv);
33620: 
33620:   NS_FORWARD_NSIDOMEVENTTARGET(nsXHREventTarget::)
33620:   NS_FORWARD_NSIDOMNSEVENTTARGET(nsXHREventTarget::)
33620: 
33620:   // nsICharsetDetectionObserver
33620:   NS_IMETHOD Notify(const char *aCharset, nsDetectionConfident aConf);
33620: 
33620:   void DispatchProgressEvent(const nsAString& aType);
33620: 
33620:   nsresult Init();
33620: 
33620: protected:
35227:   enum eDataFormat {
35227:     FILE_AS_BINARY,
35227:     FILE_AS_TEXT,
35227:     FILE_AS_DATAURL
35227:   };
35227: 
35227:   nsresult ReadFileContent(nsIDOMFile *aFile, const nsAString &aCharset, eDataFormat aDataFormat); 
55115:   nsresult GetAsText(const nsACString &aCharset,
33620:                      const char *aFileData, PRUint32 aDataLen, nsAString &aResult);
52042:   nsresult GetAsDataURL(nsIDOMFile *aFile, const char *aFileData, PRUint32 aDataLen, nsAString &aResult); 
33620:   nsresult GuessCharset(const char *aFileData, PRUint32 aDataLen, nsACString &aCharset); 
33620:   nsresult ConvertStream(const char *aFileData, PRUint32 aDataLen, const char *aCharset, nsAString &aResult); 
33620:   void DispatchError(nsresult rv);
33620:   void StartProgressEventTimer();
33620: 
35198:   void FreeFileData() {
35198:     PR_Free(mFileData);
35198:     mFileData = nsnull;
35198:     mDataLen = 0;
35198:   }
35198: 
33620:   char *mFileData;
52042:   nsCOMPtr<nsIDOMFile> mFile;
55115:   nsCString mCharset;
33620:   PRUint32 mDataLen;
35227: 
35227:   eDataFormat mDataFormat;
33620: 
34695:   nsString mResult;
33620:   PRUint16 mReadyState;
33620: 
33620:   PRBool mProgressEventWasDelayed;
33620:   PRBool mTimerIsActive;
33620:   nsCOMPtr<nsIDOMFileError> mError;
33620: 
33620:   nsCOMPtr<nsITimer> mProgressNotifier;
33620:   nsCOMPtr<nsIPrincipal> mPrincipal;
33620:   nsCOMPtr<nsIChannel> mChannel;
33620: 
52042:   PRUint64 mReadTotal;
33620:   PRUint64 mReadTransferred;
33620: 
33620:   nsRefPtr<nsDOMEventListenerWrapper> mOnLoadEndListener;
33620: };
33620: 
33620: #endif

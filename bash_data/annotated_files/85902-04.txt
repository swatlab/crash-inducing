60068: /* vim: se cin sw=2 ts=2 et : */
60068: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
60068:  *
60068:  * ***** BEGIN LICENSE BLOCK *****
60068:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
60068:  *
60068:  * The contents of this file are subject to the Mozilla Public License Version
60068:  * 1.1 (the "License"); you may not use this file except in compliance with
60068:  * the License. You may obtain a copy of the License at
60068:  * http://www.mozilla.org/MPL/
60068:  *
60068:  * Software distributed under the License is distributed on an "AS IS" basis,
60068:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
60068:  * for the specific language governing rights and limitations under the
60068:  * License.
60068:  *
60068:  * The Original Code is mozilla.org code.
60068:  *
60068:  * The Initial Developer of the Original Code is
60068:  * Mozilla Foundation.
60068:  * Portions created by the Initial Developer are Copyright (C) 2010
60068:  * the Initial Developer. All Rights Reserved.
60068:  *
60068:  * Contributor(s):
60068:  *
60068:  * Alternatively, the contents of this file may be used under the terms of
60068:  * either the GNU General Public License Version 2 or later (the "GPL"), or
60068:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
60068:  * in which case the provisions of the GPL or the LGPL are applicable instead
60068:  * of those above. If you wish to allow use of your version of this file only
60068:  * under the terms of either the GPL or the LGPL, and not to allow others to
60068:  * use your version of this file under the terms of the MPL, indicate your
60068:  * decision by deleting the provisions above and replace them with the notice
60068:  * and other provisions required by the GPL or the LGPL. If you do not delete
60068:  * the provisions above, a recipient may use your version of this file under
60068:  * the terms of any one of the MPL, the GPL or the LGPL.
60068:  *
60068:  * ***** END LICENSE BLOCK ***** */
60068: 
60068: #ifndef __mozilla_widget_GfxInfo_h__
60068: #define __mozilla_widget_GfxInfo_h__
60068: 
60891: #include "GfxInfoBase.h"
60068: 
60068: #include "nsString.h"
60068: 
60068: namespace mozilla {
60068: namespace widget {
60068: 
60891: class GfxInfo : public GfxInfoBase
60068: {
60068: public:
60891:   // We only declare the subset of nsIGfxInfo that we actually implement. The
60891:   // rest is brought forward from GfxInfoBase.
79445:   NS_SCRIPTABLE NS_IMETHOD GetD2DEnabled(bool *aD2DEnabled);
79445:   NS_SCRIPTABLE NS_IMETHOD GetDWriteEnabled(bool *aDWriteEnabled);
79445:   NS_SCRIPTABLE NS_IMETHOD GetAzureEnabled(bool *aAzureEnabled);
60891:   NS_SCRIPTABLE NS_IMETHOD GetDWriteVersion(nsAString & aDwriteVersion);
69664:   NS_SCRIPTABLE NS_IMETHOD GetCleartypeParameters(nsAString & aCleartypeParams);
60891:   NS_SCRIPTABLE NS_IMETHOD GetAdapterDescription(nsAString & aAdapterDescription);
60891:   NS_SCRIPTABLE NS_IMETHOD GetAdapterDriver(nsAString & aAdapterDriver);
85902:   NS_SCRIPTABLE NS_IMETHOD GetAdapterVendorID(PRUint32 *aAdapterVendorID);
85902:   NS_SCRIPTABLE NS_IMETHOD GetAdapterDeviceID(PRUint32 *aAdapterDeviceID);
60891:   NS_SCRIPTABLE NS_IMETHOD GetAdapterRAM(nsAString & aAdapterRAM);
60891:   NS_SCRIPTABLE NS_IMETHOD GetAdapterDriverVersion(nsAString & aAdapterDriverVersion);
60891:   NS_SCRIPTABLE NS_IMETHOD GetAdapterDriverDate(nsAString & aAdapterDriverDate);
76321:   NS_SCRIPTABLE NS_IMETHOD GetAdapterDescription2(nsAString & aAdapterDescription);
76321:   NS_SCRIPTABLE NS_IMETHOD GetAdapterDriver2(nsAString & aAdapterDriver);
85902:   NS_SCRIPTABLE NS_IMETHOD GetAdapterVendorID2(PRUint32 *aAdapterVendorID);
85902:   NS_SCRIPTABLE NS_IMETHOD GetAdapterDeviceID2(PRUint32 *aAdapterDeviceID);
76321:   NS_SCRIPTABLE NS_IMETHOD GetAdapterRAM2(nsAString & aAdapterRAM);
76321:   NS_SCRIPTABLE NS_IMETHOD GetAdapterDriverVersion2(nsAString & aAdapterDriverVersion);
76321:   NS_SCRIPTABLE NS_IMETHOD GetAdapterDriverDate2(nsAString & aAdapterDriverDate);
79445:   NS_SCRIPTABLE NS_IMETHOD GetIsGPU2Active(bool *aIsGPU2Active);
60891:   using GfxInfoBase::GetFeatureStatus;
60891:   using GfxInfoBase::GetFeatureSuggestedDriverVersion;
60891:   using GfxInfoBase::GetWebGLParameter;
60891: 
60893:   virtual nsresult Init();
60893: 
60891: protected:
60891: 
81328:   virtual nsresult GetFeatureStatusImpl(PRInt32 aFeature, 
81328:                                         PRInt32 *aStatus, 
81328:                                         nsAString & aSuggestedDriverVersion, 
84603:                                         const nsTArray<GfxDriverInfo>& aDriverInfo,
81328:                                         OperatingSystem* aOS = nsnull);
84603:   virtual const nsTArray<GfxDriverInfo>& GetGfxDriverInfo();
60891: 
60068: private:
60068: 
81263:   void     AddOpenGLCrashReportAnnotations();
85898:   bool     mSetCrashReportAnnotations;
60068:   nsString mRendererIDsString;
60068:   nsString mAdapterRAMString;
60068: 
60068:   nsString mDeviceID;
60068:   nsString mDriverVersion;
60068:   nsString mDriverDate;
60068:   nsString mDeviceKey;
60068: 
60068:   PRUint32 mRendererIDs[16];
60068: };
60068: 
60068: } // namespace widget
60068: } // namespace mozilla
60068: 
60068: #endif /* __mozilla_widget_GfxInfo_h__ */

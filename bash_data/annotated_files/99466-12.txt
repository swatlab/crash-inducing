    1: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
    1: /* vim: set sw=2 ts=2 et tw=80: */
98983: /* This Source Code Form is subject to the terms of the Mozilla Public
98983:  * License, v. 2.0. If a copy of the MPL was not distributed with this
98983:  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
    1: 
    1: #ifndef __nsPIDOMStorage_h_
    1: #define __nsPIDOMStorage_h_
    1: 
    1: #include "nsISupports.h"
    1: #include "nsTArray.h"
    1: 
28438: class nsIDOMStorageObsolete;
    1: class nsIURI;
23579: class nsIPrincipal;
    1: 
    1: #define NS_PIDOMSTORAGE_IID \
95448: { 0x86dfe3c4, 0x4286, 0x4648, \
95448:   { 0xb2, 0x09, 0x55, 0x27, 0x50, 0x59, 0x26, 0xac } }
    1: 
    1: class nsPIDOMStorage : public nsISupports
    1: {
    1: public:
    1:   NS_DECLARE_STATIC_IID_ACCESSOR(NS_PIDOMSTORAGE_IID)
    1: 
37608:   typedef enum {
37608:     Unknown = 0,
91477:     LocalStorage = 1,
91477:     SessionStorage = 2
37608:   } nsDOMStorageType;
37608: 
99466:   virtual nsresult InitAsSessionStorage(nsIPrincipal *aPrincipal, const nsSubstring &aDocumentURI) = 0;
99466:   virtual nsresult InitAsLocalStorage(nsIPrincipal *aPrincipal, const nsSubstring &aDocumentURI) = 0;
    1: 
28676:   virtual already_AddRefed<nsIDOMStorage> Clone() = 0;
37608:   virtual already_AddRefed<nsIDOMStorage> Fork(const nsSubstring &aDocumentURI) = 0;
79445:   virtual bool IsForkOf(nsIDOMStorage* aThat) = 0;
    1: 
    1:   virtual nsTArray<nsString> *GetKeys() = 0;
23579: 
28676:   virtual nsIPrincipal* Principal() = 0;
79445:   virtual bool CanAccess(nsIPrincipal *aPrincipal) = 0;
37608: 
37608:   virtual nsDOMStorageType StorageType() = 0;
    1: };
    1: 
    1: NS_DEFINE_STATIC_IID_ACCESSOR(nsPIDOMStorage, NS_PIDOMSTORAGE_IID)
    1: 
    1: #endif // __nsPIDOMStorage_h_

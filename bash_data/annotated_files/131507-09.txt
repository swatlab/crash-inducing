121333: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
121333: /* vim:set ts=2 sw=2 sts=2 et cindent: */
121333: /* This Source Code Form is subject to the terms of the Mozilla Public
121333:  * License, v. 2.0. If a copy of the MPL was not distributed with this
121333:  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
121333: 
121333: #include "BiquadFilterNode.h"
121333: #include "mozilla/dom/BiquadFilterNodeBinding.h"
121333: 
121333: namespace mozilla {
121333: namespace dom {
121333: 
124161: NS_IMPL_CYCLE_COLLECTION_INHERITED_3(BiquadFilterNode, AudioNode,
124161:                                      mFrequency, mQ, mGain)
121333: 
121333: NS_INTERFACE_MAP_BEGIN_CYCLE_COLLECTION_INHERITED(BiquadFilterNode)
121333: NS_INTERFACE_MAP_END_INHERITING(AudioNode)
121333: 
121333: NS_IMPL_ADDREF_INHERITED(BiquadFilterNode, AudioNode)
121333: NS_IMPL_RELEASE_INHERITED(BiquadFilterNode, AudioNode)
121333: 
121333: static float
121333: Nyquist(AudioContext* aContext)
121333: {
131497:   return 0.5f * aContext->SampleRate();
121333: }
121333: 
121333: BiquadFilterNode::BiquadFilterNode(AudioContext* aContext)
121333:   : AudioNode(aContext)
121333:   , mType(BiquadTypeEnum::LOWPASS)
131507:   , mFrequency(new AudioParam(aContext, 350.f, 10.f, Nyquist(aContext)))
131507:   , mQ(new AudioParam(aContext, 1.f, 0.0001f, 1000.f))
131507:   , mGain(new AudioParam(aContext, 0.f, -40.f, 40.f))
121333: {
121333: }
121333: 
121333: JSObject*
130371: BiquadFilterNode::WrapObject(JSContext* aCx, JSObject* aScope)
121333: {
130371:   return BiquadFilterNodeBinding::Wrap(aCx, aScope, this);
121333: }
121333: 
121333: }
121333: }
121333: 

   1: /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
   1:  *
   1:  * ***** BEGIN LICENSE BLOCK *****
   1:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
   1:  *
   1:  * The contents of this file are subject to the Mozilla Public License Version
   1:  * 1.1 (the "License"); you may not use this file except in compliance with
   1:  * the License. You may obtain a copy of the License at
   1:  * http://www.mozilla.org/MPL/
   1:  *
   1:  * Software distributed under the License is distributed on an "AS IS" basis,
   1:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   1:  * for the specific language governing rights and limitations under the
   1:  * License.
   1:  *
   1:  * The Original Code is the Mozilla browser.
   1:  *
   1:  * The Initial Developer of the Original Code is
   1:  * Netscape Communications Corporation.
   1:  * Portions created by the Initial Developer are Copyright (C) 1999
   1:  * the Initial Developer. All Rights Reserved.
   1:  *
   1:  * Contributor(s):
   1:  *
   1:  * Alternatively, the contents of this file may be used under the terms of
   1:  * either of the GNU General Public License Version 2 or later (the "GPL"),
   1:  * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   1:  * in which case the provisions of the GPL or the LGPL are applicable instead
   1:  * of those above. If you wish to allow use of your version of this file only
   1:  * under the terms of either the GPL or the LGPL, and not to allow others to
   1:  * use your version of this file under the terms of the MPL, indicate your
   1:  * decision by deleting the provisions above and replace them with the notice
   1:  * and other provisions required by the GPL or the LGPL. If you do not delete
   1:  * the provisions above, a recipient may use your version of this file under
   1:  * the terms of any one of the MPL, the GPL or the LGPL.
   1:  *
   1:  * ***** END LICENSE BLOCK ***** */
   1: 
   1: #include "nsISupports.idl"
   1: #include "nsIAccessibleRetrieval.idl"
   1: 
   1: interface nsIAccessibleEventListener;
   1: interface nsIDocument;
   1: interface nsIFrame;
   1: interface nsObjectFrame;
   1: interface nsIContent;
   1: 
3151: [uuid(0e9e2f00-b6f1-440d-821f-6b09d264cdaf)]
   1: interface nsIAccessibilityService : nsIAccessibleRetrieval
   1: {
   1:   nsIAccessible createOuterDocAccessible(in nsIDOMNode aNode);
   1:   nsIAccessible createRootAccessible(in nsIPresShell aShell, in nsIDocument aDocument);
   1: 
   1:   nsIAccessible createHTML4ButtonAccessible(in nsISupports aFrame);
   1:   nsIAccessible createHTMLAreaAccessible(in nsIWeakReference aPresShell, in nsIDOMNode aDOMNode, in nsIAccessible aAccParent);
   1:   nsIAccessible createHyperTextAccessible(in nsISupports aFrame);
   1:   nsIAccessible createHTMLBRAccessible(in nsISupports aFrame);
   1:   nsIAccessible createHTMLButtonAccessible(in nsISupports aFrame);
1515:   nsIAccessible createHTMLAccessibleByMarkup(in nsIFrame aFrame, in nsIWeakReference aWeakShell, in nsIDOMNode aDOMNode, in AString aRole);
   1:   nsIAccessible createHTMLLIAccessible(in nsISupports aFrame, in nsISupports aBulletFrame, in AString aBulletText);
   1:   nsIAccessible createHTMLCheckboxAccessible(in nsISupports aFrame);
   1:   nsIAccessible createHTMLComboboxAccessible(in nsIDOMNode aNode, in nsIWeakReference aPresShell);
   1:   nsIAccessible createHTMLGenericAccessible(in nsISupports aFrame);
   1:   nsIAccessible createHTMLGroupboxAccessible(in nsISupports aFrame);
   1:   nsIAccessible createHTMLHRAccessible(in nsISupports aFrame);
   1:   nsIAccessible createHTMLImageAccessible(in nsISupports aFrame);
   1:   nsIAccessible createHTMLLabelAccessible(in nsISupports aFrame);
   1:   nsIAccessible createHTMLListboxAccessible(in nsIDOMNode aNode, in nsIWeakReference aPresShell);
   1:   nsIAccessible createHTMLObjectFrameAccessible(in nsObjectFrame aFrame);
   1:   nsIAccessible createHTMLRadioButtonAccessible(in nsISupports aFrame);
   1:   nsIAccessible createHTMLSelectOptionAccessible(in nsIDOMNode aNode, in nsIAccessible aAccParent, in nsIWeakReference aPresShell);
   1:   nsIAccessible createHTMLTableAccessible(in nsISupports aFrame);
   1:   nsIAccessible createHTMLTableCellAccessible(in nsISupports aFrame);
   1:   nsIAccessible createHTMLTableHeadAccessible(in nsIDOMNode aDOMNode);
   1:   nsIAccessible createHTMLTextAccessible(in nsISupports aFrame);
   1:   nsIAccessible createHTMLTextFieldAccessible(in nsISupports aFrame);
3151:   nsIAccessible createHTMLCaptionAccessible(in nsISupports aFrame);
   1: 
1515:   nsIAccessible getAccessible(in nsIDOMNode aNode, in nsIPresShell aPresShell,                          
   1:                               in nsIWeakReference aWeakShell, 
   1:                               inout nsIFrame frameHint, out boolean aIsHidden);
   1: 
   1:   // For gtk+ native window accessible
1515:   nsIAccessible addNativeRootAccessible(in voidPtr aAtkAccessible);
1515:   void removeNativeRootAccessible(in nsIAccessible aRootAccessible);
   1: 
   1:   /**
   1:    * Invalidate the accessibility cache associated with aPresShell, for accessibles
   1:    * that were generated for aContainerContent and it's subtree.
   1:    * The container content node for the change is passed in, rather than the
   1:    * changed presentation for the content node itself.
   1:    * @param aPresShell         The presShell where changes occured
   1:    * @param aChangeContent     The affected DOM content
   1:    * @param aEvent             The event from nsIAccessibleEvent that
   1:    *                           caused the change:
   1:    *                           Must be one of:
   1:    *                           EVENT_REORDER (change),
   1:    *                           EVENT_SHOW (make visible or create) or 
   1:    *                           EVENT_HIDE (destroy or hide)
   1:    */
1515:   void invalidateSubtreeFor(in nsIPresShell aPresShell,
   1:                                        in nsIContent aChangedContent,
   1:                                        in PRUint32 aEvent);
   1: };
   1: 
   1: 
   1: %{ C++
   1: 
   1: // for component registration
   1: // {DE401C37-9A7F-4278-A6F8-3DE2833989EF}
   1: #define NS_ACCESSIBILITY_SERVICE_CID \
   1: { 0xde401c37, 0x9a7f, 0x4278, { 0xa6, 0xf8, 0x3d, 0xe2, 0x83, 0x39, 0x89, 0xef } }
   1: 
   1: extern nsresult
   1: NS_GetAccessibilityService(nsIAccessibilityService** aResult);
   1: 
   1: %}

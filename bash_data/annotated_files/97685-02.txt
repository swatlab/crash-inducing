    1: #
    1: # ***** BEGIN LICENSE BLOCK *****
    1: # Version: MPL 1.1/GPL 2.0/LGPL 2.1
    1: #
    1: # The contents of this file are subject to the Mozilla Public License Version
    1: # 1.1 (the "License"); you may not use this file except in compliance with
    1: # the License. You may obtain a copy of the License at
    1: # http://www.mozilla.org/MPL/
    1: #
    1: # Software distributed under the License is distributed on an "AS IS" basis,
    1: # WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
    1: # for the specific language governing rights and limitations under the
    1: # License.
    1: #
    1: # The Original Code is this file as it was released upon August 6, 1998.
    1: #
    1: # The Initial Developer of the Original Code is
    1: # Christopher Seawood.
    1: # Portions created by the Initial Developer are Copyright (C) 1998
    1: # the Initial Developer. All Rights Reserved.
    1: #
    1: # Contributor(s):
    1: #   Benjamin Smedberg <benjamin@smedbergs.us>
    1: #
    1: # Alternatively, the contents of this file may be used under the terms of
    1: # either of the GNU General Public License Version 2 or later (the "GPL"),
    1: # or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
    1: # in which case the provisions of the GPL or the LGPL are applicable instead
    1: # of those above. If you wish to allow use of your version of this file only
    1: # under the terms of either the GPL or the LGPL, and not to allow others to
    1: # use your version of this file under the terms of the MPL, indicate your
    1: # decision by deleting the provisions above and replace them with the notice
    1: # and other provisions required by the GPL or the LGPL. If you do not delete
    1: # the provisions above, a recipient may use your version of this file under
    1: # the terms of any one of the MPL, the GPL or the LGPL.
    1: #
    1: # ***** END LICENSE BLOCK *****
    1: 
    1: # A netscape style .mk file for autoconf builds
    1: 
    1: INCLUDED_AUTOCONF_MK = 1
    1: USE_AUTOCONF 	= 1
    1: MOZILLA_CLIENT	= 1
19511: target          = @target@
19511: ac_configure_args = @ac_configure_args@
    1: MOZILLA_VERSION = @MOZILLA_VERSION@
    1: 
    1: MOZ_BUILD_APP = @MOZ_BUILD_APP@
    1: MOZ_APP_NAME	= @MOZ_APP_NAME@
    1: MOZ_APP_DISPLAYNAME = @MOZ_APP_DISPLAYNAME@
    1: MOZ_APP_VERSION = @MOZ_APP_VERSION@
    1: 
    1: MOZ_PKG_SPECIAL = @MOZ_PKG_SPECIAL@
    1: 
    1: prefix		= @prefix@
    1: exec_prefix	= @exec_prefix@
    1: bindir		= @bindir@
21062: includedir	= @includedir@
    1: libdir		= @libdir@
    1: datadir		= @datadir@
    1: mandir		= @mandir@
    1: 
 4238: installdir	= $(libdir)/$(MOZ_APP_NAME)-$(MOZ_APP_VERSION)
 4238: sdkdir		= $(libdir)/$(MOZ_APP_NAME)-devel-$(MOZ_APP_VERSION)
    1: 
23004: TOP_DIST	= @TOP_DIST@
23004: ifneq (,$(filter /%,$(TOP_DIST)))
23004: DIST		= $(TOP_DIST)
23004: else
23004: DIST		= $(DEPTH)/$(TOP_DIST)
23004: endif
16527: 
    1: MOZ_JS_LIBS		   = @MOZ_JS_LIBS@
    1: 
21064: MOZ_SYNC_BUILD_FILES = @MOZ_SYNC_BUILD_FILES@
21064: 
    1: MOZ_DEBUG	= @MOZ_DEBUG@
39277: MOZ_DEBUG_SYMBOLS = @MOZ_DEBUG_SYMBOLS@
    1: MOZ_DEBUG_ENABLE_DEFS		= @MOZ_DEBUG_ENABLE_DEFS@
    1: MOZ_DEBUG_DISABLE_DEFS	= @MOZ_DEBUG_DISABLE_DEFS@
    1: MOZ_DEBUG_FLAGS	= @MOZ_DEBUG_FLAGS@
    1: MOZ_DEBUG_LDFLAGS=@MOZ_DEBUG_LDFLAGS@
    1: MOZ_EXTENSIONS  = @MOZ_EXTENSIONS@
    1: MOZ_JSDEBUGGER  = @MOZ_JSDEBUGGER@
11227: MOZ_MEMORY      = @MOZ_MEMORY@
55914: MOZ_PROFILING   = @MOZ_PROFILING@
    1: MOZ_JPROF       = @MOZ_JPROF@
10339: MOZ_SHARK       = @MOZ_SHARK@
97685: MOZ_VALGRIND    = @MOZ_VALGRIND@
15763: MOZ_CALLGRIND   = @MOZ_CALLGRIND@
16288: MOZ_VTUNE       = @MOZ_VTUNE@
73745: MOZ_ETW       = @MOZ_ETW@
40442: JS_HAS_CTYPES = @JS_HAS_CTYPES@
12116: DEHYDRA_PATH    = @DEHYDRA_PATH@
12116: 
    1: NS_TRACE_MALLOC = @NS_TRACE_MALLOC@
    1: INCREMENTAL_LINKER = @INCREMENTAL_LINKER@
    1: MACOSX_DEPLOYMENT_TARGET = @MACOSX_DEPLOYMENT_TARGET@
    1: ENABLE_TESTS	= @ENABLE_TESTS@
    1: 
    1: TAR=@TAR@
    1: 
25212: RM = rm -f
25212: 
    1: # The MOZ_UI_LOCALE var is used to build a particular locale. Do *not*
    1: # use the var to change any binary files. Do *not* use this var unless you
    1: # write rules for the "clean-locale" and "locale" targets.
    1: MOZ_UI_LOCALE = @MOZ_UI_LOCALE@
    1: 
    1: MOZ_COMPONENTS_VERSION_SCRIPT_LDFLAGS = @MOZ_COMPONENTS_VERSION_SCRIPT_LDFLAGS@
    1: MOZ_COMPONENT_NSPR_LIBS=@MOZ_COMPONENT_NSPR_LIBS@
    1: 
    1: MOZ_FIX_LINK_PATHS=@MOZ_FIX_LINK_PATHS@
    1: 
    1: XPCOM_FROZEN_LDOPTS=@XPCOM_FROZEN_LDOPTS@
    1: XPCOM_LIBS=@XPCOM_LIBS@
    1: 
    1: ENABLE_STRIP	= @ENABLE_STRIP@
 4703: PKG_SKIP_STRIP	= @PKG_SKIP_STRIP@
    1: 
    1: MOZ_POST_DSO_LIB_COMMAND = @MOZ_POST_DSO_LIB_COMMAND@
    1: MOZ_POST_PROGRAM_COMMAND = @MOZ_POST_PROGRAM_COMMAND@
    1: 
    1: MOZ_BUILD_ROOT             = @MOZ_BUILD_ROOT@
    1: 
    1: MOZ_NATIVE_NSPR = @MOZ_NATIVE_NSPR@
    1: 
    1: CROSS_COMPILE   = @CROSS_COMPILE@
    1: 
    1: OS_CPPFLAGS	= @CPPFLAGS@
    1: OS_CFLAGS	= $(OS_CPPFLAGS) @CFLAGS@
    1: OS_CXXFLAGS	= $(OS_CPPFLAGS) @CXXFLAGS@
    1: OS_LDFLAGS	= @LDFLAGS@
    1: 
    1: OS_COMPILE_CFLAGS = $(OS_CPPFLAGS) @COMPILE_CFLAGS@
    1: OS_COMPILE_CXXFLAGS = $(OS_CPPFLAGS) @COMPILE_CXXFLAGS@
    1: 
21062: OS_INCLUDES	= $(NSPR_CFLAGS)
    1: OS_LIBS		= @LIBS@
    1: ACDEFINES	= @MOZ_DEFINES@
    1: 
 5382: WARNINGS_AS_ERRORS = @WARNINGS_AS_ERRORS@
67919: FAIL_ON_WARNINGS = @FAIL_ON_WARNINGS@
 5382: 
    1: MOZ_OPTIMIZE	= @MOZ_OPTIMIZE@
77828: MOZ_FRAMEPTR_FLAGS = @MOZ_FRAMEPTR_FLAGS@
    1: MOZ_OPTIMIZE_FLAGS = @MOZ_OPTIMIZE_FLAGS@
71833: MOZ_PGO_OPTIMIZE_FLAGS = @MOZ_PGO_OPTIMIZE_FLAGS@
    1: MOZ_OPTIMIZE_LDFLAGS = @MOZ_OPTIMIZE_LDFLAGS@
57336: MOZ_OPTIMIZE_SIZE_TWEAK = @MOZ_OPTIMIZE_SIZE_TWEAK@
    1: 
    1: MOZ_RTTI_FLAGS_ON = @_MOZ_RTTI_FLAGS_ON@
    1: 
    1: PROFILE_GEN_CFLAGS = @PROFILE_GEN_CFLAGS@
11787: PROFILE_GEN_LDFLAGS = @PROFILE_GEN_LDFLAGS@
    1: PROFILE_USE_CFLAGS = @PROFILE_USE_CFLAGS@
11787: PROFILE_USE_LDFLAGS = @PROFILE_USE_LDFLAGS@
    1: 
    1: WIN_TOP_SRC	= @WIN_TOP_SRC@
    1: AR		= @AR@
    1: AR_FLAGS	= @AR_FLAGS@
    1: AR_EXTRACT	= @AR_EXTRACT@
    1: AR_LIST		= @AR_LIST@
    1: AR_DELETE	= @AR_DELETE@
    1: AS		= @AS@
    1: ASFLAGS		= @ASFLAGS@
    1: AS_DASH_C_FLAG	= @AS_DASH_C_FLAG@
    1: LD		= @LD@
    1: RC		= @RC@
    1: RCFLAGS		= @RCFLAGS@
73745: MC		= @MC@
    1: WINDRES		= @WINDRES@
    1: IMPLIB		= @IMPLIB@
    1: FILTER		= @FILTER@
    1: BIN_FLAGS	= @BIN_FLAGS@
    1: _MSC_VER	= @_MSC_VER@
    1: 
    1: DLL_PREFIX	= @DLL_PREFIX@
    1: LIB_PREFIX	= @LIB_PREFIX@
77586: # We do magic with OBJ_SUFFIX in config.mk, the following ensures we don't
77586: # manually use it before config.mk inclusion
77586: OBJ_SUFFIX	= $(error config/config.mk needs to be included before using OBJ_SUFFIX)
77586: _OBJ_SUFFIX	= @OBJ_SUFFIX@
    1: LIB_SUFFIX	= @LIB_SUFFIX@
    1: DLL_SUFFIX	= @DLL_SUFFIX@
    1: BIN_SUFFIX	= @BIN_SUFFIX@
    1: ASM_SUFFIX	= @ASM_SUFFIX@
    1: IMPORT_LIB_SUFFIX = @IMPORT_LIB_SUFFIX@
63472: LIBS_DESC_SUFFIX = @LIBS_DESC_SUFFIX@
    1: USE_N32		= @USE_N32@
    1: HAVE_64BIT_OS	= @HAVE_64BIT_OS@
    1: 
    1: CC		    = @CC@
    1: CXX		    = @CXX@
86553: CPP       = @CPP@
    1: 
19721: CC_VERSION	= @CC_VERSION@
19721: CXX_VERSION	= @CXX_VERSION@
19721: 
    1: GNU_AS		= @GNU_AS@
    1: GNU_LD		= @GNU_LD@
    1: GNU_CC		= @GNU_CC@
    1: GNU_CXX		= @GNU_CXX@
13232: INTEL_CC	= @INTEL_CC@
13232: INTEL_CXX	= @INTEL_CXX@
    1: 
    1: HOST_CC		= @HOST_CC@
    1: HOST_CXX	= @HOST_CXX@
    1: HOST_CFLAGS	= @HOST_CFLAGS@
    1: HOST_CXXFLAGS	= @HOST_CXXFLAGS@
61514: HOST_LDFLAGS	= @HOST_LDFLAGS@
    1: HOST_OPTIMIZE_FLAGS = @HOST_OPTIMIZE_FLAGS@
    1: HOST_NSPR_MDCPUCFG = @HOST_NSPR_MDCPUCFG@
    1: HOST_AR		= @HOST_AR@
    1: HOST_AR_FLAGS	= @HOST_AR_FLAGS@
    1: HOST_LD		= @HOST_LD@
    1: HOST_RANLIB	= @HOST_RANLIB@
    1: HOST_BIN_SUFFIX	= @HOST_BIN_SUFFIX@
    1: 
    1: HOST_OS_ARCH	= @HOST_OS_ARCH@
    1: host_cpu	= @host_cpu@
    1: host_vendor	= @host_vendor@
    1: host_os		= @host_os@
    1: 
    1: TARGET_NSPR_MDCPUCFG = @TARGET_NSPR_MDCPUCFG@
    1: TARGET_CPU	= @TARGET_CPU@
    1: TARGET_VENDOR	= @TARGET_VENDOR@
    1: TARGET_OS	= @TARGET_OS@
    1: TARGET_MD_ARCH	= @TARGET_MD_ARCH@
    1: TARGET_XPCOM_ABI = @TARGET_XPCOM_ABI@
    1: 
    1: AUTOCONF	= @AUTOCONF@
    1: PERL		= @PERL@
    1: PYTHON		= @PYTHON@
    1: RANLIB		= @RANLIB@
    1: XARGS		= @XARGS@
    1: STRIP		= @STRIP@
    1: DOXYGEN		= @DOXYGEN@
    1: PBBUILD_BIN	= @PBBUILD@
    1: SDP		= @SDP@
    1: NSINSTALL_BIN	= @NSINSTALL_BIN@
12096: 
    1: NSPR_CONFIG	= @NSPR_CONFIG@
    1: NSPR_CFLAGS	= @NSPR_CFLAGS@
    1: NSPR_LIBS	= @NSPR_LIBS@
    1: 
74235: MOZ_NATIVE_FFI	= @MOZ_NATIVE_FFI@
74235: MOZ_FFI_LIBS	= @MOZ_FFI_LIBS@
74235: MOZ_FFI_CFLAGS	= @MOZ_FFI_CFLAGS@
74235: 
    1: USE_DEPENDENT_LIBS = @USE_DEPENDENT_LIBS@
    1: 
23648: JS_NATIVE_EDITLINE = @JS_NATIVE_EDITLINE@
28509: JS_DISABLE_SHELL   = @JS_DISABLE_SHELL@
23648: EDITLINE_LIBS      = @EDITLINE_LIBS@
23648: 
    1: # MKSHLIB_FORCE_ALL is used to force the linker to include all object
    1: # files present in an archive. MKSHLIB_UNFORCE_ALL reverts the linker
    1: # to normal behavior. Makefile's that create shared libraries out of
    1: # archives use these flags to force in all of the .o files in the
    1: # archives into the shared library.
77590: WRAP_LDFLAGS            = @WRAP_LDFLAGS@
    1: DSO_CFLAGS              = @DSO_CFLAGS@
    1: DSO_PIC_CFLAGS          = @DSO_PIC_CFLAGS@
    1: MKSHLIB                 = @MKSHLIB@
    1: MKCSHLIB                = @MKCSHLIB@
    1: MKSHLIB_FORCE_ALL       = @MKSHLIB_FORCE_ALL@
    1: MKSHLIB_UNFORCE_ALL     = @MKSHLIB_UNFORCE_ALL@
    1: DSO_LDOPTS              = @DSO_LDOPTS@
    1: DLL_SUFFIX              = @DLL_SUFFIX@
    1: 
    1: NO_LD_ARCHIVE_FLAGS     = @NO_LD_ARCHIVE_FLAGS@
    1: 
    1: MOZ_TOOLKIT_REGISTRY_CFLAGS = \
    1: 	$(TK_CFLAGS)
    1: 
    1: MOZ_NATIVE_MAKEDEPEND	= @SYSTEM_MAKEDEPEND@
    1: 
54266: export CL_INCLUDES_PREFIX = @CL_INCLUDES_PREFIX@
54266: 
    1: MOZ_AUTO_DEPS	= @MOZ_AUTO_DEPS@
    1: COMPILER_DEPEND = @COMPILER_DEPEND@
    1: MDDEPDIR        := @MDDEPDIR@
58618: CC_WRAPPER = @CC_WRAPPER@
58618: CXX_WRAPPER = @CXX_WRAPPER@
    1: 
    1: MOZ_DEMANGLE_SYMBOLS = @MOZ_DEMANGLE_SYMBOLS@
    1: 
    1: OS_TARGET=@OS_TARGET@
    1: OS_ARCH=@OS_ARCH@
    1: OS_RELEASE=@OS_RELEASE@
    1: OS_TEST=@OS_TEST@
60422: CPU_ARCH=@CPU_ARCH@
60422: INTEL_ARCHITECTURE=@INTEL_ARCHITECTURE@
    1: 
24783: # For Solaris build
24783: SOLARIS_SUNPRO_CC = @SOLARIS_SUNPRO_CC@
24783: SOLARIS_SUNPRO_CXX = @SOLARIS_SUNPRO_CXX@
24783: 
    1: # For AIX build
    1: AIX_OBJMODEL = @AIX_OBJMODEL@
    1: 
    1: # For OS/2 build
    1: MOZ_OS2_TOOLS = @MOZ_OS2_TOOLS@
    1: MOZ_OS2_HIGH_MEMORY = @MOZ_OS2_HIGH_MEMORY@
    1: 
    1: MOZILLA_OFFICIAL = @MOZILLA_OFFICIAL@
    1: 
    1: # Win32 options
    1: MOZ_BROWSE_INFO	= @MOZ_BROWSE_INFO@
    1: MOZ_TOOLS_DIR	= @MOZ_TOOLS_DIR@
    1: MOZ_QUANTIFY	= @MOZ_QUANTIFY@
    1: MSMANIFEST_TOOL = @MSMANIFEST_TOOL@
86905: MOZ_GLUE_LDFLAGS = @MOZ_GLUE_LDFLAGS@
86905: MOZ_GLUE_PROGRAM_LDFLAGS = @MOZ_GLUE_PROGRAM_LDFLAGS@
12206: 
    1: # Codesighs tools option, enables win32 mapfiles.
    1: MOZ_MAPINFO	= @MOZ_MAPINFO@
    1: 
39135: QEMU_CANT_RUN_JS_SHELL = @QEMU_CANT_RUN_JS_SHELL@
39135: 
    1: MACOS_SDK_DIR	= @MACOS_SDK_DIR@
    1: NEXT_ROOT	= @NEXT_ROOT@
    1: GCC_VERSION	= @GCC_VERSION@
    1: UNIVERSAL_BINARY= @UNIVERSAL_BINARY@
80349: MOZ_CAN_RUN_PROGRAMS = @MOZ_CAN_RUN_PROGRAMS@
 6804: HAVE_DTRACE= @HAVE_DTRACE@
    1: 
    1: VISIBILITY_FLAGS = @VISIBILITY_FLAGS@
    1: WRAP_SYSTEM_INCLUDES = @WRAP_SYSTEM_INCLUDES@
    1: 
52556: ENABLE_METHODJIT = @ENABLE_METHODJIT@
19351: HAVE_ARM_SIMD= @HAVE_ARM_SIMD@
50577: 
50577: JS_SHARED_LIBRARY = @JS_SHARED_LIBRARY@
48637: HAVE_LINUX_PERF_EVENT_H = @HAVE_LINUX_PERF_EVENT_H@
56799: 
96817: MOZ_METRO	= @MOZ_METRO@
96817: 
97302: MOZ_ASAN = @MOZ_ASAN@
97302: 
56799: # We only want to do the pymake sanity on Windows, other os's can cope
68662: ifeq ($(HOST_OS_ARCH),WINNT)
56799: # Ensure invariants between GNU Make and pymake
56799: # Checked here since we want the sane error in a file that
56799: # actually can be found regardless of path-style.
56799: ifeq (_:,$(.PYMAKE)_$(findstring :,$(srcdir)))
56799: $(error Windows-style srcdir being used with GNU make. Did you mean to run $(topsrcdir)/build/pymake/make.py instead? [see-also: https://developer.mozilla.org/en/Gmake_vs._Pymake])
56799: endif
56799: ifeq (1_a,$(.PYMAKE)_$(firstword a$(subst /, ,$(srcdir))))
56799: $(error MSYS-style srcdir being used with Pymake. Did you mean to run GNU Make instead? [see-also: https://developer.mozilla.org/en/Gmake_vs._Pymake])
56799: endif
68662: endif # WINNT

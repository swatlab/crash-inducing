 87457: /* -*- Mode: C++; tab-width: 20; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 98983:  * This Source Code Form is subject to the terms of the Mozilla Public
 98983:  * License, v. 2.0. If a copy of the MPL was not distributed with this
 98983:  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 87457: 
 87457: #ifndef MOZILLA_GFX_SCALEDFONTBASE_H_
 87457: #define MOZILLA_GFX_SCALEDFONTBASE_H_
 87457: 
 87457: #include "2D.h"
 88426: 
 87457: #ifdef USE_SKIA
 87457: #include "skia/SkTypeface.h"
 87457: #endif
 88426: #ifdef USE_CAIRO
 88426: #include "cairo.h"
 88426: #endif
 87457: 
 87457: class gfxFont;
 87457: 
 87457: namespace mozilla {
 87457: namespace gfx {
 87457: 
 87457: class ScaledFontBase : public ScaledFont
 87457: {
 87457: public:
 87457:   ScaledFontBase(Float aSize);
 87457:   virtual ~ScaledFontBase();
 87457: 
 87457:   virtual TemporaryRef<Path> GetPathForGlyphs(const GlyphBuffer &aBuffer, const DrawTarget *aTarget);
 94392: 
 94392:   virtual void CopyGlyphsToBuilder(const GlyphBuffer &aBuffer, PathBuilder *aBuilder);
 94392: 
107885:   float GetSize() { return mSize; }
107885: 
 87457: #ifdef USE_SKIA
 87457:   virtual SkTypeface* GetSkTypeface() { return mTypeface; }
 88426: #endif
 88426: 
 88426:   // Not true, but required to instantiate a ScaledFontBase.
 87457:   virtual FontType GetType() const { return FONT_SKIA; }
 88426: 
 88426: #ifdef USE_CAIRO
 88426:   cairo_scaled_font_t* GetCairoScaledFont() { return mScaledFont; }
 88426:   void SetCairoScaledFont(cairo_scaled_font_t* font);
 87457: #endif
 87457: 
 87457: protected:
 87457:   friend class DrawTargetSkia;
 87457: #ifdef USE_SKIA
 87457:   SkTypeface* mTypeface;
 87457: #endif
 88426: #ifdef USE_CAIRO
 88426:   cairo_scaled_font_t* mScaledFont;
 88426: #endif
 87457:   Float mSize;
 87457: };
 87457: 
 87457: }
 87457: }
 87457: 
 87457: #endif /* MOZILLA_GFX_SCALEDFONTBASE_H_ */

    1: /* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
    1: /* ***** BEGIN LICENSE BLOCK *****
    1:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
    1:  *
    1:  * The contents of this file are subject to the Mozilla Public License Version
    1:  * 1.1 (the "License"); you may not use this file except in compliance with
    1:  * the License. You may obtain a copy of the License at
    1:  * http://www.mozilla.org/MPL/
    1:  *
    1:  * Software distributed under the License is distributed on an "AS IS" basis,
    1:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
    1:  * for the specific language governing rights and limitations under the
    1:  * License.
    1:  *
    1:  * The Original Code is mozilla.org code.
    1:  *
    1:  * The Initial Developer of the Original Code is
    1:  * Mozilla Foundation.
    1:  * Portions created by the Initial Developer are Copyright (C) 2007
    1:  * the Initial Developer. All Rights Reserved.
    1:  *
    1:  * Contributor(s):
    1:  *   Alexander Surkov <surkov.alexander@gmail.com> (original author)
    1:  *
    1:  * Alternatively, the contents of this file may be used under the terms of
    1:  * either of the GNU General Public License Version 2 or later (the "GPL"),
    1:  * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
    1:  * in which case the provisions of the GPL or the LGPL are applicable instead
    1:  * of those above. If you wish to allow use of your version of this file only
    1:  * under the terms of either the GPL or the LGPL, and not to allow others to
    1:  * use your version of this file under the terms of the MPL, indicate your
    1:  * decision by deleting the provisions above and replace them with the notice
    1:  * and other provisions required by the GPL or the LGPL. If you do not delete
    1:  * the provisions above, a recipient may use your version of this file under
    1:  * the terms of any one of the MPL, the GPL or the LGPL.
    1:  *
    1:  * ***** END LICENSE BLOCK ***** */
    1: 
    1: #include "nsIDOMXULElement.idl"
11312: interface nsIDOMXULContainerElement;
    1: 
89079: [scriptable, uuid(42897cc8-190f-4483-a2c1-807fc76d9e78)]
11312: interface nsIDOMXULContainerItemElement : nsIDOMXULElement
11312: {
11312:   /**
11312:    * Returns the parent container if any.
11312:    */
11312:   readonly attribute nsIDOMXULContainerElement parentContainer;
11312: };
11312: 
89079: [scriptable, uuid(ffa9129c-d183-4a2d-82e0-18135a57286e)]
11312: interface nsIDOMXULContainerElement : nsIDOMXULContainerItemElement
    1: {
    1:   /**
    1:    * Creates an item for the given label and value and appends it to the
    1:    * container.
    1:    *
    1:    * @param aLabel - the label for the new item
    1:    * @param aValue - the value of the new item
    1:    */
    1:   nsIDOMXULElement appendItem(in DOMString aLabel, in DOMString aValue);
    1: 
    1:   /**
    1:    * Creates an item for the given label and value and inserts it into the
    1:    * container at the specified position.
    1:    *
    1:    * @param aIndex - the index where the new item will be inserted
    1:    * @param aLabel - the label for the new item
    1:    * @param aValue - the value of the new item
    1:    */
    1:   nsIDOMXULElement insertItemAt(in long aIndex, in DOMString aLabel,
    1:                                 in DOMString aValue);
    1: 
    1:   /**
    1:    * Removes an item from the container.
    1:    *
    1:    * @param aIndex - index of the item to remove
    1:    */
    1:   nsIDOMXULElement removeItemAt(in long aIndex);
    1: 
    1:   /**
    1:    * Returns a count of items in the container.
    1:    */
    1:   readonly attribute unsigned long itemCount;
    1: 
    1:   /**
    1:    * Returns the index of an item or -1 if the item is not in the container.
    1:    *
    1:    * @param aItem - the item to determine the index of
    1:    */
    1:   long getIndexOfItem(in nsIDOMXULElement aItem);
    1: 
    1:   /**
    1:    * Returns the item at a given index or null if the item is not is the
    1:    * container.
    1:    *
    1:    * @param aIndex - the index of the item to return
    1:    */
    1:   nsIDOMXULElement getItemAtIndex(in long aIndex);
11312: };
    1: 

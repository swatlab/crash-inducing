54102: /* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
54102:  * vim: sw=2 ts=8 et :
54102:  */
54102: /* ***** BEGIN LICENSE BLOCK *****
54102:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
54102:  *
54102:  * The contents of this file are subject to the Mozilla Public License Version
54102:  * 1.1 (the "License"); you may not use this file except in compliance with
54102:  * the License. You may obtain a copy of the License at:
54102:  * http://www.mozilla.org/MPL/
54102:  *
54102:  * Software distributed under the License is distributed on an "AS IS" basis,
54102:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
54102:  * for the specific language governing rights and limitations under the
54102:  * License.
54102:  *
54102:  * The Original Code is Mozilla Code.
54102:  *
54102:  * The Initial Developer of the Original Code is
54102:  *   The Mozilla Foundation
54102:  * Portions created by the Initial Developer are Copyright (C) 2010
54102:  * the Initial Developer. All Rights Reserved.
54102:  *
54102:  * Contributor(s):
54102:  *   Chris Jones <jones.chris.g@gmail.com>
54102:  *
54102:  * Alternatively, the contents of this file may be used under the terms of
54102:  * either the GNU General Public License Version 2 or later (the "GPL"), or
54102:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
54102:  * in which case the provisions of the GPL or the LGPL are applicable instead
54102:  * of those above. If you wish to allow use of your version of this file only
54102:  * under the terms of either the GPL or the LGPL, and not to allow others to
54102:  * use your version of this file under the terms of the MPL, indicate your
54102:  * decision by deleting the provisions above and replace them with the notice
54102:  * and other provisions required by the GPL or the LGPL. If you do not delete
54102:  * the provisions above, a recipient may use your version of this file under
54102:  * the terms of any one of the MPL, the GPL or the LGPL.
54102:  *
54102:  * ***** END LICENSE BLOCK ***** */
54102: 
54102: #ifndef mozilla_layers_ShadowLayerUtilsX11_h
54102: #define mozilla_layers_ShadowLayerUtilsX11_h
54102: 
54102: #include <X11/extensions/Xrender.h>
54102: #include <X11/Xlib.h>
54102: 
54102: #include "IPC/IPCMessageUtils.h"
54102: 
54102: #define MOZ_HAVE_SURFACEDESCRIPTORX11
54108: #define MOZ_HAVE_PLATFORM_SPECIFIC_LAYER_BUFFERS
54102: 
54102: class gfxXlibSurface;
54102: 
54102: namespace mozilla {
54102: namespace layers {
54102: 
54102: struct SurfaceDescriptorX11 {
54102:   SurfaceDescriptorX11()
54102:   { }
54102: 
54102:   SurfaceDescriptorX11(gfxXlibSurface* aSurf);
54102: 
87049:   SurfaceDescriptorX11(Drawable aDrawable, XID aFormatID,
87049:                        const gfxIntSize& aSize);
78514: 
54102:   // Default copy ctor and operator= are OK
54102: 
54102:   bool operator==(const SurfaceDescriptorX11& aOther) const {
54102:     // Define == as two descriptors having the same XID for now,
54102:     // ignoring size and render format.  If the two indeed refer to
54102:     // the same valid XID, then size/format are "actually" the same
54102:     // anyway, regardless of the values of the fields in
54102:     // SurfaceDescriptorX11.
54102:     return mId == aOther.mId;
54102:   }
54102: 
54102:   already_AddRefed<gfxXlibSurface> OpenForeign() const;
54102: 
54102:   Drawable mId;
87049:   XID mFormat; // either a PictFormat or VisualID
54102:   gfxIntSize mSize;
54102: };
54102: 
54102: } // namespace layers
54102: } // namespace mozilla
54102: 
54102: namespace IPC {
54102: 
54102: template <>
54102: struct ParamTraits<mozilla::layers::SurfaceDescriptorX11> {
54102:   typedef mozilla::layers::SurfaceDescriptorX11 paramType;
54102: 
54102:   static void Write(Message* aMsg, const paramType& aParam) {
54102:     WriteParam(aMsg, aParam.mId);
54102:     WriteParam(aMsg, aParam.mSize);
54102:     WriteParam(aMsg, aParam.mFormat);
54102:   }
54102: 
54102:   static bool Read(const Message* aMsg, void** aIter, paramType* aResult) {
54102:     return (ReadParam(aMsg, aIter, &aResult->mId) &&
54102:             ReadParam(aMsg, aIter, &aResult->mSize) &&
54102:             ReadParam(aMsg, aIter, &aResult->mFormat));
54102:   }
54102: };
54102: 
54102: } // namespace IPC
54102: 
54102: #endif  // mozilla_layers_ShadowLayerUtilsX11_h

36268: /* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
36268: /* vim: set sw=2 ts=8 et tw=80 : */
36268: 
36268: /* ***** BEGIN LICENSE BLOCK *****
36268:  * Version: MPL 1.1/GPL 2.0/LGPL 2.1
36268:  *
36268:  * The contents of this file are subject to the Mozilla Public License Version
36268:  * 1.1 (the "License"); you may not use this file except in compliance with
36268:  * the License. You may obtain a copy of the License at
36268:  * http://www.mozilla.org/MPL/
36268:  *
36268:  * Software distributed under the License is distributed on an "AS IS" basis,
36268:  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
36268:  * for the specific language governing rights and limitations under the
36268:  * License.
36268:  *
36268:  * The Original Code is mozilla.org code.
36268:  *
36268:  * The Initial Developer of the Original Code is
36268:  *  The Mozilla Foundation
36268:  * Portions created by the Initial Developer are Copyright (C) 2009
36268:  * the Initial Developer. All Rights Reserved.
36268:  *
36268:  * Contributor(s):
36268:  *   Jason Duell <jduell.mcbugs@gmail.com>
49375:  *   Honza Bambas <honzab@firemni.cz>
36268:  *
36268:  * Alternatively, the contents of this file may be used under the terms of
36268:  * either the GNU General Public License Version 2 or later (the "GPL"), or
36268:  * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
36268:  * in which case the provisions of the GPL or the LGPL are applicable instead
36268:  * of those above. If you wish to allow use of your version of this file only
36268:  * under the terms of either the GPL or the LGPL, and not to allow others to
36268:  * use your version of this file under the terms of the MPL, indicate your
36268:  * decision by deleting the provisions above and replace them with the notice
36268:  * and other provisions required by the GPL or the LGPL. If you do not delete
36268:  * the provisions above, a recipient may use your version of this file under
36268:  * the terms of any one of the MPL, the GPL or the LGPL.
36268:  *
36268:  * ***** END LICENSE BLOCK ***** */
36268: 
36268: #ifndef mozilla_net_HttpChannelParent_h
36268: #define mozilla_net_HttpChannelParent_h
36268: 
46672: #include "nsHttp.h"
47933: #include "mozilla/dom/PBrowserParent.h"
36268: #include "mozilla/net/PHttpChannelParent.h"
46672: #include "mozilla/net/NeckoCommon.h"
58111: #include "nsIParentRedirectingChannel.h"
46851: #include "nsIProgressEventSink.h"
46908: #include "nsITabParent.h"
46908: 
46908: using namespace mozilla::dom;
36268: 
46915: class nsICacheEntryDescriptor;
77793: class nsIAssociatedContentSecurity;
46915: 
36268: namespace mozilla {
36268: namespace net {
36268: 
49375: class HttpChannelParentListener;
49375: 
46672: class HttpChannelParent : public PHttpChannelParent
58111:                         , public nsIParentRedirectingChannel
46851:                         , public nsIProgressEventSink
58111:                         , public nsIInterfaceRequestor
73028:                         , public nsIHttpHeaderVisitor
36268: {
36268: public:
46672:   NS_DECL_ISUPPORTS
58111:   NS_DECL_NSIREQUESTOBSERVER
58111:   NS_DECL_NSISTREAMLISTENER
58111:   NS_DECL_NSIPARENTCHANNEL
58111:   NS_DECL_NSIPARENTREDIRECTINGCHANNEL
46851:   NS_DECL_NSIPROGRESSEVENTSINK
58111:   NS_DECL_NSIINTERFACEREQUESTOR
73028:   NS_DECL_NSIHTTPHEADERVISITOR
49375: 
47933:   HttpChannelParent(PBrowserParent* iframeEmbedding);
36268:   virtual ~HttpChannelParent();
36268: 
36268: protected:
46810:   virtual bool RecvAsyncOpen(const IPC::URI&            uri,
46810:                              const IPC::URI&            originalUri,
46810:                              const IPC::URI&            docUri,
46810:                              const IPC::URI&            referrerUri,
46755:                              const PRUint32&            loadFlags,
46790:                              const RequestHeaderTuples& requestHeaders,
78638:                              const nsHttpAtom&          requestMethod,
56318:                              const IPC::InputStream&    uploadStream,
79445:                              const bool&              uploadStreamHasHeaders,
46793:                              const PRUint16&            priority,
46790:                              const PRUint8&             redirectionLimit,
79445:                              const bool&              allowPipelining,
79445:                              const bool&              forceAllowThirdPartyCookie,
49379:                              const bool&                doResumeAt,
49379:                              const PRUint64&            startPos,
56242:                              const nsCString&           entityID,
56242:                              const bool&                chooseApplicationCache,
84396:                              const nsCString&           appCacheClientID);
46793: 
58111:   virtual bool RecvConnectChannel(const PRUint32& channelId);
46793:   virtual bool RecvSetPriority(const PRUint16& priority);
46915:   virtual bool RecvSetCacheTokenCachedCharset(const nsCString& charset);
49379:   virtual bool RecvSuspend();
49379:   virtual bool RecvResume();
50561:   virtual bool RecvCancel(const nsresult& status);
55241:   virtual bool RecvRedirect2Verify(const nsresult& result,
49375:                                    const RequestHeaderTuples& changedHeaders);
50566:   virtual bool RecvUpdateAssociatedContentSecurity(const PRInt32& high,
50566:                                                    const PRInt32& low,
50566:                                                    const PRInt32& broken,
50566:                                                    const PRInt32& no);
50758:   virtual bool RecvDocumentChannelCleanup();
56242:   virtual bool RecvMarkOfflineCacheEntryAsForeign();
46834: 
46850:   virtual void ActorDestroy(ActorDestroyReason why);
46850: 
49375: protected:
49375:   friend class mozilla::net::HttpChannelParentListener;
49375:   nsCOMPtr<nsITabParent> mTabParent;
49375: 
46915: private:
46834:   nsCOMPtr<nsIChannel>                    mChannel;
61190:   nsCOMPtr<nsICacheEntryDescriptor>       mCacheDescriptor;
77793:   nsCOMPtr<nsIAssociatedContentSecurity>  mAssociatedContentSecurity;
46850:   bool mIPCClosed;                // PHttpChannel actor has been Closed()
58111: 
58111:   nsCOMPtr<nsIChannel> mRedirectChannel;
58111:   nsCOMPtr<nsIAsyncVerifyRedirectCallback> mRedirectCallback;
67800: 
67800:   // state for combining OnStatus/OnProgress with OnDataAvailable
67800:   // into one IPDL call to child.
67800:   nsresult mStoredStatus;
67800:   PRUint64 mStoredProgress;
67800:   PRUint64 mStoredProgressMax;
73028: 
73028:   // used while visiting headers, to send them to child: else null
73028:   RequestHeaderTuples *mHeadersToSyncToChild;
36268: };
36268: 
36268: } // namespace net
36268: } // namespace mozilla
36268: 
36268: #endif // mozilla_net_HttpChannelParent_h
